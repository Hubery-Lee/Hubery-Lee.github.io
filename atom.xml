<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubery-Lee</title>
  
  <subtitle>蒹葭苍苍，白露为霜</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hubery-lee.github.io/"/>
  <updated>2020-06-02T15:07:15.609Z</updated>
  <id>https://hubery-lee.github.io/</id>
  
  <author>
    <name>李会</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二维图像重建的一般流程</title>
    <link href="https://hubery-lee.github.io/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/"/>
    <id>https://hubery-lee.github.io/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/</id>
    <published>2020-06-02T15:01:15.000Z</published>
    <updated>2020-06-02T15:07:15.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二维图像重建的一般流程"><a href="#二维图像重建的一般流程" class="headerlink" title="二维图像重建的一般流程"></a>二维图像重建的一般流程</h1><p>[toc]</p><h2 id="❓什么是图像重建？"><a href="#❓什么是图像重建？" class="headerlink" title="❓什么是图像重建？"></a>❓什么是图像重建？</h2><p>断层成像顾名思义就是要得到一个物体内部的截面图像。比如你想知道西瓜里面是什么样的，最简单的办法就是把西瓜切开 (图1.1)。显然对病人来说，这是万不可行之举。我们真想有个办法，不用动刀，就可把病人内部看得清清楚楚。</p><p>另一个例子。你想到一个美丽的街心公园去参观。可惜，公园正在维修，游人不得入内。你只好在公园的外围走走，拍几张照片。公园<br>内有两棵参天大树，极为壮观。你在公园的东面和南面对公园拍了照 ，颇为满意。回到家后，你用你的得意照片，居然画出了公园地图，并确定了那两棵树的位置 (图1.2右)。其实，要确定那两棵树的位置并不难。你只要把那两张照片按原本的方位放好。从照片上的每棵树画出一条垂线。</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601090416943.png" alt="image-20200601090416943"><img src="/2020/06/02/二维图像重建的一般流程/image-20200601090501929.png" alt="image-20200601090501929"></p><h2 id="💫图像重建的算法思想是什么？"><a href="#💫图像重建的算法思想是什么？" class="headerlink" title="💫图像重建的算法思想是什么？"></a>💫图像重建的算法思想是什么？</h2><p>断层成像是个数学问题。让我们一起做个有趣的数学习题吧。这里有个 2x2 的矩阵。 矩阵中的元素的数值暂时保密。我给你一些暗示： 第一行的和是 5。第二行的和是 4。第一列的和是 7。第二列的和是 2 (图1.3)。你可以算出这个 2x2 矩阵吗?</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601090809554.png" alt="image-20200601090809554"></p><p>这个问题可以用解方程组的方法解决。设那些矩阵元素为未知数，列一个线性方程组：<br>$$<br>\left{<br>\begin{aligned}<br>x_1+x_2=5;\<br>x_3+x_4=4;\<br>x_1+x_3=7;\<br>x_2+x_4=2;\<br>\end{aligned}<br>\right.<br>$$<br>解这个方程组便得到;<br>$$<br>x_1=3,x_2=2,x_3=4,x_4=0<br>$$<br>通过探测物体的投影数据，重建出物体的实际内部构造。这就是图像重建的一般思想。</p><h2 id="✔图像重建算法的数学基础有哪些？"><a href="#✔图像重建算法的数学基础有哪些？" class="headerlink" title="✔图像重建算法的数学基础有哪些？"></a>✔图像重建算法的数学基础有哪些？</h2><h3 id="🍕中心切片定理"><a href="#🍕中心切片定理" class="headerlink" title="🍕中心切片定理"></a>🍕中心切片定理</h3><p>中心切片定理是断层成像的理论基础。这个定理还有其它的称谓，如投影切片定理和傅里叶中心切片定理。二维图像的中心切片定理指出：二维函数 f(x, y) 的投影 p(s) 之傅里叶变换 P(ω) 等于函数 f(x, y) 的傅里叶变换 F(ωx, ωy) 沿与探测器平行的方向过原点的片段。</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601104859436.png" alt="image-20200601104859436"></p><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601105629394.png" alt="image-20200601105629394" style="zoom:80%;"><h3 id="🚩为什么要引入滤波？"><a href="#🚩为什么要引入滤波？" class="headerlink" title="🚩为什么要引入滤波？"></a>🚩为什么要引入滤波？</h3><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601105835965.png" alt="image-20200601105835965" style="zoom:80%;"><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601105911448.png" alt="image-20200601105911448" style="zoom:80%;"><p>第二个方案通常被称作处理FBP (Filtered Backprojection 先滤波后反投影) 算法。第二个方案比第一个方案知名度高得多。在断层成像领域里，函数|ω| 被称作斜坡滤波器。</p><h3 id="❤有哪些滤波重建方法？"><a href="#❤有哪些滤波重建方法？" class="headerlink" title="❤有哪些滤波重建方法？"></a>❤有哪些滤波重建方法？</h3><p>==<strong>滤波的思想</strong>==：在中心切片定理中，旋转中心被切片涂抹的更浓密，这将导致图像像素比较均匀（低频区域；高频区域是指图像对比度比较大的图像边缘区域），进而重构的图像中心区域比较模糊。那么滤波器的思想是将中心切片函数乘以一个与旋转中心距离相关的权重因子，使得切片在图像上涂抹的比较均匀。这样重构出来的图像才不会出现旋转中心模糊的现象。下面介绍一下有哪些图像重建及滤波方法。</p><h4 id="🛴方法1"><a href="#🛴方法1" class="headerlink" title="🛴方法1"></a>🛴方法1</h4><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601111126392.png" alt="image-20200601111126392" style="zoom:80%;"><h4 id="🛵方法2"><a href="#🛵方法2" class="headerlink" title="🛵方法2"></a>🛵方法2</h4><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601111254399.png" alt="image-20200601111254399" style="zoom:80%;"><h4 id="🏍方法3"><a href="#🏍方法3" class="headerlink" title="🏍方法3"></a>🏍方法3</h4><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601111406287.png" alt="image-20200601111406287" style="zoom:80%;"><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601111430225.png" alt="image-20200601111430225" style="zoom:80%;"><h4 id="🧭算法一览表"><a href="#🧭算法一览表" class="headerlink" title="🧭算法一览表"></a>🧭算法一览表</h4><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601111533233.png" alt="image-20200601111533233" style="zoom:80%;"><h2 id="👼扇形束投影算法如何转换到平行束投影算法"><a href="#👼扇形束投影算法如何转换到平行束投影算法" class="headerlink" title="👼扇形束投影算法如何转换到平行束投影算法"></a>👼扇形束投影算法如何转换到平行束投影算法</h2><p>==<strong>基本思想</strong>==：根据利用点扩散函数的移动不变性，可将扇形束投影重组成平行束投影；然而，在进行重组时将需要进行插值运算，这将导入不必要的误差。故而需要根据重组变换原理，采用变量替换原理，将适用于平行束投影算法中的变量替换成扇形束中的转换关系。</p><h3 id="🍚点扩散函数的移动不变性"><a href="#🍚点扩散函数的移动不变性" class="headerlink" title="🍚点扩散函数的移动不变性"></a>🍚点扩散函数的移动不变性</h3><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602082326836.png" alt="image-20200602082326836"></p><p>对于平行光束成像，我们用极为重要的中心切片定理推导出了一些图像重建的算法。可是，对与扇形束成像，我们并没有相应的中心切片定理。我们只好想个别的办法来推导扇形束的图像重建算法。这个办法就是把扇形束的成像问题转化成平行光束的成像问题，把平行光束图像重建的算法修正一下然后应用于解决扇形束的成像问题中。 </p><p>假定探测器是匀速地绕物体转动，而且数据采样的角度区间也是均匀的。在这个假设下，平行光束的投影/反投影的点扩散函数 (PSF) 是移动不变的。换句话说，如果你把一个点源放在 x-y 平面上。放到哪里到无所谓，只要放在探测器的视野内就好。</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602083037903.png" alt="image-20200602083037903"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602083341855.png" alt="image-20200602083341855"></p><h3 id="🍳扇形束射线如何用平行束来描述"><a href="#🍳扇形束射线如何用平行束来描述" class="headerlink" title="🍳扇形束射线如何用平行束来描述"></a>🍳扇形束射线如何用平行束来描述</h3><p>一个直截了当的方法是把所有的扇形束射线放在一起进行分组，把互相平行的射线分在一组，这样就把扇形束的成像问题简化为平行光束的成像问题。正如图3.4所示，每一条扇形束的射线都刚好对应一条平行光束的射线。这两条线是完全重合的。也就是说，每一个扇形束的数据 g(γ, β) 都刚好对应一个平行光束的数据 p(s, θ)，它们的坐标满足下列关系:<br>$$<br>\theta = \gamma +\beta \<br>s=Dsin\gamma<br>$$<br>其中 $$D$$ 为焦距，也就是从扇形的焦点到旋转中心的距离。当上面这两个关系成立时，这两个成像系统所测的数据是相同的:<br>$$<br>p(s,\theta)=g(\gamma,\beta)<br>$$<br><img src="/2020/06/02/二维图像重建的一般流程/image-20200602083414444.png" alt="image-20200602083414444"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602084149649.png" alt="image-20200602084149649"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602084308687.png" alt="image-20200602084308687"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602084333949.png" alt="image-20200602084333949"></p><p><strong>参考文献：</strong></p>]]></content>
    
    <summary type="html">
    
      描述二维CT图像重建算法的一般思想
    
    </summary>
    
    
      <category term="图像重建" scheme="https://Hubery-Lee.github.io/categories/%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/"/>
    
    
      <category term="二维CT图像重建" scheme="https://Hubery-Lee.github.io/tags/%E4%BA%8C%E7%BB%B4CT%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>利用VSCode调试Geant4项目和Qt项目</title>
    <link href="https://hubery-lee.github.io/2020/05/19/%E5%88%A9%E7%94%A8VSCode%E8%B0%83%E8%AF%95Geant4%E9%A1%B9%E7%9B%AE%E5%92%8CQt%E9%A1%B9%E7%9B%AE/"/>
    <id>https://hubery-lee.github.io/2020/05/19/%E5%88%A9%E7%94%A8VSCode%E8%B0%83%E8%AF%95Geant4%E9%A1%B9%E7%9B%AE%E5%92%8CQt%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-05-19T12:57:46.000Z</published>
    <updated>2020-05-19T13:10:14.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🌌利用VSCode调试Geant4项目和Qt项目"><a href="#🌌利用VSCode调试Geant4项目和Qt项目" class="headerlink" title="🌌利用VSCode调试Geant4项目和Qt项目"></a>🌌利用VSCode调试Geant4项目和Qt项目</h1><p>==<strong>注意</strong>==</p><ul><li><p>VSCode只是一个具有用户交互界面、可设置断点调试的集成开发环境，并具有编辑器的一些特色功能，如：代码补全、格式自动化和语法自动检查等。直白的理解，他是一个具有很多集成功能的高端编辑器，属于前端，代码的编译链接执行需要交给其他一些软件，如CMake等。</p></li><li><p>Geant4和Qt均是基于c++语言，调试程序需要用gdb。那么，调试geant4和Qt程序与调试C++程序一样没有什么区别。</p></li></ul><h2 id="🧭c-如何开启调试模式"><a href="#🧭c-如何开启调试模式" class="headerlink" title="🧭c++如何开启调试模式"></a>🧭c++如何开启调试模式</h2><p>C++单文件编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ main.cpp -o a.out</span><br></pre></td></tr></table></figure><p>C++单文件gdb调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -g main.cpp -o a.out</span><br><span class="line">gdb a.out</span><br></pre></td></tr></table></figure><h2 id="🚀geant4-和qt等项目文件如何用调试"><a href="#🚀geant4-和qt等项目文件如何用调试" class="headerlink" title="🚀geant4 和qt等项目文件如何用调试"></a>🚀geant4 和qt等项目文件如何用调试</h2><p>C++项目的链接通常采用可采用CMake，需要编写<code>CMakeLists.txt</code><br>如需打开调试模式，只需奖<code>CMAKE_BUILD_TYPE</code> 设置成<code>&quot;Debug&quot;</code>模式即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      vscode在手，天下我有
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="vscode" scheme="https://Hubery-Lee.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>科学上网方法</title>
    <link href="https://hubery-lee.github.io/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/"/>
    <id>https://hubery-lee.github.io/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/</id>
    <published>2020-05-07T16:07:51.000Z</published>
    <updated>2020-05-07T16:29:32.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🚚科学上网方法"><a href="#🚚科学上网方法" class="headerlink" title="🚚科学上网方法"></a>🚚科学上网方法</h1><h2 id="⚓google-bing检索"><a href="#⚓google-bing检索" class="headerlink" title="⚓google/bing检索"></a>⚓google/bing检索</h2><ul><li><code>谷歌上网助手</code></li><li><code>iGuge插件</code></li></ul><p>安装方法：</p><p><img src="/2020/05/08/科学上网方法/a.png" alt></p><h2 id="🚍文献搜索神器"><a href="#🚍文献搜索神器" class="headerlink" title="🚍文献搜索神器"></a>🚍文献搜索神器</h2><p><a href="https://www.researcher-app.com/" target="_blank" rel="noopener"><code>researcher</code></a></p>]]></content>
    
    <summary type="html">
    
      推荐两款谷歌上网插件
    
    </summary>
    
    
      <category term="软件体验" scheme="https://Hubery-Lee.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="google" scheme="https://Hubery-Lee.github.io/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>用VSCode的IDE调试CPP</title>
    <link href="https://hubery-lee.github.io/2020/05/05/%E7%94%A8VSCode%E7%9A%84IDE%E8%B0%83%E8%AF%95CPP/"/>
    <id>https://hubery-lee.github.io/2020/05/05/%E7%94%A8VSCode%E7%9A%84IDE%E8%B0%83%E8%AF%95CPP/</id>
    <published>2020-05-05T01:46:08.000Z</published>
    <updated>2020-05-05T01:50:09.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="💘VSCODE-IDE在C-C-项目编程中的使用"><a href="#💘VSCODE-IDE在C-C-项目编程中的使用" class="headerlink" title="💘VSCODE IDE在C/C++项目编程中的使用"></a>💘VSCODE IDE在C/C++项目编程中的使用</h1><h2 id="🌴IDE的作用"><a href="#🌴IDE的作用" class="headerlink" title="🌴IDE的作用"></a>🌴IDE的作用</h2><p>IDE的作用就是有用户交互界面的代码调试编辑器（也称集成开发环境，Integrated Development Environment）</p><h3 id="💨c-c-编程主要基于两类编译器"><a href="#💨c-c-编程主要基于两类编译器" class="headerlink" title="💨c/c++编程主要基于两类编译器"></a>💨c/c++编程主要基于两类编译器</h3><ul><li>gcc, <code>开源、更新较快</code></li><li>visual studio,<code>微软全家桶</code></li></ul><p>所有linux系统的均是用gcc，linux系统对c/c++的支持更好。linux系统的核心代码基本是用c/c++编写的。</p><p>windows系统上c/c++编程一般用<code>visual studio</code>,当然，为了用到与linux上一样的开源gcc编译器，可以在windows上安装<code>mingw</code>或者<code>cywin</code>两种中的任意一款编译器。</p><h3 id="🛴gcc编译器的没有图形Debug界面"><a href="#🛴gcc编译器的没有图形Debug界面" class="headerlink" title="🛴gcc编译器的没有图形Debug界面"></a>🛴gcc编译器的没有图形Debug界面</h3><p>visual studio自带的调试界面，编程比较方便。gcc的调试需要用<code>gdb</code>,而gdb存在的缺陷是其没有采用命令行调试，需要记住的命令太多，但缺少图像界面，大大降低了编程人员的生成效率。</p><p>由于gdb自身没有合适的IDE,项目配置通常用<code>makefile</code>。makefile继承linux系统下万物用命令行解决的风格。为了避免编写令人难懂的makefile文件，程序员开发了用于生成makefile的<code>cmake</code>工具 .</p><p>gcc等属于开源社区的软件，特点是版本多，没有统一的标准。导致很多公司开发了各自的IDE，如，JetBrain 公司的<code>Cion</code>, 微软公司的<code>VSCode</code>和IBM公司的<code>eclipse</code>等。VSCode,Cion和Eclipse均是top5的c/c++编辑器。其中，VSCode是后起之秀，由微软2015年发布的快平台编辑器。网上介绍较多，再此不再细说，感兴趣的同志可以自己去百度或谷歌一下。下面将介绍VSCode的C++代码调试。</p><h2 id="🚀VSCode"><a href="#🚀VSCode" class="headerlink" title="🚀VSCode"></a>🚀VSCode</h2><p>VSCode是一款IDE编辑器，注意是<code>编辑器</code>说白了就跟<code>记事本</code>一样，只是它额外具备配置编译环境和调试代码的功能。就跟notepat++很像。项目的编译环境配置文件通常由两个组成<code>task.json</code>和<code>launch.json</code>。</p><ul><li>task.json <code>负责配置生成可执行文件</code></li><li>launch.json <code>负责调试</code></li></ul><p>具体VSCode的使用文件可以参考<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcw==">官方说明文档<i class="fa fa-external-link-alt"></i></span><br>下面分别从单文件调试和项目文件调试两个方面进行测试，具体测试文档可参看<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRLNHkxODdrbg==">我的哔哩哔哩视频<i class="fa fa-external-link-alt"></i></span></p><h3 id="🚲单文件，单步调试"><a href="#🚲单文件，单步调试" class="headerlink" title="🚲单文件，单步调试"></a>🚲单文件，单步调试</h3><ul><li><p>配置生成可执行文件task.json</p></li><li><p>配置调试执行文件lauch.json</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class="line">    &quot;tasks&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;label&quot;: &quot;C/C++: cpp.exe build active file&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin\\cpp.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [</span><br><span class="line">                &quot;-g&quot;,</span><br><span class="line">                &quot;$&#123;file&#125;&quot;,</span><br><span class="line">                &quot;-o&quot;,</span><br><span class="line">                &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;options&quot;: &#123;</span><br><span class="line">                &quot;cwd&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;problemMatcher&quot;: [</span><br><span class="line">                &quot;$gcc&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;group&quot;: &quot;build&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 使用 IntelliSense 了解相关属性。 </span><br><span class="line">    // 悬停以查看现有属性的描述。</span><br><span class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;g++.exe - 生成和调试活动文件&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false,</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">            &quot;miDebuggerPath&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin\\gdb.exe&quot;,</span><br><span class="line">            &quot;setupCommands&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;preLaunchTask&quot;: &quot;g++.exe build active file&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="🚍项目文件，单步调试"><a href="#🚍项目文件，单步调试" class="headerlink" title="🚍项目文件，单步调试"></a>🚍项目文件，单步调试</h3><ul><li>CMake <code>负责配置生成可执行文件</code></li><li>launch.json <code>负责调试</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10.0)</span><br><span class="line"># 定义项目名称变量PROJECT_NAME, 默认值为demo</span><br><span class="line">set(PROJECT_NAME demo)</span><br><span class="line"></span><br><span class="line">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD_REQUIRED 14)</span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Setup include directory for this project</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">include_directories($&#123;PROJECT_SOURCE_DIR&#125;/include)</span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Locate sources and headers for this project</span><br><span class="line"># NB: headers are included so they will show up in IDEs</span><br><span class="line">#</span><br><span class="line">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;/src/*.cc)</span><br><span class="line">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;/include/*.h)</span><br><span class="line"></span><br><span class="line"># 指定生成目标</span><br><span class="line">add_executable($&#123;PROJECT_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 使用 IntelliSense 了解相关属性。 </span><br><span class="line">    // 悬停以查看现有属性的描述。</span><br><span class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;(gdb) 启动&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;\\build\\demo.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false,</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">            &quot;miDebuggerPath&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin\\gdb.exe&quot;,</span><br><span class="line">            &quot;setupCommands&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      VSCode你值得拥有。跨平台IDE编辑器VSCode，有了她你还要什么emacs?
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="VSCode" scheme="https://Hubery-Lee.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>hexo结合next主题搭建博客及其版本更新方法</title>
    <link href="https://hubery-lee.github.io/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/"/>
    <id>https://hubery-lee.github.io/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/</id>
    <published>2020-05-01T02:48:55.000Z</published>
    <updated>2020-05-05T01:30:26.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🍳此文要解决的问题"><a href="#🍳此文要解决的问题" class="headerlink" title="🍳此文要解决的问题"></a>🍳此文要解决的问题</h1><ul><li>原博客本地文件库在linux系统下，现在想迁移到windows下。</li><li>原博客使用的next主题版本落后</li><li>如何使配置文件不依赖next主题配置文件，使next主题文档更新更方便？</li></ul><h1 id="🚲方法"><a href="#🚲方法" class="headerlink" title="🚲方法"></a>🚲方法</h1><h2 id="🍗博客搭建工具有哪些？"><a href="#🍗博客搭建工具有哪些？" class="headerlink" title="🍗博客搭建工具有哪些？"></a>🍗博客搭建工具有哪些？</h2><ol><li>hexo  速度快，中文文档和教程比较多</li><li>jekyll  基于ruby语言</li><li>hugo  基于go语言 部署最快</li><li>pelican 基于python语言 快与安全</li></ol><p><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/comp.jpg" alt></p><h2 id="🧨基本原理"><a href="#🧨基本原理" class="headerlink" title="🧨基本原理"></a>🧨基本原理</h2><pre class="mermaid" style="text-align: center;">            graph LR            A[模板] --> B[编译]C(内容) --> BB --> D[网络发布]          </pre><p><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/frame.png" alt></p><h2 id="🍔我们用哪个工具？"><a href="#🍔我们用哪个工具？" class="headerlink" title="🍔我们用哪个工具？"></a>🍔我们用哪个工具？</h2><p><strong>在此，作者选择采用hexo工具。原因如下</strong></p><ol><li>作者以前的博客既是使用hexo搭建的，配置和上手较快。</li><li>作者尝试过使用github服务器自带的jekyll，发现生成速度比较慢，除此之外还需要<code>git</code>命令行操作，记住命令行比较麻烦。</li><li>hexo 开发者是台湾人，故而中文社区比较庞大；</li><li>hexo的模板个人感觉比较jekyll模板功能更加丰富。</li></ol><p>*<em>hexo主题模板有很多，配置文件中文文档最全的当属next主题 *</em></p><ol><li><span class="exturl" data-url="aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20v">老版本中文配置文档<i class="fa fa-external-link-alt"></i></span>  <code>不推荐使用</code></li><li><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=">next 主题官网说明文档<i class="fa fa-external-link-alt"></i></span> <code>具有官方维护团队，推荐使用该文档进行学习</code></li></ol><h1 id="🚆如何将博客的本地文档迁移到windows下"><a href="#🚆如何将博客的本地文档迁移到windows下" class="headerlink" title="🚆如何将博客的本地文档迁移到windows下"></a>🚆如何将博客的本地文档迁移到windows下</h1><ol><li><p>将博客文件夹拷贝到windows</p></li><li><p>安装<code>node.js</code></p></li><li><p>进入博客文件夹，安装npm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure></li><li><p>hexo生成部署即可</p></li></ol><h1 id="👼如何更新next主题"><a href="#👼如何更新next主题" class="headerlink" title="👼如何更新next主题"></a>👼如何更新next主题</h1><p>1.从github上下载next主题，解压后放置到themes主题下；</p><div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Solution 1</a></li><li class="tab"><a href="#fourth-unique-name-2">Solution 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p>github网页下载并解压</p></div><div class="tab-pane" id="fourth-unique-name-2"><p>在博客根文件夹下，命令行克隆</p>undefined</div></div></div><ol start="2"><li>修改<code>themes/next/_config.yml</code>配置文件，具体配置方法参考<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=">next 主题官网说明文档<i class="fa fa-external-link-alt"></i></span> </li></ol><h1 id="😍如何使配置文件不依赖themes-next-config-yml"><a href="#😍如何使配置文件不依赖themes-next-config-yml" class="headerlink" title="😍如何使配置文件不依赖themes/next/_config.yml"></a>😍如何使配置文件不依赖<code>themes/next/_config.yml</code></h1><p>只需将<code>themes/next/_config.yml</code>中你想修改的内容，拷贝到你的博客根目录下的<code>_config.yml</code>文件中就可以了。</p><p><strong>注意</strong> ：在拷贝到根目录下的<code>_config.yml</code>文件中前，需要添加<code>theme_config:</code>, 拷贝内容为其子内容，注意格式。拷贝内容每行前需要有两个空格，可以通过文档列编辑添加。</p><p>下次更新next版本，只需到next文件夹下，运行命令行<code>get pull</code>即可。</p><h1 id="🎈如何自定义配色布局等"><a href="#🎈如何自定义配色布局等" class="headerlink" title="🎈如何自定义配色布局等"></a>🎈如何自定义配色布局等</h1><h2 id="🎩页面布局配置"><a href="#🎩页面布局配置" class="headerlink" title="🎩页面布局配置"></a>🎩页面布局配置</h2><p>编辑根目录下<code>source\_data</code>下的配置文档，如<code>styles.styl``variables.styl</code>等即可。</p><h1 id="🎃配置成功测试"><a href="#🎃配置成功测试" class="headerlink" title="🎃配置成功测试"></a>🎃配置成功测试</h1><p>插件测试具体见<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzL3RhZy1wbHVnaW5zLw==">官方网站说明<i class="fa fa-external-link-alt"></i></span></p><h2 id="🧨Label测试"><a href="#🧨Label测试" class="headerlink" title="🧨Label测试"></a>🧨Label测试</h2><figure class="highlight md"><figcaption><span>label.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger.</span><br><span class="line"><span class="code">          '@Text' can be specified with or without space</span></span><br><span class="line"><span class="code">          E.g. 'success @text' similar to 'success@text'.</span></span><br><span class="line"><span class="code">          If not specified, default class will be selected.</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125;</span><br></pre></td></tr></table></figure><p>Lorem <span class="label default">ipsum</span> <span class="label primary">dolor sit</span> amet, consectetur <span class="label success">adipiscing elit,</span> sed <span class="label info">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p><p>Ut enim *<span class="label warning">ad</span>* minim veniam, quis <strong><span class="label danger">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p><p>Duis aute irure dolor in reprehenderit in voluptate <del><span class="label default">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><h2 id="✨图片组加载配置，3副图两行排列"><a href="#✨图片组加载配置，3副图两行排列" class="headerlink" title="✨图片组加载配置，3副图两行排列"></a>✨图片组加载配置，3副图两行排列</h2><figure class="highlight md"><figcaption><span>grouppicture.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line">&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;</span><br><span class="line"></span><br><span class="line">[group]  : Total number of pictures to add in the group.</span><br><span class="line">[layout] : Default picture under the group to show.</span><br></pre></td></tr></table></figure><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png" alt></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png" alt></div><div class="group-picture-column" style="width: 50%;"><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png" alt></div></div></div></div><h2 id="🎄mermaid-测试"><a href="#🎄mermaid-测试" class="headerlink" title="🎄mermaid 测试"></a>🎄mermaid 测试</h2><figure class="highlight md"><figcaption><span>mermaid.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br><span class="line"></span><br><span class="line">type : type of the mermaid chart, visit https://github.com/knsv/mermaid for more information.</span><br></pre></td></tr></table></figure><pre class="mermaid" style="text-align: center;">            sequenceDiagram            participant Aliceparticipant Bobparticipant John as John<br>Second LineAlice ->> Bob: Hello Bob, how are you?Bob-->>John: How about you John?Bob--x Alice: I am good thanks!Bob-x John: I am good thanks!Note right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.Bob-->Alice: Checking with John...alt either thisAlice->>John: Yeselse or thisAlice->>John: Noelse or this will happenAlice->John: Maybeendpar this happens in parallelAlice -->> Bob: Parallel message 1andAlice -->> John: Parallel message 2end          </pre><pre class="mermaid" style="text-align: center;">            graph LR            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)          </pre><h2 id="🎉tabs测试"><a href="#🎉tabs测试" class="headerlink" title="🎉tabs测试"></a>🎉tabs测试</h2><p>使用方法</p><figure class="highlight md"><figcaption><span>tabs.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id's as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line">[index]       : Index number of active tab.</span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It's will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line">[Tab caption] : Caption of current tab.</span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line">[@icon]       : FontAwesome icon name (without 'fa-' at the begining).</span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">Tags 1</a></li><li class="tab"><a href="#tags-2">Tags 2</a></li><li class="tab"><a href="#tags-3">Tags 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><p><strong>This is Tab 1.</strong></p><ol><li>One</li><li>Two</li><li>Three</li></ol><p>4-spaces code block:</p><pre><code>nano /etc</code></pre><p>Tagged code block:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br></pre></td></tr></table></figure><div class="note default">            <p>Note default tag.</p>          </div></div><div class="tab-pane" id="tags-2"><p><strong>This is Tab 2.</strong></p><ul><li>Five</li><li>Six</li><li>Seven</li></ul><div class="note primary">            <div class="video-container"><iframe src="//www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" allowfullscreen></iframe></div>          </div></div><div class="tab-pane" id="tags-3"><p><strong>This is Tab 3.</strong></p><div class="tabs" id="sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-tabs-1">Sub Tabs 1</a></li><li class="tab"><a href="#sub-tabs-2">Sub Tabs 2</a></li><li class="tab"><a href="#sub-tabs-3">Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-tabs-1"><p><strong>This is Sub Tab 1.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>          </div><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div></div><div class="tab-pane" id="sub-tabs-2"><p><strong>This is Sub Tab 2.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div></div><div class="tab-pane" id="sub-tabs-3"><p><strong>This is Sub Tab 3.</strong></p><div class="tabs" id="sub-sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-sub-tabs-1">Sub-Sub Tabs 1</a></li><li class="tab"><a href="#sub-sub-tabs-2">Sub-Sub Tabs 2</a></li><li class="tab"><a href="#sub-sub-tabs-3">Sub-Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-sub-tabs-1"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div></div><div class="tab-pane" id="sub-sub-tabs-2"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div></div><div class="tab-pane" id="sub-sub-tabs-3"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div>          </div></div></div></div></div></div></div></div></div></div><h2 id="🎊Note测试"><a href="#🎊Note测试" class="headerlink" title="🎊Note测试"></a>🎊Note测试</h2><p>使用方法：</p><figure class="highlight md"><figcaption><span>note.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><div class="note primary">            <h4 id="Primary-Header"><a href="#Primary-Header" class="headerlink" title="Primary Header"></a>Primary Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note info">            <h3 id="Info-Header"><a href="#Info-Header" class="headerlink" title="Info Header"></a>Info Header</h3><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note success">            <h4 id="Success-Header"><a href="#Success-Header" class="headerlink" title="Success Header"></a>Success Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note warning">            <h4 id="Warning-Header"><a href="#Warning-Header" class="headerlink" title="Warning Header"></a>Warning Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note danger">            <h4 id="Danger-Header"><a href="#Danger-Header" class="headerlink" title="Danger Header"></a>Danger Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><p><code>等等</code></p><h2 id="🎋button测试"><a href="#🎋button测试" class="headerlink" title="🎋button测试"></a>🎋button测试</h2><figure class="highlight md"><figcaption><span>button.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Tag Alias --&gt;</span></span></span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class="line"></span><br><span class="line">url     : Absolute or relative path to URL.</span><br><span class="line">text    : Button text. Required if no icon specified.</span><br><span class="line">icon    : FontAwesome icon name (without 'fa-' at the begining). Required if no text specified.</span><br><span class="line">[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class="line"><span class="code">          Optional parameter.</span></span><br><span class="line">[title] : Tooltip at mouseover.</span><br><span class="line"><span class="code">          Optional parameter.</span></span><br></pre></td></tr></table></figure><a class="btn" href="#">            <i class="fa fa-"></i>Text          </a><a class="btn" href="#" title="Title">            <i class="fa fa-"></i>Text & Title          </a><p><a class="btn" href="#">            <i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon          </a><a class="btn" href="#" title="Title">            <i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon & Title          </a></p>Lorem <a class="btn" href="#">            <i class="fa fa-home fa-fw fa-lg"></i>Lorem          </a> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident <a class="btn" href="#">            <i class="fa fa-home fa-fw fa-lg"></i>Ipsum          </a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><div class="note info">            <a class="btn" href="#">            <i class="fa fa-home fa-fw"></i>Text & Icon          </a><a class="btn" href="#" title="Title">            <i class="fa fa-home"></i>          </a><a class="btn" href="#">            <i class="fa fa-"></i>Text          </a><p><a href="#">Link</a></p>          </div><div class="text-center"><div><a class="btn" href="#">            <i class="fa fa-heading"></i>          </a><a class="btn" href="#">            <i class="fab fa-edge"></i>          </a><a class="btn" href="#">            <i class="fa fa-times"></i>          </a><a class="btn" href="#">            <i class="far fa-circle"></i>          </a></div><div><a class="btn" href="#">            <i class="fa fa-italic"></i>          </a><a class="btn" href="#">            <i class="fab fa-scribd"></i>          </a></div><div><a class="btn" href="#">            <i class="fab fa-google"></i>          </a><a class="btn" href="#">            <i class="fab fa-chrome"></i>          </a><a class="btn" href="#">            <i class="fab fa-opera"></i>          </a><a class="btn" href="#">            <i class="fa fa-gem fa-rotate-270"></i>          </a></div></div><div class="text-center"><a class="btn" href="#" title="Previous Chapter (Full Image)">            <i class="fa fa-arrow-left fa-fw fa-lg"></i>Previous Chapter          </a> <a class="btn" href="#" title="Next Chapter (Label)">            <i class="fa fa-arrow-right fa-fw fa-lg"></i>Next Chapter          </a></div><div class="text-center"><a class="btn" href="https://github.com/theme-next/hexo-theme-next" title="NexT source code" target="_blank" rel="noopener">            <i class="fab fa-github fa-fw fa-lg"></i>NexT          </a></div><h2 id="🎏Caniuse测试"><a href="#🎏Caniuse测试" class="headerlink" title="🎏Caniuse测试"></a>🎏Caniuse测试</h2><figure class="highlight md"><figcaption><span>canius.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% caniuse feature @ periods %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Tag Alias --&gt;</span></span></span><br><span class="line">&#123;% can feature @ periods %&#125;</span><br><span class="line"></span><br><span class="line">feature : Search for the feature you want on https://caniuse.com, then click on the hash sign to the left of the search result heading and you will get the unique name of this feature.</span><br><span class="line">periods : Select the browser versions to display. Supported values: past<span class="emphasis">_1, past_</span>2, past<span class="emphasis">_3, past_</span>4, past<span class="emphasis">_5, current, future_</span>3, future<span class="emphasis">_2, future_</span>1. If this value is empty, the default value 'current' will be used.</span><br></pre></td></tr></table></figure><iframe data-feature="sharedarraybuffer" src="https://caniuse.bitsofco.de/embed/index.html?feat=sharedarraybuffer&periods=current&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe><iframe data-feature="link-rel-modulepreload" src="https://caniuse.bitsofco.de/embed/index.html?feat=link-rel-modulepreload&periods=past_1,past_2,past_3,past_4,past_5&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe><h2 id="🧧pdf测试"><a href="#🧧pdf测试" class="headerlink" title="🧧pdf测试"></a>🧧pdf测试</h2><figure class="highlight md"><figcaption><span>pdf.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf url [height] %&#125;</span><br><span class="line"></span><br><span class="line">[url]    : Relative path to PDF file.</span><br><span class="line">[height] : Optional. Height of the PDF display element, e.g. 800px.</span><br></pre></td></tr></table></figure><div class="pdfobject-container" data-target="https://sci-hub.tw/downloads-ii/2020-03-01/f0/licata2020.pdf" data-height="600px"></div><h2 id="🎞video测试"><a href="#🎞video测试" class="headerlink" title="🎞video测试"></a>🎞video测试</h2><figure class="highlight md"><figcaption><span>video.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video url %&#125;</span><br></pre></td></tr></table></figure><video src="https://assets.mixkit.co/videos/download/mixkit-watering-a-flower-pot-1780.mp4" preload="metadata" controls playsinline poster>Sorry, your browser does not support the video tag.</video>]]></content>
    
    <summary type="html">
    
      博客搭建及主题切换与更新方法
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="hexo" scheme="https://Hubery-Lee.github.io/tags/hexo/"/>
    
      <category term="博客搭建" scheme="https://Hubery-Lee.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="next主题" scheme="https://Hubery-Lee.github.io/tags/next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>作者github项目导航</title>
    <link href="https://hubery-lee.github.io/2020/04/30/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/"/>
    <id>https://hubery-lee.github.io/2020/04/30/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/</id>
    <published>2020-04-29T16:00:00.000Z</published>
    <updated>2020-05-01T09:19:35.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人笔记"><a href="#个人笔记" class="headerlink" title="个人笔记"></a>个人笔记</h1><ol><li>日常学习笔记<a href="https://hubery-lee.github.io/Notes/">Notes</a></li></ol><h1 id="Bilibili视频资料"><a href="#Bilibili视频资料" class="headerlink" title="Bilibili视频资料"></a>Bilibili视频资料</h1><ol><li>Geant4教程<a href="https://hubery-lee.github.io/Geant4-jiaocheng/">Geant4-jiaocheng</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;个人笔记&quot;&gt;&lt;a href=&quot;#个人笔记&quot; class=&quot;headerlink&quot; title=&quot;个人笔记&quot;&gt;&lt;/a&gt;个人笔记&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;日常学习笔记&lt;a href=&quot;https://hubery-lee.github.io/Notes/&quot;&gt;Note
      
    
    </summary>
    
    
      <category term="作者github项目导航" scheme="https://Hubery-Lee.github.io/categories/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/"/>
    
    
      <category term="作者github项目导航" scheme="https://Hubery-Lee.github.io/tags/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>archlinux安装与使用体验</title>
    <link href="https://hubery-lee.github.io/2020/04/28/archlinux%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://hubery-lee.github.io/2020/04/28/archlinux%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</id>
    <published>2020-04-28T10:01:44.000Z</published>
    <updated>2020-04-28T14:10:50.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="archlinux之manjaro之使用体验"><a href="#archlinux之manjaro之使用体验" class="headerlink" title="archlinux之manjaro之使用体验"></a>archlinux之manjaro之使用体验</h1><h2 id="1-动机"><a href="#1-动机" class="headerlink" title="1.动机"></a>1.动机</h2><p>早上在微信群里看到有人发了一个manjaro系统上跑程序的图。我瞬间惊叹于其操作系统图像界面的炫酷。然后尝试去查证和安装manjaro。在查阅相关资料后，发现网上很多人在推荐manjaro、mint和deepin。今天分别对manjaro和deepin进行了安装和使用尝试。</p><h2 id="2-​现今Linux系统那么多，该怎么选呢？"><a href="#2-​现今Linux系统那么多，该怎么选呢？" class="headerlink" title="2.​现今Linux系统那么多，该怎么选呢？"></a>2.​现今Linux系统那么多，该怎么选呢？</h2><p>将linux系统推广到广为人知的功臣主要是Canoical和redhat。Canoical维护的Ubuntu具有安装简易和图像界面炫酷等特点，这些使得Ubuntu迅速占据个人PC装机量。Redhat系列的linux系统极其稳定，使得其被企业广泛使用。</p><p>Ubuntu基于Debian，属于Debian家族。具体的Debian的介绍可看<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9EZWJpYW4vNzQ4NjY3P2ZyPWFsYWRkaW4=">百科<i class="fa fa-external-link-alt"></i></span>，Debian是由自由操作系统合作组织的作品，所建基础工具均来着开源社区。特点是系统小运行速度快。在debian上虚拟的windows运行速度比windows原生系统还要快。</p><p>Redhat是一家开源解决方案供应商，主要服务于企业。而企业对操作系统的要求主要是稳定，维护方便，不会因为经常更新软件而出现奔溃或问题，故而redhat 的linux系统一般不会像个人linux PC系统那样频繁的更新。redhat系统一般软件版本不新，版本更新一般以5年为周期，且付费。但redhat发展了其上游系统Fedora和下游系统Centos。 Fedora的特点是redhat系统的创新尝试。新技术新集成先在fedora上尝试，没有问题后再将其应用到redhat系统上。而Centos是免费的redhat系统，其特点是开源稳定免费，但其技术版本要落后于redhat系统。</p><p>再看一下<span class="exturl" data-url="aHR0cHM6Ly9kaXN0cm93YXRjaC5jb20vZHdyZXMucGhwP3Jlc291cmNlPXBvcHVsYXJpdHk=">全球linux下载热点排行版<i class="fa fa-external-link-alt"></i></span>    </p><p>排名前三的MXlinux、manjaro和mint的特点是，图像界面炫丽，安装软件方便。比较适合个人用户工作和体验。各种软件库滚动更新快，追求新颖性，缺点是稳定性较差和图像界面内存占用较多。比较适合个人用户使用和学习。</p><p>manjaro 基于archlinux。archlinux的特点是优雅、极简和注重代码正确。通过安装系统和软件，可以使用户学习linux的原理和系统的操作。</p><table><thead><tr><th>家族</th><th>Debian</th><th>redhat</th><th>archlinux</th></tr></thead><tbody><tr><td>特点</td><td>软件多开源、系统小、运行速度快</td><td>稳定</td><td>优雅、简洁</td></tr><tr><td>用户对象</td><td>个人PC、单片机，企业等</td><td>企业</td><td>个人</td></tr><tr><td>用户追求</td><td>使用简易，图形炫酷</td><td>系统稳定不影响企业经营</td><td>学习和优雅的使用体验</td></tr></tbody></table><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>由Hubery-Lee编写，喜欢请收藏给一个赞吧捐赠</p><h2 id="Copyright-copyright-2019-Hubery-Lee"><a href="#Copyright-copyright-2019-Hubery-Lee" class="headerlink" title="Copyright :copyright:2019 Hubery-Lee"></a>Copyright :copyright:2019 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWU=">Hubery-Lee<i class="fa fa-external-link-alt"></i></span></h2>]]></content>
    
    <summary type="html">
    
      本文介绍如何选择linux系统
    
    </summary>
    
    
      <category term="软件使用体验" scheme="https://Hubery-Lee.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="linux" scheme="https://Hubery-Lee.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>如何利用python爬取网页图片-你懂的</title>
    <link href="https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87-%E4%BD%A0%E6%87%82%E7%9A%84/"/>
    <id>https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87-%E4%BD%A0%E6%87%82%E7%9A%84/</id>
    <published>2020-04-28T08:27:37.000Z</published>
    <updated>2020-04-30T17:46:44.186Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何利用python爬取网页图片"><a href="#如何利用python爬取网页图片" class="headerlink" title="如何利用python爬取网页图片"></a>如何利用python爬取网页图片</h1><h2 id="1-相关依赖库"><a href="#1-相关依赖库" class="headerlink" title="1.相关依赖库"></a>1.相关依赖库</h2><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY3J1bW15LmNvbS9zb2Z0d2FyZS9CZWF1dGlmdWxTb3VwLw==">BeautifulSoup<i class="fa fa-external-link-alt"></i></span>   可以从HTML或XML文件中提取数据的Python库</p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly8yLnB5dGhvbi1yZXF1ZXN0cy5vcmcvL2VuL21hc3Rlci8=">requests<i class="fa fa-external-link-alt"></i></span>  <strong>Requests</strong> is an elegant and simple HTTP library for Python, built for human beings. </p></li></ul><h2 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h2><p>代码编写调试过程，可以参考简书📕 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=">小董不太懂<i class="fa fa-external-link-alt"></i></span>的教程，其代码编写思路如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 保存或处理爬去的信息</span><br><span class="line">op1=&gt;operation: 利用获取爬取的网页网址的html</span><br><span class="line">op2=&gt;operation: 利用BeautifulSoup将html信息转换成xml信息</span><br><span class="line">op3=&gt;operation: 利用BeautifulSoup挑选xml中想要的信息</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;op2-&gt;op3-&gt;e</span><br></pre></td></tr></table></figure><p>下面贴出代码全文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">'If-None-Match'</span>: <span class="string">'W/"5cc2cd8f-2c58"'</span>,</span><br><span class="line">           <span class="string">"Referer"</span>: <span class="string">"http://www.mzitu.com/all/"</span>,</span><br><span class="line">           <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.204 SafarMozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span>&#125;</span><br><span class="line"><span class="comment">#请求头的这个Referer一定要加，妹子网有反爬，反正粘贴复制就行，多加几个信息无所谓</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment">#print(response.text)</span></span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        print(<span class="string">'获取索引页失败'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">    items = soup.select(<span class="string">'#pins li'</span>)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> items:</span><br><span class="line">        href = link.a[<span class="string">'href'</span>]</span><br><span class="line">        <span class="comment">#print(href)</span></span><br><span class="line">        get_detail_page(href)</span><br><span class="line">    <span class="comment"># print(items)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_detail_page</span><span class="params">(href)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        detail_url = href + <span class="string">'/'</span> + str(i)</span><br><span class="line">        <span class="keyword">if</span> requests.get(detail_url, headers=headers).status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment">#print(detail_url)</span></span><br><span class="line">            parse_detail_page(detail_url)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'已至末尾页'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_detail_page</span><span class="params">(detail_url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(detail_url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            print(<span class="string">'获取详情页成功'</span>)</span><br><span class="line">            detail_html = response.text</span><br><span class="line">            <span class="comment"># print(detail_html)</span></span><br><span class="line">            get_image(detail_html)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        print(<span class="string">'获取详情页失败'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_image</span><span class="params">(detail_html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(detail_html, <span class="string">'lxml'</span>)</span><br><span class="line">    items= soup.select(<span class="string">'.main-image'</span>)</span><br><span class="line">    <span class="comment"># print(items)</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="comment">#return item.img['src']</span></span><br><span class="line">    image = item.img[<span class="string">'src'</span>]</span><br><span class="line">        save_image(image)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_image</span><span class="params">(image)</span>:</span></span><br><span class="line">   response = requests.get(image,headers=headers)</span><br><span class="line">   <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">       data = response.content</span><br><span class="line">       file_path = <span class="string">'&#123;0&#125;/&#123;1&#125;.&#123;2&#125;'</span>.format(os.getcwd(), md5(data).hexdigest(), <span class="string">'jpg'</span>)</span><br><span class="line">       print(file_path)</span><br><span class="line">       <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_path):</span><br><span class="line">           <span class="keyword">with</span> open(file_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">               f.write(data)</span><br><span class="line">               f.close()</span><br><span class="line">               print(<span class="string">'保存成功'</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       print(<span class="string">'保存失败'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'https://www.mzitu.com/tag/youhuo/'</span></span><br><span class="line">    html = get_page(url)</span><br><span class="line">    parse_page(html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>[^1] <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=">https://www.jianshu.com/p/37202bec8f97<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      利用python代码自动爬取妹子图
    
    </summary>
    
    
      <category term="python代码应用" scheme="https://Hubery-Lee.github.io/categories/python%E4%BB%A3%E7%A0%81%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="python爬妹子图" scheme="https://Hubery-Lee.github.io/tags/python%E7%88%AC%E5%A6%B9%E5%AD%90%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何利用python发送邮件进行表白和问安</title>
    <link href="https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%BF%9B%E8%A1%8C%E8%A1%A8%E7%99%BD%E5%92%8C%E9%97%AE%E5%AE%89/"/>
    <id>https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%BF%9B%E8%A1%8C%E8%A1%A8%E7%99%BD%E5%92%8C%E9%97%AE%E5%AE%89/</id>
    <published>2020-04-28T08:20:26.000Z</published>
    <updated>2020-04-28T08:31:08.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何利用python发送邮件"><a href="#如何利用python发送邮件" class="headerlink" title="如何利用python发送邮件"></a>如何利用python发送邮件</h1><h3 id="1-python-相关依赖库"><a href="#1-python-相关依赖库" class="headerlink" title="1. python 相关依赖库"></a>1. python 相关依赖库</h3><p>说明 ：本文档针对的式利用python 3.7 发送邮件，python发送邮件的相关包比较多，除了SMTP还有POP3和IMAP两种邮件协议。本文档针对的式利用stmp服务器发送邮件</p><p><strong>相关依赖库</strong></p><ul><li>stmplib</li><li>EmailMessage</li></ul><h3 id="2-测试利用smtp发送邮件"><a href="#2-测试利用smtp发送邮件" class="headerlink" title="2. 测试利用smtp发送邮件"></a>2. 测试利用smtp发送邮件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"xxx@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"xxx"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)</span><br><span class="line">    </span><br><span class="line">    subject = <span class="string">'grab dinner this weekend?'</span></span><br><span class="line">    body = <span class="string">'how about dinner at 7pm this saturday?'</span></span><br><span class="line">    </span><br><span class="line">    msg = <span class="string">f'Subject:<span class="subst">&#123;subject&#125;</span>\n\n<span class="subst">&#123;body&#125;</span>'</span></span><br><span class="line">    </span><br><span class="line">    smtp.sendmail(EMAIL_ADDRESSS,<span class="string">'xxx@126.com'</span>,msg)</span><br></pre></td></tr></table></figure><h3 id="3-email-message使用"><a href="#3-email-message使用" class="headerlink" title="3. email.message使用"></a>3. email.message使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"XXX@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'grab dinner this weekend?'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'how about dinner at 7pm this saturday?'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="4-发送给多个用户"><a href="#4-发送给多个用户" class="headerlink" title="4.发送给多个用户"></a>4.发送给多个用户</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">multi_recipients = [<span class="string">'Fxxx@gmail.com'</span>,<span class="string">'Mxxx@gmail.com'</span>]</span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'grab dinner this weekend?'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">','</span>.join(multi_recipients)</span><br><span class="line">msg.set_content(<span class="string">'how about dinner at 7pm this saturday?'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="5-Add-image-attachment"><a href="#5-Add-image-attachment" class="headerlink" title="5.Add image attachment"></a>5.Add image attachment</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'Check out Bronx as puppy!'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'Image attched ...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'P1.png'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    file_data = f.read()</span><br><span class="line">    <span class="comment">#file_path = os.getcwd()</span></span><br><span class="line">    <span class="comment">#print(file_path)</span></span><br><span class="line">    file_type = imghdr.what(f.name)</span><br><span class="line">    <span class="comment">#print(file_type)</span></span><br><span class="line">    <span class="comment">#file_name =f.name</span></span><br><span class="line"></span><br><span class="line">msg.add_attachment(file_data, maintype=<span class="string">'image'</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class="line"><span class="comment">#msg.add_attachment(file_data, maintype='image',subtype= filetype, filename = file_name))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="6-Add-images-attachments"><a href="#6-Add-images-attachments" class="headerlink" title="6. Add images attachments"></a>6. Add images attachments</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'Check out Bronx as puppy!'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'Image attched ...'</span>)</span><br><span class="line"></span><br><span class="line">files =[<span class="string">'P1.png'</span>,<span class="string">'P2.png'</span>,<span class="string">'girl.jpeg'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">with</span> open(file,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_data = f.read()</span><br><span class="line"><span class="comment">#         file_path = os.getcwd()</span></span><br><span class="line"><span class="comment">#         print(file_path)</span></span><br><span class="line"><span class="comment">#         file_type = imghdr.what(f.name)</span></span><br><span class="line"><span class="comment">#         print(file_type)</span></span><br><span class="line"></span><br><span class="line">    msg.add_attachment(file_data, maintype=<span class="string">'image'</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class="line"><span class="comment">#     msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(None, file_data))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="7-Add-pdf-attachment"><a href="#7-Add-pdf-attachment" class="headerlink" title="7. Add pdf attachment"></a>7. Add pdf attachment</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'Check out Bronx as puppy!'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'Image attched ...'</span>)</span><br><span class="line"></span><br><span class="line">files =[<span class="string">'EEE.pdf'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">with</span> open(file,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_data = f.read()</span><br><span class="line"><span class="comment">#         file_path = os.getcwd()</span></span><br><span class="line"><span class="comment">#         print(file_path)</span></span><br><span class="line"><span class="comment">#         file_type = imghdr.what(f.name)</span></span><br><span class="line"><span class="comment">#         print(file_type)</span></span><br><span class="line"></span><br><span class="line">    msg.add_attachment(file_data, maintype=<span class="string">'application'</span>,subtype=<span class="string">'octet-stream'</span>,filename = f.name)</span><br><span class="line"><span class="comment">#     msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(None, file_data))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="8-Using-plain-text-to-send-html-email"><a href="#8-Using-plain-text-to-send-html-email" class="headerlink" title="8.Using plain text to send html  email"></a>8.Using plain text to send html  email</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HTML = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html lang="en"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div align="center"&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;😘 Daily&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;br/&gt;</span></span><br><span class="line"><span class="string">#        &lt;img style="padding: 0.60em; background: white; box-shadow: 1px #1px 10px #999;" #src="cid:one" /&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"lihui123"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'This is a html email using plain '</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'This is a plain test email'</span>)</span><br><span class="line"></span><br><span class="line">msg.add_alternative(HTML,subtype=<span class="string">'html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>python3.7 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2VtYWlsLmV4YW1wbGVzLmh0bWw=">doc/library/email.examples<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1KUkNKNlJ0RTN4VQ==">Corey Schafer youtube视频<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="如何给html邮件文件中添加图片"><a href="#如何给html邮件文件中添加图片" class="headerlink" title="如何给html邮件文件中添加图片"></a>如何给html邮件文件中添加图片</h2><h3 id="1-相关依赖库"><a href="#1-相关依赖库" class="headerlink" title="1. 相关依赖库"></a>1. 相关依赖库</h3><p>目前采用的式python2发邮件的库，python3发送邮件方式相对要简化了一些，但是还没有弄懂，感兴趣的同学可以探索以下</p><p><strong>相关库文件</strong></p><ul><li>smtplib</li><li>asyncio</li><li>MIMEImage</li><li>MIMEMultipart</li><li>MIMEText</li><li>Header</li><li>pyppeteer</li></ul><h3 id="2-代码思路"><a href="#2-代码思路" class="headerlink" title="2. 代码思路"></a>2. 代码思路</h3><pre class="mermaid">graph TDA[import libraries]-->B[获取待发送信息材料]B-->C[html信息]B--pyppeteer-->D[打开网页并截图工具截取图片]D--asyncio-->CC--smtp-->E[发送信息]</pre><p><strong>注释：</strong> Mermaid(美人鱼)图的编写可参考简书此文  <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9iNDIxY2M3MjNkYTU=">1<i class="fa fa-external-link-alt"></i></span></p><h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3.代码实现"></a>3.代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"></span><br><span class="line">FALL_IN_LOVE = (<span class="number">2019</span>, <span class="number">8</span>, <span class="number">22</span>)</span><br><span class="line"></span><br><span class="line">MAIL_HOST = <span class="string">"smtp.126.com"</span></span><br><span class="line">MAIL_USER = <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">MAIL_PASS = <span class="string">"lihui123"</span></span><br><span class="line">MAIL_SENDER = <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">MAIL_RECEIVER = [<span class="string">"1306504695@qq.com"</span>,<span class="string">"hrbeulh@126.com"</span>]</span><br><span class="line"></span><br><span class="line">MAIL_ENCODING = <span class="string">"utf8"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_loving_days</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取恋爱天数</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    today = datetime.datetime.today()</span><br><span class="line">    anniversary = datetime.datetime(*FALL_IN_LOVE)</span><br><span class="line">    <span class="keyword">return</span> (today - anniversary).days</span><br><span class="line"></span><br><span class="line">HTML = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html lang="en"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div align="center"&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;😘 男朋友的日常问候&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;br/&gt;</span></span><br><span class="line"><span class="string">        &lt;img style="padding: 0.60em; background: white; box-shadow: 1px 1px 10px #999;" src="cid:one" /&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">IMAGE_NAME = <span class="string">"one.png"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#open website and screenshot</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">()</span>:</span></span><br><span class="line">    browser = <span class="keyword">await</span> launch(</span><br><span class="line">        &#123;<span class="string">"args"</span>: [<span class="string">"--no-sandbox"</span>, <span class="string">"--disable-setuid-sandbox"</span>]&#125;</span><br><span class="line">    )</span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">"http://wufazhuce.com/"</span>)</span><br><span class="line">    <span class="keyword">await</span> page.screenshot(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"path"</span>: IMAGE_NAME,</span><br><span class="line">            <span class="string">"clip"</span>: &#123;<span class="string">"x"</span>: <span class="number">60</span>, <span class="string">"y"</span>: <span class="number">120</span>, <span class="string">"height"</span>: <span class="number">570</span>, <span class="string">"width"</span>: <span class="number">700</span>&#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    html_content = HTML.replace(<span class="string">"&#123;loving_days&#125;"</span>, str(get_loving_days()))</span><br><span class="line"></span><br><span class="line">    msg = MIMEMultipart(<span class="string">"alternative"</span>)</span><br><span class="line">    msg[<span class="string">"Subject"</span>] = Header(<span class="string">"😘 男朋友的日常问候"</span>, MAIL_ENCODING )</span><br><span class="line">    msg[<span class="string">"From"</span>] = Header(<span class="string">"暖宝宝"</span>, MAIL_ENCODING)</span><br><span class="line">    msg[<span class="string">"To"</span>] = Header(<span class="string">"小仙女"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(IMAGE_NAME, <span class="string">"rb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        img = MIMEImage(f.read())</span><br><span class="line">        img.add_header(<span class="string">"Content-ID"</span>, <span class="string">"one"</span>)</span><br><span class="line">        msg.attach(img)</span><br><span class="line">    msg.attach(MIMEText(html_content, <span class="string">"html"</span>, MAIL_ENCODING))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smtp_obj = smtplib.SMTP_SSL(MAIL_HOST)</span><br><span class="line">        smtp_obj.login(MAIL_USER, MAIL_PASS)</span><br><span class="line">        smtp_obj.sendmail(MAIL_SENDER, MAIL_RECEIVER, msg.as_string())</span><br><span class="line">        smtp_obj.quit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class="line">    send_email()</span><br></pre></td></tr></table></figure><h2 id="python3-如何将中文转换成urlencode"><a href="#python3-如何将中文转换成urlencode" class="headerlink" title="python3 如何将中文转换成urlencode"></a>python3 如何将中文转换成urlencode</h2><h3 id="1-相关依赖库-1"><a href="#1-相关依赖库-1" class="headerlink" title="1.相关依赖库"></a>1.相关依赖库</h3><ul><li>quote, unquote</li></ul><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote,quote</span><br><span class="line"> </span><br><span class="line">url1 = <span class="string">"https://www.qichacha.com/search?key=河南正商河洛置业有限公司"</span></span><br><span class="line">url2 = <span class="string">"https://www.qichacha.com/search?key=%E6%B2%B3%E5%8D%97%E6%AD%A3%E5%95%86%E6%B2%B3%E6%B4%9B%E7%BD%AE%E4%B8%9A%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8"</span></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line">url = unquote(url2)</span><br><span class="line">print(url)</span><br><span class="line"><span class="comment">#编码</span></span><br><span class="line">url = quote(<span class="string">"河南正商河洛置业有限公司"</span>)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      教你如何用python给女朋友发表白邮件和问安
    
    </summary>
    
    
      <category term="python代码应用" scheme="https://Hubery-Lee.github.io/categories/python%E4%BB%A3%E7%A0%81%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="python邮件表白" scheme="https://Hubery-Lee.github.io/tags/python%E9%82%AE%E4%BB%B6%E8%A1%A8%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>多人协同在线编辑文档软件使用体验</title>
    <link href="https://hubery-lee.github.io/2020/04/28/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E6%96%87%E6%A1%A3%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://hubery-lee.github.io/2020/04/28/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E6%96%87%E6%A1%A3%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</id>
    <published>2020-04-28T08:05:16.000Z</published>
    <updated>2020-04-28T14:10:04.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多人协同在线编辑文档软件使用体验"><a href="#多人协同在线编辑文档软件使用体验" class="headerlink" title="多人协同在线编辑文档软件使用体验"></a>多人协同在线编辑文档软件使用体验</h1><h2 id="什么是协同在线编辑文档？"><a href="#什么是协同在线编辑文档？" class="headerlink" title="什么是协同在线编辑文档？"></a>什么是协同在线编辑文档？</h2><ul><li><p>协同 ——多人一起完成一件事情</p></li><li><p>在线——online，在网络上实时做一件事</p></li><li><p>编辑文档——编写文档，如，word，ppt，excel，支持pdf图片等的导出。</p><h2 id="🚩目前市场上存在的产品"><a href="#🚩目前市场上存在的产品" class="headerlink" title="🚩目前市场上存在的产品"></a>🚩目前市场上存在的产品</h2></li><li><p><strong>onlyoffice</strong></p><ul><li><p>其是一款开源的协作文档、项目及邮件管理软件。</p></li><li><p>图像界面跟接近office，比较方便使用</p></li><li><p>开源特性，数据可以放到自己的服务器上</p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/onlyoffice.png" alt="word"></p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/onlyoffice_ppt.png" alt="ppt"></p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/onlyoffice_excel.png" alt="excel"></p></li></ul></li></ul><ul><li><p><strong>石墨文档</strong></p><ul><li><p>国产知名文本协作编辑软件，优点是用户交互界面做的比较好，不过是水墨风格，偏性冷淡风。</p></li><li><p>数据不可以发到用户服务器上，没有TIM方便，无办公社交功能。</p></li><li><p>无自己的核心功能，但使用简便性类似于Google Doc</p></li><li><p>无待办事项等功能</p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/%E7%9F%B3%E5%A2%A8%E6%96%87%E6%A1%A3.jpg" alt></p></li></ul></li></ul><ul><li><p><strong>一起写</strong></p></li><li><p><strong>腾讯文档协作TIM</strong></p><ul><li>结合了社交与文档协同编辑功能</li><li>有待办事项和日程安排功能</li></ul></li><li><p><strong>google doc</strong></p><ul><li><p>批注功能更友好，方便。</p></li><li><p>有待办事项和日程安排功能</p></li><li><p>缺点，国内用不了他的平板和手机等功能</p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/googleDOC.jpg" alt></p></li></ul></li></ul><p><a href="以下三个均是国内外office主要开发者开发，均有电脑，平板和手机用户端。"></a></p><ul><li><p>office 365</p></li><li><p>office online</p></li><li><p>wps</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>推荐使用TIM，腾讯出品结合了社交功能外，大公司维护比较好，不会轻易倒闭。</p><p>推荐使用onlyoffice，开源自定制特性较好。</p>]]></content>
    
    <summary type="html">
    
      协同办公软件使用体验
    
    </summary>
    
    
      <category term="软件使用体验" scheme="https://Hubery-Lee.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="协同办公" scheme="https://Hubery-Lee.github.io/tags/%E5%8D%8F%E5%90%8C%E5%8A%9E%E5%85%AC/"/>
    
  </entry>
  
  <entry>
    <title>CMakeLists.txt编写基础知识</title>
    <link href="https://hubery-lee.github.io/2018/11/23/CMakeLists-txt%E7%BC%96%E5%86%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://hubery-lee.github.io/2018/11/23/CMakeLists-txt%E7%BC%96%E5%86%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2018-11-22T16:20:51.000Z</published>
    <updated>2020-04-28T00:25:34.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NDUuaHRtbA==">cmake 背景知识<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTEuaHRtbA==">cmake 基础2<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTUuaHRtbA==">cmake  共享库文件，外部链接<i class="fa fa-external-link-alt"></i></span></p><h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><p><strong>说明</strong><br>采用c++的类来写hello world，然后编写教程。</p><ul><li>bin  二进制文档</li><li>build 链接文档</li><li>doc README、COPYRIGHT等的说明文档</li><li>inc 头文件文档  hello.hh</li><li>src 源文件文档  hello.cc<br>main.cc 为主文件</li></ul><p><strong>附录</strong></p><ul><li>main.cc</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;hello.hh&quot;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">  HelloFunc hi;</span><br><span class="line">  hi.Hello();</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>hello.hh</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#ifndef HELLO_hh</span><br><span class="line">#define HELLO_hh 1</span><br><span class="line"></span><br><span class="line">class HelloFunc</span><br><span class="line">&#123;</span><br><span class="line"> public:</span><br><span class="line">  HelloFunc();</span><br><span class="line">  virtual ~HelloFunc();  </span><br><span class="line">  </span><br><span class="line">  void Hello();</span><br><span class="line"> private:</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><ul><li>hello.cc</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;hello.hh&quot;</span><br><span class="line">#include &quot;iostream&quot;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">HelloFunc::HelloFunc()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HelloFunc::~HelloFunc()</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line">void HelloFunc::Hello()</span><br><span class="line">&#123;</span><br><span class="line">  cout&lt;&lt;&quot;Hello World&quot;&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>-CMakeList.txt 编译文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line">##  cmake module authored by Hubery Lee(李会)</span><br><span class="line">##  2018年11月22日 </span><br><span class="line">##</span><br><span class="line"></span><br><span class="line">cmake_minimum_required(VERSION 2.6 FATAL_ERROR) #</span><br><span class="line">set(PROJ_NAME hello)</span><br><span class="line">project($&#123;PROJ_NAME&#125;)</span><br><span class="line"></span><br><span class="line">#project($&#123;PROJ_NAME&#125; C CXX Fortran)</span><br><span class="line">#enable_language(Fortran) ##允许使用语言类型</span><br><span class="line">#set(CMAKE_BUILD_TYPE release) ##release or debug</span><br><span class="line">#set(CMAKE_CXX_FLAGS &quot;-std=c++11 $&#123;CMAKE_CXX_FLAGS&#125;&quot;) ##</span><br><span class="line"></span><br><span class="line">#------------------------------------</span><br><span class="line"># Include directory for this project</span><br><span class="line">#</span><br><span class="line">include_directories($&#123;PROJECT_SOURCE_DIR&#125;/inc)</span><br><span class="line"></span><br><span class="line">#------------------------------------</span><br><span class="line"># Locate sources and headers for this project</span><br><span class="line">#</span><br><span class="line">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;/src/*.cc)</span><br><span class="line">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;/inc/*.hh)</span><br><span class="line"></span><br><span class="line">#------------------------------------</span><br><span class="line"># Add the executable and link it to the libraries</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">add_executable($&#123;PROJ_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class="line"></span><br><span class="line">#target_link_libraries($&#123;PROJ_NAME&#125; -L$&#123;PROJECT_SOURE_DIR&#125;/lib hello.so) ##链接库文件</span><br><span class="line"></span><br><span class="line">#-------------------------------------</span><br><span class="line"># Install the executable or files to &apos;bin&apos; directory</span><br><span class="line"># under CMAKE_INSTALL_PREFIX</span><br><span class="line">#</span><br><span class="line">install(TARGETS $&#123;PROJ_NAME&#125; DESTINATION bin)</span><br></pre></td></tr></table></figure><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h2 id="如何外部编译-？"><a href="#如何外部编译-？" class="headerlink" title="如何外部编译 ？"></a>如何外部编译 ？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/lib</span><br><span class="line">cd build</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=../ ../</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br><span class="line">cd ../bin</span><br></pre></td></tr></table></figure><h2 id="设置二进制文件存放地址"><a href="#设置二进制文件存放地址" class="headerlink" title="设置二进制文件存放地址"></a>设置二进制文件存放地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET(EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;/bin)</span><br><span class="line">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;/lib)</span><br></pre></td></tr></table></figure><h2 id="如何生成动态库或静态库？"><a href="#如何生成动态库或静态库？" class="headerlink" title="如何生成动态库或静态库？"></a>如何生成动态库或静态库？</h2><p> <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjExMTc3MC9hcnRpY2xlL2RldGFpbHMvODA1OTU2MzM=">参考文献<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.add_library(name SHARED source1, source2, ..., sourceN)</span><br><span class="line">2.add_library(name_static STATIC source1, source2, ... , sourceN)</span><br><span class="line">3.set_target_properties(name_static PROPERTIES OUTPUT_NAME &quot;name&quot;)</span><br><span class="line">4.set_target_properties(name_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class="line">5.set_target_properties(name PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class="line">6.set_target_properties(name PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class="line">7.install(TARGETS name name_static </span><br><span class="line">          LIBRARY DESTINATION lib</span><br><span class="line">          ARCHIVE DESTINATION lib)</span><br><span class="line">8.install(DIRECTORY $&#123;titile_H&#125; DESTINATION include/tH)</span><br></pre></td></tr></table></figure><p>第一条    指令是生成动态库（扩展名为.so），类型关键字是SHARED，并不需要写全libname.so，只需要填写name即可，cmake系统会自动生成libname.so。</p><p>第二条    指令是在支持动态库的基础上为工程添加一个静态库，因为静态库和动态库同名时，构建静态库的指令是无效的，所以把上面的name修改为name_static，就可以构建一个libname_static的静态库；然而我们需要的是名字相同的静态库和动态库，因为target的唯一性，所以就不能通过add_library指令实现，所以用到第三条指令</p><p>第三条    指令是为了能够同时得到libname.so/libname.a两个库文件，但是因为cmake在构建一个新的target时，会尝试清理掉具有相同命名的库文件，所以，在构建libname.a的时候会将libname.so库文件清理掉，因此需要再次使用set_target_properties定义的CLEAN_DIRECT_OUTPUT属性，如第四条和第五条指令所示，至此，我们再次进行构建，就会发现在目录中同时生成libname.so动态库文件和libname.a静态库文件</p><p>第六条    指令是因为按照规则，动态库是应当包含一个版本号的， 为了实现动态库版本号，仍然需要使用SET_TARGET_PROPERTIES指令，其中VERSON指代动态库版本，SOVERSION指代API版本。</p><p>第七条    指令是将动态库和静态库文件安装到系统目录，才能够真正地让其他人开发使用，我们将库文件安装到<prefix>/lib目录下</prefix></p><p>第八条    指令是将头文件安装到<prefix>/include/tH目录中。</prefix></p><h2 id="外部引用动态库和静态库"><a href="#外部引用动态库和静态库" class="headerlink" title="外部引用动态库和静态库"></a>外部引用动态库和静态库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.INCLUDE_DIRECTORIES(头文件在系统中的位置)</span><br><span class="line">2.ADD_EXECUTABLE(main source/main.cpp)</span><br><span class="line">3.TARGET_LINK_LIBRARIES(main libfaceDetection.a)</span><br></pre></td></tr></table></figure><p>因为编译安装将动态库安装到/usr/local/lib，/usr/bin目录下，对于动态库的外部引用有些麻烦；</p><h1 id="库文件的编译和封装"><a href="#库文件的编译和封装" class="headerlink" title="库文件的编译和封装"></a>库文件的编译和封装</h1><ul><li>新建<code>build</code>文件夹，将要编译成库文件的<code>inc</code>和<code>src</code>拷贝到<code>build</code>文件夹下，然后在此编写CMakeLists.txt 文件,在将头文件和源文件安装成库，CMakeLists的编写如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Setup the project</span><br><span class="line">cmake_minimum_required(VERSION 2.6 FATAL_ERROR)</span><br><span class="line">set(PROJ_NAME hello)</span><br><span class="line">project($PROJ_NAME)</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Setup Geant4 include directories and compile definitions</span><br><span class="line"># Setup include directory for this project</span><br><span class="line">#</span><br><span class="line">include_directories($&#123;PROJECT_SOURCE_DIR&#125;/inc)</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Locate sources and headers for this project</span><br><span class="line"># NB: headers are included so they will show up in IDEs</span><br><span class="line">#</span><br><span class="line">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;/src/*.cc)</span><br><span class="line">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;/inc/*.hh)</span><br><span class="line"></span><br><span class="line">#-------------------------------------------</span><br><span class="line"># Create static and dynamic library</span><br><span class="line">#</span><br><span class="line">add_library($&#123;PROJ_NAME&#125; SHARED $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class="line">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Install the executable to &apos;bin&apos; directory under CMAKE_INSTALL_PREFIX</span><br><span class="line">#</span><br><span class="line">#install(TARGETS $&#123;PROJ_NAME&#125;  DESTINATION lib)</span><br><span class="line">#install(FILES $&#123;headers&#125; DESTINATION inc)</span><br><span class="line">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;../../../lib)</span><br></pre></td></tr></table></figure><p><strong>注意</strong> </p><ul><li>将可执行二进制文件安装到文件夹时，采用<code>install(TARGETS )</code>方式存在一定问题，生存的二进制文件在<code>usr/bin</code>，同理，头文件安装在<code>usr/local/inc</code>下。</li><li><code>SET(LIBRARY_OUTPUT_PATH )</code>可以设置库文件安装位置。</li><li>在<code>main()</code>的编译链接中，CMakeLists.txt将会存在以下问题，头文件必须包含生成库文件所用的全部头文件，链接生成的所有动态库文件；如，在上述的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1)</span><br></pre></td></tr></table></figure><p>其将，生成三个库文件，分别如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libhello.so</span><br><span class="line">libhello.so.1</span><br><span class="line">libhello.so.1.2</span><br></pre></td></tr></table></figure><p>在链接库文件时，则需要将三个库文件均包含</p><ul><li>API (Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9hcGkvMTAxNTQ=">百度百科<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="外部引用库的优势"><a href="#外部引用库的优势" class="headerlink" title="外部引用库的优势"></a>外部引用库的优势</h1><ul><li>隐藏源码</li><li>不依赖机器的性能和配置差异</li><li>二进制库文件位置明确，脱离源码可移植性高</li></ul>]]></content>
    
    <summary type="html">
    
      Focus on how to use cmake to compile scripts and library and hide source files.
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="cmake" scheme="https://Hubery-Lee.github.io/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>Show RunTime and Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode</title>
    <link href="https://hubery-lee.github.io/2018/10/16/Show%20RunTime%20and%20Solve%20Problem%20that%20Data%20ReadOut%20Are%20Disordered%20in%20Geant4%20Multi-thread%20Mode/"/>
    <id>https://hubery-lee.github.io/2018/10/16/Show%20RunTime%20and%20Solve%20Problem%20that%20Data%20ReadOut%20Are%20Disordered%20in%20Geant4%20Multi-thread%20Mode/</id>
    <published>2018-10-16T12:29:30.000Z</published>
    <updated>2020-04-28T00:41:10.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-show-runtime"><a href="#How-to-show-runtime" class="headerlink" title="How to show runtime"></a>How to show runtime</h1><h2 id="Using-G4Timer-in-RunAction"><a href="#Using-G4Timer-in-RunAction" class="headerlink" title="Using G4Timer in RunAction"></a>Using G4Timer in RunAction</h2><p>time count start at the begin of run and stop at the end of run. </p><h2 id="Detail-Consturciton"><a href="#Detail-Consturciton" class="headerlink" title="Detail Consturciton"></a>Detail Consturciton</h2><p>declare a pionter to G4Timer in construct function.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fTimer = new G4Timer;</span><br></pre></td></tr></table></figure><p>free memory of G4Timer in distruct function</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete fTimer;</span><br></pre></td></tr></table></figure><p>time count start in BeginOfRunAction()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fTimer -&gt;Start()</span><br></pre></td></tr></table></figure><p>time count stop in EndOfRunAction()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fTimer -&gt;Stop();</span><br></pre></td></tr></table></figure><h2 id="Result-Shows"><a href="#Result-Shows" class="headerlink" title="Result Shows"></a>Result Shows</h2><p>Time used will be showed in the end of run.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">number of event = ... User=...s Real=...s Sys=...s</span><br></pre></td></tr></table></figure><h1 id="Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode"><a href="#Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode" class="headerlink" title="Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode"></a>Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode</h1><h2 id="problem-discription"><a href="#problem-discription" class="headerlink" title="problem discription"></a>problem discription</h2><p> I encountered a problem in Geant4 multi-thread run mode. The data readout from two different sensitive detector with hits  are corrected in single thread mode but disordered  in multi-thread run mode. I don&#39;t know how this problem should happen. I think there must be something wrong in the Merge() function. Memory storage may be disordered in the multi-thread mode.</p><h2 id="problem-solving"><a href="#problem-solving" class="headerlink" title="problem solving"></a>problem solving</h2><p>Do not use Geant4 Data Merge() in root mode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//analysisManager-&gt;SetNtupleMerging(<span class="literal">true</span>);</span><br><span class="line">//or</span><br><span class="line">analysisManager-&gt;SetNtupleMerging(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;How-to-show-runtime&quot;&gt;&lt;a href=&quot;#How-to-show-runtime&quot; class=&quot;headerlink&quot; title=&quot;How to show runtime&quot;&gt;&lt;/a&gt;How to show runtime&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Geant" scheme="https://Hubery-Lee.github.io/tags/Geant/"/>
    
  </entry>
  
  <entry>
    <title>Emacs yasnippets and markdown configure</title>
    <link href="https://hubery-lee.github.io/2018/10/11/Emacs-yasnippets-and-markdown-configure/"/>
    <id>https://hubery-lee.github.io/2018/10/11/Emacs-yasnippets-and-markdown-configure/</id>
    <published>2018-10-11T14:07:58.000Z</published>
    <updated>2020-04-28T00:35:03.794Z</updated>
    
    <content type="html"><![CDATA[<p>@[TOC](emacs yasnippets 和makrdown的配置)</p><h2 id="yasnippets-的配置"><a href="#yasnippets-的配置" class="headerlink" title="yasnippets 的配置"></a>yasnippets 的配置</h2><ul><li>安装</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.emacs.d/site-lisp</span><br><span class="line">git clone https://github.com/capitaomorte/yasnippet</span><br></pre></td></tr></table></figure><ul><li>配置==init.el==</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">add-to-list</span> 'load-path</span><br><span class="line">              <span class="string">"~/.emacs.d/site-lisp/yasnippet"</span>)</span><br><span class="line">(<span class="name">require</span> 'yasnippet)</span><br><span class="line">(<span class="name">setq</span> yas-snippet-dirs</span><br><span class="line">      '(<span class="string">"~/.emacs.d/snippets"</span> ;; personal snippets</span><br><span class="line">        ))</span><br><span class="line">(<span class="name">yas-global-mode</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><p>添加自定义模板</p><p> M-x yas-new-snippet 创建新模板<br> C-c C-c 保存</p></li><li><p>模板内容说明</p><p>contributor: snippet作者名称及电邮<br>snippet的语法变量是以$美元符开始的，根据变量$1 $2 $... 定义顺序光标移动位置，特殊的$0是最后光标停位置，语法${N:default value}。</p></li></ul><h2 id="markdown-的配置"><a href="#markdown-的配置" class="headerlink" title="markdown 的配置"></a>markdown 的配置</h2><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz">参看这篇文章<i class="fa fa-external-link-alt"></i></span><br>google markdown emacs 配置<br><span class="exturl" data-url="aHR0cHM6Ly9saW51eHRveS5vcmcvYXJjaGl2ZXMvZW1hY3MtbWFya2Rvd24tbW9kZS5odG1s">https://linuxtoy.org/archives/emacs-markdown-mode.html<i class="fa fa-external-link-alt"></i></span></p></li><li><p>重点看下面这个，此为产品原网址。该网站介绍了产品的多种安装方式。<br>google markdown-mode<br>==<span class="exturl" data-url="aHR0cDovL2pibGV2aW5zLm9yZy9wcm9qZWN0cy9tYXJrZG93bi1tb2RlLz09">http://jblevins.org/projects/markdown-mode/==<i class="fa fa-external-link-alt"></i></span>  </p></li><li><p>常用命令</p></li></ul><ul><li><code>C-c C-c m: markdown-command</code> &gt; <code>*markdown-output*</code> buffer.</li><li><code>C-c C-c p: markdown-command</code>&gt; temporary file&gt; browser.</li><li><code>C-c C-c e: markdown-command</code> &gt; <code>basename.html</code>.</li><li><code>C-c C-c v: markdown-command</code> &gt; <code>basename.html</code> &gt; browser.</li><li><code>C-c C-c w: markdown-command</code> &gt; kill ring.</li><li><code>C-c C-c o: markdown-open-command</code>.</li><li><code>C-c C-c l: markdown-live-preview-mode</code> &gt;<code>*eww*</code> buffer.</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] <span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl3ZWlsaWppZS9hcmNoaXZlLzIwMTIvMTIvMzAvMjg0MDA4MS5odG1s">https://www.cnblogs.com/liweilijie/archive/2012/12/30/2840081.html<i class="fa fa-external-link-alt"></i></span><br>[2] <span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzU1MTk4MDc0MC8=">https://www.douban.com/note/551980740/<i class="fa fa-external-link-alt"></i></span><br>[3] <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz">https://blog.csdn.net/csdnmonkey/article/details/54934663<i class="fa fa-external-link-alt"></i></span><br>[4] <span class="exturl" data-url="aHR0cHM6Ly9qYmxldmlucy5vcmcvcHJvamVjdHMvbWFya2Rvd24tbW9kZS8=">https://jblevins.org/projects/markdown-mode/<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      Focus on how to use emacs to edit markdown scripts.
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Emacs24.3" scheme="https://Hubery-Lee.github.io/tags/Emacs24-3/"/>
    
      <category term="markdown" scheme="https://Hubery-Lee.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>G4 Detector CopyNo and MotherCopyNo access</title>
    <link href="https://hubery-lee.github.io/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/"/>
    <id>https://hubery-lee.github.io/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/</id>
    <published>2018-10-11T03:41:25.000Z</published>
    <updated>2020-04-28T00:33:43.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-construct-assembly-or-replices"><a href="#How-to-construct-assembly-or-replices" class="headerlink" title="How to construct assembly or replices"></a>How to construct assembly or replices</h2><p>You can refer to Geant4 Book for Application Developers <span class="exturl" data-url="aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvR2VvbWV0cnkvZ2VvbUFzc2VtYmx5Lmh0bWw=">User Guide<i class="fa fa-external-link-alt"></i></span></p><p>There are discriptions in the chapter4 Geometry/Assembly、Navigator、TouchableHandles.</p><h2 id="How-to-distinguish-different-detector-array-components"><a href="#How-to-distinguish-different-detector-array-components" class="headerlink" title="How to distinguish different detector array components"></a>How to distinguish different detector array components</h2><p>Using the ‘step’ to retrieve geometrical information</p><p>During the tracking run, geometrical information can be retrieved through the touchable handle associated to the current step. For example, to identify the exact copy-number of a specific physical volume in the mass geometry, one should do the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// Given the pointer to the step object ...</span><br><span class="line">//</span><br><span class="line">G4Step* aStep = ..;</span><br><span class="line"></span><br><span class="line">// ... retrieve the <span class="string">'pre-step'</span> point</span><br><span class="line">//</span><br><span class="line">G4StepPoint* preStepPoint = aStep-&gt;GetPreStepPoint();</span><br><span class="line"></span><br><span class="line">// ... retrieve a touchable handle and access to the information</span><br><span class="line">//</span><br><span class="line">G4TouchableHandle theTouchable = preStepPoint-&gt;GetTouchableHandle();</span><br><span class="line">G4int copyNo = theTouchable-&gt;GetCopyNumber();</span><br><span class="line">G4int motherCopyNo = theTouchable-&gt;GetCopyNumber(1);</span><br><span class="line"></span><br><span class="line">To determine the exact position <span class="keyword">in</span> global coordinates <span class="keyword">in</span> the mass geometry and convert to <span class="built_in">local</span> coordinates (<span class="built_in">local</span> to the current volume):</span><br><span class="line"></span><br><span class="line">G4ThreeVector worldPosition = preStepPoint-&gt;GetPosition();</span><br><span class="line">G4ThreeVector localPosition = theTouchable-&gt;GetHistory()-&gt;</span><br><span class="line">              GetTopTransform().TransformPoint(worldPosition);</span><br></pre></td></tr></table></figure><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h2><p>the motherCopyNo start from 2 to motherNoCopy+1,  copyNo start from 0 to NoCopy-1;</p>]]></content>
    
    <summary type="html">
    
      This page introduce the mehtods to construct detector arrays and how to discriminate the different components with copyNo and motherCopyNo.
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="geant4" scheme="https://Hubery-Lee.github.io/tags/geant4/"/>
    
  </entry>
  
  <entry>
    <title>How to Use Hit to Get Primary Information in Geant4</title>
    <link href="https://hubery-lee.github.io/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/"/>
    <id>https://hubery-lee.github.io/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/</id>
    <published>2018-09-23T05:04:15.000Z</published>
    <updated>2018-09-23T05:20:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Code-Structure-of-Geant4"><a href="#Code-Structure-of-Geant4" class="headerlink" title="Code Structure of Geant4"></a>Code Structure of Geant4</h2><p>The structure shows as the following pictrue.<br><img src="/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/Geant4CodeStructure.png" alt="Class categories in Geant4"></p><ul><li>Run and Event<br>These are categories related to the generation of events, interfaces to event generators, and any secondary particles produced. Their roles are principally to provide particles to be tracked to the Tracking Management.</li><li>Tracking and Track<br>These are categories related to propagating a particle by analyzing the factors limiting the step and applying the relevant physics processes. The important aspect of the design was that a generalized GEANT4 physics process (or interaction) could perform actions, along a tracking step, either localized in space, or in time, or distributed in space and time (and all the possible combinations that could be built from these cases).</li><li>Geometry and Magnetic Field<br>These categories manage the geometrical definition of a detector (solid modeling) and the computation of distances to solids (also in a magnetic field). The GEANT4 geometry solid modeler is based on the ISO STEP<br>standard and it is fully compliant with it. A key feature of the GEANT4 geometry is that the volume definitions<br>are independent of the solid representation. By this abstract interface for the G4 solids, the tracking component works identically for various representations. The treatment of the propagation in the presence of fields has been provided within specified accuracy. An OO design allows to exchange different numerical algorithms and/or different fields (not only B-field), without affecting any other component of the toolkit.</li><li>Particle Definition and Matter<br>These two categories manage the the definition of materials and particles.</li><li>Physics<br>This category manages all physics processes participating in the interactions of particles in matter. The abstract interface of physics processes allows multiple implementations of physics models per interaction or per channel. Models can be selected by energy range, particle type, material, etc. Data encapsulation and polymorphism make it possible to give transparent access to the cross sections (independently of the choice of reading from an ascii file, or of interpolating from a tabulated set, or of computing analytically from a formula). Electromagnetic and hadronic physics were handled in a uniform way in such a design, opening up the physics to the users.</li><li>Hits and Digitization<br>These two categories manage the creation of hits and their use for the digitization phase. The basic design and<br>implementation of the Hits and Digi had been realized, and also several prototypes, test cases and scenarios<br>had been developed before the alpha-release. Volumes (not necessarily the ones used by the tracking) are<br>aggregated in sensitive detectors, while hits collections represent the logical read out of the detector. Different ways of creating and managing hits collections had been delivered and tested, notably for both single hits and calorimetry hits types. In all cases, hits collections had been successfully stored into and retrieved from an Object Data Base Management System.</li><li>Visualization<br>This manages the visualization of solids, trajectories and hits, and interacts with underlying graphical libraries(the Visualization class category). The basic and most frequently used graphics functionality had been implemented already by the alpha-release. The OO design of the visualization component allowed us to develop<br>several drivers independently, such as for OpenGL, Qt and OpenInventor (for X11 and Windows), DAWN, Postscript (via DAWN) and VRML.</li><li>Interfaces<br>This category handles the production of the graphical user interface (GUI) and the interactions with external<br>software (OODBMS, reconstruction etc.).</li></ul><p><code>MORE DETAIL INFORMATION ABOUT THIS，YOU CAN REFER TO GEANT4 BOOK FOR APPLICATION CHAPTER 3</code></p><h2 id="Collect-information-from-PrimaryGeneratorAction"><a href="#Collect-information-from-PrimaryGeneratorAction" class="headerlink" title="Collect information from PrimaryGeneratorAction"></a>Collect information from PrimaryGeneratorAction</h2><p>Data record in step or event, and stored in hitscollection. data write in EventAction; general understanding of geant4 and its application as follows. Geant is the abbreviation of Geometry and Tracking.<br><img src="/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/Geant4Application.png" alt="General UnderStanding of Geant4"></p>]]></content>
    
    <summary type="html">
    
      This page introduce the struction of Geant4 and using Hit to get information of PrimaryGeneratorAction.
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="geant4" scheme="https://Hubery-Lee.github.io/tags/geant4/"/>
    
  </entry>
  
  <entry>
    <title>How to Use Root to Draw 3D Histogram</title>
    <link href="https://hubery-lee.github.io/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/"/>
    <id>https://hubery-lee.github.io/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/</id>
    <published>2018-09-23T05:04:11.000Z</published>
    <updated>2020-04-28T00:39:06.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>Root/tutoriors/gl/glvox2.C</p><h2 id="Results-Shows"><a href="#Results-Shows" class="headerlink" title="Results Shows"></a>Results Shows</h2><p><img src="/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/_glovx2.png" alt="example1"><br><img src="/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/c2.png" alt="example2"><br><img src="/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/level41.png" alt="example3"></p>]]></content>
    
    <summary type="html">
    
      The page shows the strategies to draw 3D Histogram
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="root" scheme="https://Hubery-Lee.github.io/tags/root/"/>
    
  </entry>
  
  <entry>
    <title>Gean4 Data Read Out Methods</title>
    <link href="https://hubery-lee.github.io/2018/09/17/G4DataReadOutMethods/"/>
    <id>https://hubery-lee.github.io/2018/09/17/G4DataReadOutMethods/</id>
    <published>2018-09-17T14:21:46.000Z</published>
    <updated>2020-04-28T00:37:02.501Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction-of-Data-Aquisition-Methods-in-Geant4-Simulation"><a href="#Introduction-of-Data-Aquisition-Methods-in-Geant4-Simulation" class="headerlink" title="Introduction of Data Aquisition Methods in Geant4 Simulation"></a>Introduction of Data Aquisition Methods in Geant4 Simulation</h2><ul><li>G4ScoringManager</li><li>SteppingAction</li><li>TrackingAction</li><li>SensitiveDetctor + HitCollection</li></ul><p><img src="/2018/09/17/G4DataReadOutMethods/Geant4%E6%95%B0%E6%8D%AE%E8%BE%93%E5%87%BA%E6%96%B9%E5%BC%8F.png" alt="Geant4 Data Read Out Method"></p><p>More detail information about these methods to get data can you refer to <span class="exturl" data-url="aHR0cHM6Ly93ZW5rdS5iYWlkdS5jb20vdmlldy9mMTNmNDcyNWJlMjM0ODJmYjVkYTRjNjMuaHRtbA==">this site<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">A: To get the information at tracking time in a given volume A, one can adopt either one or a combination of the following strategies:</span><br><span class="line"></span><br><span class="line">1.  If the geometry is simple enough, and wish to score some commonly used physics quantities (e.g. energy deposition, dose, flux, etc.), just activate G4ScoringManager in your main program, and use the scorer-based UI commands to transform volume A into a scorer.</span><br><span class="line"></span><br><span class="line">    See Option 6 below, and the example examples/extended/runAndEvent/RE03.</span><br><span class="line"></span><br><span class="line">2.  Through the SteppingAction, check that the particle is inside volume A and do whatever needed. Hints can be found in the previous chapter of this FAQ document.</span><br><span class="line"></span><br><span class="line">    Usually, the hits containers and histograms are attributes of a Track, Event or Run and can be managed through either a TrackingAction, EventAction and/or RunAction and eventually messaging their pointer to the SteppingAction.</span><br><span class="line"></span><br><span class="line">    A similar approach is illustrated in examples/basic/B2, B4, extended/electromagnetic, optical, and many others…</span><br><span class="line"></span><br><span class="line">3.  In DetectorConstruction, by declaring volume A as a SensitiveDetector. At stepping time, the Geant4 kernel will automatically check that a particle is inside volume A and will handle the control to a specific function G4VSensitiveDetector::ProcessHits(). It is just necessary to instanciate a class inherited from G4VSensitiveDetector, say VolumeA_SD, and do whatever needed by implementing the function VolumeA_SD::ProcessHits(), as described in Option 2 above.</span><br><span class="line"></span><br><span class="line">4.  In addition to Option 3 above, should create a HitsCollection to store the information. A HitsCollection can be created in VolumeA_SD::Initialize(). A Hit can be created or filled in VolumeA_SD::ProcessHits(). Additional operations on HitsCollection can be performed in VolumeA_SD::EndOfEvent().</span><br><span class="line"></span><br><span class="line">    This approach is illustrated in examples/basic/B2, B4 and extended/analysis, extended/runAndEvent/RE01, etc…</span><br><span class="line"></span><br><span class="line">5.  In DetectorConstruction, volume A can be declared as SensitiveDetector, and one or several pre-defined scorers can be attached to volume A. In this case, neither a SteppingAction nor a spcific VolumeA_SD sensitive detector is needed any longer. It is just necessary to create a dedicated scorer, e.g. MyRunScorer, inherited from G4Run, and handle the HitsCollections within MyRunScorer::RecordEvent(). MyRunScorer itself can be instanciated from RunAction::GenerateRun().</span><br><span class="line"></span><br><span class="line">    This approach is illustrated in examples/novice/N07, extended/runAndEvent/RE02.</span><br><span class="line"></span><br><span class="line">6.  A set of build-in scorer-based UI commands allows to perform most possible operations described through the previous Option 5 directly from run-time macros.</span><br><span class="line"></span><br><span class="line">    See example extended/runAndEvent/RE03.</span><br></pre></td></tr></table></figure><h2 id="Detector-Response"><a href="#Detector-Response" class="headerlink" title="Detector Response"></a>Detector Response</h2><p>对于Geant4模拟数据输出与存储可以参看<code>examples/basic/B4</code>,对于不同的数据输出方式，看该文件夹下的<code>README</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">6- DETECTOR RESPONSE</span><br><span class="line"></span><br><span class="line">  The energy deposit and track lengths of the charged particles are recorded on</span><br><span class="line">  an event by event basis in the Absober and Gap layers.</span><br><span class="line">  </span><br><span class="line">  In order to demonstrate several possible ways of data scoring,</span><br><span class="line">  the example is provided in four variants:</span><br><span class="line">  </span><br><span class="line">  Variant a: User Actions</span><br><span class="line">  </span><br><span class="line">    These 4 quantities are data members of the B4aEventAction class.  </span><br><span class="line">    They are collected step by step in </span><br><span class="line">    B4aSteppingAction::UserSteppingAction(), and passed to the event action</span><br><span class="line">    via two methods: B4aEventAction::AddAbs() and B4aEventAction::AddGap().</span><br><span class="line">  </span><br><span class="line">    In B4aEventAction::EndOfEventAction(), these quantities are printed and </span><br><span class="line">    filled in H1D histograms and ntuple to accumulate statistic and compute </span><br><span class="line">    dispersion.</span><br><span class="line">    </span><br><span class="line">  Variant b: User data object </span><br><span class="line">  </span><br><span class="line">    In order to avoid dependencies between action classes, a user object</span><br><span class="line">    B4bRunData, derived from G4Run, is defined with data members needed </span><br><span class="line">    for the accounted information. </span><br><span class="line">    In order to reduce the number of data members a 2-dimensions array</span><br><span class="line">    is introduced for each quantity.</span><br><span class="line">    Then the quantities are collected step by step in user action classes:</span><br><span class="line">    B4bSteppingAction::UserSteppingAction() and </span><br><span class="line">    B4bEventAction::EndOfEventAction() in a similar way as in variant a. </span><br><span class="line">    </span><br><span class="line">  Variant c: Hits and Sensitive detectors</span><br><span class="line">  </span><br><span class="line">    In this option, the physics quantities are accounted using the hits</span><br><span class="line">    and sensitive detectors framework defined in the Geant4 kernel.  </span><br><span class="line">    The physics quantities are stored in B4cCalorHit via two B4cCalorimeterSD</span><br><span class="line">    objects, one associated with the Absorber volume and another one with Gap</span><br><span class="line">    in B4cDetectorConstruction::ConstructSDandField().</span><br><span class="line">    </span><br><span class="line">    In contrary to the B2 example (Tracker) where a new hit is created</span><br><span class="line">    with each track passing the sensitive volume (in the calorimeter), only one</span><br><span class="line">    hit is created for each calorimeter layer and one more hit to account for</span><br><span class="line">    the total quantities in all layers. In addition to the variants a and b,</span><br><span class="line">    the quantities per each layer are also available in addition to the total </span><br><span class="line">    quantities.</span><br><span class="line">    </span><br><span class="line">  Variant d: Scorer</span><br><span class="line">   </span><br><span class="line">    In this option, the Geant4 scorers which are defined on the top of hits</span><br><span class="line">    and sensitive detectors Geant4 framework are used.  </span><br><span class="line">    In practice this means that the user does not need to define hits and sensitive</span><br><span class="line">    detector classes but rather uses the classes already defined</span><br><span class="line">    in Geant4. In this example, the G4MultiFunctionalDetector with</span><br><span class="line">    G4PSEnergyDeposit and G4PSTrackLength primitive scores are used (see</span><br><span class="line">    B4dDetectorConstruction::ConstructSDandField()).</span><br><span class="line">   </span><br><span class="line">    Also with this approach, the quantities per each layer are available </span><br><span class="line">    in addition to the total quantities.</span><br><span class="line">      </span><br><span class="line"> 7- HISTOGRAMS</span><br><span class="line"></span><br><span class="line">  The analysis tools are used to accumulate statistics and compute the dispersion</span><br><span class="line">  of the energy deposit and track lengths of the charged particles.</span><br><span class="line">  H1D histograms are created in B4[b]RunAction::B4[b]RunAction() for the </span><br><span class="line">  following quantities:</span><br><span class="line">  - Energy deposit in absorber</span><br><span class="line">  - Energy deposit in gap</span><br><span class="line">  - Track length in absorber</span><br><span class="line">  - Track length in gap</span><br><span class="line">  The same values are also saved in an ntuple.</span><br><span class="line"></span><br><span class="line">  The histograms and the ntuple are saved in the output file in a format</span><br><span class="line">  according to a technology selected in B4Analysis.hh, the default in this example</span><br><span class="line">  is ROOT.</span><br><span class="line"></span><br><span class="line">  The accumulated statistic and computed dispersion is printed at the end of </span><br><span class="line">  run, in B4RunAction::EndOfRunAction().</span><br><span class="line">  When running in multi-threading mode, the histograms and the ntuple accumulated </span><br><span class="line">  on threads are merged in a single output file. While merging of histograms is</span><br><span class="line">  performed by default, merging of ntuples is explicitly activated in the B4RunAction </span><br><span class="line">  constructor.</span><br><span class="line"></span><br><span class="line">  The ROOT histograms and ntuple can be plotted with ROOT using the plotHisto.C</span><br><span class="line">  and plotNtuple.C macros.</span><br></pre></td></tr></table></figure><h2 id="Geant4-Simulation-Data-ReadOut-by-SensitiveDetctor-HitCollection-Methods"><a href="#Geant4-Simulation-Data-ReadOut-by-SensitiveDetctor-HitCollection-Methods" class="headerlink" title="Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods"></a>Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods</h2><h3 id="RunAction"><a href="#RunAction" class="headerlink" title="RunAction"></a>RunAction</h3><ul><li>RunAction()</li><li>~RunAction()</li><li>BegingOfRunAction(const G4Run *)</li><li>EndOfRunAction(const G4Run *)</li></ul><p>该方式的数据输出与存储参看<code>examples/basic/B4/B4c</code></p><h4 id="RunAction-构造函数"><a href="#RunAction-构造函数" class="headerlink" title="RunAction() 构造函数"></a>RunAction() 构造函数</h4><p>打开和关闭数据存储文件，在RunAction中；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// set printing event number per each event</span><br><span class="line">G4RunManager::GetRunManager()-&gt;SetPrintProgress(1);</span><br><span class="line"></span><br><span class="line">// Create analysis manager</span><br><span class="line">// The choice of analysis technology is done via selectin of a namespace</span><br><span class="line">// in B4Analysis.hh</span><br><span class="line">auto analysisManager = G4AnalysisManager::Instance();</span><br><span class="line">G4cout &lt;&lt; &quot;Using &quot; &lt;&lt; analysisManager-&gt;GetType() &lt;&lt; G4endl;</span><br><span class="line"></span><br><span class="line">analysisManager-&gt;SetVerboseLevel(1);</span><br><span class="line">analysisManager-&gt;SetNtupleMerging(true);  </span><br><span class="line">// Note: merging ntuples is available only with Root output</span><br><span class="line"></span><br><span class="line">// Book ntuples   </span><br><span class="line"></span><br><span class="line">//Declare ntuples</span><br><span class="line">// Creating 1st ntuple</span><br><span class="line">//</span><br><span class="line">analysisManager-&gt;CreateNtuple(&quot;Det&quot;, &quot;xyz in Det&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleSColumn(&quot;SDName&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleIColumn(&quot;EventID&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleIColumn(&quot;ParentID&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleIColumn(&quot;TrackID&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleIColumn(&quot;StepID&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;Edep&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;PosX&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;PosY&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;PosZ&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;GlobalT&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;LocalT&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;ProperT&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;Ekin&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;Velocity&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentX&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentY&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentZ&quot;);</span><br><span class="line">analysisManager-&gt;CreateNtupleSColumn(&quot;ProC&quot;);</span><br><span class="line"></span><br><span class="line">analysisManager-&gt;FinishNtuple();</span><br></pre></td></tr></table></figure><p>主要设置模拟运行参数，运行显示、多线程文件合并等；</p><ul><li><code>注意</code><br><code>B4c</code>中将内容目录也在构造函数中创建，文件的创建在BeginOfRunAction()中。</li></ul><h4 id="RunAction-析构函数"><a href="#RunAction-析构函数" class="headerlink" title="~RunAction() 析构函数"></a>~RunAction() 析构函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete G4AnalysisManager::Instance();</span><br></pre></td></tr></table></figure><h4 id="BeginOfRunAction-const-G4Run"><a href="#BeginOfRunAction-const-G4Run" class="headerlink" title="BeginOfRunAction(const G4Run*)"></a>BeginOfRunAction(const G4Run*)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Get analysis manager</span><br><span class="line">auto analysisManager = G4AnalysisManager::Instance();</span><br><span class="line"></span><br><span class="line">// Open an output file</span><br><span class="line">//</span><br><span class="line">G4String fileName = &quot;APNIS&quot;;</span><br><span class="line">analysisManager-&gt;OpenFile(fileName);</span><br></pre></td></tr></table></figure><p>新建储存文件并打开文件</p><h4 id="EndOfRunAction-const-G4Run"><a href="#EndOfRunAction-const-G4Run" class="headerlink" title="EndOfRunAction(const G4Run*)"></a>EndOfRunAction(const G4Run*)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auto analysisManager = G4AnalysisManager::Instance();</span><br><span class="line"></span><br><span class="line">// save histograms &amp; ntuple</span><br><span class="line">//</span><br><span class="line">analysisManager-&gt;Write();</span><br><span class="line">analysisManager-&gt;CloseFile();</span><br></pre></td></tr></table></figure><p>一个Run结束后的写文件</p><h3 id="EventAction"><a href="#EventAction" class="headerlink" title="EventAction"></a>EventAction</h3><p>采用SD+HitCollection方式存储数据，记录的是一个Event的所有Hit点的数据，那么Geant4中数据的存储就在EventAction中进行；</p><p>当然，如果你采用StepAction方式存储数据，你只需在StepAction中去存储数据就行了；</p><ul><li>EventAction()</li><li>~EventAction()</li><li>BeginOfEventAction(const G4Event*)</li><li>EndOfEventAction(const G4Event*)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">• beginOfEventAction() This method is invoked before converting the primary particles to G4Track</span><br><span class="line">objects. A typical use of this method would be to initialize and/or book histograms for a particular event.</span><br><span class="line">• endOfEventAction() This method is invoked at the very end of event processing. It is typically used for</span><br><span class="line">a simple analysis of the processed event. If the user wants to keep the currently processing event until</span><br><span class="line">the end of the current run, the user can invoke fpEventManager-&gt;KeepTheCurrentEvent(); so</span><br><span class="line">that it is kept in G4Run object. This should be quite useful if you simulate quite many events and want to</span><br><span class="line">visualize only the most interest ones after the long execution. Given the memory size of an event and its</span><br><span class="line">contents may be large, it is the user’s responsibility not to keep unnecessary events.</span><br></pre></td></tr></table></figure><h4 id="EndOfEventAction-const-G4Event"><a href="#EndOfEventAction-const-G4Event" class="headerlink" title="EndOfEventAction(const G4Event*)"></a>EndOfEventAction(const G4Event*)</h4><p>在每个Event结束时，将Hit数据存储写到存储文件中。首先获取这个Event有多少个HitCollection,（HitCollection编号HCID在Event开始前获得，在BegingOfEventAction()中定义），然后根据HCID查找对应的HitCollection，根据不同HitCollection的大小提取数据并写入到文件；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">G4HCofThisEvent * HCE = event-&gt;GetHCofThisEvent();//获得Event结束时，所有的HitCollection</span><br><span class="line"></span><br><span class="line">//根据HitCollecitonID名称，获取不同的CollectionID</span><br><span class="line">if(HCE)&#123;</span><br><span class="line">PrimaryHC = (PLANETOCOSPrimaryHitsCollection*)(HCE-&gt;GetHC(primaryCollID));</span><br><span class="line">FluxHC = (PLANETOCOSFluxHitsCollection*)(HCE-&gt;GetHC(fluxdetectorCollID));</span><br><span class="line">//FluxHC = (PLANETOCOSFluxHitsCollection*)(HCE-&gt;GetHC(1));</span><br><span class="line">//G4cout&lt;&lt;&quot;ANALYSE1&quot;&lt;&lt;std::endl;</span><br><span class="line">EdepHC = (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(edepCollID));</span><br><span class="line">SoilEdepHC = (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(edepSoilCollID));</span><br><span class="line"></span><br><span class="line">//EdepHC = (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(2));</span><br><span class="line">PostTrackHC = (PLANETOCOSPostTrackHitsCollection*)(HCE-&gt;GetHC(post_trackCollID));</span><br><span class="line">//PostTrackHC = (PLANETOCOSPostTrackHitsCollection*)(HCE-&gt;GetHC(3));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BeginOfEventAction-const-G4Event"><a href="#BeginOfEventAction-const-G4Event" class="headerlink" title="BeginOfEventAction(const G4Event*)"></a>BeginOfEventAction(const G4Event*)</h4><p>在Event开始前的行为，可以写在这个函数中；如下，获得不同HitCollection的编码HCID；注意，不同的HitCollection 对应不同的SD；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> G4SDManager * SDman = G4SDManager::GetSDMpointer();</span><br><span class="line"> if(edepCollID&lt;0||primaryCollID&lt;0||fluxdetectorCollID&lt;0 ||post_trackCollID &lt;0 || edepSoilCollID&lt;0)&#123;</span><br><span class="line"> edepCollID = SDman-&gt;GetCollectionID(&quot;edepCol&quot;);</span><br><span class="line">edepSoilCollID = SDman-&gt;GetCollectionID(&quot;edepSoilCol&quot;);</span><br><span class="line">primaryCollID = SDman-&gt;GetCollectionID(&quot;primaryCol&quot;);</span><br><span class="line">  fluxdetectorCollID = SDman-&gt;GetCollectionID(&quot;detCol&quot;);</span><br><span class="line">post_trackCollID = SDman-&gt;GetCollectionID(&quot;post_trackCol&quot;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>当不考虑不同的SD，对所以SD的detector的响应都一样时采用如下方法读取数据；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">/////////////////////////////////////////////</span><br><span class="line">void APNISEventAction::EndOfEventAction(const G4Event* event)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  G4HCofThisEvent * hce = event-&gt;GetHCofThisEvent();</span><br><span class="line">  if (!hce) &#123;</span><br><span class="line">      G4ExceptionDescription msg;</span><br><span class="line">      msg &lt;&lt; &quot;No hits collection of this event found.&quot; &lt;&lt; G4endl; </span><br><span class="line">      G4Exception(&quot;APNISEventAction::EndOfEventAction()&quot;,</span><br><span class="line">                  &quot;APNISCode001&quot;, JustWarning, msg);</span><br><span class="line">      return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //get hit collection</span><br><span class="line">  if(hce)</span><br><span class="line">    &#123;</span><br><span class="line">      size_t nHCE=hce-&gt;GetCapacity();</span><br><span class="line">      for(size_t i=0;i&lt;nHCE;i++)&#123;//多个SD时用</span><br><span class="line">  APNISTrackHitsCollection *HC =0;</span><br><span class="line">      HC = (APNISTrackHitsCollection *)(hce-&gt;GetHC(i));</span><br><span class="line">      if(HC) OneHitOrder(HC);//写数据</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">////////////////////////////////////////////////////////////////</span><br><span class="line">void APNISEventAction::OneHitOrder(APNISTrackHitsCollection*HC)</span><br><span class="line">&#123;</span><br><span class="line">  //////////////////////////////////////////</span><br><span class="line">  //</span><br><span class="line">  // Fill histograms &amp; ntuple</span><br><span class="line">  //</span><br><span class="line">  //////////////////////////////////////////</span><br><span class="line"></span><br><span class="line">  // get analysis manager</span><br><span class="line">  auto analysisManager = G4AnalysisManager::Instance();</span><br><span class="line"></span><br><span class="line">  //analyse</span><br><span class="line">  G4int n_hit = HC-&gt;entries();</span><br><span class="line">  for(G4int i=0;i&lt;n_hit;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      G4String SDName =(*HC)[i]-&gt;GetSDName();</span><br><span class="line">      G4int    EventID=(*HC)[i]-&gt;GetEventID();//</span><br><span class="line">      G4int    ParentID=(*HC)[i]-&gt;GetParentID();//</span><br><span class="line">      G4int    TrackID=(*HC)[i]-&gt;GetTrackID();//</span><br><span class="line">      G4int    StepID=(*HC)[i]-&gt;GetStepID();//       // Total steps number up to now</span><br><span class="line">      G4double fEdep=(*HC)[i]-&gt;GetEdep();</span><br><span class="line">      G4ThreeVector fPos=(*HC)[i]-&gt;GetPos();</span><br><span class="line">      G4double GlobalTime=(*HC)[i]-&gt;GetGlobalTime();//                   //Time since event is created</span><br><span class="line">      G4double LocalTime=(*HC)[i]-&gt;GetLocalTime();//                  // Time since track is created</span><br><span class="line">      G4double ProperTime=(*HC)[i]-&gt;GetProperTime();//            // Time since track is created (in rest frame of particle)</span><br><span class="line">      G4double Ekin=(*HC)[i]-&gt;GetEkin();//                    </span><br><span class="line">      G4double Velocity=(*HC)[i]-&gt;GetVelocity();//</span><br><span class="line">      G4ThreeVector MomentumDirection = (*HC)[i]-&gt;GetMomentumDirection();      // Direction of momentum </span><br><span class="line">      G4String CreatorProcess=(*HC)[i]-&gt;GetCreatorProcess();//</span><br><span class="line"></span><br><span class="line">      //塞选思路</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      //存储数据</span><br><span class="line">      // fill ntuple</span><br><span class="line">      G4int Count=0;</span><br><span class="line">      analysisManager-&gt;FillNtupleSColumn(Count,SDName);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleIColumn(Count,EventID);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleIColumn(Count,ParentID);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleIColumn(Count,TrackID);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleIColumn(Count,StepID);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,fEdep/MeV);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.x()/m);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.y()/m);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.z()/m);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,GlobalTime/s);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,LocalTime/s);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,ProperTime/s);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,Ekin/MeV);Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,Velocity/(m/s));Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.x());Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.y());Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.z());Count++;</span><br><span class="line">      analysisManager-&gt;FillNtupleSColumn(Count,CreatorProcess);Count++;</span><br><span class="line"></span><br><span class="line">      // analysisManager-&gt;FillNtupleIColumn(Count,);Count++;</span><br><span class="line">      // analysisManager-&gt;FillNtupleDColumn(Count,);Count++;</span><br><span class="line">      // analysisManager-&gt;FillNtupleSColumn(Count,);Count++;</span><br><span class="line"></span><br><span class="line">      analysisManager-&gt;AddNtupleRow();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Hit"><a href="#Hit" class="headerlink" title="Hit"></a>Hit</h3><p>参考Book for applicaiton中的4.4 <span class="exturl" data-url="aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvaGl0Lmh0bWw=">Hits<i class="fa fa-external-link-alt"></i></span></p><p>A hit is a snapshot of the physical interaction of a track in the sensitive region of a detector. In it you can store<br>information associated with a G4Step object. This information can be</p><ul><li>the position and time of the step,</li><li>the momentum and energy of the track,</li><li>the energy deposition of the step,</li><li>geometrical information,</li><li>or any combination of the above.</li></ul><p><code>简而言之</code></p><ul><li>G4中的Hit &lt;==&gt; C++中的vector  ，G4Allocator会给Hit分配内存空间；</li><li>G4中的Map &lt;==&gt; C++中的map</li></ul><h4 id="Hit-hh头文件结构"><a href="#Hit-hh头文件结构" class="headerlink" title="Hit.hh头文件结构"></a>Hit.hh头文件结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">APNISTrackHit();</span><br><span class="line">APNISTrackHit(const APNISTrackHit &amp;right);</span><br><span class="line">virtual ~APNISTrackHit();</span><br><span class="line">//operator</span><br><span class="line">const APNISTrackHit&amp; operator=(const APNISTrackHit &amp;right);</span><br><span class="line">G4int operator ==(const APNISTrackHit &amp;right)const;</span><br><span class="line"></span><br><span class="line">inline void *operator new(size_t);</span><br><span class="line">inline void operator delete(void *aHit);</span><br><span class="line"></span><br><span class="line">//获取数据</span><br><span class="line">inline void SetSDName(G4String name)&#123;SDName=name;&#125;</span><br><span class="line">inline const G4String&amp; GetSDName() const&#123;return SDName;&#125;</span><br><span class="line"></span><br><span class="line">inline void SetEventID(G4int id)&#123;EventID=id;&#125;//ok</span><br><span class="line">inline G4int GetEventID() const&#123;return EventID;&#125;//</span><br><span class="line"></span><br><span class="line">inline void SetParentID(G4int id)&#123;ParentID=id;&#125;//ok</span><br><span class="line">inline G4int GetParentID() const&#123;return ParentID;&#125;//</span><br><span class="line"></span><br><span class="line">inline void SetTrackID(G4int id)&#123;TrackID=id;&#125;//ok</span><br><span class="line">inline G4int GetTrackID() const&#123;return TrackID;&#125;//</span><br><span class="line"></span><br><span class="line">inline void SetStepID(G4int id)&#123;CurrentStepNumber=id;&#125;//ok</span><br><span class="line">inline G4int GetStepID() const&#123;return CurrentStepNumber;&#125;//</span><br><span class="line"></span><br><span class="line">inline void SetEdep(G4double de)&#123; fEdep = de; &#125;</span><br><span class="line">inline G4double GetEdep()&#123; return fEdep; &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>分配HitCollection存储空间，新建内存空间用完后并释放内存空间；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">///////////////////////////////////////////////////////////////</span><br><span class="line">typedef G4THitsCollection&lt;APNISTrackHit&gt; APNISTrackHitsCollection;</span><br><span class="line"></span><br><span class="line">extern G4ThreadLocal G4Allocator&lt;APNISTrackHit&gt;* APNISTrackHitAllocator;</span><br><span class="line">//////////////////////////////////////////////////////////////</span><br><span class="line">inline void* APNISTrackHit::operator new(size_t)</span><br><span class="line">&#123;</span><br><span class="line">  if(!APNISTrackHitAllocator) APNISTrackHitAllocator = new G4Allocator&lt;APNISTrackHit&gt;;</span><br><span class="line">  return (void *)APNISTrackHitAllocator-&gt;MallocSingle();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inline void APNISTrackHit::operator delete(void* aHit)</span><br><span class="line">&#123;</span><br><span class="line">  APNISTrackHitAllocator-&gt;FreeSingle((APNISTrackHit*)aHit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Hit-cc"><a href="#Hit-cc" class="headerlink" title="Hit.cc"></a>Hit.cc</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">////////////////////////////////////////////////////////</span><br><span class="line">APNISTrackHit::APNISTrackHit(const APNISTrackHit &amp;right):G4VHit()</span><br><span class="line">&#123;</span><br><span class="line">  SDName =right.SDName;</span><br><span class="line">  EventID=right.EventID;</span><br><span class="line">  ParentID =right.ParentID;</span><br><span class="line">  TrackID =right.TrackID;</span><br><span class="line">  CurrentStepNumber =right.CurrentStepNumber;</span><br><span class="line">  fEdep = right.fEdep;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line">////////////////////////////////////////////////////////</span><br><span class="line">//</span><br><span class="line">// operator</span><br><span class="line">const APNISTrackHit&amp; APNISTrackHit::operator=(const APNISTrackHit &amp;right)</span><br><span class="line">&#123;</span><br><span class="line">  SDName =right.SDName;</span><br><span class="line">  EventID=right.EventID;</span><br><span class="line">  ParentID =right.ParentID;</span><br><span class="line">  TrackID =right.TrackID;</span><br><span class="line">  CurrentStepNumber =right.CurrentStepNumber;</span><br><span class="line">  fEdep = right.fEdep;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  return *this;</span><br><span class="line">&#125;</span><br><span class="line">////////</span><br><span class="line">G4int APNISTrackHit::operator==(const APNISTrackHit &amp;right) const</span><br><span class="line">&#123;</span><br><span class="line">  return (this==&amp;right) ? 1 : 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SensitiveDetector"><a href="#SensitiveDetector" class="headerlink" title="SensitiveDetector"></a>SensitiveDetector</h3><p>SD的作用时根据Step和Track信息，构建Hit信息；SD有以下一些函数：</p><ul><li>ProcessHits()</li><li>Initialize()</li><li>EndOfEvent()</li></ul><h4 id="ProcessHits-G4Step-aStep-G4TouchableHistory"><a href="#ProcessHits-G4Step-aStep-G4TouchableHistory" class="headerlink" title="ProcessHits(G4Step* aStep, G4TouchableHistory*)"></a>ProcessHits(G4Step* aStep, G4TouchableHistory*)</h4><p>在ProcessHits()中将数据存入Hit()申明的存储空间中;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ProcessHits() This method is invoked by G4SteppingManager when a step is composed in the</span><br><span class="line">G4LogicalVolume which has the pointer to this sensitive detector. The first argument of this method is</span><br><span class="line">a G4Step object of the current step. The second argument is a G4TouchableHistory object for the</span><br><span class="line">Readout geometry described in the next section. The second argument is NULL if Readout geometry</span><br><span class="line">is not assigned to this sensitive detector. In this method, one or more G4VHit objects should be constructed if</span><br><span class="line">the current step is meaningful for your detector.</span><br><span class="line">Initialize() This method is invoked at the beginning of each event. The argument of this method is an object</span><br><span class="line">of the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,</span><br><span class="line">can be associated with the G4HCofThisEvent object in this method. The hit collections associated with</span><br><span class="line">the G4HCofThisEvent object during this method can be used for during the event processing</span><br><span class="line">digitization.</span><br></pre></td></tr></table></figure><p>example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> G4StepPoint* preStepPoint=aStep-&gt;GetPreStepPoint();</span><br><span class="line"> G4StepPoint* postStepPoint=aStep-&gt;GetPostStepPoint();</span><br><span class="line"> G4Track* aTrack=aStep-&gt;GetTrack();</span><br><span class="line"></span><br><span class="line"> // G4double edep = aStep-&gt;GetTotalEnergyDeposit();</span><br><span class="line"> // if(edep==0.) return false;</span><br><span class="line"> G4ParticleDefinition* theparticle=aStep-&gt;GetTrack()-&gt;GetDefinition();</span><br><span class="line"> G4String PName=theparticle-&gt;GetParticleName();</span><br><span class="line"></span><br><span class="line"> G4TouchableHandle touch1 = preStepPoint-&gt;GetTouchableHandle();</span><br><span class="line"> G4VPhysicalVolume* volume = touch1-&gt;GetVolume();</span><br><span class="line"></span><br><span class="line">if(preStepPoint-&gt;GetStepStatus()==fGeomBoundary)</span><br><span class="line">  &#123;</span><br><span class="line">    // if(volume-&gt;GetName()==&quot;AirDet&quot;)</span><br><span class="line">    //   &#123;</span><br><span class="line">    APNISTrackHit* newHit1 = new APNISTrackHit();</span><br><span class="line">    // G4cout&lt;&lt;&quot;####----In AirDet----&quot;&lt;&lt;SensitiveDetectorName&lt;&lt;G4endl;</span><br><span class="line">    newHit1-&gt;SetSDName(volume-&gt;GetName());</span><br><span class="line">    newHit1-&gt;SetEventID(G4EventManager::GetEventManager()-&gt;GetConstCurrentEvent()-&gt;GetEventID());//ok</span><br><span class="line">    newHit1-&gt;SetParentID(aTrack-&gt;GetParentID());//ok</span><br><span class="line">    newHit1-&gt;SetTrackID(aTrack-&gt;GetTrackID());//ok</span><br><span class="line">    newHit1-&gt;SetStepID(aTrack-&gt;GetCurrentStepNumber());//ok</span><br><span class="line"></span><br><span class="line">    newHit1-&gt;SetEdep( aStep-&gt;GetTotalEnergyDeposit() );</span><br><span class="line">    newHit1-&gt;SetPos( aStep-&gt;GetPreStepPoint()-&gt;GetPosition());</span><br><span class="line">    newHit1-&gt;SetGlobalTime(preStepPoint-&gt;GetGlobalTime());//ok</span><br><span class="line">    newHit1-&gt;SetLocalTime(preStepPoint-&gt;GetLocalTime());//ok</span><br><span class="line">    newHit1-&gt;SetProperTime(preStepPoint-&gt;GetProperTime());//ok</span><br><span class="line">    newHit1-&gt;SetEkin(preStepPoint-&gt;GetKineticEnergy());//ok</span><br><span class="line">    newHit1-&gt;SetVelocity(preStepPoint-&gt;GetVelocity());//ok</span><br><span class="line">    newHit1-&gt;SetMomentumDirection(preStepPoint-&gt;GetMomentumDirection());//ok</span><br><span class="line">    const G4VProcess* pcr=aTrack-&gt;GetCreatorProcess();</span><br><span class="line">    if(pcr)newHit1-&gt;SetCreatorProcess(pcr-&gt;GetProcessName());</span><br><span class="line">    else newHit1-&gt;SetCreatorProcess(&quot;##&quot;);//ok</span><br><span class="line">    //数据存储到HitCollection中</span><br><span class="line">    fTrackHitCollection-&gt;insert( newHit1 );</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="Initialize-G4HCofThisEvent-HCE"><a href="#Initialize-G4HCofThisEvent-HCE" class="headerlink" title="Initialize(G4HCofThisEvent* HCE)"></a>Initialize(G4HCofThisEvent* HCE)</h4><p>初始化HitsCollection，将数据存入HitsCollection前都需将空间初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Initialize() This method is invoked at the beginning of each event. The argument of this method is an object</span><br><span class="line">of the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,</span><br><span class="line">can be associated with the G4HCofThisEvent object in this method. The hit collections associated with</span><br><span class="line">the G4HCofThisEvent object during this method can be used for during the event processing</span><br><span class="line">digitization.</span><br></pre></td></tr></table></figure><p>example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">void PLANETOCOSSoilSD::Initialize(G4HCofThisEvent*HCE)</span><br><span class="line">&#123; static int HCID = -1;</span><br><span class="line">  </span><br><span class="line">  SoilEdepHitCollection = new PLANETOCOSEdepHitsCollection</span><br><span class="line">                                  (SensitiveDetectorName,collectionName[0]);</span><br><span class="line">  </span><br><span class="line">  HCID = GetCollectionID(0);</span><br><span class="line">  HCE-&gt;AddHitsCollection(HCID,SoilEdepHitCollection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">void B4cCalorimeterSD::Initialize(G4HCofThisEvent* hce)</span><br><span class="line">&#123;</span><br><span class="line">  // Create hits collection</span><br><span class="line">  fHitsCollection </span><br><span class="line">    = new B4cCalorHitsCollection(SensitiveDetectorName, collectionName[0]); </span><br><span class="line"></span><br><span class="line">  // Add this collection in hce</span><br><span class="line">  auto hcID </span><br><span class="line">    = G4SDManager::GetSDMpointer()-&gt;GetCollectionID(collectionName[0]);</span><br><span class="line">  hce-&gt;AddHitsCollection( hcID, fHitsCollection ); </span><br><span class="line"></span><br><span class="line">  // Create hits</span><br><span class="line">  // fNofCells for cells + one more for total sums </span><br><span class="line">  for (G4int i=0; i&lt;fNofCells+1; i++ ) &#123;</span><br><span class="line">    fHitsCollection-&gt;insert(new B4cCalorHit());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">void APNISTrackSD::Initialize(G4HCofThisEvent* HCE)</span><br><span class="line">&#123;</span><br><span class="line">  // static int HCID = -1;</span><br><span class="line">  fTrackHitCollection = new APNISTrackHitsCollection</span><br><span class="line">                      (SensitiveDetectorName,collectionName[0]); </span><br><span class="line">  // if(HCID&lt;0)</span><br><span class="line">  // &#123; HCID = GetCollectionID(0); &#125;</span><br><span class="line"></span><br><span class="line">  // get the collection name according to the object(name).</span><br><span class="line">  if(HCID&lt;0)&#123;</span><br><span class="line">    HCID = G4SDManager::GetSDMpointer()</span><br><span class="line">      -&gt;GetCollectionID(fTrackHitCollection);</span><br><span class="line">  &#125;</span><br><span class="line">  HCE-&gt;AddHitsCollection(HCID,fTrackHitCollection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>到这里，数据文件打开，写入；数据的传递与存储就介绍完了；RunAction中实现对数据文件的打开与关闭；EventAction中实现将数据写入到文件，当然，如果你采用SteppingAction方式也可以将数据写入文件（此文不再介绍）；Hit中实现给需要传递的数据分配内存空间；SensitiveDetector中实现将数据传递给Hit分配的内存空间；如果将这个问题表述为送快递的过程，那么RunAction就是告诉快递员有堆快递需要在什么时候开始送，什么时候完全送达；EventAction就是需要送的快递，Hit就是送一份快递，给快递员分配的货箱大小；SensitiveDetector就是告诉快递员将货物放到货箱里；</p><p><img src="/2018/09/17/G4DataReadOutMethods/Geant4SD_Hit.png" alt="SensitiveDetector+HitsCollection方式存储数据方法示意图"></p>]]></content>
    
    <summary type="html">
    
      This page introduce different methods to read out data from geant4 simulation; This page focus on StepAction and Hit with SD method.
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="geant4" scheme="https://Hubery-Lee.github.io/tags/geant4/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next theme Setting</title>
    <link href="https://hubery-lee.github.io/2018/09/14/Hexo-Next-theme-Setting/"/>
    <id>https://hubery-lee.github.io/2018/09/14/Hexo-Next-theme-Setting/</id>
    <published>2018-09-14T10:16:57.000Z</published>
    <updated>2020-04-27T18:29:15.534Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20=">referrence site1<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dfbmd6ZXFpL2FydGljbGUvZGV0YWlscy83Mzg2MzU0Mw==">referrence site2<i class="fa fa-external-link-alt"></i></span>  文章版权声明、文章加密访问、字数、时长、访问量 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xZmYyZmNiZGQxNTU=">another site<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNDU0NTM3L2FydGljbGUvZGV0YWlscy83OTQ4Mjg5Ng==">referrence site3<i class="fa fa-external-link-alt"></i></span> 侧边栏社交小图标设置、设置网站图标、评论功能插件配置<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hbm1hbmRvbmcxMjMvYXJ0aWNsZS9kZXRhaWxzLzgwNzM5MTI2">referrence site3<i class="fa fa-external-link-alt"></i></span> 添加评论功能<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNDU0NTM3L2FydGljbGUvZGV0YWlscy83OTQ4Mjg3OQ==">another site<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhbnVhZ2UvYXJ0aWNsZS9kZXRhaWxzLzc4OTkxNzk4">Somebody&#39;s blog Note<i class="fa fa-external-link-alt"></i></span> 站外分享 <span class="exturl" data-url="aHR0cHM6Ly9hc2RmdjE5MjkuZ2l0aHViLmlvL2NhdGVnb3JpZXMvR2l0QmxvZy8=">another site<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMwMjQyNjA5L2FydGljbGUvZGV0YWlscy81NDc5OTAxOQ==">referrence sit4<i class="fa fa-external-link-alt"></i></span> 修改主题配色</p><p>对于文章版权声明功能，可以直接去next主题下的<code>_config.yml</code>中开启，个人认为抱着开源开放特性，这个功能并不是很重要；</p><h2 id="设置版权信息"><a href="#设置版权信息" class="headerlink" title="设置版权信息"></a>设置版权信息</h2><p>1.在next主题下的next/_config.yml中设置copyright;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line">post_copyright:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  license: CC BY-NC-SA 3.0</span><br><span class="line">  license_url: <span class="comment">#https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure><p>在hexo站点配置文件_config.yml中设置url;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: http://lihui-snippets.cn/ <span class="comment">#https://github.com/Hubery-Lee</span></span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults: http://lihui-snippets.cn</span><br></pre></td></tr></table></figure><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><h3 id="该加密方法密码暴露在网页调试代码中"><a href="#该加密方法密码暴露在网页调试代码中" class="headerlink" title="该加密方法密码暴露在网页调试代码中"></a>该加密方法密码暴露在网页调试代码中</h3><ol><li>配置加密功能，打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置<img src="/2018/09/14/Hexo-Next-theme-Setting/.%5CHexo-Next-theme-Setting%5Cpassword.png" alt>插入这样一段代码：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'密码错误！'</span>);</span></span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>在scaffolds文件夹post.md文件中，加入<code>password:</code>,新建博客将有如下的形式文件头；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">description:</span><br><span class="line">password: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>2.设置给文章设置访问密码，经过以上的配置，<code>hexo new &quot;newblog&quot;</code>在<code>password: #密码</code>设置密码；也可以在以往的文章设置加密访问，只需在文章头中加入<code>password: #密码</code>即可；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The use of gnome-screenshot <span class="built_in">command</span></span><br><span class="line">date: 2018-09-11 16:12:50</span><br><span class="line">tags: [linux tool]</span><br><span class="line">categories: linux tool</span><br><span class="line">description: gnome-screenshot <span class="built_in">command</span></span><br><span class="line">password: pass</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>如，要访问这篇The use of gnome-screenshot command文章就需要输入密码pass;</p><h3 id="该加密方法加密效果更好"><a href="#该加密方法加密效果更好" class="headerlink" title="该加密方法加密效果更好"></a>该加密方法加密效果更好</h3><p>以上方法给文章加密，可以通过浏览器调试界面看到网页密码，故而考虑另外的文章加密方式，可以参考留言版中的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01pa2VDb2Rlci9oZXhvLWJsb2ctZW5jcnlwdC9ibG9iL21hc3Rlci9SZWFkTWUubWQ=">hexo-blog-encrypt<i class="fa fa-external-link-alt"></i></span>地址尝试另一种加密方式；注意，对next主题，安装<code>hexo-blog-encrypt2.0.*</code>;对加密文章的头文件写法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The use of gnome-screenshot <span class="built_in">command</span></span><br><span class="line">date: 2018-09-11 16:12:50</span><br><span class="line">tags: [linux tool]</span><br><span class="line">categories: linux tool</span><br><span class="line">abstract: gnome-screenshot <span class="built_in">command</span>;encrypt this article</span><br><span class="line">password: pass</span><br><span class="line">message: Please input password to <span class="built_in">read</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>其中，<code>abstract</code>后面写的是摘要，即是非加密文章头的<code>description</code>功能一样；<code>message</code>是加密文章所特有，指的是设置提示输入密码；<code>password</code>后面是设置的密码；<br>Bug在打开文章页面后，不再显示摘要，解决办法是再加一遍<code>description</code>,故而，完全正确的加密文章抬头应该这么写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The use of gnome-screenshot <span class="built_in">command</span></span><br><span class="line">date: 2018-09-11 16:12:50</span><br><span class="line">tags: [linux tool]</span><br><span class="line">categories: linux tool</span><br><span class="line">abstract: gnome-screenshot <span class="built_in">command</span>;encrypt this article</span><br><span class="line">password: pass</span><br><span class="line">message: Please input password to <span class="built_in">read</span></span><br><span class="line">description: gnome-screenshot <span class="built_in">command</span>;encrypt this article</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>经过测试，直接用<code>description</code>替代<code>abstract</code>也能达到这样的效果,并不存在Bug；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The use of gnome-screenshot <span class="built_in">command</span></span><br><span class="line">date: 2018-09-11 16:12:50</span><br><span class="line">tags: [linux tool]</span><br><span class="line">categories: linux tool</span><br><span class="line">description: gnome-screenshot <span class="built_in">command</span>;encrypt this article</span><br><span class="line">password: pass</span><br><span class="line">message: Please input password to <span class="built_in">read</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>Bug: 第二种加密方式，没法自动生成文章目录栏；</code></p><h2 id="访问量设置"><a href="#访问量设置" class="headerlink" title="访问量设置"></a>访问量设置</h2><p>采用busuanzi 和leancloud设置，在themes的文件夹下<code>_config.yml</code>中打开busuanzi配置，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="literal">true</span></span><br><span class="line">  site_uv_header: &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="literal">true</span></span><br><span class="line">  site_pv_header: &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="literal">false</span></span><br><span class="line">  page_pv_header: &lt;i class=<span class="string">"fa fa-file-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p>其中，<code>site_uv</code>指的是user visitors,<code>site_pv</code>指的是passager visitors; <code>&lt;i class=&quot;fa fa-file-eye&quot;&gt;&lt;/i&gt;</code>设置的是显示图标</p><p>对于文章的阅读量也可采用leancloud的应用来设置，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line">leancloud_visitors:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  app_id:  <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  app_key:   <span class="comment">#&lt;app_key&gt;</span></span><br></pre></td></tr></table></figure><p>相对于busuanzi统计计数方法，leancloud方法能通过leancloud账户管理，并且leancloud统计的阅读量能够在首页显示；busuanzi统计数据无法在首页显示；leancloud应用的配置可以参考这篇文章 <span class="exturl" data-url="aHR0cHM6Ly93d3cubWVpd2VuLmNvbS5jbi9zdWJqZWN0L3lzc3N3ZnR4Lmh0bWw=">参考文章链接<i class="fa fa-external-link-alt"></i></span></p><h2 id="评论功能设置"><a href="#评论功能设置" class="headerlink" title="评论功能设置"></a>评论功能设置</h2><p>评论功能采用leancloud valine应用，国内其他的友言、畅言和以及来必力都不能匿名评论，国外的gitalk,gitment以github用户授权评论，Hypercomments，Disqus等都被国内墙的厉害；只有国内leancloud应用具有匿名评论功能；在next主题下的<code>_config.yml</code>配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid:  ooozwlclX00aJabPvk1WTj7J-gzGzoHsz <span class="comment"># your leancloud application appid</span></span><br><span class="line">  appkey:  CnXrRUVdUdMXgEvGbdolWGYX <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  notify: <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  verify: <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: Just go go <span class="comment"># comment box placeholder</span></span><br><span class="line">  avatar: mm <span class="comment"># gravatar style</span></span><br><span class="line">  guest_info: nick,mail,link <span class="comment"># custom comment header</span></span><br><span class="line">  pageSize: 10 <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure><h2 id="站外分享功能"><a href="#站外分享功能" class="headerlink" title="站外分享功能"></a>站外分享功能</h2><p>具体的配置，可以参考文章开头列出的参考链接；在此，我只是用next主题模版，不作具体深入配置，工作中心放在作笔记上；在<code>_config.yml</code>中，打开百度分享选项即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Share</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    button | slide</span></span><br><span class="line"><span class="comment"># Warning: Baidu Share does not support https.</span></span><br><span class="line">baidushare:</span><br><span class="line">  <span class="built_in">type</span>: slide</span><br></pre></td></tr></table></figure><h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p>next主题的网站小图标采用FrontAwesome插件<span class="exturl" data-url="aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZnJvbT1pbw==">frontawesome icon site<i class="fa fa-external-link-alt"></i></span>;在实际应用中，在frontawesome网站搜索图标，在next主题的配置文件中用名字直接应用就行了，举例如下；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links.</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target permalink.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/Hubery-Lee || github</span><br><span class="line">  Runoob: https://www.runoob.com || cube</span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  icons_only: <span class="literal">false</span></span><br><span class="line">  transition: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>以上脚本中的<code>github,cube</code>即是在frontawesome上搜索到的图标名称；同样，links的图标也是这么配置的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line">links_icon: globe</span><br><span class="line">links_title: Index</span><br><span class="line"><span class="comment">#links_layout: block</span></span><br><span class="line">links_layout: inline</span><br><span class="line"></span><br><span class="line">links:</span><br><span class="line">  Geant4: http://geant4.web.cern.ch/</span><br><span class="line">  Root: https://root.cern.ch/</span><br></pre></td></tr></table></figure><p>其中，<code>globe</code>即是frontawesome搜索到的图标名称；</p><h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>若要对网站图标进行修改，只需将你要改的图标拷贝到<code>themes/next/source/images/</code>文件夹下，并修改<code>themes/next/_config.yml</code>文件中的，favicon后面对应的图片文件名即可；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For example, you put your favicons into `hexo-site/source/images` directory.</span></span><br><span class="line"><span class="comment"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span></span><br><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><h2 id="主题配色修改"><a href="#主题配色修改" class="headerlink" title="主题配色修改"></a>主题配色修改</h2><p>修改<code>themes/next/source/css/_variables/base.styl</code>文件；具体配色，暂时没有调整；另外<code>next/_config.yml</code>中有5种可直接用的配色方案，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">highlight_theme: night eighties</span><br></pre></td></tr></table></figure><h2 id="头部顶栏背景颜色或图片设置"><a href="#头部顶栏背景颜色或图片设置" class="headerlink" title="头部顶栏背景颜色或图片设置"></a>头部顶栏背景颜色或图片设置</h2><p>1.在themes/next/source/css/_schemes/Mist/_header.styl中以下代码中修改颜色（我采用Next-Mist主题）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: <span class="variable">$blue</span>-bright; &#125;</span><br></pre></td></tr></table></figure><p>2.也可改为背景图片，背景图片的添加如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: url(<span class="string">'../image/background.jpg'</span>); &#125;</span><br></pre></td></tr></table></figure><p>将你要作为背景的图片<code>background.jpg</code>放到<code>Hexo/source/images/</code>文件夹下；当然你也可以采用图片网址链接，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: url(<span class="string">'http://xx.xx.xx.com/hexo/image/header-backgroud.jpg'</span>); &#125;</span><br></pre></td></tr></table></figure><h2 id="页脚设置"><a href="#页脚设置" class="headerlink" title="页脚设置"></a>页脚设置</h2><p>在next/_config.yml中，修改<code>footer:</code>下面的配置，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">footer:   </span><br><span class="line">  <span class="comment">##这一段为页脚设置，footer英文意思即为页脚意思</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line">  <span class="comment">#since: 2015</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  icon: user</span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class="line">  copyright:</span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line">  powered: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">    version: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Any custom text can be defined here.</span></span><br><span class="line">  <span class="comment">#custom_text: Hosted by &lt;a target="_blank" href="https://pages.github.com"&gt;GitHub Pages&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文介绍如何配置Next主题；其中，以下功能待补充：文章版权声明、文章加密访问、字数、时长、访问量、侧边栏社交小图标设置、设置网站图标、评论功能插件配置、主题配色、站外分享、头部顶栏背景颜色或图片设置、页脚设置
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="hexo" scheme="https://Hubery-Lee.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>icon download site</title>
    <link href="https://hubery-lee.github.io/2018/09/14/icon-download-site/"/>
    <id>https://hubery-lee.github.io/2018/09/14/icon-download-site/</id>
    <published>2018-09-14T07:45:38.000Z</published>
    <updated>2020-05-05T01:18:12.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="icon-download-site"><a href="#icon-download-site" class="headerlink" title="icon download site"></a>icon download site</h2><p><span class="exturl" data-url="aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZnJvbT1pbw==">icon download site<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      icon download site
    
    </summary>
    
    
      <category term="素材" scheme="https://Hubery-Lee.github.io/categories/%E7%B4%A0%E6%9D%90/"/>
    
    
      <category term="hexo" scheme="https://Hubery-Lee.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Geant4 and Root Class Index</title>
    <link href="https://hubery-lee.github.io/2018/09/14/Geant4-and-Root-Class-Index/"/>
    <id>https://hubery-lee.github.io/2018/09/14/Geant4-and-Root-Class-Index/</id>
    <published>2018-09-14T07:10:01.000Z</published>
    <updated>2018-09-14T07:20:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Geant4-Class-Index"><a href="#Geant4-Class-Index" class="headerlink" title="Geant4 Class Index"></a>Geant4 Class Index</h2><p><span class="exturl" data-url="aHR0cDovL3d3dy5hcGMudW5pdi1wYXJpczcuZnIvfmZyYW5jby9nNGRveHk0LjEwL2h0bWwvYW5ub3RhdGVkLmh0bWw=">Geant4 Class Index<i class="fa fa-external-link-alt"></i></span></p><h2 id="Root-Class-Index"><a href="#Root-Class-Index" class="headerlink" title="Root Class Index"></a>Root Class Index</h2><p><span class="exturl" data-url="aHR0cHM6Ly9yb290LmNlcm4vZG9jL21hc3Rlci9tb2R1bGVzLmh0bWw=">Root Class Index<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      Geant4 and Root Class Index
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="geant4" scheme="https://Hubery-Lee.github.io/tags/geant4/"/>
    
      <category term="root" scheme="https://Hubery-Lee.github.io/tags/root/"/>
    
  </entry>
  
</feed>
