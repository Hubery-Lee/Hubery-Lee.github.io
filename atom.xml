<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hubery-Lee</title>
  
  <subtitle>蒹葭苍苍，白露为霜</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hubery-lee.github.io/"/>
  <updated>2020-07-12T16:33:40.593Z</updated>
  <id>https://hubery-lee.github.io/</id>
  
  <author>
    <name>李会</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django如何搭建web应用</title>
    <link href="https://hubery-lee.github.io/2020/07/12/Django%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAweb%E5%BA%94%E7%94%A8/"/>
    <id>https://hubery-lee.github.io/2020/07/12/Django%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAweb%E5%BA%94%E7%94%A8/</id>
    <published>2020-07-12T13:40:31.000Z</published>
    <updated>2020-07-12T16:33:40.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django如何搭建web应用"><a href="#Django如何搭建web应用" class="headerlink" title="Django如何搭建web应用"></a>Django如何搭建web应用</h1><h2 id="🛒Django的特点"><a href="#🛒Django的特点" class="headerlink" title="🛒Django的特点"></a>🛒Django的特点</h2><p>Django 最初被设计用于具有快速开发需求的新闻类站点，目的是要实现简单快捷的网站开发。以下内容简要介绍了如何使用 Django 实现一个数据库驱动的 Web 应用。</p><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL292ZXJ2aWV3Lw==">https://docs.djangoproject.com/zh-hans/3.0/intro/overview/<i class="fa fa-external-link-alt"></i></span></p><ul><li><p><strong><span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2JqZWN0LXJlbGF0aW9uYWxfbWFwcGluZw==">对象关系映射器<i class="fa fa-external-link-alt"></i></span></strong> </p><p>可以使用强大的 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9kYi9tb2RlbHMv">数据-模型语句<i class="fa fa-external-link-alt"></i></span> 来描述你的数据模型，这解决了数年以来在数据库模式中的难题。</p></li><li><p><strong>享用便捷的 API</strong></p><p>可以使用一套便捷而丰富的 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9kYi9xdWVyaWVzLw==">Python API<i class="fa fa-external-link-alt"></i></span> 访问你的数据。API是动态创建的，不需要代码生成</p></li><li><p><strong>动态管理接口</strong></p><p>当你的模型完成定义，Django 就会自动生成一个专业的生产级 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3JlZi9jb250cmliL2FkbWluLw==">管理接口<i class="fa fa-external-link-alt"></i></span> ——一个允许认证用户添加、更改和删除对象的 Web 站点。你只需在 admin 站点上注册你的模型即可：</p></li><li><p><strong>规划 URLs</strong></p><p>Django 推崇优美的 URL 设计，所以不要把诸如 <code>.php</code> 和 <code>.asp</code> 之类的冗余的后缀放到 URL 里。</p><p>需要创建一个叫做 URLconf 的 Python 模块。这是网站的目录，它包含了一张 URL 和 Python 回调函数之间的映射表。URLconf 也有利于将 Python 代码与 URL 进行解耦（译注：使各个模块分离，独立）</p></li><li><p><strong>编写视图</strong></p><p>视图函数的执行结果只可能有两种：返回一个包含请求页面元素的 <a href="https://docs.djangoproject.com/zh-hans/3.0/ref/request-response/#django.http.HttpResponse" target="_blank" rel="noopener"><code>HttpResponse</code></a> 对象，或者是抛出 <a href="https://docs.djangoproject.com/zh-hans/3.0/topics/http/views/#django.http.Http404" target="_blank" rel="noopener"><code>Http404</code></a> 这类异常。至于执行过程中的其它的动作则由你决定。</p></li><li><p><strong>设计模板</strong><br>Django 允许设置搜索模板路径，这样可以最小化模板之间的冗余。在 Django 设置中，你可以通过 DIRS 参数指定一个路径列表用于检索模板。如果第一个路径中不包含任何模板，就继续检查第二个，以此类推。</p></li></ul><h2 id="🎈项目框架"><a href="#🎈项目框架" class="headerlink" title="🎈项目框架"></a>🎈项目框架</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        asgi.py</span><br><span class="line">        wsgi.py</span><br></pre></td></tr></table></figure><p>这些目录和文件的用处是：</p><ul><li><p>最外层的 <code>mysite/</code> 根目录只是你项目的容器， 根目录名称对Django没有影响，你可以将它重命名为任何你喜欢的名称。</p></li><li><p><code>manage.py</code>: 一个让你用各种方式管理 Django 项目的命令行工具。你可以阅读 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3JlZi9kamFuZ28tYWRtaW4v">django-admin and manage.py<i class="fa fa-external-link-alt"></i></span> 获取所有 <code>manage.py</code> 的细节。</p></li><li><p>里面一层的 <code>mysite/</code> 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 <code>mysite.urls</code>).</p></li><li><p><code>mysite/__init__.py</code>：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。如果你是 Python 初学者，阅读官方文档中的 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy90dXRvcmlhbC9tb2R1bGVzLmh0bWwjdHV0LXBhY2thZ2Vz">更多关于包的知识<i class="fa fa-external-link-alt"></i></span>。</p></li><li><p><code>mysite/settings.py</code>：Django 项目的配置文件。如果你想知道这个文件是如何工作的，请查看 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9zZXR0aW5ncy8=">Django 配置<i class="fa fa-external-link-alt"></i></span> 了解细节。</p></li><li><p><code>mysite/urls.py</code>：Django 项目的 URL 声明，就像你网站的“目录”。阅读 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9odHRwL3VybHMv">URL调度器<i class="fa fa-external-link-alt"></i></span> 文档来获取更多关于 URL 的内容。</p></li><li><p><code>mysite/asgi.py</code>：作为你的项目的运行在 ASGI 兼容的Web服务器上的入口。阅读 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2hvd3RvL2RlcGxveW1lbnQvd3NnaS8=">如何使用 WSGI 进行部署<i class="fa fa-external-link-alt"></i></span> 了解更多细节。</p></li><li><p><code>mysite/wsgi.py</code>：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。阅读 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2hvd3RvL2RlcGxveW1lbnQvd3NnaS8=">如何使用 WSGI 进行部署<i class="fa fa-external-link-alt"></i></span> 了解更多细节。</p></li></ul><h2 id="🍎应用框架"><a href="#🍎应用框架" class="headerlink" title="🍎应用框架"></a>🍎应用框架</h2><h3 id="🍏应用与项目的关系"><a href="#🍏应用与项目的关系" class="headerlink" title="🍏应用与项目的关系"></a>🍏应用与项目的关系</h3><p><img src="/2020/07/12/Django如何搭建web应用/%E6%A0%B9%E7%9B%AE%E5%BD%95.png" alt></p><h3 id="🔱创建应用的框架"><a href="#🔱创建应用的框架" class="headerlink" title="🔱创建应用的框架"></a>🔱创建应用的框架</h3><p>创建一个 <code>polls</code> 目录，它的目录结构大致如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">polls/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure><p>这个目录结构包括了投票应用的全部内容。</p><h3 id="❗应用的调试模块"><a href="#❗应用的调试模块" class="headerlink" title="❗应用的调试模块"></a>❗应用的调试模块</h3><p><strong><code>为什么要进行调试？</code><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3R1dG9yaWFsMDUv">参考<i class="fa fa-external-link-alt"></i></span></strong></p><ul><li><h4 id="测试将节约你的时间"><a href="#测试将节约你的时间" class="headerlink" title="测试将节约你的时间"></a>测试将节约你的时间</h4><p>当某人写出错误的代码时，自动化测试还能帮助你定位错误代码的位置。</p></li><li><h4 id="测试不仅能发现错误，而且能预防错误"><a href="#测试不仅能发现错误，而且能预防错误" class="headerlink" title="测试不仅能发现错误，而且能预防错误"></a>测试不仅能发现错误，而且能预防错误</h4><p>测试就好像是从内部仔细检查你的代码，当有些地方出错时，这些地方将会变得很显眼——<em>就算你自己没有意识到那里写错了</em>。</p></li><li><h4 id="测试使你的代码更有吸引力"><a href="#测试使你的代码更有吸引力" class="headerlink" title="测试使你的代码更有吸引力"></a>测试使你的代码更有吸引力</h4><p>复杂的应用可能由团队维护。测试的存在保证了协作者不会不小心破坏了了你的代码（也保证你不会不小心弄坏他们的）。</p></li></ul><p><strong>unittest 和django.test   TestCase 类似</strong></p><h2 id="❓如何编写可重用程序"><a href="#❓如何编写可重用程序" class="headerlink" title="❓如何编写可重用程序"></a>❓如何编写可重用程序</h2><h3 id="☯可重用很重要"><a href="#☯可重用很重要" class="headerlink" title="☯可重用很重要"></a>☯可重用很重要</h3><p>可重用性是 Python 的根本。<span class="exturl" data-url="aHR0cHM6Ly9weXBpLnB5dGhvbi5vcmcvcHlwaQ==">The Python Package Index (PyPI)<i class="fa fa-external-link-alt"></i></span> 有许大量的包，都可被用在你自己的 Python 项目中。同样可以在 <span class="exturl" data-url="aHR0cHM6Ly9kamFuZ29wYWNrYWdlcy5vcmcv">Django Packages<i class="fa fa-external-link-alt"></i></span> 中查找已发布的可重用应用，也可将其引入到你的项目中。Django 本身也是一个 Python 包，也就是说你可以将已有的 Python 包或 Django 应用并入你的项目。你只需要编写属于你的那部分即可。</p><h3 id="🚀​你的项目和可复用应用¶"><a href="#🚀​你的项目和可复用应用¶" class="headerlink" title="🚀​你的项目和可复用应用¶"></a>🚀​你的项目和可复用应用<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3JldXNhYmxlLWFwcHMvI3lvdXItcHJvamVjdC1hbmQteW91ci1yZXVzYWJsZS1hcHA=">¶<i class="fa fa-external-link-alt"></i></span></h3><p>通过前面的教程，我们的工程应该看起来像这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        asgi.py</span><br><span class="line">        wsgi.py</span><br><span class="line">    polls/</span><br><span class="line">        __init__.py</span><br><span class="line">        admin.py</span><br><span class="line">        apps.py</span><br><span class="line">        migrations/</span><br><span class="line">            __init__.py</span><br><span class="line">            0001_initial.py</span><br><span class="line">        models.py</span><br><span class="line">        static/</span><br><span class="line">            polls/</span><br><span class="line">                images/</span><br><span class="line">                    background.gif</span><br><span class="line">                style.css</span><br><span class="line">        templates/</span><br><span class="line">            polls/</span><br><span class="line">                detail.html</span><br><span class="line">                index.html</span><br><span class="line">                results.html</span><br><span class="line">        tests.py</span><br><span class="line">        urls.py</span><br><span class="line">        views.py</span><br><span class="line">    templates/</span><br><span class="line">        admin/</span><br><span class="line">            base_site.html</span><br></pre></td></tr></table></figure><p>目录 <code>polls</code> 现在可以被拷贝至一个新的 Django 工程，且立刻被复用。不过现在还不是发布它的时候。为了这样做，我们需要打包这个应用，便于其他人安装它。</p><h3 id="💯打包你的应用"><a href="#💯打包你的应用" class="headerlink" title="💯打包你的应用"></a>💯打包你的应用</h3><p>目前，打包 Python 程序需要工具，有许多工具可以完成此项工作。在此教程中，我们将使用 <span class="exturl" data-url="aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L3NldHVwdG9vbHMv">setuptools<i class="fa fa-external-link-alt"></i></span> 来打包我们的程序。</p><p><strong><code>具体</code><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3JldXNhYmxlLWFwcHMv">参考链接<i class="fa fa-external-link-alt"></i></span></strong></p>]]></content>
    
    <summary type="html">
    
      利用python和django搭建web应用
    
    </summary>
    
    
      <category term="Web应用" scheme="https://Hubery-Lee.github.io/categories/Web%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="web" scheme="https://Hubery-Lee.github.io/tags/web/"/>
    
      <category term="django" scheme="https://Hubery-Lee.github.io/tags/django/"/>
    
      <category term="数据库sqlite" scheme="https://Hubery-Lee.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93sqlite/"/>
    
  </entry>
  
  <entry>
    <title>数据拟合</title>
    <link href="https://hubery-lee.github.io/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/"/>
    <id>https://hubery-lee.github.io/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/</id>
    <published>2020-06-06T16:34:13.000Z</published>
    <updated>2020-06-06T16:39:49.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据拟合"><a href="#数据拟合" class="headerlink" title="数据拟合"></a>数据拟合</h1><p>[toc]</p><h2 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1.问题描述"></a>1.问题描述</h2><p>手里有三组数据，用来分析探测器散射体材料厚度与探测器效率之间的关系。需要对三组数据进行画散点图，并进行拟合。拟合函数采用如下形式<br>$$<br>\eta = 1- exp(-\mu x)<br>$$<br>准备采用三种方法进行数据拟合，数据分析软件root、matlab和python.</p><h2 id="2-三种数据分析软件的数据拟合实现"><a href="#2-三种数据分析软件的数据拟合实现" class="headerlink" title="2.三种数据分析软件的数据拟合实现"></a>2.三种数据分析软件的数据拟合实现</h2><h3 id="2-1-matlab的数据拟合实现"><a href="#2-1-matlab的数据拟合实现" class="headerlink" title="2.1 matlab的数据拟合实现"></a>2.1 matlab的数据拟合实现</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 读入数据x,y</span></span><br><span class="line">x=<span class="number">5</span>:<span class="number">5</span>:<span class="number">100</span>;</span><br><span class="line">y1=textread('dataout1.txt'); //textread读入数据</span><br><span class="line">y2=textread(<span class="string">'dataout2.txt'</span>);</span><br><span class="line">y3=textread(<span class="string">'dataout3.txt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%% 自定义函数形式数据拟合</span></span><br><span class="line">myfittype = fittype(<span class="string">'1. - exp(a*x)'</span>,...</span><br><span class="line">    <span class="string">'dependent'</span>,&#123;<span class="string">'y'</span>&#125;,<span class="string">'independent'</span>,&#123;<span class="string">'x'</span>&#125;,...</span><br><span class="line">    <span class="string">'coefficients'</span>,&#123;<span class="string">'a'</span>&#125;);</span><br><span class="line"></span><br><span class="line">myfit1 = fit(x',y1,myfittype);</span><br><span class="line"><span class="built_in">plot</span>(myfit1,<span class="string">'r-'</span>,x,y1,<span class="string">'r*'</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">myfit2 = fit(x',y2,myfittype);</span><br><span class="line"><span class="built_in">plot</span>(myfit2,<span class="string">'b-'</span>,x,y2,<span class="string">'bo'</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">myfit3 = fit(x',y3,myfittype);</span><br><span class="line"><span class="built_in">plot</span>(myfit3,<span class="string">'g-'</span>,x,y3,<span class="string">'gx'</span>);</span><br></pre></td></tr></table></figure><p><img src="/2020/06/07/数据拟合/fittedData.png" alt="fittedData"></p><h3 id="2-2-root中的数据拟合实现"><a href="#2-2-root中的数据拟合实现" class="headerlink" title="2.2 root中的数据拟合实现"></a>2.2 root中的数据拟合实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参考 root tutorial/graphs/zdemo.C  /fit/FittingDemo.C</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"fstream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"vector"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstring"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NMAX=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">double</span> xx[NMAX],yy[NMAX];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReadData</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"> </span><br><span class="line">  ReadData(<span class="built_in">string</span> fname)</span><br><span class="line">  &#123;</span><br><span class="line">    filename=fname;</span><br><span class="line">  &#125;;</span><br><span class="line">  ~ReadData()&#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">GetData</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="built_in">string</span> filename;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadData::GetData</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function">ifstream <span class="title">input</span><span class="params">(filename)</span></span>;</span><br><span class="line">  <span class="keyword">double</span> a,b;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; x,y;</span><br><span class="line">  <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(!input.eof())</span><br><span class="line">    &#123;</span><br><span class="line">      i++;</span><br><span class="line">      a=i*<span class="number">5</span>;</span><br><span class="line">      input&gt;&gt;b;</span><br><span class="line">      x.push_back(a);</span><br><span class="line">      y.push_back(<span class="number">1.0</span>-(b/<span class="number">1.e6</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  input.<span class="built_in">close</span>();</span><br><span class="line">  i=i<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i&amp;&amp;j&lt;NMAX;j++)</span><br><span class="line">    &#123;</span><br><span class="line">      xx[j]=x[j],yy[j]=y[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">ReadData <span class="title">a1</span><span class="params">(<span class="string">"./EJ200-100/data.txt"</span>)</span></span>;</span><br><span class="line">  a1.GetData();</span><br><span class="line"></span><br><span class="line">  TGraph *g1 =<span class="keyword">new</span> TGraph(NMAX,xx,yy);</span><br><span class="line">  g1-&gt;SetLineColor(<span class="number">38</span>);</span><br><span class="line">  g1-&gt;SetMarkerColor(kBlue);</span><br><span class="line">  g1-&gt;SetMarkerStyle(<span class="number">21</span>);</span><br><span class="line">  g1-&gt;SetMarkerSize(<span class="number">1.1</span>);</span><br><span class="line">  g1-&gt;Draw(<span class="string">"AP"</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="function">ReadData <span class="title">a2</span><span class="params">(<span class="string">"./EJ200-140/data.txt"</span>)</span></span>;</span><br><span class="line">  a2.GetData();</span><br><span class="line"></span><br><span class="line">  TGraph *gr2 = <span class="keyword">new</span> TGraph(NMAX,xx,yy);</span><br><span class="line">  gr2-&gt;SetLineColor(<span class="number">38</span>);</span><br><span class="line">  gr2-&gt;SetMarkerColor(kRed);</span><br><span class="line">  gr2-&gt;SetMarkerStyle(<span class="number">29</span>);</span><br><span class="line">  gr2-&gt;SetMarkerSize(<span class="number">1.5</span>);</span><br><span class="line">  gr2-&gt;Draw(<span class="string">"P"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="function">ReadData <span class="title">a3</span><span class="params">(<span class="string">"./EJ200-180/data.txt"</span>)</span></span>;</span><br><span class="line">  a3.GetData();</span><br><span class="line"></span><br><span class="line">  TGraph *gr3 = <span class="keyword">new</span> TGraph(NMAX,xx,yy);</span><br><span class="line"></span><br><span class="line">  gr3-&gt;SetLineColor(<span class="number">38</span>);</span><br><span class="line">  gr3-&gt;SetMarkerColor(<span class="number">6</span>);</span><br><span class="line">  gr3-&gt;SetMarkerStyle(<span class="number">8</span>);</span><br><span class="line">  gr3-&gt;SetMarkerSize(<span class="number">1.1</span>);</span><br><span class="line">  gr3-&gt;Draw(<span class="string">"P"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//////////////////</span></span><br><span class="line">  <span class="comment">////</span></span><br><span class="line">  <span class="comment">//      elta = 1-exp(a*x) //拟合函数形式</span></span><br><span class="line"></span><br><span class="line">  TF1 *fun =<span class="keyword">new</span> TF1(<span class="string">"#elta = 1-exp(A*x)"</span>,<span class="string">"1.-exp([0]*x)"</span>,<span class="number">0</span>,<span class="number">100</span>);</span><br><span class="line">  fun-&gt;SetLineColor(kBlue);fun-&gt;SetLineStyle(<span class="number">2</span>);</span><br><span class="line">  g1-&gt;Fit(fun);</span><br><span class="line"></span><br><span class="line">  fun-&gt;SetLineColor(kRed);fun-&gt;SetLineStyle(<span class="number">2</span>);</span><br><span class="line">  gr2-&gt;Fit(fun);</span><br><span class="line"></span><br><span class="line">  fun-&gt;SetLineColor(<span class="number">6</span>);fun-&gt;SetLineStyle(<span class="number">2</span>);</span><br><span class="line">  gr3-&gt;Fit(fun);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//////////////////</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">//  legend</span></span><br><span class="line">  TLegend *lg=<span class="keyword">new</span> TLegend(<span class="number">0.6</span>,<span class="number">0.65</span>,<span class="number">0.88</span>,<span class="number">0.85</span>);</span><br><span class="line">  lg-&gt;SetTextFont(<span class="number">62</span>);</span><br><span class="line">  lg-&gt;SetTextAlign(<span class="number">12</span>);</span><br><span class="line">  lg-&gt;SetTextSize(<span class="number">0.04</span>);</span><br><span class="line">  lg-&gt;AddEntry(g1,<span class="string">"100keV"</span>,<span class="string">"p"</span>);</span><br><span class="line">  lg-&gt;AddEntry(gr2,<span class="string">"140keV"</span>,<span class="string">"p"</span>);</span><br><span class="line">  lg-&gt;AddEntry(gr3,<span class="string">"180keV"</span>,<span class="string">"p"</span>);</span><br><span class="line">  lg-&gt;AddEntry(fun,<span class="string">" #eta = 1-exp(#mu *x)"</span>,<span class="string">"l"</span>);</span><br><span class="line">  lg-&gt;Draw();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/06/07/数据拟合/c1.png" alt="c1"></p><h3 id="2-3-python中的数据拟合实现"><a href="#2-3-python中的数据拟合实现" class="headerlink" title="2.3 python中的数据拟合实现"></a>2.3 python中的数据拟合实现</h3><p>python 中做数据分析常用的几个包<code>matplotlib,numpy,scipy,pandas</code></p><ul><li>scipy中的curve_fit函数</li><li>lmfit中的fit函数</li></ul><p>下面从这两种包来拟合这两组数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/6/6 17:52</span></span><br><span class="line"><span class="comment"># @Author  : Hubery-Lee  </span></span><br><span class="line"><span class="comment"># @Email   : hrbeulh@126.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##   case 1: curve_fit</span></span><br><span class="line"><span class="comment">##   case 2: lmfit</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># Header</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> curve_fit</span><br><span class="line"><span class="keyword">from</span> lmfit <span class="keyword">import</span> Model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(x, a)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.</span> - np.exp(a * x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read data from text</span></span><br><span class="line">x = np.linspace(<span class="number">5</span>, <span class="number">100</span>, <span class="number">20</span>)</span><br><span class="line">y1 = np.loadtxt(<span class="string">'dataout1.txt'</span>)</span><br><span class="line">y2 = np.loadtxt(<span class="string">'dataout2.txt'</span>)</span><br><span class="line">y3 = np.loadtxt(<span class="string">'dataout3.txt'</span>)</span><br><span class="line"><span class="comment">#  plot data</span></span><br><span class="line">plt.plot(x, y1, <span class="string">'bo'</span>, label=<span class="string">'100 keV'</span>)</span><br><span class="line">plt.plot(x, y2, <span class="string">'r*'</span>, label=<span class="string">'140 keV'</span>)</span><br><span class="line">plt.plot(x, y3, <span class="string">'gx'</span>, label=<span class="string">'180 keV'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## case 1:</span></span><br><span class="line"><span class="comment">## https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.curve_fit.html</span></span><br><span class="line"><span class="comment"># Fit for the parameters a of the function func:</span></span><br><span class="line">popt1, pcov1 = curve_fit(func, x, y1)</span><br><span class="line"><span class="comment"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class="line">plt.plot(x, func(x, *popt1), <span class="string">'b-'</span>,</span><br><span class="line">         label=<span class="string">'100 keV fit: a=%5.3f'</span> % tuple(popt1))</span><br><span class="line"></span><br><span class="line">popt2, pcov2 = curve_fit(func, x, y2)</span><br><span class="line"><span class="comment"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class="line">plt.plot(x, func(x, *popt2), <span class="string">'r-'</span>,</span><br><span class="line">         label=<span class="string">'140 keV fit: a=%5.3f'</span> % tuple(popt2))</span><br><span class="line"></span><br><span class="line">popt3, pcov3 = curve_fit(func, x, y3)</span><br><span class="line"><span class="comment"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class="line">plt.plot(x, func(x, *popt3), <span class="string">'g-'</span>,</span><br><span class="line">         label=<span class="string">'180 keV fit: a=%5.3f'</span> % tuple(popt3))</span><br><span class="line"></span><br><span class="line"><span class="comment"># # In the case of parameters a need be constrainted</span></span><br><span class="line"><span class="comment"># # Constrain the optimization to the region of</span></span><br><span class="line"><span class="comment"># # 0 &lt;= a &lt;= 3, 0 &lt;= b &lt;= 1 and 0 &lt;= c &lt;= 0.5</span></span><br><span class="line"><span class="comment"># popt, pcov = curve_fit(func, xdata, ydata, bounds=(0, [3., 1., 0.5]))</span></span><br><span class="line"><span class="comment"># popt  # output: array([ 2.43708906, 1. , 0.35015434])</span></span><br><span class="line"><span class="comment"># plt.plot(xdata, func(xdata, *popt), 'g--',</span></span><br><span class="line"><span class="comment">#          label='fit: a=%5.3f, b=%5.3f, c=%5.3f' % tuple(popt))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## case 2:</span></span><br><span class="line"><span class="comment">## https://lmfit.github.io/lmfit-py/model.html</span></span><br><span class="line"><span class="comment"># Fitting</span></span><br><span class="line">gmodel = Model(func)</span><br><span class="line">result = gmodel.fit(y1, x=x, a=<span class="number">-0.02</span>)  <span class="comment"># Fit from initial values (5,5,1)</span></span><br><span class="line">print(result.fit_report())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot</span></span><br><span class="line"><span class="comment">#plt.plot(x, y1, 'bo', label='raw data')</span></span><br><span class="line"><span class="comment">#plt.plot(x, result.init_fit, 'b--', label='init_fit')</span></span><br><span class="line"><span class="comment">#plt.plot(x, result.best_fit, 'k--', label='best_fit')</span></span><br><span class="line">plt.plot(x, result.best_fit, <span class="string">'k--'</span>, label=<span class="string">'100 keV lmfit'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># draw option</span></span><br><span class="line"><span class="comment"># Labels</span></span><br><span class="line">plt.title(<span class="string">r'Fitting Function $\eta = 1.0-exp(a*x)$'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'x/mm'</span>)</span><br><span class="line">plt.ylabel(<span class="string">r'$\eta$'</span>)  <span class="comment"># 公式的添加 latex风格 https://matplotlib.org/tutorials/text/mathtext.html</span></span><br><span class="line">plt.legend()</span><br><span class="line">leg = plt.legend()  <span class="comment"># remove the frame of Legend, personal choice</span></span><br><span class="line">leg.get_frame().set_linewidth(<span class="number">0.0</span>)  <span class="comment"># remove the frame of Legend, personal choice</span></span><br><span class="line"><span class="comment"># leg.get_frame().set_edgecolor('b')  # change the color of Legend frame</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Export figurey</span></span><br><span class="line"><span class="comment"># plt.savefig('fit1.eps', format='eps', dpi=1000)</span></span><br><span class="line"><span class="comment"># plt.savefig('fit1.pdf', format='pdf', dpi=1000, figsize=(8, 6), facecolor='w', edgecolor='k')</span></span><br><span class="line">plt.savefig(<span class="string">'myfit.jpg'</span>, format=<span class="string">'jpg'</span>, dpi=<span class="number">1000</span>, figsize=(<span class="number">8</span>, <span class="number">6</span>), facecolor=<span class="string">'w'</span>, edgecolor=<span class="string">'k'</span>)</span><br></pre></td></tr></table></figure><p><img src="/2020/06/07/数据拟合/myfit.jpg" alt="myfit"></p>]]></content>
    
    <summary type="html">
    
      介绍matlab,root,python如何使用进行自定义函数进行数据拟合
    
    </summary>
    
    
      <category term="数据拟合" scheme="https://Hubery-Lee.github.io/categories/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/"/>
    
    
      <category term="root" scheme="https://Hubery-Lee.github.io/tags/root/"/>
    
      <category term="matlab" scheme="https://Hubery-Lee.github.io/tags/matlab/"/>
    
      <category term="python" scheme="https://Hubery-Lee.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Geant4中如何添加复杂组件</title>
    <link href="https://hubery-lee.github.io/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/"/>
    <id>https://hubery-lee.github.io/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/</id>
    <published>2020-06-05T00:12:15.000Z</published>
    <updated>2020-06-07T14:38:01.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Geant4中如何添加复杂组件"><a href="#Geant4中如何添加复杂组件" class="headerlink" title="Geant4中如何添加复杂组件"></a>Geant4中如何添加复杂组件</h1><h2 id="1-bool-运算"><a href="#1-bool-运算" class="headerlink" title="1. bool 运算"></a>1. bool 运算</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"G4SubtractionSolid.hh"</span></span></span><br><span class="line"></span><br><span class="line"> G4SubtractionSolid*Tsubtraction = <span class="keyword">new</span> G4SubtractionSolid(<span class="string">"PipeWall-Strips"</span>,solidPWall,solidStrips,rotz0,G4ThreeVector());</span><br></pre></td></tr></table></figure><p>用例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//=====================================</span></span><br><span class="line"> <span class="comment">// 圆柱形准直器</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="keyword">double</span> I_R1=<span class="number">90.0</span>*mm;<span class="comment">//,I_R2=100.0*mm;</span></span><br><span class="line"> <span class="comment">//double O_R1=97.1*mm,O_R2=107.1*mm;</span></span><br><span class="line"> <span class="keyword">double</span> O_R1=<span class="number">140.0</span>*mm;<span class="comment">//,O_R2=135.4*mm;</span></span><br><span class="line"> <span class="keyword">double</span> C_z =<span class="number">150.0</span>*mm;</span><br><span class="line"></span><br><span class="line"> pSPhi= <span class="number">0.</span>*degree;</span><br><span class="line"> pDPhi= <span class="number">360.</span>*degree;</span><br><span class="line"></span><br><span class="line"> G4Tubs* solidCol =   </span><br><span class="line">   <span class="keyword">new</span> G4Tubs(<span class="string">"Collimator"</span>,     I_R1, O_R1,C_z,pSPhi,pDPhi);     <span class="comment">//its size</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">//====================================</span></span><br><span class="line"> <span class="comment">// void in collimator</span></span><br><span class="line"> pSPhi = <span class="number">0.</span>;</span><br><span class="line"> pDPhi = <span class="number">2.0</span>*pi/(<span class="number">90.0</span>*pi);</span><br><span class="line"></span><br><span class="line"> G4Tubs* solidVoidC = <span class="keyword">new</span> G4Tubs(<span class="string">"VCollimator"</span>,I_R1<span class="number">-0.1</span>*mm, O_R1+<span class="number">0.1</span>*mm,C_z+<span class="number">0.1</span>*mm,pSPhi,pDPhi);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// G4SubtractionSolid* subtraction[94];</span></span><br><span class="line"> G4SubtractionSolid* subtraction[<span class="number">141</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">141</span>;i++)&#123;</span><br><span class="line">   G4RotationMatrix* rotz= <span class="keyword">new</span> G4RotationMatrix;</span><br><span class="line">   rotz-&gt;rotateZ(<span class="number">-2</span>*i*<span class="number">2.0</span>*pi/(<span class="number">90.0</span>*pi));</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">     subtraction[<span class="number">0</span>]=</span><br><span class="line"> <span class="keyword">new</span> G4SubtractionSolid(<span class="string">"Collimator-Void"</span>, solidCol, solidVoidC,rotz,G4ThreeVector(<span class="number">0.0</span>*mm,<span class="number">0.0</span>*mm,<span class="number">10.0</span>*mm));</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">     subtraction[i<span class="number">-1</span>]=</span><br><span class="line"> <span class="keyword">new</span> G4SubtractionSolid(<span class="string">"Collimator-Void"</span>, subtraction[i<span class="number">-2</span>], solidVoidC,rotz,G4ThreeVector(<span class="number">0.0</span>*mm,<span class="number">0.0</span>*mm,<span class="number">10.0</span>*mm));</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> G4LogicalVolume* logicCol =                         </span><br><span class="line">   <span class="keyword">new</span> G4LogicalVolume(subtraction[<span class="number">140</span>],          <span class="comment">//its solid</span></span><br><span class="line">                       col_mat,           <span class="comment">//its material</span></span><br><span class="line">                       <span class="string">"Collimator"</span>);            <span class="comment">//its name</span></span><br><span class="line"></span><br><span class="line"> G4PVPlacement* physCol = </span><br><span class="line">   <span class="keyword">new</span> G4PVPlacement(<span class="number">0</span>,                     <span class="comment">//no rotation</span></span><br><span class="line">                     G4ThreeVector(<span class="number">0.</span>*mm,<span class="number">0.</span>*mm,<span class="number">160.0</span>*mm),<span class="comment">//65.0*mm),       //at (0,0,0)</span></span><br><span class="line">                     logicCol,              <span class="comment">//its logical volume</span></span><br><span class="line">                     <span class="string">"Collimator"</span>,                 <span class="comment">//its name</span></span><br><span class="line">                     logicWorld,            <span class="comment">//its mother  volume</span></span><br><span class="line">                     <span class="literal">false</span>,                 <span class="comment">//no boolean operation</span></span><br><span class="line">                     <span class="number">0</span>,                     <span class="comment">//copy number</span></span><br><span class="line">                     checkOverlaps);        <span class="comment">//overlaps checking</span></span><br></pre></td></tr></table></figure><p>建出来的结果：圆柱形准直器</p><p><img src="/2020/06/05/Geant4中如何添加复杂组件/11-37-25.png" alt></p><h2 id="2-Assemble组件"><a href="#2-Assemble组件" class="headerlink" title="2. Assemble组件"></a>2. Assemble组件</h2><p>闪烁体pixel阵列构建代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//*************************************************     </span></span><br><span class="line"> <span class="comment">// AssembleNBD World</span></span><br><span class="line"> <span class="comment">//*************************************************</span></span><br><span class="line"> G4double sizeXY = <span class="number">100.77</span>*mm+<span class="number">2.</span>*mm;</span><br><span class="line"> G4double sizeZ  = <span class="number">100.14</span>*mm;</span><br><span class="line"></span><br><span class="line"> G4Box* solidAssembleNBD =   </span><br><span class="line">   <span class="keyword">new</span> G4Box(<span class="string">"AssembleNBD"</span>,     <span class="number">0.5</span>*sizeXY, <span class="number">0.5</span>*sizeXY, <span class="number">0.5</span>*sizeZ);     <span class="comment">//its size</span></span><br><span class="line"> </span><br><span class="line"> logicAssembleNBD =                         </span><br><span class="line">   <span class="keyword">new</span> G4LogicalVolume(solidAssembleNBD,          <span class="comment">//its solid</span></span><br><span class="line">                       world_mat,           <span class="comment">//its material</span></span><br><span class="line">                       <span class="string">"AssembleNBD"</span>);            <span class="comment">//its name</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">//***************</span></span><br><span class="line"> <span class="comment">//test for one NBD</span></span><br><span class="line"></span><br><span class="line"> physAssembleNBD = </span><br><span class="line">   <span class="keyword">new</span> G4PVPlacement(<span class="number">0</span>,                     <span class="comment">//no rotation</span></span><br><span class="line">                     G4ThreeVector(<span class="number">0.0</span>*cm,<span class="number">0.0</span>*cm,<span class="number">-85.007</span>*cm),       <span class="comment">//at (0,0,0)</span></span><br><span class="line">                     logicAssembleNBD,      <span class="comment">//its logical volume</span></span><br><span class="line">                     <span class="string">"physAssembleNBD"</span>,         <span class="comment">//its name</span></span><br><span class="line">                     expHall_logV,          <span class="comment">//its mother  volume</span></span><br><span class="line">                     <span class="literal">false</span>,                 <span class="comment">//no boolean operation</span></span><br><span class="line">                     <span class="number">0</span>,                     <span class="comment">//copy number</span></span><br><span class="line">       checkOverlaps);        <span class="comment">//overlaps checking</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//*************************************************</span></span><br><span class="line"> <span class="comment">// EJ200 scintillator</span></span><br><span class="line"> <span class="comment">//*************************************************</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">//      ------------- Volumes --------------</span></span><br><span class="line"> <span class="comment">//  10X10X50 mm3 EJ-200/BC408</span></span><br><span class="line"> <span class="comment">//  spacing is 65 um between two EJ-200 with reflector</span></span><br><span class="line"> <span class="comment">//  </span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//  </span></span><br><span class="line"> <span class="comment">// EJ200 reflector box</span></span><br><span class="line"> <span class="comment">//----------------------------------</span></span><br><span class="line"> <span class="comment">// 100.770X100.770X50.070 mm3</span></span><br><span class="line"> <span class="comment">// 10X10+0.07*11; 50 + 0.07</span></span><br><span class="line"></span><br><span class="line"> G4double ej200_x=<span class="number">10</span>*mm, ej200_y=<span class="number">10</span>*mm, ej200_z=<span class="number">50</span>*mm; <span class="comment">//full size of ej200</span></span><br><span class="line"> G4double rowNb_ej200=<span class="number">10</span>, colNb_ej200=<span class="number">10</span>; <span class="comment">// 10X10 ej200</span></span><br><span class="line"> G4double gap=<span class="number">0.070</span>*mm; <span class="comment">// gap between two ej200</span></span><br><span class="line"></span><br><span class="line"> G4double EJ200_Box_x = ej200_x*rowNb_ej200/<span class="number">2</span>+gap*(rowNb_ej200+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line"> G4double EJ200_Box_y = ej200_y*colNb_ej200/<span class="number">2</span>+gap*(colNb_ej200+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line"> G4double EJ200_Box_z = (ej200_z+gap)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//  mother volume of 10 X 10  EJ200  </span></span><br><span class="line"> G4double Assemble_x = EJ200_Box_x; </span><br><span class="line"> G4double Assemble_y = EJ200_Box_y;</span><br><span class="line"> G4double Assemble_z = EJ200_Box_z;</span><br><span class="line"></span><br><span class="line"> G4Box* Assemble_solidV = <span class="keyword">new</span> G4Box(<span class="string">"Assemble_solidV"</span>, </span><br><span class="line"> Assemble_x, Assemble_y, Assemble_z);</span><br><span class="line"> Assemble_logV  = <span class="keyword">new</span> G4LogicalVolume(Assemble_solidV, ESR, <span class="string">"Assemble_logV"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">G4double Assemble_px = <span class="number">0</span>;  <span class="comment">// put it at (0,0, EJ200_Box_z)</span></span><br><span class="line"> G4double Assemble_py = <span class="number">0</span>;</span><br><span class="line"> G4double Assemble_pz = EJ200_Box_z;  </span><br><span class="line"> Assemble_physV = <span class="keyword">new</span> G4PVPlacement(<span class="number">0</span>,</span><br><span class="line">                            G4ThreeVector(Assemble_px, Assemble_py, Assemble_pz),</span><br><span class="line">                            Assemble_logV,</span><br><span class="line">                            <span class="string">"Assemble_physV"</span>,</span><br><span class="line">                            logicAssembleNBD,</span><br><span class="line">                            <span class="literal">false</span>,</span><br><span class="line">                            <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// each EJ-200</span></span><br><span class="line"> <span class="comment">//-------------------------------</span></span><br><span class="line"></span><br><span class="line"> G4double EJ200_x = ej200_x/<span class="number">2</span>;  <span class="comment">// half size</span></span><br><span class="line"> G4double EJ200_y = ej200_y/<span class="number">2</span>;</span><br><span class="line"> G4double EJ200_z = ej200_z/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"> G4Box* EJ200_solidV = <span class="keyword">new</span> G4Box(<span class="string">"EJ200_solidV"</span>, EJ200_x, EJ200_y, EJ200_z);</span><br><span class="line"> EJ200_logV = <span class="keyword">new</span> G4LogicalVolume(EJ200_solidV, EJ200, <span class="string">"EJ200_logV"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">// create Assembly of EJ200 array Box</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> G4AssemblyVolume* assemblyEJ200 = <span class="keyword">new</span> G4AssemblyVolume();</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Rotation and translation of the logical volume</span></span><br><span class="line"> G4RotationMatrix rotationMatrixEJ200; </span><br><span class="line"> <span class="function">G4ThreeVector <span class="title">positionEJ200</span><span class="params">(<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>)</span></span>;</span><br><span class="line"> G4Transform3D transform3DEJ200;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Fill the assembly by EJ200</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> G4int max_x = rowNb_ej200; </span><br><span class="line"> G4int max_y = colNb_ej200;</span><br><span class="line"> <span class="keyword">for</span>(G4int x_row_num = <span class="number">0</span>; x_row_num &lt; max_x; x_row_num++ )&#123;</span><br><span class="line">   <span class="keyword">for</span>(G4int y_col_num = <span class="number">0</span>; y_col_num &lt; max_y; y_col_num++ )&#123;  </span><br><span class="line">     positionEJ200.setX( -EJ200_Box_x + (x_row_num+<span class="number">1</span>)*gap + (<span class="number">2</span>*x_row_num+<span class="number">1</span>)*EJ200_x );</span><br><span class="line">     positionEJ200.setY( -EJ200_Box_y + (y_col_num+<span class="number">1</span>)*gap + (<span class="number">2</span>*y_col_num+<span class="number">1</span>)*EJ200_y );</span><br><span class="line">     positionEJ200.setZ( <span class="number">0.0</span>*mm );</span><br><span class="line">     transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);</span><br><span class="line">     assemblyEJ200-&gt;AddPlacedVolume(EJ200_logV, transform3DEJ200);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="comment">// Place the Assembly</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> positionEJ200.setX(<span class="number">0.0</span> ); positionEJ200.setY(<span class="number">0.0</span> ); positionEJ200.setZ(<span class="number">-0.5</span>*gap);</span><br><span class="line"> transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);</span><br><span class="line"> assemblyEJ200-&gt;MakeImprint(Assemble_logV, transform3DEJ200);</span><br></pre></td></tr></table></figure><p>闪烁体探测器芯块阵列：</p><p><img src="/2020/06/05/Geant4中如何添加复杂组件/15-21-17.png" alt></p><h2 id="3-Parameterised"><a href="#3-Parameterised" class="headerlink" title="3. Parameterised"></a>3. Parameterised</h2><p>光导构建代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"G4PVParameterised.hh"</span> <span class="comment">//得包含G4PVParameterised头文件</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Light Guide top mother volume</span></span><br><span class="line">  <span class="comment">//-------------------------------------</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// The defination of light guide</span></span><br><span class="line">  <span class="comment">// define mother volume of light guide</span></span><br><span class="line">  <span class="comment">// half size of volume</span></span><br><span class="line">  G4double LightGuide_x = ej200_x*rowNb_ej200/<span class="number">2</span>+gap*(rowNb_ej200+<span class="number">1</span>)/<span class="number">2</span>; </span><br><span class="line">  G4double LightGuide_y = ej200_y*colNb_ej200/<span class="number">2</span>+gap*(colNb_ej200+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">  G4double LightGuide_z = <span class="number">3</span>*mm/<span class="number">2</span>;</span><br><span class="line">  gap = <span class="number">0.07</span>*mm; <span class="comment">// gap between the boxes which is used to put</span></span><br><span class="line">            <span class="comment">// the reflector </span></span><br><span class="line">  G4Box* LightGuide_top_motherV = <span class="keyword">new</span> G4Box(<span class="string">"LightGuide_top_motherV"</span>,</span><br><span class="line">                                LightGuide_x, LightGuide_y, LightGuide_z);</span><br><span class="line">  LightGuide_top_mother_logV = <span class="keyword">new</span> G4LogicalVolume(LightGuide_top_motherV,</span><br><span class="line">                                ESR, <span class="comment">// ESR reflector</span></span><br><span class="line">                                <span class="string">"LightGuide_top_mother_logV"</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  LightGuide_top_mother_physV = <span class="keyword">new</span> G4PVPlacement(<span class="number">0</span>,</span><br><span class="line">        G4ThreeVector(<span class="number">0</span>, <span class="number">0</span>, (grease_pz-grease_z)-LightGuide_z),</span><br><span class="line">        LightGuide_top_mother_logV,</span><br><span class="line">        <span class="string">"LightGuide_top_mother_physV"</span>,</span><br><span class="line">        logicAssembleNBD,</span><br><span class="line">        <span class="literal">false</span>,</span><br><span class="line">        <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Light Guide top </span></span><br><span class="line">  <span class="comment">//-------------------------------------------</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// top part of light guide</span></span><br><span class="line">  <span class="comment">// it consists of 5X5 boxes with same height</span></span><br><span class="line">  <span class="comment">// TopX =&gt; x of each box in the top part, </span></span><br><span class="line">  <span class="comment">// TopY =&gt; y of each box in the top part,</span></span><br><span class="line">  <span class="comment">// TopHeight =&gt; height of each box, they are same.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// here, the value is the full size of box</span></span><br><span class="line">  G4double TopX[<span class="number">5</span>] = &#123;<span class="number">12.3</span>*mm, <span class="number">22.3</span>*mm, <span class="number">31.15</span>*mm, <span class="number">22.3</span>*mm, <span class="number">12.3</span>*mm&#125;;</span><br><span class="line">  G4double TopY[<span class="number">5</span>] = &#123;<span class="number">12.3</span>*mm, <span class="number">22.3</span>*mm, <span class="number">31.15</span>*mm, <span class="number">22.3</span>*mm, <span class="number">12.3</span>*mm&#125;;</span><br><span class="line">  G4double TopHeight = <span class="number">3.0</span>*mm;</span><br><span class="line"></span><br><span class="line">  G4int rowNb = <span class="number">5</span>;</span><br><span class="line">  G4int colNb = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">  G4double TopGap = gap; <span class="comment">// ESR materials</span></span><br><span class="line">  G4double x0, y0; <span class="comment">// coordinate of the left bottom corner</span></span><br><span class="line">  x0 = -LightGuide_x;</span><br><span class="line">  y0 = -LightGuide_y;</span><br><span class="line">  <span class="comment">// left bottom conner of X-Y plane (-A, -A)</span></span><br><span class="line">  <span class="comment">// this box is a seed of other boxes</span></span><br><span class="line">  G4Box* LightGuide_top_solidV = <span class="keyword">new</span> G4Box(<span class="string">"LightGuide_top_solidV"</span>,</span><br><span class="line">           TopX[<span class="number">0</span>]/<span class="number">2</span>, TopY[<span class="number">0</span>]/<span class="number">2</span>, TopHeight/<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  LightGuide_top_logV = <span class="keyword">new</span> G4LogicalVolume(LightGuide_top_solidV,</span><br><span class="line">                                        BC800, <span class="comment">// light guide material</span></span><br><span class="line">                                        <span class="string">"LightGuide_top_logV"</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// all the coordinates are relative to the coordinate system of LightGuide_mother_logV </span></span><br><span class="line">  G4double LightGuide_top_px = x0;</span><br><span class="line">  G4double LightGuide_top_py = y0;</span><br><span class="line">  G4double LightGuide_top_pz = <span class="number">0</span>*mm;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//G4VPVParameterisation </span></span><br><span class="line">  APNISLGParameterisation *lightGuide_para_top = </span><br><span class="line">  <span class="keyword">new</span> APNISLGParameterisation(</span><br><span class="line">  rowNb, colNb, <span class="comment">// number of row and column</span></span><br><span class="line">   TopX, TopY,</span><br><span class="line">  TopGap, TopHeight,</span><br><span class="line">  LightGuide_top_px, LightGuide_top_py, LightGuide_top_pz,</span><br><span class="line">  BC800, ESR);</span><br><span class="line"></span><br><span class="line">  LightGuide_top_physV = <span class="keyword">new</span> G4PVParameterised(<span class="string">"LightGuide_top_physV"</span>,</span><br><span class="line">  LightGuide_top_logV, LightGuide_top_mother_logV,</span><br><span class="line">  kUndefined, rowNb*colNb, lightGuide_para_top);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Light Guide bottom mother volume</span></span><br><span class="line">  <span class="comment">//-------------------------------------------</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Bottom part of light guide, half size</span></span><br><span class="line">  G4double LightGuide_z_ = <span class="number">18</span>*mm/<span class="number">2</span>;</span><br><span class="line">  G4Box* LightGuide_bottom_motherV = <span class="keyword">new</span> G4Box(<span class="string">"LightGuide_bottom_motherV"</span>,</span><br><span class="line">                                LightGuide_x, LightGuide_y, LightGuide_z_);</span><br><span class="line">  LightGuide_bottom_mother_logV = <span class="keyword">new</span> G4LogicalVolume(LightGuide_bottom_motherV,</span><br><span class="line">                                ESR, <span class="comment">// ESR reflector</span></span><br><span class="line">                                <span class="string">"LightGuide_bottom_mother_logV"</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  LightGuide_bottom_mother_physV = <span class="keyword">new</span> G4PVPlacement(<span class="number">0</span>,</span><br><span class="line">        G4ThreeVector(<span class="number">0</span>, <span class="number">0</span>, (grease_pz-grease_z)-LightGuide_z*<span class="number">2</span>-LightGuide_z_),</span><br><span class="line">        LightGuide_bottom_mother_logV,</span><br><span class="line">        <span class="string">"LightGuide_bottom_mother_physV"</span>,</span><br><span class="line">        logicAssembleNBD,</span><br><span class="line">        <span class="literal">false</span>,</span><br><span class="line">        <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Light Guide bottom</span></span><br><span class="line">  <span class="comment">//---------------------------------------------</span></span><br><span class="line"></span><br><span class="line">  G4double BottomX[<span class="number">3</span>] = &#123;<span class="number">12.3</span>*mm, <span class="number">75.89</span>*mm, <span class="number">12.3</span>*mm&#125;;</span><br><span class="line">  G4double BottomY[<span class="number">3</span>] = &#123;<span class="number">12.3</span>*mm, <span class="number">75.89</span>*mm, <span class="number">12.3</span>*mm&#125;;</span><br><span class="line">  G4double BottomHeight = LightGuide_z_*<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  G4int rowNb_ = <span class="number">3</span>;</span><br><span class="line">  G4int colNb_ = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">  G4double BottomGap = gap; <span class="comment">// ESR materials</span></span><br><span class="line">  <span class="comment">// left bottom conner of X-Y plane (-A, -A)</span></span><br><span class="line">  <span class="comment">// this box is a seed of other boxes</span></span><br><span class="line">  G4Box* LightGuide_bottom_solidV = <span class="keyword">new</span> G4Box(<span class="string">"LightGuide_bottom_solidV"</span>,</span><br><span class="line">                        BottomX[<span class="number">0</span>]/<span class="number">2</span>, BottomY[<span class="number">0</span>]/<span class="number">2</span>, BottomHeight/<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  LightGuide_bottom_logV = <span class="keyword">new</span> G4LogicalVolume(LightGuide_bottom_solidV,</span><br><span class="line">                                        BC800, <span class="comment">// light guide material</span></span><br><span class="line">                                        <span class="string">"LightGuide_bottom_logV"</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// all the coordinates are relative to the coordinate system of LightGuide_mother_logV </span></span><br><span class="line">  G4double LightGuide_bottom_px = x0;</span><br><span class="line">  G4double LightGuide_bottom_py = y0;</span><br><span class="line">  G4double LightGuide_bottom_pz = <span class="number">0</span>*mm;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//G4VPVParameterisation </span></span><br><span class="line">  APNISLGParameterisation *lightGuide_para_bottom =</span><br><span class="line">                <span class="keyword">new</span> APNISLGParameterisation(</span><br><span class="line">                                rowNb_, colNb_, <span class="comment">// number of row and column</span></span><br><span class="line">                                BottomX, BottomY,</span><br><span class="line">                                BottomGap, BottomHeight,</span><br><span class="line">                                LightGuide_bottom_px, LightGuide_bottom_py, LightGuide_bottom_pz,</span><br><span class="line">                                BC800, ESR);</span><br><span class="line">  LightGuide_bottom_physV = <span class="keyword">new</span> G4PVParameterised(<span class="string">"LightGuide_bottom_physV"</span>,</span><br><span class="line">                                LightGuide_bottom_logV, LightGuide_bottom_mother_logV,</span><br><span class="line">                                kUndefined, rowNb_*colNb_, lightGuide_para_bottom);</span><br></pre></td></tr></table></figure><p>光导构建图：</p><p><img src="/2020/06/05/Geant4中如何添加复杂组件/15-00-25.png" alt></p>]]></content>
    
    <summary type="html">
    
      Geant4构建复杂组件，bool运算，assemble,parameterised
    
    </summary>
    
    
      <category term="Geant4" scheme="https://Hubery-Lee.github.io/categories/Geant4/"/>
    
    
      <category term="geant4" scheme="https://Hubery-Lee.github.io/tags/geant4/"/>
    
  </entry>
  
  <entry>
    <title>迭代重建算法的基本思想</title>
    <link href="https://hubery-lee.github.io/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/"/>
    <id>https://hubery-lee.github.io/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/</id>
    <published>2020-06-04T16:15:12.000Z</published>
    <updated>2020-06-09T08:35:36.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="迭代重建算法的基本思想"><a href="#迭代重建算法的基本思想" class="headerlink" title="迭代重建算法的基本思想"></a>迭代重建算法的基本思想</h1><h2 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h2><p>图像重建除了通过中心切片定理来实现外，还可以通过解线性方程组来得到。对于二维图像就是像素，对于三维图像就是体素。</p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604225353193.png" alt="image-20200604225353193"></p><p>$\left{\begin{array}{c}x_{1}+x_{2}+x_{3}=p_{1} \ x_{4}+x_{5}+x_{6}=p_{2} \ x_{7}+x_{8}+x_{9}=p_{3} \ x_{3}+x_{6}+x_{9}=p_{4} \ x_{2}+x_{5}+x_{8}=p_{5} \ x_{1}+x_{4}+x_{7}=p_{6} \ 2(\sqrt{2}-1) x_{4}+(2-\sqrt{2}) x_{7}+2(\sqrt{2}-1) x_{8}=p_{7} \ \sqrt{2} x_{1}+\sqrt{2} x_{5}+\sqrt{2} x_{9}=p_{8} \ 2(\sqrt{2}-1) x_{2}+(2-\sqrt{2}) x_{3}+2(\sqrt{2}-1) x_{6}=p_{9}\end{array}\right.$</p><p>这个方程组也可以用矩阵的形式写出<br>$$<br>AX=p<br>$$<br>其中，$X=\left[x_{1}, x_{2}, \ldots, x_{9}\right]^{T}, \quad P=\left[p_{1}, p_{2}, \ldots, p_{9}\right]^{T}$迭代算法的思想使将$AX=p$变换成，迭代形式<br>$$<br>X^{(i+1)}=GX^{(i)}+b<br>$$<br>通过不同的变换方式变成迭代格式，就长生了不同的的迭代算法。比如：</p><h2 id="常用迭代算法"><a href="#常用迭代算法" class="headerlink" title="常用迭代算法"></a>常用迭代算法</h2><h3 id="代数迭代重建技术（ARO，algebraic-reconstruction-technique"><a href="#代数迭代重建技术（ARO，algebraic-reconstruction-technique" class="headerlink" title="代数迭代重建技术（ARO，algebraic reconstruction technique)"></a>代数迭代重建技术（ARO，algebraic reconstruction technique)</h3><p>ART 算法是个“行运算”算法。它每次考虑一条射线就更新一次图像。ART 算法的表达式是 </p><p>$$<br>X^{下一个}=X^{\text {当前}}-\frac{A_{i} X^{\text {当前}}-p_{i}}{\left|A_{i}\right|^{2}} A_{i}^{T}<br>$$<br>$A_iX$ 执行的是沿着第$i$条射线的投影运算，$p_i$ 是在第 $i $个探测像元上测到的投影数据，$\left|A_{i}\right|^{2}=\sum_{j} a_{i j}^{2}$是沿着第 $i$ 条射线上各“贡献”因子的平方和，$cA^{T}<em>{i}$ 是把数值 $c $沿着第$ i$ 条射线做反投影。如果我们把上面的算法改写成下面的形式 .<br>$$<br>X^{\text {next }}=X^{\text {current }}-\left(\frac{A</em>{i} X^{\text {current }}}{\left|A_{i}\right|}-\frac{p_{i}}{\left|A_{i}\right|}\right) \frac{A_{i}^{T}}{\left|A_{i}\right|}<br>$$<br>该算法的几何意义就比较明显了:</p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604233955301.png" alt="image-20200604233955301"></p><h3 id="最大期望极大似然算法（ML-EM，Maximum-Likelihood-Expectation-Maximization）"><a href="#最大期望极大似然算法（ML-EM，Maximum-Likelihood-Expectation-Maximization）" class="headerlink" title="最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）"></a>最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）</h3><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234408677.png" alt="image-20200604234408677"></p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234429947.png" alt="image-20200604234429947"></p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234506653.png" alt="image-20200604234506653"></p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234525715.png" alt="image-20200604234525715"></p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234558326.png" alt="image-20200604234558326"></p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234618809.png" alt="image-20200604234618809"></p><p><img src="/2020/06/05/迭代重建算法的基本思想/image-20200604234633400.png" alt="image-20200604234633400"></p><p><strong>参考文献：</strong></p><p>[1] 曾更生，医学图像重建</p>]]></content>
    
    <summary type="html">
    
      迭代重建的基本思想
    
    </summary>
    
    
      <category term="图像重建" scheme="https://Hubery-Lee.github.io/categories/%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/"/>
    
    
      <category term="迭代重建" scheme="https://Hubery-Lee.github.io/tags/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>PET_SPECT成像与CT成像的区别</title>
    <link href="https://hubery-lee.github.io/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://hubery-lee.github.io/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2020-06-03T12:38:26.000Z</published>
    <updated>2020-06-04T16:25:51.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PET-SPECT成像与CT成像的区别"><a href="#PET-SPECT成像与CT成像的区别" class="headerlink" title="PET/SPECT成像与CT成像的区别"></a>PET/SPECT成像与CT成像的区别</h1><h2 id="成像原理的区别"><a href="#成像原理的区别" class="headerlink" title="成像原理的区别"></a>成像原理的区别</h2><p>PET和SPECT是属于发射成像，CT属于透射成像。</p><p>所谓发射型成像就是把放射源放在病人身体的内部，放射线从病人身体内部射出，最后被探测器接收。 具有短半衰期的放射性的原子可以由回旋加速器或核反应堆生产出来。这些放射性元素再用来制造放射性药物。 通常放射性药物是通过手臂静脉血管注射而进入体内的。放射性药物进入人体后会跟踪病理过程。放射性药物也可以通过病人的呼吸道或消化道进入人体。放射性药物实际上是个分子载体，它依附于特定的生理组织或病理过程。放射性物质在药物的带领下在人体内做有目的的分布。发射型断层成像的目的就是要得到一个放射<br>性物质在人体内部的分布图。 </p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603105809886.png" alt="image-20200603105809886"></p><p>PET和SPECT的主要区别是采用的核药不同，PET全程叫正电子发射成像，通常采用的是能够发射正电子的核药，如==C-11，N-13，O-15和 F-18==，在放射性衰退时会释放出正电子 (即带一个正电荷的电子)。正电子在自然界中生存的时间十分短暂，因为在自然界中正电子很快就会遇到一个 (带负电的) 电子。当正电子与电子发生作用时，它们的质量会湮灭 (即完全消失)，它们的质量完全转换为能量而产生出两个能量为 511 keV 的伽玛光子。这两个光子沿着相隔 180º 角的方向传播。也就是说，它们在一条直线上朝相反的方向射出。有一种特殊的伽玛照相机可专门用来检测这一对光子。这种特殊的伽玛照相机运用的是同时检测技术。当两个探测器同时各接收到一个能量为 511 keV 的伽玛光子时，说明在连接这两个探测器的线段上曾经有过一个正电子。</p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603110137644.png" alt="image-20200603110137644"></p><p>而SPECT全称叫单光子发射断层成像，采用发射单个光子的核药，如$^{99}Tc、^{131}I、^{113}In、^{67}Ga、^{201}Tl、^{113}Xn$;</p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111107360.png" alt="image-20200603111107360"></p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111146266.png" alt="image-20200603111146266"></p><h2 id="图像重建方法上的不同点"><a href="#图像重建方法上的不同点" class="headerlink" title="图像重建方法上的不同点"></a>图像重建方法上的不同点</h2><p>发射成像需要对成像介质进行射线衰减修正；</p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111313807.png" alt="image-20200603111313807"></p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111400117.png" alt="image-20200603111400117"></p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111438883.png" alt="image-20200603111438883"></p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111455329.png" alt="image-20200603111455329"></p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111535455.png" alt="image-20200603111535455"></p><p><img src="/2020/06/03/PET-SPECT成像与CT成像的区别/image-20200603111656132.png" alt="image-20200603111656132"></p><p>比较复杂。</p><p><strong>参考文献：</strong></p>]]></content>
    
    <summary type="html">
    
      透射成像和发射成像的区别
    
    </summary>
    
    
      <category term="医学图像重建" scheme="https://Hubery-Lee.github.io/categories/%E5%8C%BB%E5%AD%A6%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/"/>
    
    
      <category term="PET" scheme="https://Hubery-Lee.github.io/tags/PET/"/>
    
      <category term="SPECT" scheme="https://Hubery-Lee.github.io/tags/SPECT/"/>
    
      <category term="CT" scheme="https://Hubery-Lee.github.io/tags/CT/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建感知器并使用其进行分类</title>
    <link href="https://hubery-lee.github.io/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/"/>
    <id>https://hubery-lee.github.io/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/</id>
    <published>2020-06-02T15:25:50.000Z</published>
    <updated>2020-06-04T16:26:45.661Z</updated>
    
    <content type="html"><![CDATA[<h1 id="😋如何搭建感知器并使用其进行分类"><a href="#😋如何搭建感知器并使用其进行分类" class="headerlink" title="😋如何搭建感知器并使用其进行分类"></a>😋如何搭建感知器并使用其进行分类</h1><p>[toc]</p><h2 id="💨python-编程基础，需要掌握几个库"><a href="#💨python-编程基础，需要掌握几个库" class="headerlink" title="💨python 编程基础，需要掌握几个库"></a>💨python 编程基础，需要掌握几个库</h2><ul><li>numpy</li><li>pandas</li><li>matplotlib</li></ul><h2 id="💖什么是感知器？"><a href="#💖什么是感知器？" class="headerlink" title="💖什么是感知器？"></a>💖什么是感知器？</h2><h3 id="🎈神经元与机器学习感知机"><a href="#🎈神经元与机器学习感知机" class="headerlink" title="🎈神经元与机器学习感知机"></a>🎈神经元与机器学习感知机</h3><p>信号在神经元中的传播过程如下：信号通过神经粒质与神经元树突结合，通过神经细胞的认知处理（分类等），由神经末梢输出信号。</p><p><img src="/2020/06/02/如何搭建感知器并使用其进行分类/image-20200602160802363.png" alt="image-20200602160802363"><img src="/2020/06/02/如何搭建感知器并使用其进行分类/image-20200602161216932.png" alt="image-20200602161216932"></p><p>感知器类似于生物神经系统中的神经元。特征数据$x_1,x_2,...x_m$，作为输入信号，权重因子$\omega_1,\omega_2,...\omega_m$,作信号接收单元，激活函数用于根据$\omega x$输入信号产生输出分类结果。其中，$x_0=1,\omega_0=y_0$</p><p><img src="/2020/06/02/如何搭建感知器并使用其进行分类/image-20200602160731313.png" alt="image-20200602160731313"></p><p>感知机的基本数学原理，既是逻辑回归/线性回归，直白一点就是大学物理实验中的实验数据处理，数据拟合和类似最小二乘法的误差分析；</p><p><img src="/2020/06/02/如何搭建感知器并使用其进行分类/1.png" alt></p><p>为了使拟合或分类效果最好，需要求一组$\omega$,要求方差最小即下式最小：$\widehat y$为预测数据，${(i)}$为第i个样本，下标为特征</p><p>$$<br>\begin{equation}<br>J(\boldsymbol{w})=\frac{1}{2} \sum_{i}\left(y^{(i)}-\widehat y^{(i)}\right)^{2}<br>\end{equation}<br>$$</p><p>线性回归或逻辑回归得目的是根据已有数据发现规律或现象，建立相应得模型，最终目的是利用模型进行预测；机器学习算法就是一种事物规律建模技术。训练机器学习算法，并用其对新的数据进行预测或分类。</p><p><img src="/2020/06/02/如何搭建感知器并使用其进行分类/image-20200602220300807.png" alt="image-20200602220300807"></p><p><img src="/2020/06/02/如何搭建感知器并使用其进行分类/image-20200602220058431.png" alt="image-20200602220058431"></p><p>机器学习算法的核心既是获得较合理的$\omega$, 要想获得$\omega$就需要利用数据集对算法进行训练。样本数据输入，预测值$\widehat y$与实际值之间会有偏差。要求训练样本足够多的情况下，偏差变小，逐渐收敛。那么，每个训练样本进行训练时，均需对权重因子进行更新。</p><p>$$<br>w_{j}:=w_{j}+\Delta w_{j}\<br>$$</p><h3 id="🚲最简单的感知机"><a href="#🚲最简单的感知机" class="headerlink" title="🚲最简单的感知机"></a>🚲最简单的感知机</h3><p>权重更新方法如下<br>$$<br>\begin{equation}\Delta w_{j}=\eta\left(y^{(i)}-\hat{y}^{(i)}\right) x_{j}^{(i)}\end{equation}<br>$$<br>其中，$\eta$成为学习率<br><img src="/2020/06/02/如何搭建感知器并使用其进行分类/2.png" alt></p><h3 id="🛴自适应线性神经元与学习的收敛性"><a href="#🛴自适应线性神经元与学习的收敛性" class="headerlink" title="🛴自适应线性神经元与学习的收敛性"></a>🛴自适应线性神经元与学习的收敛性</h3><p>其采用线性激活函数$\phi(z)=z$，那么；<br><img src="/2020/06/02/如何搭建感知器并使用其进行分类/3.png" alt><br><img src="/2020/06/02/如何搭建感知器并使用其进行分类/image-20200602223450727.png" alt="image-20200602223450727"></p><p>权重更新采用梯度下降法：<br><img src="/2020/06/02/如何搭建感知器并使用其进行分类/4.png" alt></p><h2 id="🍜如何搭建感知机并进行分类？"><a href="#🍜如何搭建感知机并进行分类？" class="headerlink" title="🍜如何搭建感知机并进行分类？"></a>🍜如何搭建感知机并进行分类？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.colors <span class="keyword">import</span> ListedColormap</span><br><span class="line"></span><br><span class="line"><span class="comment"># # Implementing a perceptron learning algorithm in Python</span></span><br><span class="line"><span class="comment"># ## An object-oriented perceptron API</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Perceptron</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Perceptron classifier.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Parameters</span></span><br><span class="line"><span class="string">    ------------</span></span><br><span class="line"><span class="string">    eta : float</span></span><br><span class="line"><span class="string">      Learning rate (between 0.0 and 1.0)</span></span><br><span class="line"><span class="string">    n_iter : int</span></span><br><span class="line"><span class="string">      Passes over the training dataset.</span></span><br><span class="line"><span class="string">    random_state : int</span></span><br><span class="line"><span class="string">      Random number generator seed for random weight</span></span><br><span class="line"><span class="string">      initialization.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Attributes</span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    w_ : 1d-array</span></span><br><span class="line"><span class="string">      Weights after fitting.</span></span><br><span class="line"><span class="string">    errors_ : list</span></span><br><span class="line"><span class="string">      Number of misclassifications (updates) in each epoch.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, eta=<span class="number">0.01</span>, n_iter=<span class="number">50</span>, random_state=<span class="number">1</span>)</span>:</span></span><br><span class="line">        self.eta = eta</span><br><span class="line">        self.n_iter = n_iter</span><br><span class="line">        self.random_state = random_state</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, X, y)</span>:</span></span><br><span class="line">        <span class="string">"""Fit training data.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Parameters</span></span><br><span class="line"><span class="string">        ----------</span></span><br><span class="line"><span class="string">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class="line"><span class="string">          Training vectors, where n_samples is the number of samples and</span></span><br><span class="line"><span class="string">          n_features is the number of features.</span></span><br><span class="line"><span class="string">        y : array-like, shape = [n_samples]</span></span><br><span class="line"><span class="string">          Target values.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns</span></span><br><span class="line"><span class="string">        -------</span></span><br><span class="line"><span class="string">        self : object</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        rgen = np.random.RandomState(self.random_state)</span><br><span class="line">        self.w_ = rgen.normal(loc=<span class="number">0.0</span>, scale=<span class="number">0.01</span>, size=<span class="number">1</span> + X.shape[<span class="number">1</span>])</span><br><span class="line">        self.errors_ = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(self.n_iter):</span><br><span class="line">            errors = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> xi, target <span class="keyword">in</span> zip(X, y):</span><br><span class="line">                update = self.eta * (target - self.predict(xi))</span><br><span class="line">                self.w_[<span class="number">1</span>:] += update * xi</span><br><span class="line">                self.w_[<span class="number">0</span>] += update</span><br><span class="line">                errors += int(update != <span class="number">0.0</span>)</span><br><span class="line">            self.errors_.append(errors)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">net_input</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Calculate net input"""</span></span><br><span class="line">        <span class="keyword">return</span> np.dot(X, self.w_[<span class="number">1</span>:]) + self.w_[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Return class label after unit step"""</span></span><br><span class="line">        <span class="keyword">return</span> np.where(self.net_input(X) &gt;= <span class="number">0.0</span>, <span class="number">1</span>, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ## Training a perceptron model on the Iris dataset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ### Reading-in the Iris data</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">'https://archive.ics.uci.edu/ml/'</span></span><br><span class="line">        <span class="string">'machine-learning-databases/iris/iris.data'</span>, header=<span class="literal">None</span>)</span><br><span class="line">df.tail()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># ### Note:</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># You can find a copy of the Iris dataset (and all other datasets used in this book) in the code bundle of this book, which you can use if you are working offline or the UCI server at https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data is temporarily unavailable. For instance, to load the Iris dataset from a local directory, you can replace the line </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#     df = pd.read_csv('https://archive.ics.uci.edu/ml/'</span></span><br><span class="line"><span class="comment">#         'machine-learning-databases/iris/iris.data', header=None)</span></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line"><span class="comment"># by</span></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line"><span class="comment">#     df = pd.read_csv('your/local/path/to/iris.data', header=None)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">'iris.data'</span>, header=<span class="literal">None</span>)</span><br><span class="line">df.tail()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ### Plotting the Iris data</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># select setosa and versicolor</span></span><br><span class="line">y = df.iloc[<span class="number">0</span>:<span class="number">100</span>, <span class="number">4</span>].values</span><br><span class="line">y = np.where(y == <span class="string">'Iris-setosa'</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># extract sepal length and petal length</span></span><br><span class="line">X = df.iloc[<span class="number">0</span>:<span class="number">100</span>, [<span class="number">0</span>, <span class="number">2</span>]].values</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot data</span></span><br><span class="line">plt.scatter(X[:<span class="number">50</span>, <span class="number">0</span>], X[:<span class="number">50</span>, <span class="number">1</span>],</span><br><span class="line">            color=<span class="string">'red'</span>, marker=<span class="string">'o'</span>, label=<span class="string">'setosa'</span>)</span><br><span class="line">plt.scatter(X[<span class="number">50</span>:<span class="number">100</span>, <span class="number">0</span>], X[<span class="number">50</span>:<span class="number">100</span>, <span class="number">1</span>],</span><br><span class="line">            color=<span class="string">'blue'</span>, marker=<span class="string">'x'</span>, label=<span class="string">'versicolor'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'sepal length [cm]'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'petal length [cm]'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper left'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plt.savefig('images/02_06.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ### Training the perceptron model</span></span><br><span class="line">ppn = Perceptron(eta=<span class="number">0.1</span>, n_iter=<span class="number">10</span>)</span><br><span class="line">ppn.fit(X, y)</span><br><span class="line">plt.plot(range(<span class="number">1</span>, len(ppn.errors_) + <span class="number">1</span>), ppn.errors_, marker=<span class="string">'o'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Number of updates'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plt.savefig('images/02_07.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ### A function for plotting decision regions</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_decision_regions</span><span class="params">(X, y, classifier, resolution=<span class="number">0.02</span>)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># setup marker generator and color map</span></span><br><span class="line">    markers = (<span class="string">'s'</span>, <span class="string">'x'</span>, <span class="string">'o'</span>, <span class="string">'^'</span>, <span class="string">'v'</span>)</span><br><span class="line">    colors = (<span class="string">'red'</span>, <span class="string">'blue'</span>, <span class="string">'lightgreen'</span>, <span class="string">'gray'</span>, <span class="string">'cyan'</span>)</span><br><span class="line">    cmap = ListedColormap(colors[:len(np.unique(y))])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># plot the decision surface</span></span><br><span class="line">    x1_min, x1_max = X[:, <span class="number">0</span>].min() - <span class="number">1</span>, X[:, <span class="number">0</span>].max() + <span class="number">1</span></span><br><span class="line">    x2_min, x2_max = X[:, <span class="number">1</span>].min() - <span class="number">1</span>, X[:, <span class="number">1</span>].max() + <span class="number">1</span></span><br><span class="line">    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),</span><br><span class="line">                           np.arange(x2_min, x2_max, resolution))</span><br><span class="line">    Z = classifier.predict(np.array([xx1.ravel(), xx2.ravel()]).T)</span><br><span class="line">    Z = Z.reshape(xx1.shape)</span><br><span class="line">    plt.contourf(xx1, xx2, Z, alpha=<span class="number">0.3</span>, cmap=cmap)</span><br><span class="line">    plt.xlim(xx1.min(), xx1.max())</span><br><span class="line">    plt.ylim(xx2.min(), xx2.max())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># plot class samples</span></span><br><span class="line">    <span class="keyword">for</span> idx, cl <span class="keyword">in</span> enumerate(np.unique(y)):</span><br><span class="line">        plt.scatter(x=X[y == cl, <span class="number">0</span>], </span><br><span class="line">                    y=X[y == cl, <span class="number">1</span>],</span><br><span class="line">                    alpha=<span class="number">0.8</span>, </span><br><span class="line">                    c=colors[idx],</span><br><span class="line">                    marker=markers[idx], </span><br><span class="line">                    label=cl, </span><br><span class="line">                    edgecolor=<span class="string">'black'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plot_decision_regions(X, y, classifier=ppn)</span><br><span class="line">plt.xlabel(<span class="string">'sepal length [cm]'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'petal length [cm]'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper left'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># plt.savefig('images/02_08.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################</span></span><br><span class="line"><span class="comment">## Adaptive linear neurons and the convergence of learning</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="comment"># ## Minimizing cost functions with gradient descent</span></span><br><span class="line"><span class="comment"># ## Implementing an adaptive linear neuron in Python</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdalineGD</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""ADAptive LInear NEuron classifier.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Parameters</span></span><br><span class="line"><span class="string">    ------------</span></span><br><span class="line"><span class="string">    eta : float</span></span><br><span class="line"><span class="string">      Learning rate (between 0.0 and 1.0)</span></span><br><span class="line"><span class="string">    n_iter : int</span></span><br><span class="line"><span class="string">      Passes over the training dataset.</span></span><br><span class="line"><span class="string">    random_state : int</span></span><br><span class="line"><span class="string">      Random number generator seed for random weight</span></span><br><span class="line"><span class="string">      initialization.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Attributes</span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    w_ : 1d-array</span></span><br><span class="line"><span class="string">      Weights after fitting.</span></span><br><span class="line"><span class="string">    cost_ : list</span></span><br><span class="line"><span class="string">      Sum-of-squares cost function value in each epoch.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, eta=<span class="number">0.01</span>, n_iter=<span class="number">50</span>, random_state=<span class="number">1</span>)</span>:</span></span><br><span class="line">        self.eta = eta</span><br><span class="line">        self.n_iter = n_iter</span><br><span class="line">        self.random_state = random_state</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, X, y)</span>:</span></span><br><span class="line">        <span class="string">""" Fit training data.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Parameters</span></span><br><span class="line"><span class="string">        ----------</span></span><br><span class="line"><span class="string">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class="line"><span class="string">          Training vectors, where n_samples is the number of samples and</span></span><br><span class="line"><span class="string">          n_features is the number of features.</span></span><br><span class="line"><span class="string">        y : array-like, shape = [n_samples]</span></span><br><span class="line"><span class="string">          Target values.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns</span></span><br><span class="line"><span class="string">        -------</span></span><br><span class="line"><span class="string">        self : object</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        rgen = np.random.RandomState(self.random_state)</span><br><span class="line">        self.w_ = rgen.normal(loc=<span class="number">0.0</span>, scale=<span class="number">0.01</span>, size=<span class="number">1</span> + X.shape[<span class="number">1</span>])</span><br><span class="line">        self.cost_ = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.n_iter):</span><br><span class="line">            net_input = self.net_input(X)</span><br><span class="line">            <span class="comment"># Please note that the "activation" method has no effect</span></span><br><span class="line">            <span class="comment"># in the code since it is simply an identity function. We</span></span><br><span class="line">            <span class="comment"># could write `output = self.net_input(X)` directly instead.</span></span><br><span class="line">            <span class="comment"># The purpose of the activation is more conceptual, i.e.,  </span></span><br><span class="line">            <span class="comment"># in the case of logistic regression (as we will see later), </span></span><br><span class="line">            <span class="comment"># we could change it to</span></span><br><span class="line">            <span class="comment"># a sigmoid function to implement a logistic regression classifier.</span></span><br><span class="line">            output = self.activation(net_input)</span><br><span class="line">            errors = (y - output)</span><br><span class="line">            self.w_[<span class="number">1</span>:] += self.eta * X.T.dot(errors)</span><br><span class="line">            self.w_[<span class="number">0</span>] += self.eta * errors.sum()</span><br><span class="line">            cost = (errors**<span class="number">2</span>).sum() / <span class="number">2.0</span></span><br><span class="line">            self.cost_.append(cost)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">net_input</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Calculate net input"""</span></span><br><span class="line">        <span class="keyword">return</span> np.dot(X, self.w_[<span class="number">1</span>:]) + self.w_[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">activation</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Compute linear activation"""</span></span><br><span class="line">        <span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Return class label after unit step"""</span></span><br><span class="line">        <span class="keyword">return</span> np.where(self.activation(self.net_input(X)) &gt;= <span class="number">0.0</span>, <span class="number">1</span>, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(nrows=<span class="number">1</span>, ncols=<span class="number">2</span>, figsize=(<span class="number">10</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">ada1 = AdalineGD(n_iter=<span class="number">10</span>, eta=<span class="number">0.01</span>).fit(X, y)</span><br><span class="line">ax[<span class="number">0</span>].plot(range(<span class="number">1</span>, len(ada1.cost_) + <span class="number">1</span>), np.log10(ada1.cost_), marker=<span class="string">'o'</span>)</span><br><span class="line">ax[<span class="number">0</span>].set_xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">'log(Sum-squared-error)'</span>)</span><br><span class="line">ax[<span class="number">0</span>].set_title(<span class="string">'Adaline - Learning rate 0.01'</span>)</span><br><span class="line"></span><br><span class="line">ada2 = AdalineGD(n_iter=<span class="number">10</span>, eta=<span class="number">0.0001</span>).fit(X, y)</span><br><span class="line">ax[<span class="number">1</span>].plot(range(<span class="number">1</span>, len(ada2.cost_) + <span class="number">1</span>), ada2.cost_, marker=<span class="string">'o'</span>)</span><br><span class="line">ax[<span class="number">1</span>].set_xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">ax[<span class="number">1</span>].set_ylabel(<span class="string">'Sum-squared-error'</span>)</span><br><span class="line">ax[<span class="number">1</span>].set_title(<span class="string">'Adaline - Learning rate 0.0001'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plt.savefig('images/02_11.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ## Improving gradient descent through feature scaling</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># standardize features</span></span><br><span class="line">X_std = np.copy(X)</span><br><span class="line">X_std[:, <span class="number">0</span>] = (X[:, <span class="number">0</span>] - X[:, <span class="number">0</span>].mean()) / X[:, <span class="number">0</span>].std()</span><br><span class="line">X_std[:, <span class="number">1</span>] = (X[:, <span class="number">1</span>] - X[:, <span class="number">1</span>].mean()) / X[:, <span class="number">1</span>].std()</span><br><span class="line"></span><br><span class="line">ada = AdalineGD(n_iter=<span class="number">15</span>, eta=<span class="number">0.01</span>)</span><br><span class="line">ada.fit(X_std, y)</span><br><span class="line"></span><br><span class="line">plot_decision_regions(X_std, y, classifier=ada)</span><br><span class="line">plt.title(<span class="string">'Adaline - Gradient Descent'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'sepal length [standardized]'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'petal length [standardized]'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper left'</span>)</span><br><span class="line">plt.tight_layout()</span><br><span class="line"><span class="comment"># plt.savefig('images/02_14_1.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">plt.plot(range(<span class="number">1</span>, len(ada.cost_) + <span class="number">1</span>), ada.cost_, marker=<span class="string">'o'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Sum-squared-error'</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line"><span class="comment"># plt.savefig('images/02_14_2.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ## Large scale machine learning and stochastic gradient descent</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdalineSGD</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""ADAptive LInear NEuron classifier.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Parameters</span></span><br><span class="line"><span class="string">    ------------</span></span><br><span class="line"><span class="string">    eta : float</span></span><br><span class="line"><span class="string">      Learning rate (between 0.0 and 1.0)</span></span><br><span class="line"><span class="string">    n_iter : int</span></span><br><span class="line"><span class="string">      Passes over the training dataset.</span></span><br><span class="line"><span class="string">    shuffle : bool (default: True)</span></span><br><span class="line"><span class="string">      Shuffles training data every epoch if True to prevent cycles.</span></span><br><span class="line"><span class="string">    random_state : int</span></span><br><span class="line"><span class="string">      Random number generator seed for random weight</span></span><br><span class="line"><span class="string">      initialization.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Attributes</span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    w_ : 1d-array</span></span><br><span class="line"><span class="string">      Weights after fitting.</span></span><br><span class="line"><span class="string">    cost_ : list</span></span><br><span class="line"><span class="string">      Sum-of-squares cost function value averaged over all</span></span><br><span class="line"><span class="string">      training samples in each epoch.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, eta=<span class="number">0.01</span>, n_iter=<span class="number">10</span>, shuffle=True, random_state=None)</span>:</span></span><br><span class="line">        self.eta = eta</span><br><span class="line">        self.n_iter = n_iter</span><br><span class="line">        self.w_initialized = <span class="literal">False</span></span><br><span class="line">        self.shuffle = shuffle</span><br><span class="line">        self.random_state = random_state</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, X, y)</span>:</span></span><br><span class="line">        <span class="string">""" Fit training data.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Parameters</span></span><br><span class="line"><span class="string">        ----------</span></span><br><span class="line"><span class="string">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class="line"><span class="string">          Training vectors, where n_samples is the number of samples and</span></span><br><span class="line"><span class="string">          n_features is the number of features.</span></span><br><span class="line"><span class="string">        y : array-like, shape = [n_samples]</span></span><br><span class="line"><span class="string">          Target values.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns</span></span><br><span class="line"><span class="string">        -------</span></span><br><span class="line"><span class="string">        self : object</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self._initialize_weights(X.shape[<span class="number">1</span>])</span><br><span class="line">        self.cost_ = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.n_iter):</span><br><span class="line">            <span class="keyword">if</span> self.shuffle:</span><br><span class="line">                X, y = self._shuffle(X, y)</span><br><span class="line">            cost = []</span><br><span class="line">            <span class="keyword">for</span> xi, target <span class="keyword">in</span> zip(X, y):</span><br><span class="line">                cost.append(self._update_weights(xi, target))</span><br><span class="line">            avg_cost = sum(cost) / len(y)</span><br><span class="line">            self.cost_.append(avg_cost)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">partial_fit</span><span class="params">(self, X, y)</span>:</span></span><br><span class="line">        <span class="string">"""Fit training data without reinitializing the weights"""</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.w_initialized:</span><br><span class="line">            self._initialize_weights(X.shape[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> y.ravel().shape[<span class="number">0</span>] &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> xi, target <span class="keyword">in</span> zip(X, y):</span><br><span class="line">                self._update_weights(xi, target)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._update_weights(X, y)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_shuffle</span><span class="params">(self, X, y)</span>:</span></span><br><span class="line">        <span class="string">"""Shuffle training data"""</span></span><br><span class="line">        r = self.rgen.permutation(len(y))</span><br><span class="line">        <span class="keyword">return</span> X[r], y[r]</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_initialize_weights</span><span class="params">(self, m)</span>:</span></span><br><span class="line">        <span class="string">"""Initialize weights to small random numbers"""</span></span><br><span class="line">        self.rgen = np.random.RandomState(self.random_state)</span><br><span class="line">        self.w_ = self.rgen.normal(loc=<span class="number">0.0</span>, scale=<span class="number">0.01</span>, size=<span class="number">1</span> + m)</span><br><span class="line">        self.w_initialized = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_weights</span><span class="params">(self, xi, target)</span>:</span></span><br><span class="line">        <span class="string">"""Apply Adaline learning rule to update the weights"""</span></span><br><span class="line">        output = self.activation(self.net_input(xi))</span><br><span class="line">        error = (target - output)</span><br><span class="line">        self.w_[<span class="number">1</span>:] += self.eta * xi.dot(error)</span><br><span class="line">        self.w_[<span class="number">0</span>] += self.eta * error</span><br><span class="line">        cost = <span class="number">0.5</span> * error**<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> cost</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">net_input</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Calculate net input"""</span></span><br><span class="line">        <span class="keyword">return</span> np.dot(X, self.w_[<span class="number">1</span>:]) + self.w_[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">activation</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Compute linear activation"""</span></span><br><span class="line">        <span class="keyword">return</span> X</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, X)</span>:</span></span><br><span class="line">        <span class="string">"""Return class label after unit step"""</span></span><br><span class="line">        <span class="keyword">return</span> np.where(self.activation(self.net_input(X)) &gt;= <span class="number">0.0</span>, <span class="number">1</span>, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ada = AdalineSGD(n_iter=<span class="number">15</span>, eta=<span class="number">0.01</span>, random_state=<span class="number">1</span>)</span><br><span class="line">ada.fit(X_std, y)</span><br><span class="line"></span><br><span class="line">plot_decision_regions(X_std, y, classifier=ada)</span><br><span class="line">plt.title(<span class="string">'Adaline - Stochastic Gradient Descent'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'sepal length [standardized]'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'petal length [standardized]'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper left'</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line"><span class="comment"># plt.savefig('images/02_15_1.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">plt.plot(range(<span class="number">1</span>, len(ada.cost_) + <span class="number">1</span>), ada.cost_, marker=<span class="string">'o'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Epochs'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Average Cost'</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line"><span class="comment"># plt.savefig('images/02_15_2.png', dpi=300)</span></span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">ada.partial_fit(X_std[<span class="number">0</span>, :], y[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># # Summary</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --- </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Readers may ignore the following cell</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      神经元与机器学习感知器
    
    </summary>
    
    
      <category term="机器学习" scheme="https://Hubery-Lee.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="感知器" scheme="https://Hubery-Lee.github.io/tags/%E6%84%9F%E7%9F%A5%E5%99%A8/"/>
    
      <category term="神经元" scheme="https://Hubery-Lee.github.io/tags/%E7%A5%9E%E7%BB%8F%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>二维图像重建的一般流程</title>
    <link href="https://hubery-lee.github.io/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/"/>
    <id>https://hubery-lee.github.io/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/</id>
    <published>2020-06-02T15:01:15.000Z</published>
    <updated>2020-07-12T16:32:49.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二维图像重建的一般流程"><a href="#二维图像重建的一般流程" class="headerlink" title="二维图像重建的一般流程"></a>二维图像重建的一般流程</h1><p>[toc]</p><h2 id="❓什么是图像重建？"><a href="#❓什么是图像重建？" class="headerlink" title="❓什么是图像重建？"></a>❓什么是图像重建？</h2><p>断层成像顾名思义就是要得到一个物体内部的截面图像。比如你想知道西瓜里面是什么样的，最简单的办法就是把西瓜切开 (图1.1)。显然对病人来说，这是万不可行之举。我们真想有个办法，不用动刀，就可把病人内部看得清清楚楚。</p><p>另一个例子。你想到一个美丽的街心公园去参观。可惜，公园正在维修，游人不得入内。你只好在公园的外围走走，拍几张照片。公园<br>内有两棵参天大树，极为壮观。你在公园的东面和南面对公园拍了照 ，颇为满意。回到家后，你用你的得意照片，居然画出了公园地图，并确定了那两棵树的位置 (图1.2右)。其实，要确定那两棵树的位置并不难。你只要把那两张照片按原本的方位放好。从照片上的每棵树画出一条垂线。</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601090416943.png" alt="image-20200601090416943"><img src="/2020/06/02/二维图像重建的一般流程/image-20200601090501929.png" alt="image-20200601090501929"></p><h2 id="💫图像重建的算法思想是什么？"><a href="#💫图像重建的算法思想是什么？" class="headerlink" title="💫图像重建的算法思想是什么？"></a>💫图像重建的算法思想是什么？</h2><p>断层成像是个数学问题。让我们一起做个有趣的数学习题吧。这里有个 2x2 的矩阵。 矩阵中的元素的数值暂时保密。我给你一些暗示： 第一行的和是 5。第二行的和是 4。第一列的和是 7。第二列的和是 2 (图1.3)。你可以算出这个 2x2 矩阵吗?</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601090809554.png" alt="image-20200601090809554"></p><p>这个问题可以用解方程组的方法解决。设那些矩阵元素为未知数，列一个线性方程组：<br>$$<br>\begin{equation}<br>\begin{aligned}<br>x_1+x_2=5;\<br>x_3+x_4=4;\<br>x_1+x_3=7;\<br>x_2+x_4=2;\<br>\end{aligned}<br>\end{equation}<br>$$</p><p>解这个方程组便得到;</p><p>$$<br>\begin{equation}x_1=3,x_2=2,x_3=4,x_4=0\end{equation}<br>$$<br>通过探测物体的投影数据，重建出物体的实际内部构造。这就是图像重建的一般思想。</p><h2 id="✔图像重建算法的数学基础有哪些？"><a href="#✔图像重建算法的数学基础有哪些？" class="headerlink" title="✔图像重建算法的数学基础有哪些？"></a>✔图像重建算法的数学基础有哪些？</h2><h3 id="🍕中心切片定理"><a href="#🍕中心切片定理" class="headerlink" title="🍕中心切片定理"></a>🍕中心切片定理</h3><p>中心切片定理是断层成像的理论基础。这个定理还有其它的称谓，如投影切片定理和傅里叶中心切片定理。二维图像的中心切片定理指出：二维函数 f(x, y) 的投影 p(s) 之傅里叶变换 P(ω) 等于函数 f(x, y) 的傅里叶变换 F(ωx, ωy) 沿与探测器平行的方向过原点的片段。</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601104859436.png" alt="image-20200601104859436"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601105629394.png" alt></p><h3 id="🚩为什么要引入滤波？"><a href="#🚩为什么要引入滤波？" class="headerlink" title="🚩为什么要引入滤波？"></a>🚩为什么要引入滤波？</h3><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601105835965.png" alt><br><img src="/2020/06/02/二维图像重建的一般流程/image-20200601105911448.png" alt></p><p>第二个方案通常被称作处理FBP (Filtered Backprojection 先滤波后反投影) 算法。第二个方案比第一个方案知名度高得多。在断层成像领域里，函数|ω| 被称作斜坡滤波器。</p><h3 id="❤有哪些滤波重建方法？"><a href="#❤有哪些滤波重建方法？" class="headerlink" title="❤有哪些滤波重建方法？"></a>❤有哪些滤波重建方法？</h3><p>==<strong>滤波的思想</strong>==：在中心切片定理中，旋转中心被切片涂抹的更浓密，这将导致图像像素比较均匀（低频区域；高频区域是指图像对比度比较大的图像边缘区域），进而重构的图像中心区域比较模糊。那么滤波器的思想是将中心切片函数乘以一个与旋转中心距离相关的权重因子，使得切片在图像上涂抹的比较均匀。这样重构出来的图像才不会出现旋转中心模糊的现象。下面介绍一下有哪些图像重建及滤波方法。</p><h4 id="🛴方法1"><a href="#🛴方法1" class="headerlink" title="🛴方法1"></a>🛴方法1</h4><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601111126392.png" alt></p><h4 id="🛵方法2"><a href="#🛵方法2" class="headerlink" title="🛵方法2"></a>🛵方法2</h4><img src="/2020/06/02/二维图像重建的一般流程/ image-20200601111254399.png" alt="image-20200601111254399" style="zoom:80%;"><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601111254399.png" alt></p><h4 id="🏍方法3"><a href="#🏍方法3" class="headerlink" title="🏍方法3"></a>🏍方法3</h4><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601111406287.png" alt><br><img src="/2020/06/02/二维图像重建的一般流程/image-20200601111430225.png" alt></p><h4 id="🧭算法一览表"><a href="#🧭算法一览表" class="headerlink" title="🧭算法一览表"></a>🧭算法一览表</h4><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200601111533233.png" alt></p><h2 id="👼扇形束投影算法如何转换到平行束投影算法"><a href="#👼扇形束投影算法如何转换到平行束投影算法" class="headerlink" title="👼扇形束投影算法如何转换到平行束投影算法"></a>👼扇形束投影算法如何转换到平行束投影算法</h2><p>==<strong>基本思想</strong>==：根据利用点扩散函数的移动不变性，可将扇形束投影重组成平行束投影；然而，在进行重组时将需要进行插值运算，这将导入不必要的误差。故而需要根据重组变换原理，采用变量替换原理，将适用于平行束投影算法中的变量替换成扇形束中的转换关系。</p><h3 id="🍚点扩散函数的移动不变性"><a href="#🍚点扩散函数的移动不变性" class="headerlink" title="🍚点扩散函数的移动不变性"></a>🍚点扩散函数的移动不变性</h3><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602082326836.png" alt="image-20200602082326836"></p><p>对于平行光束成像，我们用极为重要的中心切片定理推导出了一些图像重建的算法。可是，对与扇形束成像，我们并没有相应的中心切片定理。我们只好想个别的办法来推导扇形束的图像重建算法。这个办法就是把扇形束的成像问题转化成平行光束的成像问题，把平行光束图像重建的算法修正一下然后应用于解决扇形束的成像问题中。 </p><p>假定探测器是匀速地绕物体转动，而且数据采样的角度区间也是均匀的。在这个假设下，平行光束的投影/反投影的点扩散函数 (PSF) 是移动不变的。换句话说，如果你把一个点源放在 x-y 平面上。放到哪里到无所谓，只要放在探测器的视野内就好。</p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602083037903.png" alt="image-20200602083037903"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602083341855.png" alt="image-20200602083341855"></p><h3 id="🍳扇形束射线如何用平行束来描述"><a href="#🍳扇形束射线如何用平行束来描述" class="headerlink" title="🍳扇形束射线如何用平行束来描述"></a>🍳扇形束射线如何用平行束来描述</h3><p>一个直截了当的方法是把所有的扇形束射线放在一起进行分组，把互相平行的射线分在一组，这样就把扇形束的成像问题简化为平行光束的成像问题。正如图3.4所示，每一条扇形束的射线都刚好对应一条平行光束的射线。这两条线是完全重合的。也就是说，每一个扇形束的数据 g(γ, β) 都刚好对应一个平行光束的数据 p(s, θ)，它们的坐标满足下列关系:<br>$$<br>\theta = \gamma +\beta \<br>s=Dsin\gamma<br>$$<br>其中 $$D$$ 为焦距，也就是从扇形的焦点到旋转中心的距离。当上面这两个关系成立时，这两个成像系统所测的数据是相同的:<br>$$<br>p(s,\theta)=g(\gamma,\beta)<br>$$<br><img src="/2020/06/02/二维图像重建的一般流程/image-20200602083414444.png" alt="image-20200602083414444"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602084149649.png" alt="image-20200602084149649"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602084308687.png" alt="image-20200602084308687"></p><p><img src="/2020/06/02/二维图像重建的一般流程/image-20200602084333949.png" alt="image-20200602084333949"></p><p><strong>参考文献：</strong></p><p>[1] 曾更生，医学图像重建</p>]]></content>
    
    <summary type="html">
    
      描述二维CT图像重建算法的一般思想
    
    </summary>
    
    
      <category term="图像重建" scheme="https://Hubery-Lee.github.io/categories/%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/"/>
    
    
      <category term="二维CT图像重建" scheme="https://Hubery-Lee.github.io/tags/%E4%BA%8C%E7%BB%B4CT%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>利用VSCode调试Geant4项目和Qt项目</title>
    <link href="https://hubery-lee.github.io/2020/05/19/%E5%88%A9%E7%94%A8VSCode%E8%B0%83%E8%AF%95Geant4%E9%A1%B9%E7%9B%AE%E5%92%8CQt%E9%A1%B9%E7%9B%AE/"/>
    <id>https://hubery-lee.github.io/2020/05/19/%E5%88%A9%E7%94%A8VSCode%E8%B0%83%E8%AF%95Geant4%E9%A1%B9%E7%9B%AE%E5%92%8CQt%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-05-19T12:57:46.000Z</published>
    <updated>2020-05-19T13:10:14.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🌌利用VSCode调试Geant4项目和Qt项目"><a href="#🌌利用VSCode调试Geant4项目和Qt项目" class="headerlink" title="🌌利用VSCode调试Geant4项目和Qt项目"></a>🌌利用VSCode调试Geant4项目和Qt项目</h1><p>==<strong>注意</strong>==</p><ul><li><p>VSCode只是一个具有用户交互界面、可设置断点调试的集成开发环境，并具有编辑器的一些特色功能，如：代码补全、格式自动化和语法自动检查等。直白的理解，他是一个具有很多集成功能的高端编辑器，属于前端，代码的编译链接执行需要交给其他一些软件，如CMake等。</p></li><li><p>Geant4和Qt均是基于c++语言，调试程序需要用gdb。那么，调试geant4和Qt程序与调试C++程序一样没有什么区别。</p></li></ul><h2 id="🧭c-如何开启调试模式"><a href="#🧭c-如何开启调试模式" class="headerlink" title="🧭c++如何开启调试模式"></a>🧭c++如何开启调试模式</h2><p>C++单文件编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ main.cpp -o a.out</span><br></pre></td></tr></table></figure><p>C++单文件gdb调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -g main.cpp -o a.out</span><br><span class="line">gdb a.out</span><br></pre></td></tr></table></figure><h2 id="🚀geant4-和qt等项目文件如何用调试"><a href="#🚀geant4-和qt等项目文件如何用调试" class="headerlink" title="🚀geant4 和qt等项目文件如何用调试"></a>🚀geant4 和qt等项目文件如何用调试</h2><p>C++项目的链接通常采用可采用CMake，需要编写<code>CMakeLists.txt</code><br>如需打开调试模式，只需奖<code>CMAKE_BUILD_TYPE</code> 设置成<code>&quot;Debug&quot;</code>模式即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      vscode在手，天下我有
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="vscode" scheme="https://Hubery-Lee.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>科学上网方法</title>
    <link href="https://hubery-lee.github.io/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/"/>
    <id>https://hubery-lee.github.io/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/</id>
    <published>2020-05-07T16:07:51.000Z</published>
    <updated>2020-05-07T16:29:32.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🚚科学上网方法"><a href="#🚚科学上网方法" class="headerlink" title="🚚科学上网方法"></a>🚚科学上网方法</h1><h2 id="⚓google-bing检索"><a href="#⚓google-bing检索" class="headerlink" title="⚓google/bing检索"></a>⚓google/bing检索</h2><ul><li><code>谷歌上网助手</code></li><li><code>iGuge插件</code></li></ul><p>安装方法：</p><p><img src="/2020/05/08/科学上网方法/a.png" alt></p><h2 id="🚍文献搜索神器"><a href="#🚍文献搜索神器" class="headerlink" title="🚍文献搜索神器"></a>🚍文献搜索神器</h2><p><a href="https://www.researcher-app.com/" target="_blank" rel="noopener"><code>researcher</code></a></p>]]></content>
    
    <summary type="html">
    
      推荐两款谷歌上网插件
    
    </summary>
    
    
      <category term="软件体验" scheme="https://Hubery-Lee.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="google" scheme="https://Hubery-Lee.github.io/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>用VSCode的IDE调试CPP</title>
    <link href="https://hubery-lee.github.io/2020/05/05/%E7%94%A8VSCode%E7%9A%84IDE%E8%B0%83%E8%AF%95CPP/"/>
    <id>https://hubery-lee.github.io/2020/05/05/%E7%94%A8VSCode%E7%9A%84IDE%E8%B0%83%E8%AF%95CPP/</id>
    <published>2020-05-05T01:46:08.000Z</published>
    <updated>2020-05-05T01:50:09.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="💘VSCODE-IDE在C-C-项目编程中的使用"><a href="#💘VSCODE-IDE在C-C-项目编程中的使用" class="headerlink" title="💘VSCODE IDE在C/C++项目编程中的使用"></a>💘VSCODE IDE在C/C++项目编程中的使用</h1><h2 id="🌴IDE的作用"><a href="#🌴IDE的作用" class="headerlink" title="🌴IDE的作用"></a>🌴IDE的作用</h2><p>IDE的作用就是有用户交互界面的代码调试编辑器（也称集成开发环境，Integrated Development Environment）</p><h3 id="💨c-c-编程主要基于两类编译器"><a href="#💨c-c-编程主要基于两类编译器" class="headerlink" title="💨c/c++编程主要基于两类编译器"></a>💨c/c++编程主要基于两类编译器</h3><ul><li>gcc, <code>开源、更新较快</code></li><li>visual studio,<code>微软全家桶</code></li></ul><p>所有linux系统的均是用gcc，linux系统对c/c++的支持更好。linux系统的核心代码基本是用c/c++编写的。</p><p>windows系统上c/c++编程一般用<code>visual studio</code>,当然，为了用到与linux上一样的开源gcc编译器，可以在windows上安装<code>mingw</code>或者<code>cywin</code>两种中的任意一款编译器。</p><h3 id="🛴gcc编译器的没有图形Debug界面"><a href="#🛴gcc编译器的没有图形Debug界面" class="headerlink" title="🛴gcc编译器的没有图形Debug界面"></a>🛴gcc编译器的没有图形Debug界面</h3><p>visual studio自带的调试界面，编程比较方便。gcc的调试需要用<code>gdb</code>,而gdb存在的缺陷是其没有采用命令行调试，需要记住的命令太多，但缺少图像界面，大大降低了编程人员的生成效率。</p><p>由于gdb自身没有合适的IDE,项目配置通常用<code>makefile</code>。makefile继承linux系统下万物用命令行解决的风格。为了避免编写令人难懂的makefile文件，程序员开发了用于生成makefile的<code>cmake</code>工具 .</p><p>gcc等属于开源社区的软件，特点是版本多，没有统一的标准。导致很多公司开发了各自的IDE，如，JetBrain 公司的<code>Cion</code>, 微软公司的<code>VSCode</code>和IBM公司的<code>eclipse</code>等。VSCode,Cion和Eclipse均是top5的c/c++编辑器。其中，VSCode是后起之秀，由微软2015年发布的快平台编辑器。网上介绍较多，再此不再细说，感兴趣的同志可以自己去百度或谷歌一下。下面将介绍VSCode的C++代码调试。</p><h2 id="🚀VSCode"><a href="#🚀VSCode" class="headerlink" title="🚀VSCode"></a>🚀VSCode</h2><p>VSCode是一款IDE编辑器，注意是<code>编辑器</code>说白了就跟<code>记事本</code>一样，只是它额外具备配置编译环境和调试代码的功能。就跟notepat++很像。项目的编译环境配置文件通常由两个组成<code>task.json</code>和<code>launch.json</code>。</p><ul><li>task.json <code>负责配置生成可执行文件</code></li><li>launch.json <code>负责调试</code></li></ul><p>具体VSCode的使用文件可以参考<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcw==">官方说明文档<i class="fa fa-external-link-alt"></i></span><br>下面分别从单文件调试和项目文件调试两个方面进行测试，具体测试文档可参看<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRLNHkxODdrbg==">我的哔哩哔哩视频<i class="fa fa-external-link-alt"></i></span></p><h3 id="🚲单文件，单步调试"><a href="#🚲单文件，单步调试" class="headerlink" title="🚲单文件，单步调试"></a>🚲单文件，单步调试</h3><ul><li><p>配置生成可执行文件task.json</p></li><li><p>配置调试执行文件lauch.json</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class="line">    &quot;tasks&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;label&quot;: &quot;C/C++: cpp.exe build active file&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin\\cpp.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [</span><br><span class="line">                &quot;-g&quot;,</span><br><span class="line">                &quot;$&#123;file&#125;&quot;,</span><br><span class="line">                &quot;-o&quot;,</span><br><span class="line">                &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;options&quot;: &#123;</span><br><span class="line">                &quot;cwd&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;problemMatcher&quot;: [</span><br><span class="line">                &quot;$gcc&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;group&quot;: &quot;build&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 使用 IntelliSense 了解相关属性。 </span><br><span class="line">    // 悬停以查看现有属性的描述。</span><br><span class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;g++.exe - 生成和调试活动文件&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false,</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">            &quot;miDebuggerPath&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin\\gdb.exe&quot;,</span><br><span class="line">            &quot;setupCommands&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;preLaunchTask&quot;: &quot;g++.exe build active file&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="🚍项目文件，单步调试"><a href="#🚍项目文件，单步调试" class="headerlink" title="🚍项目文件，单步调试"></a>🚍项目文件，单步调试</h3><ul><li>CMake <code>负责配置生成可执行文件</code></li><li>launch.json <code>负责调试</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10.0)</span><br><span class="line"># 定义项目名称变量PROJECT_NAME, 默认值为demo</span><br><span class="line">set(PROJECT_NAME demo)</span><br><span class="line"></span><br><span class="line">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD_REQUIRED 14)</span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Setup include directory for this project</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">include_directories($&#123;PROJECT_SOURCE_DIR&#125;/include)</span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Locate sources and headers for this project</span><br><span class="line"># NB: headers are included so they will show up in IDEs</span><br><span class="line">#</span><br><span class="line">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;/src/*.cc)</span><br><span class="line">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;/include/*.h)</span><br><span class="line"></span><br><span class="line"># 指定生成目标</span><br><span class="line">add_executable($&#123;PROJECT_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 使用 IntelliSense 了解相关属性。 </span><br><span class="line">    // 悬停以查看现有属性的描述。</span><br><span class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;(gdb) 启动&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;\\build\\demo.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false,</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">            &quot;miDebuggerPath&quot;: &quot;D:\\Qt\\Tools\\mingw730_64\\bin\\gdb.exe&quot;,</span><br><span class="line">            &quot;setupCommands&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      VSCode你值得拥有。跨平台IDE编辑器VSCode，有了她你还要什么emacs?
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="VSCode" scheme="https://Hubery-Lee.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>hexo结合next主题搭建博客及其版本更新方法</title>
    <link href="https://hubery-lee.github.io/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/"/>
    <id>https://hubery-lee.github.io/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/</id>
    <published>2020-05-01T02:48:55.000Z</published>
    <updated>2020-05-05T01:30:26.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🍳此文要解决的问题"><a href="#🍳此文要解决的问题" class="headerlink" title="🍳此文要解决的问题"></a>🍳此文要解决的问题</h1><ul><li>原博客本地文件库在linux系统下，现在想迁移到windows下。</li><li>原博客使用的next主题版本落后</li><li>如何使配置文件不依赖next主题配置文件，使next主题文档更新更方便？</li></ul><h1 id="🚲方法"><a href="#🚲方法" class="headerlink" title="🚲方法"></a>🚲方法</h1><h2 id="🍗博客搭建工具有哪些？"><a href="#🍗博客搭建工具有哪些？" class="headerlink" title="🍗博客搭建工具有哪些？"></a>🍗博客搭建工具有哪些？</h2><ol><li>hexo  速度快，中文文档和教程比较多</li><li>jekyll  基于ruby语言</li><li>hugo  基于go语言 部署最快</li><li>pelican 基于python语言 快与安全</li></ol><p><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/comp.jpg" alt></p><h2 id="🧨基本原理"><a href="#🧨基本原理" class="headerlink" title="🧨基本原理"></a>🧨基本原理</h2><pre class="mermaid" style="text-align: center;">            graph LR            A[模板] --> B[编译]C(内容) --> BB --> D[网络发布]          </pre><p><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/frame.png" alt></p><h2 id="🍔我们用哪个工具？"><a href="#🍔我们用哪个工具？" class="headerlink" title="🍔我们用哪个工具？"></a>🍔我们用哪个工具？</h2><p><strong>在此，作者选择采用hexo工具。原因如下</strong></p><ol><li>作者以前的博客既是使用hexo搭建的，配置和上手较快。</li><li>作者尝试过使用github服务器自带的jekyll，发现生成速度比较慢，除此之外还需要<code>git</code>命令行操作，记住命令行比较麻烦。</li><li>hexo 开发者是台湾人，故而中文社区比较庞大；</li><li>hexo的模板个人感觉比较jekyll模板功能更加丰富。</li></ol><p>*<em>hexo主题模板有很多，配置文件中文文档最全的当属next主题 *</em></p><ol><li><span class="exturl" data-url="aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20v">老版本中文配置文档<i class="fa fa-external-link-alt"></i></span>  <code>不推荐使用</code></li><li><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=">next 主题官网说明文档<i class="fa fa-external-link-alt"></i></span> <code>具有官方维护团队，推荐使用该文档进行学习</code></li></ol><h1 id="🚆如何将博客的本地文档迁移到windows下"><a href="#🚆如何将博客的本地文档迁移到windows下" class="headerlink" title="🚆如何将博客的本地文档迁移到windows下"></a>🚆如何将博客的本地文档迁移到windows下</h1><ol><li><p>将博客文件夹拷贝到windows</p></li><li><p>安装<code>node.js</code></p></li><li><p>进入博客文件夹，安装npm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure></li><li><p>hexo生成部署即可</p></li></ol><h1 id="👼如何更新next主题"><a href="#👼如何更新next主题" class="headerlink" title="👼如何更新next主题"></a>👼如何更新next主题</h1><p>1.从github上下载next主题，解压后放置到themes主题下；</p><div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Solution 1</a></li><li class="tab"><a href="#fourth-unique-name-2">Solution 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p>github网页下载并解压</p></div><div class="tab-pane" id="fourth-unique-name-2"><p>在博客根文件夹下，命令行克隆</p>undefined</div></div></div><ol start="2"><li>修改<code>themes/next/_config.yml</code>配置文件，具体配置方法参考<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=">next 主题官网说明文档<i class="fa fa-external-link-alt"></i></span> </li></ol><h1 id="😍如何使配置文件不依赖themes-next-config-yml"><a href="#😍如何使配置文件不依赖themes-next-config-yml" class="headerlink" title="😍如何使配置文件不依赖themes/next/_config.yml"></a>😍如何使配置文件不依赖<code>themes/next/_config.yml</code></h1><p>只需将<code>themes/next/_config.yml</code>中你想修改的内容，拷贝到你的博客根目录下的<code>_config.yml</code>文件中就可以了。</p><p><strong>注意</strong> ：在拷贝到根目录下的<code>_config.yml</code>文件中前，需要添加<code>theme_config:</code>, 拷贝内容为其子内容，注意格式。拷贝内容每行前需要有两个空格，可以通过文档列编辑添加。</p><p>下次更新next版本，只需到next文件夹下，运行命令行<code>get pull</code>即可。</p><h1 id="🎈如何自定义配色布局等"><a href="#🎈如何自定义配色布局等" class="headerlink" title="🎈如何自定义配色布局等"></a>🎈如何自定义配色布局等</h1><h2 id="🎩页面布局配置"><a href="#🎩页面布局配置" class="headerlink" title="🎩页面布局配置"></a>🎩页面布局配置</h2><p>编辑根目录下<code>source\_data</code>下的配置文档，如<code>styles.styl``variables.styl</code>等即可。</p><h1 id="🎃配置成功测试"><a href="#🎃配置成功测试" class="headerlink" title="🎃配置成功测试"></a>🎃配置成功测试</h1><p>插件测试具体见<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzL3RhZy1wbHVnaW5zLw==">官方网站说明<i class="fa fa-external-link-alt"></i></span></p><h2 id="🧨Label测试"><a href="#🧨Label测试" class="headerlink" title="🧨Label测试"></a>🧨Label测试</h2><figure class="highlight md"><figcaption><span>label.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger.</span><br><span class="line"><span class="code">          '@Text' can be specified with or without space</span></span><br><span class="line"><span class="code">          E.g. 'success @text' similar to 'success@text'.</span></span><br><span class="line"><span class="code">          If not specified, default class will be selected.</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125;</span><br></pre></td></tr></table></figure><p>Lorem <span class="label default">ipsum</span> <span class="label primary">dolor sit</span> amet, consectetur <span class="label success">adipiscing elit,</span> sed <span class="label info">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p><p>Ut enim *<span class="label warning">ad</span>* minim veniam, quis <strong><span class="label danger">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p><p>Duis aute irure dolor in reprehenderit in voluptate <del><span class="label default">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><h2 id="✨图片组加载配置，3副图两行排列"><a href="#✨图片组加载配置，3副图两行排列" class="headerlink" title="✨图片组加载配置，3副图两行排列"></a>✨图片组加载配置，3副图两行排列</h2><figure class="highlight md"><figcaption><span>grouppicture.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class="line">&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;</span><br><span class="line"></span><br><span class="line">[group]  : Total number of pictures to add in the group.</span><br><span class="line">[layout] : Default picture under the group to show.</span><br></pre></td></tr></table></figure><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png" alt></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png" alt></div><div class="group-picture-column" style="width: 50%;"><img src="/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png" alt></div></div></div></div><h2 id="🎄mermaid-测试"><a href="#🎄mermaid-测试" class="headerlink" title="🎄mermaid 测试"></a>🎄mermaid 测试</h2><figure class="highlight md"><figcaption><span>mermaid.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br><span class="line"></span><br><span class="line">type : type of the mermaid chart, visit https://github.com/knsv/mermaid for more information.</span><br></pre></td></tr></table></figure><pre class="mermaid" style="text-align: center;">            sequenceDiagram            participant Aliceparticipant Bobparticipant John as John<br>Second LineAlice ->> Bob: Hello Bob, how are you?Bob-->>John: How about you John?Bob--x Alice: I am good thanks!Bob-x John: I am good thanks!Note right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.Bob-->Alice: Checking with John...alt either thisAlice->>John: Yeselse or thisAlice->>John: Noelse or this will happenAlice->John: Maybeendpar this happens in parallelAlice -->> Bob: Parallel message 1andAlice -->> John: Parallel message 2end          </pre><pre class="mermaid" style="text-align: center;">            graph LR            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)          </pre><h2 id="🎉tabs测试"><a href="#🎉tabs测试" class="headerlink" title="🎉tabs测试"></a>🎉tabs测试</h2><p>使用方法</p><figure class="highlight md"><figcaption><span>tabs.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span></span><br><span class="line">Any content (support inline tags too).</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id's as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line">[index]       : Index number of active tab.</span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It's will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line">[Tab caption] : Caption of current tab.</span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line">[@icon]       : FontAwesome icon name (without 'fa-' at the begining).</span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">Tags 1</a></li><li class="tab"><a href="#tags-2">Tags 2</a></li><li class="tab"><a href="#tags-3">Tags 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><p><strong>This is Tab 1.</strong></p><ol><li>One</li><li>Two</li><li>Three</li></ol><p>4-spaces code block:</p><pre><code>nano /etc</code></pre><p>Tagged code block:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">code tag</span><br><span class="line">code tag</span><br><span class="line">code tag</span><br></pre></td></tr></table></figure><div class="note default">            <p>Note default tag.</p>          </div></div><div class="tab-pane" id="tags-2"><p><strong>This is Tab 2.</strong></p><ul><li>Five</li><li>Six</li><li>Seven</li></ul><div class="note primary">            <div class="video-container"><iframe src="//www.youtube.com/embed/Kt7u5kr_P5o" frameborder="0" allowfullscreen></iframe></div>          </div></div><div class="tab-pane" id="tags-3"><p><strong>This is Tab 3.</strong></p><div class="tabs" id="sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-tabs-1">Sub Tabs 1</a></li><li class="tab"><a href="#sub-tabs-2">Sub Tabs 2</a></li><li class="tab"><a href="#sub-tabs-3">Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-tabs-1"><p><strong>This is Sub Tab 1.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>          </div><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div></div><div class="tab-pane" id="sub-tabs-2"><p><strong>This is Sub Tab 2.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div></div><div class="tab-pane" id="sub-tabs-3"><p><strong>This is Sub Tab 3.</strong></p><div class="tabs" id="sub-sub-tabs"><ul class="nav-tabs"><li class="tab active"><a href="#sub-sub-tabs-1">Sub-Sub Tabs 1</a></li><li class="tab"><a href="#sub-sub-tabs-2">Sub-Sub Tabs 2</a></li><li class="tab"><a href="#sub-sub-tabs-3">Sub-Sub Tabs 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sub-sub-tabs-1"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div></div><div class="tab-pane" id="sub-sub-tabs-2"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div></div><div class="tab-pane" id="sub-sub-tabs-3"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p><div class="note success">            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class="note warning">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class="note danger">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div>          </div></div></div></div></div></div></div></div></div></div><h2 id="🎊Note测试"><a href="#🎊Note测试" class="headerlink" title="🎊Note测试"></a>🎊Note测试</h2><p>使用方法：</p><figure class="highlight md"><figcaption><span>note.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></table></figure><div class="note primary">            <h4 id="Primary-Header"><a href="#Primary-Header" class="headerlink" title="Primary Header"></a>Primary Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note info">            <h3 id="Info-Header"><a href="#Info-Header" class="headerlink" title="Info Header"></a>Info Header</h3><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note success">            <h4 id="Success-Header"><a href="#Success-Header" class="headerlink" title="Success Header"></a>Success Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note warning">            <h4 id="Warning-Header"><a href="#Warning-Header" class="headerlink" title="Warning Header"></a>Warning Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><div class="note danger">            <h4 id="Danger-Header"><a href="#Danger-Header" class="headerlink" title="Danger Header"></a>Danger Header</h4><p><strong>Welcome</strong> to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo!<i class="fa fa-external-link-alt"></i></span></p>          </div><p><code>等等</code></p><h2 id="🎋button测试"><a href="#🎋button测试" class="headerlink" title="🎋button测试"></a>🎋button测试</h2><figure class="highlight md"><figcaption><span>button.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Tag Alias --&gt;</span></span></span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class="line"></span><br><span class="line">url     : Absolute or relative path to URL.</span><br><span class="line">text    : Button text. Required if no icon specified.</span><br><span class="line">icon    : FontAwesome icon name (without 'fa-' at the begining). Required if no text specified.</span><br><span class="line">[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class="line"><span class="code">          Optional parameter.</span></span><br><span class="line">[title] : Tooltip at mouseover.</span><br><span class="line"><span class="code">          Optional parameter.</span></span><br></pre></td></tr></table></figure><a class="btn" href="#">            <i class="fa fa-"></i>Text          </a><a class="btn" href="#" title="Title">            <i class="fa fa-"></i>Text & Title          </a><p><a class="btn" href="#">            <i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon          </a><a class="btn" href="#" title="Title">            <i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon & Title          </a></p>Lorem <a class="btn" href="#">            <i class="fa fa-home fa-fw fa-lg"></i>Lorem          </a> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident <a class="btn" href="#">            <i class="fa fa-home fa-fw fa-lg"></i>Ipsum          </a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p><div class="note info">            <a class="btn" href="#">            <i class="fa fa-home fa-fw"></i>Text & Icon          </a><a class="btn" href="#" title="Title">            <i class="fa fa-home"></i>          </a><a class="btn" href="#">            <i class="fa fa-"></i>Text          </a><p><a href="#">Link</a></p>          </div><div class="text-center"><div><a class="btn" href="#">            <i class="fa fa-heading"></i>          </a><a class="btn" href="#">            <i class="fab fa-edge"></i>          </a><a class="btn" href="#">            <i class="fa fa-times"></i>          </a><a class="btn" href="#">            <i class="far fa-circle"></i>          </a></div><div><a class="btn" href="#">            <i class="fa fa-italic"></i>          </a><a class="btn" href="#">            <i class="fab fa-scribd"></i>          </a></div><div><a class="btn" href="#">            <i class="fab fa-google"></i>          </a><a class="btn" href="#">            <i class="fab fa-chrome"></i>          </a><a class="btn" href="#">            <i class="fab fa-opera"></i>          </a><a class="btn" href="#">            <i class="fa fa-gem fa-rotate-270"></i>          </a></div></div><div class="text-center"><a class="btn" href="#" title="Previous Chapter (Full Image)">            <i class="fa fa-arrow-left fa-fw fa-lg"></i>Previous Chapter          </a> <a class="btn" href="#" title="Next Chapter (Label)">            <i class="fa fa-arrow-right fa-fw fa-lg"></i>Next Chapter          </a></div><div class="text-center"><a class="btn" href="https://github.com/theme-next/hexo-theme-next" title="NexT source code" target="_blank" rel="noopener">            <i class="fab fa-github fa-fw fa-lg"></i>NexT          </a></div><h2 id="🎏Caniuse测试"><a href="#🎏Caniuse测试" class="headerlink" title="🎏Caniuse测试"></a>🎏Caniuse测试</h2><figure class="highlight md"><figcaption><span>canius.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% caniuse feature @ periods %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Tag Alias --&gt;</span></span></span><br><span class="line">&#123;% can feature @ periods %&#125;</span><br><span class="line"></span><br><span class="line">feature : Search for the feature you want on https://caniuse.com, then click on the hash sign to the left of the search result heading and you will get the unique name of this feature.</span><br><span class="line">periods : Select the browser versions to display. Supported values: past<span class="emphasis">_1, past_</span>2, past<span class="emphasis">_3, past_</span>4, past<span class="emphasis">_5, current, future_</span>3, future<span class="emphasis">_2, future_</span>1. If this value is empty, the default value 'current' will be used.</span><br></pre></td></tr></table></figure><iframe data-feature="sharedarraybuffer" src="https://caniuse.bitsofco.de/embed/index.html?feat=sharedarraybuffer&periods=current&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe><iframe data-feature="link-rel-modulepreload" src="https://caniuse.bitsofco.de/embed/index.html?feat=link-rel-modulepreload&periods=past_1,past_2,past_3,past_4,past_5&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe><h2 id="🧧pdf测试"><a href="#🧧pdf测试" class="headerlink" title="🧧pdf测试"></a>🧧pdf测试</h2><figure class="highlight md"><figcaption><span>pdf.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf url [height] %&#125;</span><br><span class="line"></span><br><span class="line">[url]    : Relative path to PDF file.</span><br><span class="line">[height] : Optional. Height of the PDF display element, e.g. 800px.</span><br></pre></td></tr></table></figure><div class="pdfobject-container" data-target="https://sci-hub.tw/downloads-ii/2020-03-01/f0/licata2020.pdf" data-height="600px"></div><h2 id="🎞video测试"><a href="#🎞video测试" class="headerlink" title="🎞video测试"></a>🎞video测试</h2><figure class="highlight md"><figcaption><span>video.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video url %&#125;</span><br></pre></td></tr></table></figure><video src="https://assets.mixkit.co/videos/download/mixkit-watering-a-flower-pot-1780.mp4" preload="metadata" controls playsinline poster>Sorry, your browser does not support the video tag.</video>]]></content>
    
    <summary type="html">
    
      博客搭建及主题切换与更新方法
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="hexo" scheme="https://Hubery-Lee.github.io/tags/hexo/"/>
    
      <category term="博客搭建" scheme="https://Hubery-Lee.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="next主题" scheme="https://Hubery-Lee.github.io/tags/next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>作者github项目导航</title>
    <link href="https://hubery-lee.github.io/2020/04/30/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/"/>
    <id>https://hubery-lee.github.io/2020/04/30/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/</id>
    <published>2020-04-29T16:00:00.000Z</published>
    <updated>2020-05-01T09:19:35.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人笔记"><a href="#个人笔记" class="headerlink" title="个人笔记"></a>个人笔记</h1><ol><li>日常学习笔记<a href="https://hubery-lee.github.io/Notes/">Notes</a></li></ol><h1 id="Bilibili视频资料"><a href="#Bilibili视频资料" class="headerlink" title="Bilibili视频资料"></a>Bilibili视频资料</h1><ol><li>Geant4教程<a href="https://hubery-lee.github.io/Geant4-jiaocheng/">Geant4-jiaocheng</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;个人笔记&quot;&gt;&lt;a href=&quot;#个人笔记&quot; class=&quot;headerlink&quot; title=&quot;个人笔记&quot;&gt;&lt;/a&gt;个人笔记&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;日常学习笔记&lt;a href=&quot;https://hubery-lee.github.io/Notes/&quot;&gt;Note
      
    
    </summary>
    
    
      <category term="作者github项目导航" scheme="https://Hubery-Lee.github.io/categories/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/"/>
    
    
      <category term="作者github项目导航" scheme="https://Hubery-Lee.github.io/tags/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>archlinux安装与使用体验</title>
    <link href="https://hubery-lee.github.io/2020/04/28/archlinux%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://hubery-lee.github.io/2020/04/28/archlinux%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</id>
    <published>2020-04-28T10:01:44.000Z</published>
    <updated>2020-04-28T14:10:50.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="archlinux之manjaro之使用体验"><a href="#archlinux之manjaro之使用体验" class="headerlink" title="archlinux之manjaro之使用体验"></a>archlinux之manjaro之使用体验</h1><h2 id="1-动机"><a href="#1-动机" class="headerlink" title="1.动机"></a>1.动机</h2><p>早上在微信群里看到有人发了一个manjaro系统上跑程序的图。我瞬间惊叹于其操作系统图像界面的炫酷。然后尝试去查证和安装manjaro。在查阅相关资料后，发现网上很多人在推荐manjaro、mint和deepin。今天分别对manjaro和deepin进行了安装和使用尝试。</p><h2 id="2-​现今Linux系统那么多，该怎么选呢？"><a href="#2-​现今Linux系统那么多，该怎么选呢？" class="headerlink" title="2.​现今Linux系统那么多，该怎么选呢？"></a>2.​现今Linux系统那么多，该怎么选呢？</h2><p>将linux系统推广到广为人知的功臣主要是Canoical和redhat。Canoical维护的Ubuntu具有安装简易和图像界面炫酷等特点，这些使得Ubuntu迅速占据个人PC装机量。Redhat系列的linux系统极其稳定，使得其被企业广泛使用。</p><p>Ubuntu基于Debian，属于Debian家族。具体的Debian的介绍可看<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9EZWJpYW4vNzQ4NjY3P2ZyPWFsYWRkaW4=">百科<i class="fa fa-external-link-alt"></i></span>，Debian是由自由操作系统合作组织的作品，所建基础工具均来着开源社区。特点是系统小运行速度快。在debian上虚拟的windows运行速度比windows原生系统还要快。</p><p>Redhat是一家开源解决方案供应商，主要服务于企业。而企业对操作系统的要求主要是稳定，维护方便，不会因为经常更新软件而出现奔溃或问题，故而redhat 的linux系统一般不会像个人linux PC系统那样频繁的更新。redhat系统一般软件版本不新，版本更新一般以5年为周期，且付费。但redhat发展了其上游系统Fedora和下游系统Centos。 Fedora的特点是redhat系统的创新尝试。新技术新集成先在fedora上尝试，没有问题后再将其应用到redhat系统上。而Centos是免费的redhat系统，其特点是开源稳定免费，但其技术版本要落后于redhat系统。</p><p>再看一下<span class="exturl" data-url="aHR0cHM6Ly9kaXN0cm93YXRjaC5jb20vZHdyZXMucGhwP3Jlc291cmNlPXBvcHVsYXJpdHk=">全球linux下载热点排行版<i class="fa fa-external-link-alt"></i></span>    </p><p>排名前三的MXlinux、manjaro和mint的特点是，图像界面炫丽，安装软件方便。比较适合个人用户工作和体验。各种软件库滚动更新快，追求新颖性，缺点是稳定性较差和图像界面内存占用较多。比较适合个人用户使用和学习。</p><p>manjaro 基于archlinux。archlinux的特点是优雅、极简和注重代码正确。通过安装系统和软件，可以使用户学习linux的原理和系统的操作。</p><table><thead><tr><th>家族</th><th>Debian</th><th>redhat</th><th>archlinux</th></tr></thead><tbody><tr><td>特点</td><td>软件多开源、系统小、运行速度快</td><td>稳定</td><td>优雅、简洁</td></tr><tr><td>用户对象</td><td>个人PC、单片机，企业等</td><td>企业</td><td>个人</td></tr><tr><td>用户追求</td><td>使用简易，图形炫酷</td><td>系统稳定不影响企业经营</td><td>学习和优雅的使用体验</td></tr></tbody></table><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>由Hubery-Lee编写，喜欢请收藏给一个赞吧捐赠</p><h2 id="Copyright-copyright-2019-Hubery-Lee"><a href="#Copyright-copyright-2019-Hubery-Lee" class="headerlink" title="Copyright :copyright:2019 Hubery-Lee"></a>Copyright :copyright:2019 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWU=">Hubery-Lee<i class="fa fa-external-link-alt"></i></span></h2>]]></content>
    
    <summary type="html">
    
      本文介绍如何选择linux系统
    
    </summary>
    
    
      <category term="软件使用体验" scheme="https://Hubery-Lee.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="linux" scheme="https://Hubery-Lee.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>如何利用python爬取网页图片-你懂的</title>
    <link href="https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87-%E4%BD%A0%E6%87%82%E7%9A%84/"/>
    <id>https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87-%E4%BD%A0%E6%87%82%E7%9A%84/</id>
    <published>2020-04-28T08:27:37.000Z</published>
    <updated>2020-04-30T17:46:44.186Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何利用python爬取网页图片"><a href="#如何利用python爬取网页图片" class="headerlink" title="如何利用python爬取网页图片"></a>如何利用python爬取网页图片</h1><h2 id="1-相关依赖库"><a href="#1-相关依赖库" class="headerlink" title="1.相关依赖库"></a>1.相关依赖库</h2><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY3J1bW15LmNvbS9zb2Z0d2FyZS9CZWF1dGlmdWxTb3VwLw==">BeautifulSoup<i class="fa fa-external-link-alt"></i></span>   可以从HTML或XML文件中提取数据的Python库</p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly8yLnB5dGhvbi1yZXF1ZXN0cy5vcmcvL2VuL21hc3Rlci8=">requests<i class="fa fa-external-link-alt"></i></span>  <strong>Requests</strong> is an elegant and simple HTTP library for Python, built for human beings. </p></li></ul><h2 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h2><p>代码编写调试过程，可以参考简书📕 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=">小董不太懂<i class="fa fa-external-link-alt"></i></span>的教程，其代码编写思路如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 保存或处理爬去的信息</span><br><span class="line">op1=&gt;operation: 利用获取爬取的网页网址的html</span><br><span class="line">op2=&gt;operation: 利用BeautifulSoup将html信息转换成xml信息</span><br><span class="line">op3=&gt;operation: 利用BeautifulSoup挑选xml中想要的信息</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;op2-&gt;op3-&gt;e</span><br></pre></td></tr></table></figure><p>下面贴出代码全文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">'If-None-Match'</span>: <span class="string">'W/"5cc2cd8f-2c58"'</span>,</span><br><span class="line">           <span class="string">"Referer"</span>: <span class="string">"http://www.mzitu.com/all/"</span>,</span><br><span class="line">           <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.204 SafarMozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span>&#125;</span><br><span class="line"><span class="comment">#请求头的这个Referer一定要加，妹子网有反爬，反正粘贴复制就行，多加几个信息无所谓</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment">#print(response.text)</span></span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        print(<span class="string">'获取索引页失败'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">    items = soup.select(<span class="string">'#pins li'</span>)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> items:</span><br><span class="line">        href = link.a[<span class="string">'href'</span>]</span><br><span class="line">        <span class="comment">#print(href)</span></span><br><span class="line">        get_detail_page(href)</span><br><span class="line">    <span class="comment"># print(items)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_detail_page</span><span class="params">(href)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        detail_url = href + <span class="string">'/'</span> + str(i)</span><br><span class="line">        <span class="keyword">if</span> requests.get(detail_url, headers=headers).status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment">#print(detail_url)</span></span><br><span class="line">            parse_detail_page(detail_url)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'已至末尾页'</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_detail_page</span><span class="params">(detail_url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(detail_url, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            print(<span class="string">'获取详情页成功'</span>)</span><br><span class="line">            detail_html = response.text</span><br><span class="line">            <span class="comment"># print(detail_html)</span></span><br><span class="line">            get_image(detail_html)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        print(<span class="string">'获取详情页失败'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_image</span><span class="params">(detail_html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(detail_html, <span class="string">'lxml'</span>)</span><br><span class="line">    items= soup.select(<span class="string">'.main-image'</span>)</span><br><span class="line">    <span class="comment"># print(items)</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="comment">#return item.img['src']</span></span><br><span class="line">    image = item.img[<span class="string">'src'</span>]</span><br><span class="line">        save_image(image)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_image</span><span class="params">(image)</span>:</span></span><br><span class="line">   response = requests.get(image,headers=headers)</span><br><span class="line">   <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">       data = response.content</span><br><span class="line">       file_path = <span class="string">'&#123;0&#125;/&#123;1&#125;.&#123;2&#125;'</span>.format(os.getcwd(), md5(data).hexdigest(), <span class="string">'jpg'</span>)</span><br><span class="line">       print(file_path)</span><br><span class="line">       <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_path):</span><br><span class="line">           <span class="keyword">with</span> open(file_path, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">               f.write(data)</span><br><span class="line">               f.close()</span><br><span class="line">               print(<span class="string">'保存成功'</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       print(<span class="string">'保存失败'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'https://www.mzitu.com/tag/youhuo/'</span></span><br><span class="line">    html = get_page(url)</span><br><span class="line">    parse_page(html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>[^1] <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=">https://www.jianshu.com/p/37202bec8f97<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      利用python代码自动爬取妹子图
    
    </summary>
    
    
      <category term="python代码应用" scheme="https://Hubery-Lee.github.io/categories/python%E4%BB%A3%E7%A0%81%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="python爬妹子图" scheme="https://Hubery-Lee.github.io/tags/python%E7%88%AC%E5%A6%B9%E5%AD%90%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何利用python发送邮件进行表白和问安</title>
    <link href="https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%BF%9B%E8%A1%8C%E8%A1%A8%E7%99%BD%E5%92%8C%E9%97%AE%E5%AE%89/"/>
    <id>https://hubery-lee.github.io/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%BF%9B%E8%A1%8C%E8%A1%A8%E7%99%BD%E5%92%8C%E9%97%AE%E5%AE%89/</id>
    <published>2020-04-28T08:20:26.000Z</published>
    <updated>2020-04-28T08:31:08.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何利用python发送邮件"><a href="#如何利用python发送邮件" class="headerlink" title="如何利用python发送邮件"></a>如何利用python发送邮件</h1><h3 id="1-python-相关依赖库"><a href="#1-python-相关依赖库" class="headerlink" title="1. python 相关依赖库"></a>1. python 相关依赖库</h3><p>说明 ：本文档针对的式利用python 3.7 发送邮件，python发送邮件的相关包比较多，除了SMTP还有POP3和IMAP两种邮件协议。本文档针对的式利用stmp服务器发送邮件</p><p><strong>相关依赖库</strong></p><ul><li>stmplib</li><li>EmailMessage</li></ul><h3 id="2-测试利用smtp发送邮件"><a href="#2-测试利用smtp发送邮件" class="headerlink" title="2. 测试利用smtp发送邮件"></a>2. 测试利用smtp发送邮件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"xxx@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"xxx"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)</span><br><span class="line">    </span><br><span class="line">    subject = <span class="string">'grab dinner this weekend?'</span></span><br><span class="line">    body = <span class="string">'how about dinner at 7pm this saturday?'</span></span><br><span class="line">    </span><br><span class="line">    msg = <span class="string">f'Subject:<span class="subst">&#123;subject&#125;</span>\n\n<span class="subst">&#123;body&#125;</span>'</span></span><br><span class="line">    </span><br><span class="line">    smtp.sendmail(EMAIL_ADDRESSS,<span class="string">'xxx@126.com'</span>,msg)</span><br></pre></td></tr></table></figure><h3 id="3-email-message使用"><a href="#3-email-message使用" class="headerlink" title="3. email.message使用"></a>3. email.message使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"XXX@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'grab dinner this weekend?'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'how about dinner at 7pm this saturday?'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="4-发送给多个用户"><a href="#4-发送给多个用户" class="headerlink" title="4.发送给多个用户"></a>4.发送给多个用户</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">multi_recipients = [<span class="string">'Fxxx@gmail.com'</span>,<span class="string">'Mxxx@gmail.com'</span>]</span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'grab dinner this weekend?'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">','</span>.join(multi_recipients)</span><br><span class="line">msg.set_content(<span class="string">'how about dinner at 7pm this saturday?'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="5-Add-image-attachment"><a href="#5-Add-image-attachment" class="headerlink" title="5.Add image attachment"></a>5.Add image attachment</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'Check out Bronx as puppy!'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'Image attched ...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'P1.png'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    file_data = f.read()</span><br><span class="line">    <span class="comment">#file_path = os.getcwd()</span></span><br><span class="line">    <span class="comment">#print(file_path)</span></span><br><span class="line">    file_type = imghdr.what(f.name)</span><br><span class="line">    <span class="comment">#print(file_type)</span></span><br><span class="line">    <span class="comment">#file_name =f.name</span></span><br><span class="line"></span><br><span class="line">msg.add_attachment(file_data, maintype=<span class="string">'image'</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class="line"><span class="comment">#msg.add_attachment(file_data, maintype='image',subtype= filetype, filename = file_name))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="6-Add-images-attachments"><a href="#6-Add-images-attachments" class="headerlink" title="6. Add images attachments"></a>6. Add images attachments</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'Check out Bronx as puppy!'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'Image attched ...'</span>)</span><br><span class="line"></span><br><span class="line">files =[<span class="string">'P1.png'</span>,<span class="string">'P2.png'</span>,<span class="string">'girl.jpeg'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">with</span> open(file,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_data = f.read()</span><br><span class="line"><span class="comment">#         file_path = os.getcwd()</span></span><br><span class="line"><span class="comment">#         print(file_path)</span></span><br><span class="line"><span class="comment">#         file_type = imghdr.what(f.name)</span></span><br><span class="line"><span class="comment">#         print(file_type)</span></span><br><span class="line"></span><br><span class="line">    msg.add_attachment(file_data, maintype=<span class="string">'image'</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class="line"><span class="comment">#     msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(None, file_data))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="7-Add-pdf-attachment"><a href="#7-Add-pdf-attachment" class="headerlink" title="7. Add pdf attachment"></a>7. Add pdf attachment</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"XXX"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'Check out Bronx as puppy!'</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'Image attched ...'</span>)</span><br><span class="line"></span><br><span class="line">files =[<span class="string">'EEE.pdf'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">with</span> open(file,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_data = f.read()</span><br><span class="line"><span class="comment">#         file_path = os.getcwd()</span></span><br><span class="line"><span class="comment">#         print(file_path)</span></span><br><span class="line"><span class="comment">#         file_type = imghdr.what(f.name)</span></span><br><span class="line"><span class="comment">#         print(file_type)</span></span><br><span class="line"></span><br><span class="line">    msg.add_attachment(file_data, maintype=<span class="string">'application'</span>,subtype=<span class="string">'octet-stream'</span>,filename = f.name)</span><br><span class="line"><span class="comment">#     msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(None, file_data))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="8-Using-plain-text-to-send-html-email"><a href="#8-Using-plain-text-to-send-html-email" class="headerlink" title="8.Using plain text to send html  email"></a>8.Using plain text to send html  email</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">from</span> email.message <span class="keyword">import</span> EmailMessage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HTML = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html lang="en"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div align="center"&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;😘 Daily&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;br/&gt;</span></span><br><span class="line"><span class="string">#        &lt;img style="padding: 0.60em; background: white; box-shadow: 1px #1px 10px #999;" #src="cid:one" /&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">EMAIL_ADDRESSS =  <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">EMAIL_PASSWORD = <span class="string">"lihui123"</span>   <span class="comment">#邮箱smtp授权码</span></span><br><span class="line"></span><br><span class="line">msg = EmailMessage()</span><br><span class="line">msg[<span class="string">'Subject'</span>] = <span class="string">'This is a html email using plain '</span></span><br><span class="line">msg[<span class="string">'From'</span>] = EMAIL_ADDRESSS</span><br><span class="line">msg[<span class="string">'To'</span>] = <span class="string">'hrbeulh@126.com'</span></span><br><span class="line">msg.set_content(<span class="string">'This is a plain test email'</span>)</span><br><span class="line"></span><br><span class="line">msg.add_alternative(HTML,subtype=<span class="string">'html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(<span class="string">'smtp.126.com'</span>,<span class="number">25</span>) <span class="keyword">as</span> smtp:</span><br><span class="line">    </span><br><span class="line">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class="line">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>python3.7 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2VtYWlsLmV4YW1wbGVzLmh0bWw=">doc/library/email.examples<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1KUkNKNlJ0RTN4VQ==">Corey Schafer youtube视频<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="如何给html邮件文件中添加图片"><a href="#如何给html邮件文件中添加图片" class="headerlink" title="如何给html邮件文件中添加图片"></a>如何给html邮件文件中添加图片</h2><h3 id="1-相关依赖库"><a href="#1-相关依赖库" class="headerlink" title="1. 相关依赖库"></a>1. 相关依赖库</h3><p>目前采用的式python2发邮件的库，python3发送邮件方式相对要简化了一些，但是还没有弄懂，感兴趣的同学可以探索以下</p><p><strong>相关库文件</strong></p><ul><li>smtplib</li><li>asyncio</li><li>MIMEImage</li><li>MIMEMultipart</li><li>MIMEText</li><li>Header</li><li>pyppeteer</li></ul><h3 id="2-代码思路"><a href="#2-代码思路" class="headerlink" title="2. 代码思路"></a>2. 代码思路</h3><pre class="mermaid">graph TDA[import libraries]-->B[获取待发送信息材料]B-->C[html信息]B--pyppeteer-->D[打开网页并截图工具截取图片]D--asyncio-->CC--smtp-->E[发送信息]</pre><p><strong>注释：</strong> Mermaid(美人鱼)图的编写可参考简书此文  <span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9iNDIxY2M3MjNkYTU=">1<i class="fa fa-external-link-alt"></i></span></p><h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3.代码实现"></a>3.代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"></span><br><span class="line">FALL_IN_LOVE = (<span class="number">2019</span>, <span class="number">8</span>, <span class="number">22</span>)</span><br><span class="line"></span><br><span class="line">MAIL_HOST = <span class="string">"smtp.126.com"</span></span><br><span class="line">MAIL_USER = <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">MAIL_PASS = <span class="string">"lihui123"</span></span><br><span class="line">MAIL_SENDER = <span class="string">"hrbeulh@126.com"</span></span><br><span class="line">MAIL_RECEIVER = [<span class="string">"1306504695@qq.com"</span>,<span class="string">"hrbeulh@126.com"</span>]</span><br><span class="line"></span><br><span class="line">MAIL_ENCODING = <span class="string">"utf8"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_loving_days</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取恋爱天数</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    today = datetime.datetime.today()</span><br><span class="line">    anniversary = datetime.datetime(*FALL_IN_LOVE)</span><br><span class="line">    <span class="keyword">return</span> (today - anniversary).days</span><br><span class="line"></span><br><span class="line">HTML = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html lang="en"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div align="center"&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;😘 男朋友的日常问候&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;br/&gt;</span></span><br><span class="line"><span class="string">        &lt;img style="padding: 0.60em; background: white; box-shadow: 1px 1px 10px #999;" src="cid:one" /&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">IMAGE_NAME = <span class="string">"one.png"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#open website and screenshot</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">()</span>:</span></span><br><span class="line">    browser = <span class="keyword">await</span> launch(</span><br><span class="line">        &#123;<span class="string">"args"</span>: [<span class="string">"--no-sandbox"</span>, <span class="string">"--disable-setuid-sandbox"</span>]&#125;</span><br><span class="line">    )</span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">"http://wufazhuce.com/"</span>)</span><br><span class="line">    <span class="keyword">await</span> page.screenshot(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"path"</span>: IMAGE_NAME,</span><br><span class="line">            <span class="string">"clip"</span>: &#123;<span class="string">"x"</span>: <span class="number">60</span>, <span class="string">"y"</span>: <span class="number">120</span>, <span class="string">"height"</span>: <span class="number">570</span>, <span class="string">"width"</span>: <span class="number">700</span>&#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    html_content = HTML.replace(<span class="string">"&#123;loving_days&#125;"</span>, str(get_loving_days()))</span><br><span class="line"></span><br><span class="line">    msg = MIMEMultipart(<span class="string">"alternative"</span>)</span><br><span class="line">    msg[<span class="string">"Subject"</span>] = Header(<span class="string">"😘 男朋友的日常问候"</span>, MAIL_ENCODING )</span><br><span class="line">    msg[<span class="string">"From"</span>] = Header(<span class="string">"暖宝宝"</span>, MAIL_ENCODING)</span><br><span class="line">    msg[<span class="string">"To"</span>] = Header(<span class="string">"小仙女"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(IMAGE_NAME, <span class="string">"rb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        img = MIMEImage(f.read())</span><br><span class="line">        img.add_header(<span class="string">"Content-ID"</span>, <span class="string">"one"</span>)</span><br><span class="line">        msg.attach(img)</span><br><span class="line">    msg.attach(MIMEText(html_content, <span class="string">"html"</span>, MAIL_ENCODING))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smtp_obj = smtplib.SMTP_SSL(MAIL_HOST)</span><br><span class="line">        smtp_obj.login(MAIL_USER, MAIL_PASS)</span><br><span class="line">        smtp_obj.sendmail(MAIL_SENDER, MAIL_RECEIVER, msg.as_string())</span><br><span class="line">        smtp_obj.quit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class="line">    send_email()</span><br></pre></td></tr></table></figure><h2 id="python3-如何将中文转换成urlencode"><a href="#python3-如何将中文转换成urlencode" class="headerlink" title="python3 如何将中文转换成urlencode"></a>python3 如何将中文转换成urlencode</h2><h3 id="1-相关依赖库-1"><a href="#1-相关依赖库-1" class="headerlink" title="1.相关依赖库"></a>1.相关依赖库</h3><ul><li>quote, unquote</li></ul><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote,quote</span><br><span class="line"> </span><br><span class="line">url1 = <span class="string">"https://www.qichacha.com/search?key=河南正商河洛置业有限公司"</span></span><br><span class="line">url2 = <span class="string">"https://www.qichacha.com/search?key=%E6%B2%B3%E5%8D%97%E6%AD%A3%E5%95%86%E6%B2%B3%E6%B4%9B%E7%BD%AE%E4%B8%9A%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8"</span></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line">url = unquote(url2)</span><br><span class="line">print(url)</span><br><span class="line"><span class="comment">#编码</span></span><br><span class="line">url = quote(<span class="string">"河南正商河洛置业有限公司"</span>)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      教你如何用python给女朋友发表白邮件和问安
    
    </summary>
    
    
      <category term="python代码应用" scheme="https://Hubery-Lee.github.io/categories/python%E4%BB%A3%E7%A0%81%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="python邮件表白" scheme="https://Hubery-Lee.github.io/tags/python%E9%82%AE%E4%BB%B6%E8%A1%A8%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>多人协同在线编辑文档软件使用体验</title>
    <link href="https://hubery-lee.github.io/2020/04/28/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E6%96%87%E6%A1%A3%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <id>https://hubery-lee.github.io/2020/04/28/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E6%96%87%E6%A1%A3%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</id>
    <published>2020-04-28T08:05:16.000Z</published>
    <updated>2020-04-28T14:10:04.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多人协同在线编辑文档软件使用体验"><a href="#多人协同在线编辑文档软件使用体验" class="headerlink" title="多人协同在线编辑文档软件使用体验"></a>多人协同在线编辑文档软件使用体验</h1><h2 id="什么是协同在线编辑文档？"><a href="#什么是协同在线编辑文档？" class="headerlink" title="什么是协同在线编辑文档？"></a>什么是协同在线编辑文档？</h2><ul><li><p>协同 ——多人一起完成一件事情</p></li><li><p>在线——online，在网络上实时做一件事</p></li><li><p>编辑文档——编写文档，如，word，ppt，excel，支持pdf图片等的导出。</p><h2 id="🚩目前市场上存在的产品"><a href="#🚩目前市场上存在的产品" class="headerlink" title="🚩目前市场上存在的产品"></a>🚩目前市场上存在的产品</h2></li><li><p><strong>onlyoffice</strong></p><ul><li><p>其是一款开源的协作文档、项目及邮件管理软件。</p></li><li><p>图像界面跟接近office，比较方便使用</p></li><li><p>开源特性，数据可以放到自己的服务器上</p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/onlyoffice.png" alt="word"></p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/onlyoffice_ppt.png" alt="ppt"></p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/onlyoffice_excel.png" alt="excel"></p></li></ul></li></ul><ul><li><p><strong>石墨文档</strong></p><ul><li><p>国产知名文本协作编辑软件，优点是用户交互界面做的比较好，不过是水墨风格，偏性冷淡风。</p></li><li><p>数据不可以发到用户服务器上，没有TIM方便，无办公社交功能。</p></li><li><p>无自己的核心功能，但使用简便性类似于Google Doc</p></li><li><p>无待办事项等功能</p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/%E7%9F%B3%E5%A2%A8%E6%96%87%E6%A1%A3.jpg" alt></p></li></ul></li></ul><ul><li><p><strong>一起写</strong></p></li><li><p><strong>腾讯文档协作TIM</strong></p><ul><li>结合了社交与文档协同编辑功能</li><li>有待办事项和日程安排功能</li></ul></li><li><p><strong>google doc</strong></p><ul><li><p>批注功能更友好，方便。</p></li><li><p>有待办事项和日程安排功能</p></li><li><p>缺点，国内用不了他的平板和手机等功能</p><p><img src="/2020/04/28/多人协同在线编辑文档软件使用体验/googleDOC.jpg" alt></p></li></ul></li></ul><p><a href="以下三个均是国内外office主要开发者开发，均有电脑，平板和手机用户端。"></a></p><ul><li><p>office 365</p></li><li><p>office online</p></li><li><p>wps</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>推荐使用TIM，腾讯出品结合了社交功能外，大公司维护比较好，不会轻易倒闭。</p><p>推荐使用onlyoffice，开源自定制特性较好。</p>]]></content>
    
    <summary type="html">
    
      协同办公软件使用体验
    
    </summary>
    
    
      <category term="软件使用体验" scheme="https://Hubery-Lee.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="协同办公" scheme="https://Hubery-Lee.github.io/tags/%E5%8D%8F%E5%90%8C%E5%8A%9E%E5%85%AC/"/>
    
  </entry>
  
  <entry>
    <title>CMakeLists.txt编写基础知识</title>
    <link href="https://hubery-lee.github.io/2018/11/23/CMakeLists-txt%E7%BC%96%E5%86%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://hubery-lee.github.io/2018/11/23/CMakeLists-txt%E7%BC%96%E5%86%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2018-11-22T16:20:51.000Z</published>
    <updated>2020-04-28T00:25:34.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NDUuaHRtbA==">cmake 背景知识<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTEuaHRtbA==">cmake 基础2<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTUuaHRtbA==">cmake  共享库文件，外部链接<i class="fa fa-external-link-alt"></i></span></p><h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><p><strong>说明</strong><br>采用c++的类来写hello world，然后编写教程。</p><ul><li>bin  二进制文档</li><li>build 链接文档</li><li>doc README、COPYRIGHT等的说明文档</li><li>inc 头文件文档  hello.hh</li><li>src 源文件文档  hello.cc<br>main.cc 为主文件</li></ul><p><strong>附录</strong></p><ul><li>main.cc</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;hello.hh&quot;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">  HelloFunc hi;</span><br><span class="line">  hi.Hello();</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>hello.hh</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#ifndef HELLO_hh</span><br><span class="line">#define HELLO_hh 1</span><br><span class="line"></span><br><span class="line">class HelloFunc</span><br><span class="line">&#123;</span><br><span class="line"> public:</span><br><span class="line">  HelloFunc();</span><br><span class="line">  virtual ~HelloFunc();  </span><br><span class="line">  </span><br><span class="line">  void Hello();</span><br><span class="line"> private:</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><ul><li>hello.cc</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;hello.hh&quot;</span><br><span class="line">#include &quot;iostream&quot;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">HelloFunc::HelloFunc()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HelloFunc::~HelloFunc()</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line">void HelloFunc::Hello()</span><br><span class="line">&#123;</span><br><span class="line">  cout&lt;&lt;&quot;Hello World&quot;&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>-CMakeList.txt 编译文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line">##  cmake module authored by Hubery Lee(李会)</span><br><span class="line">##  2018年11月22日 </span><br><span class="line">##</span><br><span class="line"></span><br><span class="line">cmake_minimum_required(VERSION 2.6 FATAL_ERROR) #</span><br><span class="line">set(PROJ_NAME hello)</span><br><span class="line">project($&#123;PROJ_NAME&#125;)</span><br><span class="line"></span><br><span class="line">#project($&#123;PROJ_NAME&#125; C CXX Fortran)</span><br><span class="line">#enable_language(Fortran) ##允许使用语言类型</span><br><span class="line">#set(CMAKE_BUILD_TYPE release) ##release or debug</span><br><span class="line">#set(CMAKE_CXX_FLAGS &quot;-std=c++11 $&#123;CMAKE_CXX_FLAGS&#125;&quot;) ##</span><br><span class="line"></span><br><span class="line">#------------------------------------</span><br><span class="line"># Include directory for this project</span><br><span class="line">#</span><br><span class="line">include_directories($&#123;PROJECT_SOURCE_DIR&#125;/inc)</span><br><span class="line"></span><br><span class="line">#------------------------------------</span><br><span class="line"># Locate sources and headers for this project</span><br><span class="line">#</span><br><span class="line">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;/src/*.cc)</span><br><span class="line">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;/inc/*.hh)</span><br><span class="line"></span><br><span class="line">#------------------------------------</span><br><span class="line"># Add the executable and link it to the libraries</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">add_executable($&#123;PROJ_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class="line"></span><br><span class="line">#target_link_libraries($&#123;PROJ_NAME&#125; -L$&#123;PROJECT_SOURE_DIR&#125;/lib hello.so) ##链接库文件</span><br><span class="line"></span><br><span class="line">#-------------------------------------</span><br><span class="line"># Install the executable or files to &apos;bin&apos; directory</span><br><span class="line"># under CMAKE_INSTALL_PREFIX</span><br><span class="line">#</span><br><span class="line">install(TARGETS $&#123;PROJ_NAME&#125; DESTINATION bin)</span><br></pre></td></tr></table></figure><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><h2 id="如何外部编译-？"><a href="#如何外部编译-？" class="headerlink" title="如何外部编译 ？"></a>如何外部编译 ？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/lib</span><br><span class="line">cd build</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=../ ../</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br><span class="line">cd ../bin</span><br></pre></td></tr></table></figure><h2 id="设置二进制文件存放地址"><a href="#设置二进制文件存放地址" class="headerlink" title="设置二进制文件存放地址"></a>设置二进制文件存放地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET(EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;/bin)</span><br><span class="line">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;/lib)</span><br></pre></td></tr></table></figure><h2 id="如何生成动态库或静态库？"><a href="#如何生成动态库或静态库？" class="headerlink" title="如何生成动态库或静态库？"></a>如何生成动态库或静态库？</h2><p> <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjExMTc3MC9hcnRpY2xlL2RldGFpbHMvODA1OTU2MzM=">参考文献<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.add_library(name SHARED source1, source2, ..., sourceN)</span><br><span class="line">2.add_library(name_static STATIC source1, source2, ... , sourceN)</span><br><span class="line">3.set_target_properties(name_static PROPERTIES OUTPUT_NAME &quot;name&quot;)</span><br><span class="line">4.set_target_properties(name_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class="line">5.set_target_properties(name PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class="line">6.set_target_properties(name PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class="line">7.install(TARGETS name name_static </span><br><span class="line">          LIBRARY DESTINATION lib</span><br><span class="line">          ARCHIVE DESTINATION lib)</span><br><span class="line">8.install(DIRECTORY $&#123;titile_H&#125; DESTINATION include/tH)</span><br></pre></td></tr></table></figure><p>第一条    指令是生成动态库（扩展名为.so），类型关键字是SHARED，并不需要写全libname.so，只需要填写name即可，cmake系统会自动生成libname.so。</p><p>第二条    指令是在支持动态库的基础上为工程添加一个静态库，因为静态库和动态库同名时，构建静态库的指令是无效的，所以把上面的name修改为name_static，就可以构建一个libname_static的静态库；然而我们需要的是名字相同的静态库和动态库，因为target的唯一性，所以就不能通过add_library指令实现，所以用到第三条指令</p><p>第三条    指令是为了能够同时得到libname.so/libname.a两个库文件，但是因为cmake在构建一个新的target时，会尝试清理掉具有相同命名的库文件，所以，在构建libname.a的时候会将libname.so库文件清理掉，因此需要再次使用set_target_properties定义的CLEAN_DIRECT_OUTPUT属性，如第四条和第五条指令所示，至此，我们再次进行构建，就会发现在目录中同时生成libname.so动态库文件和libname.a静态库文件</p><p>第六条    指令是因为按照规则，动态库是应当包含一个版本号的， 为了实现动态库版本号，仍然需要使用SET_TARGET_PROPERTIES指令，其中VERSON指代动态库版本，SOVERSION指代API版本。</p><p>第七条    指令是将动态库和静态库文件安装到系统目录，才能够真正地让其他人开发使用，我们将库文件安装到<prefix>/lib目录下</prefix></p><p>第八条    指令是将头文件安装到<prefix>/include/tH目录中。</prefix></p><h2 id="外部引用动态库和静态库"><a href="#外部引用动态库和静态库" class="headerlink" title="外部引用动态库和静态库"></a>外部引用动态库和静态库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.INCLUDE_DIRECTORIES(头文件在系统中的位置)</span><br><span class="line">2.ADD_EXECUTABLE(main source/main.cpp)</span><br><span class="line">3.TARGET_LINK_LIBRARIES(main libfaceDetection.a)</span><br></pre></td></tr></table></figure><p>因为编译安装将动态库安装到/usr/local/lib，/usr/bin目录下，对于动态库的外部引用有些麻烦；</p><h1 id="库文件的编译和封装"><a href="#库文件的编译和封装" class="headerlink" title="库文件的编译和封装"></a>库文件的编译和封装</h1><ul><li>新建<code>build</code>文件夹，将要编译成库文件的<code>inc</code>和<code>src</code>拷贝到<code>build</code>文件夹下，然后在此编写CMakeLists.txt 文件,在将头文件和源文件安装成库，CMakeLists的编写如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Setup the project</span><br><span class="line">cmake_minimum_required(VERSION 2.6 FATAL_ERROR)</span><br><span class="line">set(PROJ_NAME hello)</span><br><span class="line">project($PROJ_NAME)</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Setup Geant4 include directories and compile definitions</span><br><span class="line"># Setup include directory for this project</span><br><span class="line">#</span><br><span class="line">include_directories($&#123;PROJECT_SOURCE_DIR&#125;/inc)</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Locate sources and headers for this project</span><br><span class="line"># NB: headers are included so they will show up in IDEs</span><br><span class="line">#</span><br><span class="line">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;/src/*.cc)</span><br><span class="line">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;/inc/*.hh)</span><br><span class="line"></span><br><span class="line">#-------------------------------------------</span><br><span class="line"># Create static and dynamic library</span><br><span class="line">#</span><br><span class="line">add_library($&#123;PROJ_NAME&#125; SHARED $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class="line">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class="line"></span><br><span class="line">#----------------------------------------------------------------------------</span><br><span class="line"># Install the executable to &apos;bin&apos; directory under CMAKE_INSTALL_PREFIX</span><br><span class="line">#</span><br><span class="line">#install(TARGETS $&#123;PROJ_NAME&#125;  DESTINATION lib)</span><br><span class="line">#install(FILES $&#123;headers&#125; DESTINATION inc)</span><br><span class="line">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;../../../lib)</span><br></pre></td></tr></table></figure><p><strong>注意</strong> </p><ul><li>将可执行二进制文件安装到文件夹时，采用<code>install(TARGETS )</code>方式存在一定问题，生存的二进制文件在<code>usr/bin</code>，同理，头文件安装在<code>usr/local/inc</code>下。</li><li><code>SET(LIBRARY_OUTPUT_PATH )</code>可以设置库文件安装位置。</li><li>在<code>main()</code>的编译链接中，CMakeLists.txt将会存在以下问题，头文件必须包含生成库文件所用的全部头文件，链接生成的所有动态库文件；如，在上述的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1)</span><br></pre></td></tr></table></figure><p>其将，生成三个库文件，分别如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libhello.so</span><br><span class="line">libhello.so.1</span><br><span class="line">libhello.so.1.2</span><br></pre></td></tr></table></figure><p>在链接库文件时，则需要将三个库文件均包含</p><ul><li>API (Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9hcGkvMTAxNTQ=">百度百科<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="外部引用库的优势"><a href="#外部引用库的优势" class="headerlink" title="外部引用库的优势"></a>外部引用库的优势</h1><ul><li>隐藏源码</li><li>不依赖机器的性能和配置差异</li><li>二进制库文件位置明确，脱离源码可移植性高</li></ul>]]></content>
    
    <summary type="html">
    
      Focus on how to use cmake to compile scripts and library and hide source files.
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="cmake" scheme="https://Hubery-Lee.github.io/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>Show RunTime and Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode</title>
    <link href="https://hubery-lee.github.io/2018/10/16/Show%20RunTime%20and%20Solve%20Problem%20that%20Data%20ReadOut%20Are%20Disordered%20in%20Geant4%20Multi-thread%20Mode/"/>
    <id>https://hubery-lee.github.io/2018/10/16/Show%20RunTime%20and%20Solve%20Problem%20that%20Data%20ReadOut%20Are%20Disordered%20in%20Geant4%20Multi-thread%20Mode/</id>
    <published>2018-10-16T12:29:30.000Z</published>
    <updated>2020-04-28T00:41:10.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-show-runtime"><a href="#How-to-show-runtime" class="headerlink" title="How to show runtime"></a>How to show runtime</h1><h2 id="Using-G4Timer-in-RunAction"><a href="#Using-G4Timer-in-RunAction" class="headerlink" title="Using G4Timer in RunAction"></a>Using G4Timer in RunAction</h2><p>time count start at the begin of run and stop at the end of run. </p><h2 id="Detail-Consturciton"><a href="#Detail-Consturciton" class="headerlink" title="Detail Consturciton"></a>Detail Consturciton</h2><p>declare a pionter to G4Timer in construct function.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fTimer = new G4Timer;</span><br></pre></td></tr></table></figure><p>free memory of G4Timer in distruct function</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete fTimer;</span><br></pre></td></tr></table></figure><p>time count start in BeginOfRunAction()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fTimer -&gt;Start()</span><br></pre></td></tr></table></figure><p>time count stop in EndOfRunAction()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fTimer -&gt;Stop();</span><br></pre></td></tr></table></figure><h2 id="Result-Shows"><a href="#Result-Shows" class="headerlink" title="Result Shows"></a>Result Shows</h2><p>Time used will be showed in the end of run.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">number of event = ... User=...s Real=...s Sys=...s</span><br></pre></td></tr></table></figure><h1 id="Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode"><a href="#Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode" class="headerlink" title="Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode"></a>Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode</h1><h2 id="problem-discription"><a href="#problem-discription" class="headerlink" title="problem discription"></a>problem discription</h2><p> I encountered a problem in Geant4 multi-thread run mode. The data readout from two different sensitive detector with hits  are corrected in single thread mode but disordered  in multi-thread run mode. I don&#39;t know how this problem should happen. I think there must be something wrong in the Merge() function. Memory storage may be disordered in the multi-thread mode.</p><h2 id="problem-solving"><a href="#problem-solving" class="headerlink" title="problem solving"></a>problem solving</h2><p>Do not use Geant4 Data Merge() in root mode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//analysisManager-&gt;SetNtupleMerging(<span class="literal">true</span>);</span><br><span class="line">//or</span><br><span class="line">analysisManager-&gt;SetNtupleMerging(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;How-to-show-runtime&quot;&gt;&lt;a href=&quot;#How-to-show-runtime&quot; class=&quot;headerlink&quot; title=&quot;How to show runtime&quot;&gt;&lt;/a&gt;How to show runtime&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Geant" scheme="https://Hubery-Lee.github.io/tags/Geant/"/>
    
  </entry>
  
  <entry>
    <title>Emacs yasnippets and markdown configure</title>
    <link href="https://hubery-lee.github.io/2018/10/11/Emacs-yasnippets-and-markdown-configure/"/>
    <id>https://hubery-lee.github.io/2018/10/11/Emacs-yasnippets-and-markdown-configure/</id>
    <published>2018-10-11T14:07:58.000Z</published>
    <updated>2020-04-28T00:35:03.794Z</updated>
    
    <content type="html"><![CDATA[<p>@[TOC](emacs yasnippets 和makrdown的配置)</p><h2 id="yasnippets-的配置"><a href="#yasnippets-的配置" class="headerlink" title="yasnippets 的配置"></a>yasnippets 的配置</h2><ul><li>安装</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.emacs.d/site-lisp</span><br><span class="line">git clone https://github.com/capitaomorte/yasnippet</span><br></pre></td></tr></table></figure><ul><li>配置==init.el==</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">add-to-list</span> 'load-path</span><br><span class="line">              <span class="string">"~/.emacs.d/site-lisp/yasnippet"</span>)</span><br><span class="line">(<span class="name">require</span> 'yasnippet)</span><br><span class="line">(<span class="name">setq</span> yas-snippet-dirs</span><br><span class="line">      '(<span class="string">"~/.emacs.d/snippets"</span> ;; personal snippets</span><br><span class="line">        ))</span><br><span class="line">(<span class="name">yas-global-mode</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><p>添加自定义模板</p><p> M-x yas-new-snippet 创建新模板<br> C-c C-c 保存</p></li><li><p>模板内容说明</p><p>contributor: snippet作者名称及电邮<br>snippet的语法变量是以$美元符开始的，根据变量$1 $2 $... 定义顺序光标移动位置，特殊的$0是最后光标停位置，语法${N:default value}。</p></li></ul><h2 id="markdown-的配置"><a href="#markdown-的配置" class="headerlink" title="markdown 的配置"></a>markdown 的配置</h2><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz">参看这篇文章<i class="fa fa-external-link-alt"></i></span><br>google markdown emacs 配置<br><span class="exturl" data-url="aHR0cHM6Ly9saW51eHRveS5vcmcvYXJjaGl2ZXMvZW1hY3MtbWFya2Rvd24tbW9kZS5odG1s">https://linuxtoy.org/archives/emacs-markdown-mode.html<i class="fa fa-external-link-alt"></i></span></p></li><li><p>重点看下面这个，此为产品原网址。该网站介绍了产品的多种安装方式。<br>google markdown-mode<br>==<span class="exturl" data-url="aHR0cDovL2pibGV2aW5zLm9yZy9wcm9qZWN0cy9tYXJrZG93bi1tb2RlLz09">http://jblevins.org/projects/markdown-mode/==<i class="fa fa-external-link-alt"></i></span>  </p></li><li><p>常用命令</p></li></ul><ul><li><code>C-c C-c m: markdown-command</code> &gt; <code>*markdown-output*</code> buffer.</li><li><code>C-c C-c p: markdown-command</code>&gt; temporary file&gt; browser.</li><li><code>C-c C-c e: markdown-command</code> &gt; <code>basename.html</code>.</li><li><code>C-c C-c v: markdown-command</code> &gt; <code>basename.html</code> &gt; browser.</li><li><code>C-c C-c w: markdown-command</code> &gt; kill ring.</li><li><code>C-c C-c o: markdown-open-command</code>.</li><li><code>C-c C-c l: markdown-live-preview-mode</code> &gt;<code>*eww*</code> buffer.</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] <span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl3ZWlsaWppZS9hcmNoaXZlLzIwMTIvMTIvMzAvMjg0MDA4MS5odG1s">https://www.cnblogs.com/liweilijie/archive/2012/12/30/2840081.html<i class="fa fa-external-link-alt"></i></span><br>[2] <span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzU1MTk4MDc0MC8=">https://www.douban.com/note/551980740/<i class="fa fa-external-link-alt"></i></span><br>[3] <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz">https://blog.csdn.net/csdnmonkey/article/details/54934663<i class="fa fa-external-link-alt"></i></span><br>[4] <span class="exturl" data-url="aHR0cHM6Ly9qYmxldmlucy5vcmcvcHJvamVjdHMvbWFya2Rvd24tbW9kZS8=">https://jblevins.org/projects/markdown-mode/<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    <summary type="html">
    
      Focus on how to use emacs to edit markdown scripts.
    
    </summary>
    
    
      <category term="编程工具学习与应用" scheme="https://Hubery-Lee.github.io/categories/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Emacs24.3" scheme="https://Hubery-Lee.github.io/tags/Emacs24-3/"/>
    
      <category term="markdown" scheme="https://Hubery-Lee.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>G4 Detector CopyNo and MotherCopyNo access</title>
    <link href="https://hubery-lee.github.io/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/"/>
    <id>https://hubery-lee.github.io/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/</id>
    <published>2018-10-11T03:41:25.000Z</published>
    <updated>2020-04-28T00:33:43.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-construct-assembly-or-replices"><a href="#How-to-construct-assembly-or-replices" class="headerlink" title="How to construct assembly or replices"></a>How to construct assembly or replices</h2><p>You can refer to Geant4 Book for Application Developers <span class="exturl" data-url="aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvR2VvbWV0cnkvZ2VvbUFzc2VtYmx5Lmh0bWw=">User Guide<i class="fa fa-external-link-alt"></i></span></p><p>There are discriptions in the chapter4 Geometry/Assembly、Navigator、TouchableHandles.</p><h2 id="How-to-distinguish-different-detector-array-components"><a href="#How-to-distinguish-different-detector-array-components" class="headerlink" title="How to distinguish different detector array components"></a>How to distinguish different detector array components</h2><p>Using the ‘step’ to retrieve geometrical information</p><p>During the tracking run, geometrical information can be retrieved through the touchable handle associated to the current step. For example, to identify the exact copy-number of a specific physical volume in the mass geometry, one should do the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// Given the pointer to the step object ...</span><br><span class="line">//</span><br><span class="line">G4Step* aStep = ..;</span><br><span class="line"></span><br><span class="line">// ... retrieve the <span class="string">'pre-step'</span> point</span><br><span class="line">//</span><br><span class="line">G4StepPoint* preStepPoint = aStep-&gt;GetPreStepPoint();</span><br><span class="line"></span><br><span class="line">// ... retrieve a touchable handle and access to the information</span><br><span class="line">//</span><br><span class="line">G4TouchableHandle theTouchable = preStepPoint-&gt;GetTouchableHandle();</span><br><span class="line">G4int copyNo = theTouchable-&gt;GetCopyNumber();</span><br><span class="line">G4int motherCopyNo = theTouchable-&gt;GetCopyNumber(1);</span><br><span class="line"></span><br><span class="line">To determine the exact position <span class="keyword">in</span> global coordinates <span class="keyword">in</span> the mass geometry and convert to <span class="built_in">local</span> coordinates (<span class="built_in">local</span> to the current volume):</span><br><span class="line"></span><br><span class="line">G4ThreeVector worldPosition = preStepPoint-&gt;GetPosition();</span><br><span class="line">G4ThreeVector localPosition = theTouchable-&gt;GetHistory()-&gt;</span><br><span class="line">              GetTopTransform().TransformPoint(worldPosition);</span><br></pre></td></tr></table></figure><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h2><p>the motherCopyNo start from 2 to motherNoCopy+1,  copyNo start from 0 to NoCopy-1;</p>]]></content>
    
    <summary type="html">
    
      This page introduce the mehtods to construct detector arrays and how to discriminate the different components with copyNo and motherCopyNo.
    
    </summary>
    
    
      <category term="Geant4及Root应用" scheme="https://Hubery-Lee.github.io/categories/Geant4%E5%8F%8ARoot%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="geant4" scheme="https://Hubery-Lee.github.io/tags/geant4/"/>
    
  </entry>
  
</feed>
