[{"title":"Geant4中如何添加复杂组件","url":"/2020/06/05/Geant4中如何添加复杂组件/","content":"\n# Geant4中如何添加复杂组件\n\n## 1. bool 运算\n\n```c++\n#include \"G4SubtractionSolid.hh\"\n\n G4SubtractionSolid*\tTsubtraction = new G4SubtractionSolid(\"PipeWall-Strips\",solidPWall,solidStrips,rotz0,G4ThreeVector());\n```\n\n用例：\n\n```c++\n //=====================================\n  // 圆柱形准直器\n  //\n  double I_R1=90.0*mm;//,I_R2=100.0*mm;\n  //double O_R1=97.1*mm,O_R2=107.1*mm;\n  double O_R1=140.0*mm;//,O_R2=135.4*mm;\n  double C_z =150.0*mm;\n\n  pSPhi= 0.*degree;\n  pDPhi= 360.*degree;\n\n  G4Tubs* solidCol =   \n    new G4Tubs(\"Collimator\",     I_R1, O_R1,C_z,pSPhi,pDPhi);     //its size\n\n\n  //====================================\n  // void in collimator\n  pSPhi = 0.;\n  pDPhi = 2.0*pi/(90.0*pi);\n\n  G4Tubs* solidVoidC = new G4Tubs(\"VCollimator\",I_R1-0.1*mm, O_R1+0.1*mm,C_z+0.1*mm,pSPhi,pDPhi);\n\n  // G4SubtractionSolid* subtraction[94];\n  G4SubtractionSolid* subtraction[141];\n\n  for(int i=1;i<=141;i++){\n    G4RotationMatrix* rotz= new G4RotationMatrix;\n    rotz->rotateZ(-2*i*2.0*pi/(90.0*pi));\n\n    if(i==1)\n      subtraction[0]=\n  \tnew G4SubtractionSolid(\"Collimator-Void\", solidCol, solidVoidC,rotz,G4ThreeVector(0.0*mm,0.0*mm,10.0*mm));\n    else\n      subtraction[i-1]=\n  \tnew G4SubtractionSolid(\"Collimator-Void\", subtraction[i-2], solidVoidC,rotz,G4ThreeVector(0.0*mm,0.0*mm,10.0*mm));\n  }\n\n\n\n  G4LogicalVolume* logicCol =                         \n    new G4LogicalVolume(subtraction[140],          //its solid\n                        col_mat,           //its material\n                        \"Collimator\");            //its name\n\n  G4PVPlacement* physCol = \n    new G4PVPlacement(0,                     //no rotation\n                      G4ThreeVector(0.*mm,0.*mm,160.0*mm),//65.0*mm),       //at (0,0,0)\n                      logicCol,              //its logical volume\n                      \"Collimator\",                 //its name\n                      logicWorld,            //its mother  volume\n                      false,                 //no boolean operation\n                      0,                     //copy number\n                      checkOverlaps);        //overlaps checking\n\n```\n\n建出来的结果：圆柱形准直器\n\n![](Screenshot from 2020-03-06 11-37-25.png)\n\n\n\n\n\n\n\n## 2. Assemble组件\n\n闪烁体pixel阵列构建代码：\n\n```c++\n  //*************************************************     \n  // AssembleNBD World\n  //*************************************************\n  G4double sizeXY = 100.77*mm+2.*mm;\n  G4double sizeZ  = 100.14*mm;\n\n  G4Box* solidAssembleNBD =   \n    new G4Box(\"AssembleNBD\",     0.5*sizeXY, 0.5*sizeXY, 0.5*sizeZ);     //its size\n  \n  logicAssembleNBD =                         \n    new G4LogicalVolume(solidAssembleNBD,          //its solid\n                        world_mat,           //its material\n                        \"AssembleNBD\");            //its name\n\n\n  //***************\n  //test for one NBD\n\n  physAssembleNBD = \n    new G4PVPlacement(0,                     //no rotation\n                      G4ThreeVector(0.0*cm,0.0*cm,-85.007*cm),       //at (0,0,0)\n                      logicAssembleNBD,      //its logical volume\n                      \"physAssembleNBD\",         //its name\n                      expHall_logV,          //its mother  volume\n                      false,                 //no boolean operation\n                      0,                     //copy number\n  \t\t      checkOverlaps);        //overlaps checking\n\n  //*************************************************\n  // EJ200 scintillator\n  //*************************************************\n  //\n  //      ------------- Volumes --------------\n  //  10X10X50 mm3 EJ-200/BC408\n  //  spacing is 65 um between two EJ-200 with reflector\n  //  \n\n  //  \n  // EJ200 reflector box\n  //----------------------------------\n  // 100.770X100.770X50.070 mm3\n  // 10X10+0.07*11; 50 + 0.07\n\n  G4double ej200_x=10*mm, ej200_y=10*mm, ej200_z=50*mm; //full size of ej200\n  G4double rowNb_ej200=10, colNb_ej200=10; // 10X10 ej200\n  G4double gap=0.070*mm; // gap between two ej200\n\n  G4double EJ200_Box_x = ej200_x*rowNb_ej200/2+gap*(rowNb_ej200+1)/2;\n  G4double EJ200_Box_y = ej200_y*colNb_ej200/2+gap*(colNb_ej200+1)/2;\n  G4double EJ200_Box_z = (ej200_z+gap)/2;\n\n  //  mother volume of 10 X 10  EJ200  \n  G4double Assemble_x = EJ200_Box_x; \n  G4double Assemble_y = EJ200_Box_y;\n  G4double Assemble_z = EJ200_Box_z;\n\n  G4Box* Assemble_solidV = new G4Box(\"Assemble_solidV\", \n  \t\t\tAssemble_x, Assemble_y, Assemble_z);\n  Assemble_logV  = new G4LogicalVolume(Assemble_solidV, ESR, \"Assemble_logV\",0,0,0);\n\n G4double Assemble_px = 0;  // put it at (0,0, EJ200_Box_z)\n  G4double Assemble_py = 0;\n  G4double Assemble_pz = EJ200_Box_z;  \n  Assemble_physV = new G4PVPlacement(0,\n                             G4ThreeVector(Assemble_px, Assemble_py, Assemble_pz),\n                             Assemble_logV,\n                             \"Assemble_physV\",\n                             logicAssembleNBD,\n                             false,\n                             0);\n\n  //\n  // each EJ-200\n  //-------------------------------\n\n  G4double EJ200_x = ej200_x/2;  // half size\n  G4double EJ200_y = ej200_y/2;\n  G4double EJ200_z = ej200_z/2;\n\n  G4Box* EJ200_solidV = new G4Box(\"EJ200_solidV\", EJ200_x, EJ200_y, EJ200_z);\n  EJ200_logV = new G4LogicalVolume(EJ200_solidV, EJ200, \"EJ200_logV\",0,0,0);\n\n\n  // create Assembly of EJ200 array Box\n  //\n  G4AssemblyVolume* assemblyEJ200 = new G4AssemblyVolume();\n\n  // Rotation and translation of the logical volume\n  G4RotationMatrix rotationMatrixEJ200; \n  G4ThreeVector positionEJ200(0., 0., 0.);\n  G4Transform3D transform3DEJ200;\n\n  // Fill the assembly by EJ200\n  //\n  G4int max_x = rowNb_ej200; \n  G4int max_y = colNb_ej200;\n  for(G4int x_row_num = 0; x_row_num < max_x; x_row_num++ ){\n    for(G4int y_col_num = 0; y_col_num < max_y; y_col_num++ ){  \n      positionEJ200.setX( -EJ200_Box_x + (x_row_num+1)*gap + (2*x_row_num+1)*EJ200_x );\n      positionEJ200.setY( -EJ200_Box_y + (y_col_num+1)*gap + (2*y_col_num+1)*EJ200_y );\n      positionEJ200.setZ( 0.0*mm );\n      transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);\n      assemblyEJ200->AddPlacedVolume(EJ200_logV, transform3DEJ200);\n    }\n  }  \n\n  // Place the Assembly\n  //\n  positionEJ200.setX(0.0 ); positionEJ200.setY(0.0 ); positionEJ200.setZ(-0.5*gap);\n  transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);\n  assemblyEJ200->MakeImprint(Assemble_logV, transform3DEJ200);\n```\n\n闪烁体探测器芯块阵列：\n\n![](Screenshot from 2020-03-06 15-21-17.png)\n\n## 3. Parameterised\n\n光导构建代码：\n\n```c++\n#include \"G4PVParameterised.hh\" //得包含G4PVParameterised头文件\n\n  //\n  // Light Guide top mother volume\n  //-------------------------------------\n\n  // The defination of light guide\n  // define mother volume of light guide\n  // half size of volume\n  G4double LightGuide_x = ej200_x*rowNb_ej200/2+gap*(rowNb_ej200+1)/2; \n  G4double LightGuide_y = ej200_y*colNb_ej200/2+gap*(colNb_ej200+1)/2;\n  G4double LightGuide_z = 3*mm/2;\n  gap = 0.07*mm; // gap between the boxes which is used to put\n          \t\t  // the reflector \n  G4Box* LightGuide_top_motherV = new G4Box(\"LightGuide_top_motherV\",\n                                LightGuide_x, LightGuide_y, LightGuide_z);\n  LightGuide_top_mother_logV = new G4LogicalVolume(LightGuide_top_motherV,\n                                ESR, // ESR reflector\n                                \"LightGuide_top_mother_logV\", 0, 0, 0);\n  LightGuide_top_mother_physV = new G4PVPlacement(0,\n        G4ThreeVector(0, 0, (grease_pz-grease_z)-LightGuide_z),\n        LightGuide_top_mother_logV,\n        \"LightGuide_top_mother_physV\",\n        logicAssembleNBD,\n        false,\n        0);\n\n  //\n  // Light Guide top \n  //-------------------------------------------\n\n  // top part of light guide\n  // it consists of 5X5 boxes with same height\n  // TopX => x of each box in the top part, \n  // TopY => y of each box in the top part,\n  // TopHeight => height of each box, they are same.\n\n  // here, the value is the full size of box\n  G4double TopX[5] = {12.3*mm, 22.3*mm, 31.15*mm, 22.3*mm, 12.3*mm};\n  G4double TopY[5] = {12.3*mm, 22.3*mm, 31.15*mm, 22.3*mm, 12.3*mm};\n  G4double TopHeight = 3.0*mm;\n\n  G4int rowNb = 5;\n  G4int colNb = 5;\n\n  G4double TopGap = gap; // ESR materials\n  G4double x0, y0; // coordinate of the left bottom corner\n  x0 = -LightGuide_x;\n  y0 = -LightGuide_y;\n  // left bottom conner of X-Y plane (-A, -A)\n  // this box is a seed of other boxes\n  G4Box* LightGuide_top_solidV = new G4Box(\"LightGuide_top_solidV\",\n           \t\tTopX[0]/2, TopY[0]/2, TopHeight/2);\n\n  LightGuide_top_logV = new G4LogicalVolume(LightGuide_top_solidV,\n                                        BC800, // light guide material\n                                        \"LightGuide_top_logV\", 0, 0, 0);\n\n  // all the coordinates are relative to the coordinate system of LightGuide_mother_logV \n  G4double LightGuide_top_px = x0;\n  G4double LightGuide_top_py = y0;\n  G4double LightGuide_top_pz = 0*mm;\n\n  //G4VPVParameterisation \n  APNISLGParameterisation *lightGuide_para_top = \n  \t\tnew APNISLGParameterisation(\n  \t\t\t\trowNb, colNb, // number of row and column\n   \t\t\t\tTopX, TopY,\n  \t\t\t\tTopGap, TopHeight,\n  \t\t\t\tLightGuide_top_px, LightGuide_top_py, LightGuide_top_pz,\n  \t\t\t\tBC800, ESR);\n\n  LightGuide_top_physV = new G4PVParameterised(\"LightGuide_top_physV\",\n  \t\t\t\tLightGuide_top_logV, LightGuide_top_mother_logV,\n  \t\t\t\tkUndefined, rowNb*colNb, lightGuide_para_top);\n\n  //\n  // Light Guide bottom mother volume\n  //-------------------------------------------\n\n  // Bottom part of light guide, half size\n  G4double LightGuide_z_ = 18*mm/2;\n  G4Box* LightGuide_bottom_motherV = new G4Box(\"LightGuide_bottom_motherV\",\n                                LightGuide_x, LightGuide_y, LightGuide_z_);\n  LightGuide_bottom_mother_logV = new G4LogicalVolume(LightGuide_bottom_motherV,\n                                ESR, // ESR reflector\n                                \"LightGuide_bottom_mother_logV\", 0, 0, 0);\n  LightGuide_bottom_mother_physV = new G4PVPlacement(0,\n        G4ThreeVector(0, 0, (grease_pz-grease_z)-LightGuide_z*2-LightGuide_z_),\n        LightGuide_bottom_mother_logV,\n        \"LightGuide_bottom_mother_physV\",\n        logicAssembleNBD,\n        false,\n        0);\n\n\n  //\n  // Light Guide bottom\n  //---------------------------------------------\n\n  G4double BottomX[3] = {12.3*mm, 75.89*mm, 12.3*mm};\n  G4double BottomY[3] = {12.3*mm, 75.89*mm, 12.3*mm};\n  G4double BottomHeight = LightGuide_z_*2;\n\n  G4int rowNb_ = 3;\n  G4int colNb_ = 3;\n\n  G4double BottomGap = gap; // ESR materials\n  // left bottom conner of X-Y plane (-A, -A)\n  // this box is a seed of other boxes\n  G4Box* LightGuide_bottom_solidV = new G4Box(\"LightGuide_bottom_solidV\",\n                        BottomX[0]/2, BottomY[0]/2, BottomHeight/2);\n\n  LightGuide_bottom_logV = new G4LogicalVolume(LightGuide_bottom_solidV,\n                                        BC800, // light guide material\n                                        \"LightGuide_bottom_logV\", 0, 0, 0);\n\n\n  // all the coordinates are relative to the coordinate system of LightGuide_mother_logV \n  G4double LightGuide_bottom_px = x0;\n  G4double LightGuide_bottom_py = y0;\n  G4double LightGuide_bottom_pz = 0*mm;\n\n  //G4VPVParameterisation \n  APNISLGParameterisation *lightGuide_para_bottom =\n                new APNISLGParameterisation(\n                                rowNb_, colNb_, // number of row and column\n                                BottomX, BottomY,\n                                BottomGap, BottomHeight,\n                                LightGuide_bottom_px, LightGuide_bottom_py, LightGuide_bottom_pz,\n                                BC800, ESR);\n  LightGuide_bottom_physV = new G4PVParameterised(\"LightGuide_bottom_physV\",\n                                LightGuide_bottom_logV, LightGuide_bottom_mother_logV,\n                                kUndefined, rowNb_*colNb_, lightGuide_para_bottom);\n\n```\n\n光导构建图：\n\n![](Screenshot from 2020-03-06 15-00-25.png)","tags":["geant4"],"categories":["Geant4"]},{"title":"迭代重建算法的基本思想","url":"/2020/06/05/迭代重建算法的基本思想/","content":"\n# 迭代重建算法的基本思想\n\n## 基本思想\n\n图像重建除了通过中心切片定理来实现外，还可以通过解线性方程组来得到。对于二维图像就是像素，对于三维图像就是体素。\n\n![image-20200604225353193](image-20200604225353193.png)\n\n\n\n$\\left\\{\\begin{array}{c}x_{1}+x_{2}+x_{3}=p_{1} \\\\ x_{4}+x_{5}+x_{6}=p_{2} \\\\ x_{7}+x_{8}+x_{9}=p_{3} \\\\ x_{3}+x_{6}+x_{9}=p_{4} \\\\ x_{2}+x_{5}+x_{8}=p_{5} \\\\ x_{1}+x_{4}+x_{7}=p_{6} \\\\ 2(\\sqrt{2}-1) x_{4}+(2-\\sqrt{2}) x_{7}+2(\\sqrt{2}-1) x_{8}=p_{7} \\\\ \\sqrt{2} x_{1}+\\sqrt{2} x_{5}+\\sqrt{2} x_{9}=p_{8} \\\\ 2(\\sqrt{2}-1) x_{2}+(2-\\sqrt{2}) x_{3}+2(\\sqrt{2}-1) x_{6}=p_{9}\\end{array}\\right.$\n\n这个方程组也可以用矩阵的形式写出 \n$$\nAX=p\n$$\n其中，$X=\\left[x_{1}, x_{2}, \\ldots, x_{9}\\right]^{T}, \\quad P=\\left[p_{1}, p_{2}, \\ldots, p_{9}\\right]^{T}$迭代算法的思想使将$AX=p$变换成，迭代形式\n$$\nX^{(i+1)}=GX^{(i)}+b\n$$\n通过不同的变换方式变成迭代格式，就长生了不同的的迭代算法。比如：\n\n## 常用迭代算法\n\n### 代数迭代重建技术（ARO，algebraic reconstruction technique)\n\nART 算法是个“行运算”算法。它每次考虑一条射线就更新一次图像。ART 算法的表达式是 \n\n\n$$\nX^{下一个}=X^{\\text {当前}}-\\frac{A_{i} X^{\\text {当前}}-p_{i}}{\\left\\|A_{i}\\right\\|^{2}} A_{i}^{T}\n$$\n$A_iX$ 执行的是沿着第$i$条射线的投影运算，$p_i$ 是在第 $i $个探测像元上测到的投影数据，$\\left\\|A_{i}\\right\\|^{2}=\\sum_{j} a_{i j}^{2}$是沿着第 $i$ 条射线上各“贡献”因子的平方和，$cA^{T}_{i}$ 是把数值 $c $沿着第$ i$ 条射线做反投影。如果我们把上面的算法改写成下面的形式 .\n$$\nX^{\\text {next }}=X^{\\text {current }}-\\left(\\frac{A_{i} X^{\\text {current }}}{\\left\\|A_{i}\\right\\|}-\\frac{p_{i}}{\\left\\|A_{i}\\right\\|}\\right) \\frac{A_{i}^{T}}{\\left\\|A_{i}\\right\\|}\n$$\n该算法的几何意义就比较明显了:\n\n![image-20200604233955301](image-20200604233955301.png)\n\n### 最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）\n\n![image-20200604234408677](image-20200604234408677.png)\n\n![image-20200604234429947](image-20200604234429947.png)\n\n![image-20200604234506653](image-20200604234506653.png)\n\n![image-20200604234525715](image-20200604234525715.png)\n\n![image-20200604234558326](image-20200604234558326.png)\n\n![image-20200604234618809](image-20200604234618809.png)\n\n![image-20200604234633400](image-20200604234633400.png)\n\n**参考文献：**\n\n[1] 曾更生，医学图像重建","tags":["迭代重建"],"categories":["图像重建"]},{"title":"PET_SPECT成像与CT成像的区别","url":"/2020/06/03/PET-SPECT成像与CT成像的区别/","content":"\n# PET/SPECT成像与CT成像的区别\n\n## 成像原理的区别\n\nPET和SPECT是属于发射成像，CT属于透射成像。\n\n所谓发射型成像就是把放射源放在病人身体的内部，放射线从病人身体内部射出，最后被探测器接收。 具有短半衰期的放射性的原子可以由回旋加速器或核反应堆生产出来。这些放射性元素再用来制造放射性药物。 通常放射性药物是通过手臂静脉血管注射而进入体内的。放射性药物进入人体后会跟踪病理过程。放射性药物也可以通过病人的呼吸道或消化道进入人体。放射性药物实际上是个分子载体，它依附于特定的生理组织或病理过程。放射性物质在药物的带领下在人体内做有目的的分布。发射型断层成像的目的就是要得到一个放射\n性物质在人体内部的分布图。 \n\n![image-20200603105809886](image-20200603105809886.png)\n\nPET和SPECT的主要区别是采用的核药不同，PET全程叫正电子发射成像，通常采用的是能够发射正电子的核药，如==C-11，N-13，O-15和 F-18==，在放射性衰退时会释放出正电子 (即带一个正电荷的电子)。正电子在自然界中生存的时间十分短暂，因为在自然界中正电子很快就会遇到一个 (带负电的) 电子。当正电子与电子发生作用时，它们的质量会湮灭 (即完全消失)，它们的质量完全转换为能量而产生出两个能量为 511 keV 的伽玛光子。这两个光子沿着相隔 180º 角的方向传播。也就是说，它们在一条直线上朝相反的方向射出。有一种特殊的伽玛照相机可专门用来检测这一对光子。这种特殊的伽玛照相机运用的是同时检测技术。当两个探测器同时各接收到一个能量为 511 keV 的伽玛光子时，说明在连接这两个探测器的线段上曾经有过一个正电子。\n\n![image-20200603110137644](image-20200603110137644.png)\n\n而SPECT全称叫单光子发射断层成像，采用发射单个光子的核药，如$^{99}Tc、^{131}I、^{113}In、^{67}Ga、^{201}Tl、^{113}Xn$;\n\n![image-20200603111107360](image-20200603111107360.png)\n\n\n\n![image-20200603111146266](image-20200603111146266.png)\n\n## 图像重建方法上的不同点\n\n发射成像需要对成像介质进行射线衰减修正；\n\n![image-20200603111313807](image-20200603111313807.png)\n\n![image-20200603111400117](image-20200603111400117.png)\n\n![image-20200603111438883](image-20200603111438883.png)\n\n![image-20200603111455329](image-20200603111455329.png)\n\n![image-20200603111535455](image-20200603111535455.png)\n\n![image-20200603111656132](image-20200603111656132.png)\n\n比较复杂。\n\n**参考文献：**\n\n[1]: 曾更生，医学图像重建","tags":["PET","SPECT","CT"],"categories":["医学图像重建"]},{"title":"如何搭建感知器并使用其进行分类","url":"/2020/06/02/如何搭建感知器并使用其进行分类/","content":"\n# 😋如何搭建感知器并使用其进行分类\n\n[toc]\n\n## 💨python 编程基础，需要掌握几个库\n\n- numpy\n- pandas\n- matplotlib\n\n## 💖什么是感知器？\n\n### 🎈神经元与机器学习感知机\n\n信号在神经元中的传播过程如下：信号通过神经粒质与神经元树突结合，通过神经细胞的认知处理（分类等），由神经末梢输出信号。\n\n![image-20200602160802363]( image-20200602160802363.png)![image-20200602161216932]( image-20200602161216932.png)\n\n感知器类似于生物神经系统中的神经元。特征数据$x_1,x_2,...x_m$，作为输入信号，权重因子$\\omega_1,\\omega_2,...\\omega_m$,作信号接收单元，激活函数用于根据$\\omega x$输入信号产生输出分类结果。其中，$x_0=1,\\omega_0=y_0$\n\n![image-20200602160731313]( image-20200602160731313.png)\n\n感知机的基本数学原理，既是逻辑回归/线性回归，直白一点就是大学物理实验中的实验数据处理，数据拟合和类似最小二乘法的误差分析；\n\n![](1.png)\n\n为了使拟合或分类效果最好，需要求一组$\\omega$,要求方差最小即下式最小：$\\widehat y$为预测数据，${(i)}$为第i个样本，下标为特征\n\n$$\n\\begin{equation}\nJ(\\boldsymbol{w})=\\frac{1}{2} \\sum_{i}\\left(y^{(i)}-\\widehat y^{(i)}\\right)^{2}\n\\end{equation}\n$$\n\n线性回归或逻辑回归得目的是根据已有数据发现规律或现象，建立相应得模型，最终目的是利用模型进行预测；机器学习算法就是一种事物规律建模技术。训练机器学习算法，并用其对新的数据进行预测或分类。\n\n![image-20200602220300807]( image-20200602220300807.png)\n\n![image-20200602220058431]( image-20200602220058431.png)\n\n机器学习算法的核心既是获得较合理的$\\omega$, 要想获得$\\omega$就需要利用数据集对算法进行训练。样本数据输入，预测值$\\widehat y$与实际值之间会有偏差。要求训练样本足够多的情况下，偏差变小，逐渐收敛。那么，每个训练样本进行训练时，均需对权重因子进行更新。\n\n$$\nw_{j}:=w_{j}+\\Delta w_{j}\\\\\n$$\n\n### 🚲最简单的感知机\n\n权重更新方法如下\n$$\n\\begin{equation}\\Delta w_{j}=\\eta\\left(y^{(i)}-\\hat{y}^{(i)}\\right) x_{j}^{(i)}\\end{equation}\n$$\n其中，$\\eta$成为学习率\n![](2.png)\n\n### 🛴自适应线性神经元与学习的收敛性\n\n其采用线性激活函数$\\phi(z)=z$，那么；\n![](3.png)\n![image-20200602223450727]( image-20200602223450727.png)\n\n权重更新采用梯度下降法：\n![](4.png)\n\n\n\n## 🍜如何搭建感知机并进行分类？\n\n```python\n# coding: utf-8\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\n\n# # Implementing a perceptron learning algorithm in Python\n# ## An object-oriented perceptron API\nclass Perceptron(object):\n    \"\"\"Perceptron classifier.\n\n    Parameters\n    ------------\n    eta : float\n      Learning rate (between 0.0 and 1.0)\n    n_iter : int\n      Passes over the training dataset.\n    random_state : int\n      Random number generator seed for random weight\n      initialization.\n\n    Attributes\n    -----------\n    w_ : 1d-array\n      Weights after fitting.\n    errors_ : list\n      Number of misclassifications (updates) in each epoch.\n\n    \"\"\"\n    def __init__(self, eta=0.01, n_iter=50, random_state=1):\n        self.eta = eta\n        self.n_iter = n_iter\n        self.random_state = random_state\n\n    def fit(self, X, y):\n        \"\"\"Fit training data.\n\n        Parameters\n        ----------\n        X : {array-like}, shape = [n_samples, n_features]\n          Training vectors, where n_samples is the number of samples and\n          n_features is the number of features.\n        y : array-like, shape = [n_samples]\n          Target values.\n\n        Returns\n        -------\n        self : object\n\n        \"\"\"\n        rgen = np.random.RandomState(self.random_state)\n        self.w_ = rgen.normal(loc=0.0, scale=0.01, size=1 + X.shape[1])\n        self.errors_ = []\n\n        for _ in range(self.n_iter):\n            errors = 0\n            for xi, target in zip(X, y):\n                update = self.eta * (target - self.predict(xi))\n                self.w_[1:] += update * xi\n                self.w_[0] += update\n                errors += int(update != 0.0)\n            self.errors_.append(errors)\n        return self\n\n    def net_input(self, X):\n        \"\"\"Calculate net input\"\"\"\n        return np.dot(X, self.w_[1:]) + self.w_[0]\n\n    def predict(self, X):\n        \"\"\"Return class label after unit step\"\"\"\n        return np.where(self.net_input(X) >= 0.0, 1, -1)\n\n\n\n# ## Training a perceptron model on the Iris dataset\n\n# ...\n\n# ### Reading-in the Iris data\n\n\ndf = pd.read_csv('https://archive.ics.uci.edu/ml/'\n        'machine-learning-databases/iris/iris.data', header=None)\ndf.tail()\n\n\n# \n# ### Note:\n# \n# \n# You can find a copy of the Iris dataset (and all other datasets used in this book) in the code bundle of this book, which you can use if you are working offline or the UCI server at https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data is temporarily unavailable. For instance, to load the Iris dataset from a local directory, you can replace the line \n# \n#     df = pd.read_csv('https://archive.ics.uci.edu/ml/'\n#         'machine-learning-databases/iris/iris.data', header=None)\n#  \n# by\n#  \n#     df = pd.read_csv('your/local/path/to/iris.data', header=None)\n# \n\n\n\ndf = pd.read_csv('iris.data', header=None)\ndf.tail()\n\n\n# ### Plotting the Iris data\n\n\n# select setosa and versicolor\ny = df.iloc[0:100, 4].values\ny = np.where(y == 'Iris-setosa', -1, 1)\n\n# extract sepal length and petal length\nX = df.iloc[0:100, [0, 2]].values\n\n# plot data\nplt.scatter(X[:50, 0], X[:50, 1],\n            color='red', marker='o', label='setosa')\nplt.scatter(X[50:100, 0], X[50:100, 1],\n            color='blue', marker='x', label='versicolor')\n\nplt.xlabel('sepal length [cm]')\nplt.ylabel('petal length [cm]')\nplt.legend(loc='upper left')\n\n# plt.savefig('images/02_06.png', dpi=300)\nplt.show()\n\n\n\n# ### Training the perceptron model\nppn = Perceptron(eta=0.1, n_iter=10)\nppn.fit(X, y)\nplt.plot(range(1, len(ppn.errors_) + 1), ppn.errors_, marker='o')\nplt.xlabel('Epochs')\nplt.ylabel('Number of updates')\n\n# plt.savefig('images/02_07.png', dpi=300)\nplt.show()\n\n# ### A function for plotting decision regions\ndef plot_decision_regions(X, y, classifier, resolution=0.02):\n\n    # setup marker generator and color map\n    markers = ('s', 'x', 'o', '^', 'v')\n    colors = ('red', 'blue', 'lightgreen', 'gray', 'cyan')\n    cmap = ListedColormap(colors[:len(np.unique(y))])\n\n    # plot the decision surface\n    x1_min, x1_max = X[:, 0].min() - 1, X[:, 0].max() + 1\n    x2_min, x2_max = X[:, 1].min() - 1, X[:, 1].max() + 1\n    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),\n                           np.arange(x2_min, x2_max, resolution))\n    Z = classifier.predict(np.array([xx1.ravel(), xx2.ravel()]).T)\n    Z = Z.reshape(xx1.shape)\n    plt.contourf(xx1, xx2, Z, alpha=0.3, cmap=cmap)\n    plt.xlim(xx1.min(), xx1.max())\n    plt.ylim(xx2.min(), xx2.max())\n\n    # plot class samples\n    for idx, cl in enumerate(np.unique(y)):\n        plt.scatter(x=X[y == cl, 0], \n                    y=X[y == cl, 1],\n                    alpha=0.8, \n                    c=colors[idx],\n                    marker=markers[idx], \n                    label=cl, \n                    edgecolor='black')\n\n\n\n\nplot_decision_regions(X, y, classifier=ppn)\nplt.xlabel('sepal length [cm]')\nplt.ylabel('petal length [cm]')\nplt.legend(loc='upper left')\n\n\n# plt.savefig('images/02_08.png', dpi=300)\nplt.show()\n\n\n#################################################################\n## Adaptive linear neurons and the convergence of learning\n# ...\n# ## Minimizing cost functions with gradient descent\n# ## Implementing an adaptive linear neuron in Python\n\nclass AdalineGD(object):\n    \"\"\"ADAptive LInear NEuron classifier.\n\n    Parameters\n    ------------\n    eta : float\n      Learning rate (between 0.0 and 1.0)\n    n_iter : int\n      Passes over the training dataset.\n    random_state : int\n      Random number generator seed for random weight\n      initialization.\n\n\n    Attributes\n    -----------\n    w_ : 1d-array\n      Weights after fitting.\n    cost_ : list\n      Sum-of-squares cost function value in each epoch.\n\n    \"\"\"\n    def __init__(self, eta=0.01, n_iter=50, random_state=1):\n        self.eta = eta\n        self.n_iter = n_iter\n        self.random_state = random_state\n\n    def fit(self, X, y):\n        \"\"\" Fit training data.\n\n        Parameters\n        ----------\n        X : {array-like}, shape = [n_samples, n_features]\n          Training vectors, where n_samples is the number of samples and\n          n_features is the number of features.\n        y : array-like, shape = [n_samples]\n          Target values.\n\n        Returns\n        -------\n        self : object\n\n        \"\"\"\n        rgen = np.random.RandomState(self.random_state)\n        self.w_ = rgen.normal(loc=0.0, scale=0.01, size=1 + X.shape[1])\n        self.cost_ = []\n\n        for i in range(self.n_iter):\n            net_input = self.net_input(X)\n            # Please note that the \"activation\" method has no effect\n            # in the code since it is simply an identity function. We\n            # could write `output = self.net_input(X)` directly instead.\n            # The purpose of the activation is more conceptual, i.e.,  \n            # in the case of logistic regression (as we will see later), \n            # we could change it to\n            # a sigmoid function to implement a logistic regression classifier.\n            output = self.activation(net_input)\n            errors = (y - output)\n            self.w_[1:] += self.eta * X.T.dot(errors)\n            self.w_[0] += self.eta * errors.sum()\n            cost = (errors**2).sum() / 2.0\n            self.cost_.append(cost)\n        return self\n\n    def net_input(self, X):\n        \"\"\"Calculate net input\"\"\"\n        return np.dot(X, self.w_[1:]) + self.w_[0]\n\n    def activation(self, X):\n        \"\"\"Compute linear activation\"\"\"\n        return X\n\n    def predict(self, X):\n        \"\"\"Return class label after unit step\"\"\"\n        return np.where(self.activation(self.net_input(X)) >= 0.0, 1, -1)\n\n\n\n\nfig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10, 4))\n\nada1 = AdalineGD(n_iter=10, eta=0.01).fit(X, y)\nax[0].plot(range(1, len(ada1.cost_) + 1), np.log10(ada1.cost_), marker='o')\nax[0].set_xlabel('Epochs')\nax[0].set_ylabel('log(Sum-squared-error)')\nax[0].set_title('Adaline - Learning rate 0.01')\n\nada2 = AdalineGD(n_iter=10, eta=0.0001).fit(X, y)\nax[1].plot(range(1, len(ada2.cost_) + 1), ada2.cost_, marker='o')\nax[1].set_xlabel('Epochs')\nax[1].set_ylabel('Sum-squared-error')\nax[1].set_title('Adaline - Learning rate 0.0001')\n\n# plt.savefig('images/02_11.png', dpi=300)\nplt.show()\n\n\n# ## Improving gradient descent through feature scaling\n\n# standardize features\nX_std = np.copy(X)\nX_std[:, 0] = (X[:, 0] - X[:, 0].mean()) / X[:, 0].std()\nX_std[:, 1] = (X[:, 1] - X[:, 1].mean()) / X[:, 1].std()\n\nada = AdalineGD(n_iter=15, eta=0.01)\nada.fit(X_std, y)\n\nplot_decision_regions(X_std, y, classifier=ada)\nplt.title('Adaline - Gradient Descent')\nplt.xlabel('sepal length [standardized]')\nplt.ylabel('petal length [standardized]')\nplt.legend(loc='upper left')\nplt.tight_layout()\n# plt.savefig('images/02_14_1.png', dpi=300)\nplt.show()\n\nplt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')\nplt.xlabel('Epochs')\nplt.ylabel('Sum-squared-error')\n\nplt.tight_layout()\n# plt.savefig('images/02_14_2.png', dpi=300)\nplt.show()\n\n\n\n# ## Large scale machine learning and stochastic gradient descent\n\nclass AdalineSGD(object):\n    \"\"\"ADAptive LInear NEuron classifier.\n\n    Parameters\n    ------------\n    eta : float\n      Learning rate (between 0.0 and 1.0)\n    n_iter : int\n      Passes over the training dataset.\n    shuffle : bool (default: True)\n      Shuffles training data every epoch if True to prevent cycles.\n    random_state : int\n      Random number generator seed for random weight\n      initialization.\n\n\n    Attributes\n    -----------\n    w_ : 1d-array\n      Weights after fitting.\n    cost_ : list\n      Sum-of-squares cost function value averaged over all\n      training samples in each epoch.\n\n        \n    \"\"\"\n    def __init__(self, eta=0.01, n_iter=10, shuffle=True, random_state=None):\n        self.eta = eta\n        self.n_iter = n_iter\n        self.w_initialized = False\n        self.shuffle = shuffle\n        self.random_state = random_state\n        \n    def fit(self, X, y):\n        \"\"\" Fit training data.\n\n        Parameters\n        ----------\n        X : {array-like}, shape = [n_samples, n_features]\n          Training vectors, where n_samples is the number of samples and\n          n_features is the number of features.\n        y : array-like, shape = [n_samples]\n          Target values.\n\n        Returns\n        -------\n        self : object\n\n        \"\"\"\n        self._initialize_weights(X.shape[1])\n        self.cost_ = []\n        for i in range(self.n_iter):\n            if self.shuffle:\n                X, y = self._shuffle(X, y)\n            cost = []\n            for xi, target in zip(X, y):\n                cost.append(self._update_weights(xi, target))\n            avg_cost = sum(cost) / len(y)\n            self.cost_.append(avg_cost)\n        return self\n\n    def partial_fit(self, X, y):\n        \"\"\"Fit training data without reinitializing the weights\"\"\"\n        if not self.w_initialized:\n            self._initialize_weights(X.shape[1])\n        if y.ravel().shape[0] > 1:\n            for xi, target in zip(X, y):\n                self._update_weights(xi, target)\n        else:\n            self._update_weights(X, y)\n        return self\n\n    def _shuffle(self, X, y):\n        \"\"\"Shuffle training data\"\"\"\n        r = self.rgen.permutation(len(y))\n        return X[r], y[r]\n    \n    def _initialize_weights(self, m):\n        \"\"\"Initialize weights to small random numbers\"\"\"\n        self.rgen = np.random.RandomState(self.random_state)\n        self.w_ = self.rgen.normal(loc=0.0, scale=0.01, size=1 + m)\n        self.w_initialized = True\n        \n    def _update_weights(self, xi, target):\n        \"\"\"Apply Adaline learning rule to update the weights\"\"\"\n        output = self.activation(self.net_input(xi))\n        error = (target - output)\n        self.w_[1:] += self.eta * xi.dot(error)\n        self.w_[0] += self.eta * error\n        cost = 0.5 * error**2\n        return cost\n    \n    def net_input(self, X):\n        \"\"\"Calculate net input\"\"\"\n        return np.dot(X, self.w_[1:]) + self.w_[0]\n\n    def activation(self, X):\n        \"\"\"Compute linear activation\"\"\"\n        return X\n\n    def predict(self, X):\n        \"\"\"Return class label after unit step\"\"\"\n        return np.where(self.activation(self.net_input(X)) >= 0.0, 1, -1)\n\n\n\n\nada = AdalineSGD(n_iter=15, eta=0.01, random_state=1)\nada.fit(X_std, y)\n\nplot_decision_regions(X_std, y, classifier=ada)\nplt.title('Adaline - Stochastic Gradient Descent')\nplt.xlabel('sepal length [standardized]')\nplt.ylabel('petal length [standardized]')\nplt.legend(loc='upper left')\n\nplt.tight_layout()\n# plt.savefig('images/02_15_1.png', dpi=300)\nplt.show()\n\nplt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')\nplt.xlabel('Epochs')\nplt.ylabel('Average Cost')\n\nplt.tight_layout()\n# plt.savefig('images/02_15_2.png', dpi=300)\nplt.show()\n\nada.partial_fit(X_std[0, :], y[0])\n\n# # Summary\n\n# ...\n\n# --- \n# \n# Readers may ignore the following cell\n\n```\n\n\n\n","tags":["感知器","神经元"],"categories":["机器学习"]},{"title":"二维图像重建的一般流程","url":"/2020/06/02/二维图像重建的一般流程/","content":"\n# 二维图像重建的一般流程\n\n[toc]\n\n## ❓什么是图像重建？\n\n断层成像顾名思义就是要得到一个物体内部的截面图像。比如你想知道西瓜里面是什么样的，最简单的办法就是把西瓜切开 (图1.1)。显然对病人来说，这是万不可行之举。我们真想有个办法，不用动刀，就可把病人内部看得清清楚楚。\n\n另一个例子。你想到一个美丽的街心公园去参观。可惜，公园正在维修，游人不得入内。你只好在公园的外围走走，拍几张照片。公园\n内有两棵参天大树，极为壮观。你在公园的东面和南面对公园拍了照 ，颇为满意。回到家后，你用你的得意照片，居然画出了公园地图，并确定了那两棵树的位置 (图1.2右)。其实，要确定那两棵树的位置并不难。你只要把那两张照片按原本的方位放好。从照片上的每棵树画出一条垂线。\n\n![image-20200601090416943]( image-20200601090416943.png)![image-20200601090501929]( image-20200601090501929.png)\n\n\n\n## 💫图像重建的算法思想是什么？\n\n断层成像是个数学问题。让我们一起做个有趣的数学习题吧。这里有个 2x2 的矩阵。 矩阵中的元素的数值暂时保密。我给你一些暗示： 第一行的和是 5。第二行的和是 4。第一列的和是 7。第二列的和是 2 (图1.3)。你可以算出这个 2x2 矩阵吗?\n\n![image-20200601090809554]( image-20200601090809554.png)\n\n这个问题可以用解方程组的方法解决。设那些矩阵元素为未知数，列一个线性方程组：\n$$\n\\begin{equation}\n\\begin{aligned}\nx_1+x_2=5;\\\\\nx_3+x_4=4;\\\\\nx_1+x_3=7;\\\\\nx_2+x_4=2;\\\\\n\\end{aligned}\n\\end{equation}\n$$\n\n解这个方程组便得到;\n\n$$\n\\begin{equation}x_1=3,x_2=2,x_3=4,x_4=0\\end{equation}\n$$\n通过探测物体的投影数据，重建出物体的实际内部构造。这就是图像重建的一般思想。\n\n## ✔图像重建算法的数学基础有哪些？\n\n### 🍕中心切片定理\n\n中心切片定理是断层成像的理论基础。这个定理还有其它的称谓，如投影切片定理和傅里叶中心切片定理。二维图像的中心切片定理指出：二维函数 f(x, y) 的投影 p(s) 之傅里叶变换 P(ω) 等于函数 f(x, y) 的傅里叶变换 F(ωx, ωy) 沿与探测器平行的方向过原点的片段。\n\n![image-20200601104859436]( image-20200601104859436.png)\n\n![](image-20200601105629394.pn)\n\n\n### 🚩为什么要引入滤波？\n\n![](image-20200601105835965.png)\n![](image-20200601105911448.png)\n\n第二个方案通常被称作处理FBP (Filtered Backprojection 先滤波后反投影) 算法。第二个方案比第一个方案知名度高得多。在断层成像领域里，函数|ω| 被称作斜坡滤波器。\n\n### ❤有哪些滤波重建方法？\n\n==**滤波的思想**==：在中心切片定理中，旋转中心被切片涂抹的更浓密，这将导致图像像素比较均匀（低频区域；高频区域是指图像对比度比较大的图像边缘区域），进而重构的图像中心区域比较模糊。那么滤波器的思想是将中心切片函数乘以一个与旋转中心距离相关的权重因子，使得切片在图像上涂抹的比较均匀。这样重构出来的图像才不会出现旋转中心模糊的现象。下面介绍一下有哪些图像重建及滤波方法。\n\n#### 🛴方法1\n\n![](image-20200601111126392.png)\n\n#### 🛵方法2\n\n<img src=\" image-20200601111254399.png\" alt=\"image-20200601111254399\" style=\"zoom:80%;\" />\n\n![](image-20200601111254399.png)\n\n#### 🏍方法3\n\n![](image-20200601111406287.png)\n![](image-20200601111430225.png)\n\n#### 🧭算法一览表\n\n![]( image-20200601111533233.png)\n\n## 👼扇形束投影算法如何转换到平行束投影算法\n\n==**基本思想**==：根据利用点扩散函数的移动不变性，可将扇形束投影重组成平行束投影；然而，在进行重组时将需要进行插值运算，这将导入不必要的误差。故而需要根据重组变换原理，采用变量替换原理，将适用于平行束投影算法中的变量替换成扇形束中的转换关系。\n\n### 🍚点扩散函数的移动不变性\n\n![image-20200602082326836]( image-20200602082326836.png)\n\n对于平行光束成像，我们用极为重要的中心切片定理推导出了一些图像重建的算法。可是，对与扇形束成像，我们并没有相应的中心切片定理。我们只好想个别的办法来推导扇形束的图像重建算法。这个办法就是把扇形束的成像问题转化成平行光束的成像问题，把平行光束图像重建的算法修正一下然后应用于解决扇形束的成像问题中。 \n\n假定探测器是匀速地绕物体转动，而且数据采样的角度区间也是均匀的。在这个假设下，平行光束的投影/反投影的点扩散函数 (PSF) 是移动不变的。换句话说，如果你把一个点源放在 x-y 平面上。放到哪里到无所谓，只要放在探测器的视野内就好。\n\n![image-20200602083037903]( image-20200602083037903.png)\n\n![image-20200602083341855]( image-20200602083341855.png)\n\n### 🍳扇形束射线如何用平行束来描述\n\n一个直截了当的方法是把所有的扇形束射线放在一起进行分组，把互相平行的射线分在一组，这样就把扇形束的成像问题简化为平行光束的成像问题。正如图3.4所示，每一条扇形束的射线都刚好对应一条平行光束的射线。这两条线是完全重合的。也就是说，每一个扇形束的数据 g(γ, β) 都刚好对应一个平行光束的数据 p(s, θ)，它们的坐标满足下列关系: \n$$\n\\theta = \\gamma +\\beta \\\\\ns=Dsin\\gamma\n$$\n其中 $$D$$ 为焦距，也就是从扇形的焦点到旋转中心的距离。当上面这两个关系成立时，这两个成像系统所测的数据是相同的: \n$$\np(s,\\theta)=g(\\gamma,\\beta)\n$$\n![image-20200602083414444]( image-20200602083414444.png)\n\n![image-20200602084149649]( image-20200602084149649.png)\n\n![image-20200602084308687]( image-20200602084308687.png)\n\n![image-20200602084333949]( image-20200602084333949.png)\n\n**参考文献：**\n\n[1] 曾更生，医学图像重建","tags":["二维CT图像重建"],"categories":["图像重建"]},{"title":"利用VSCode调试Geant4项目和Qt项目","url":"/2020/05/19/利用VSCode调试Geant4项目和Qt项目/","content":"\n# 🌌利用VSCode调试Geant4项目和Qt项目\n\n==**注意**==\n\n- VSCode只是一个具有用户交互界面、可设置断点调试的集成开发环境，并具有编辑器的一些特色功能，如：代码补全、格式自动化和语法自动检查等。直白的理解，他是一个具有很多集成功能的高端编辑器，属于前端，代码的编译链接执行需要交给其他一些软件，如CMake等。\n\n- Geant4和Qt均是基于c++语言，调试程序需要用gdb。那么，调试geant4和Qt程序与调试C++程序一样没有什么区别。\n\n\n## 🧭c++如何开启调试模式\n\nC++单文件编译\n\n```\ng++ main.cpp -o a.out\n```\n\nC++单文件gdb调试\n\n```\ng++ -g main.cpp -o a.out\ngdb a.out\n```\n\n## 🚀geant4 和qt等项目文件如何用调试\n\nC++项目的链接通常采用可采用CMake，需要编写`CMakeLists.txt`\n如需打开调试模式，只需奖`CMAKE_BUILD_TYPE` 设置成`\"Debug\"`模式即可。\n\n```\nset(CMAKE_BUILD_TYPE \"Debug\")\n```\n\n","tags":["vscode"],"categories":["编程工具学习与应用"]},{"title":"科学上网方法","url":"/2020/05/08/科学上网方法/","content":"\n# 🚚科学上网方法\n\n## ⚓google/bing检索\n\n- `谷歌上网助手`\n- `iGuge插件`\n\n安装方法：\n\n![](a.png)\n\n\n\n## 🚍文献搜索神器\n\n[`researcher`](https://www.researcher-app.com/)\n\n\n\n\n\n","tags":["google"],"categories":["软件体验"]},{"title":"用VSCode的IDE调试CPP","url":"/2020/05/05/用VSCode的IDE调试CPP/","content":"\n# 💘VSCODE IDE在C/C++项目编程中的使用\n\n## 🌴IDE的作用\n\nIDE的作用就是有用户交互界面的代码调试编辑器（也称集成开发环境，Integrated Development Environment）\n\n### 💨c/c++编程主要基于两类编译器\n\n- gcc, `开源、更新较快`\n- visual studio,`微软全家桶`\n\n所有linux系统的均是用gcc，linux系统对c/c++的支持更好。linux系统的核心代码基本是用c/c++编写的。\n\nwindows系统上c/c++编程一般用`visual studio`,当然，为了用到与linux上一样的开源gcc编译器，可以在windows上安装`mingw`或者`cywin`两种中的任意一款编译器。\n\n### 🛴gcc编译器的没有图形Debug界面\n\nvisual studio自带的调试界面，编程比较方便。gcc的调试需要用`gdb`,而gdb存在的缺陷是其没有采用命令行调试，需要记住的命令太多，但缺少图像界面，大大降低了编程人员的生成效率。\n\n由于gdb自身没有合适的IDE,项目配置通常用`makefile`。makefile继承linux系统下万物用命令行解决的风格。为了避免编写令人难懂的makefile文件，程序员开发了用于生成makefile的`cmake`工具 .\n\ngcc等属于开源社区的软件，特点是版本多，没有统一的标准。导致很多公司开发了各自的IDE，如，JetBrain 公司的`Cion`, 微软公司的`VSCode`和IBM公司的`eclipse`等。VSCode,Cion和Eclipse均是top5的c/c++编辑器。其中，VSCode是后起之秀，由微软2015年发布的快平台编辑器。网上介绍较多，再此不再细说，感兴趣的同志可以自己去百度或谷歌一下。下面将介绍VSCode的C++代码调试。\n\n## 🚀VSCode\n\nVSCode是一款IDE编辑器，注意是`编辑器`说白了就跟`记事本`一样，只是它额外具备配置编译环境和调试代码的功能。就跟notepat++很像。项目的编译环境配置文件通常由两个组成`task.json`和`launch.json`。\n\n- task.json `负责配置生成可执行文件`\n- launch.json `负责调试`\n\n具体VSCode的使用文件可以参考[官方说明文档](https://code.visualstudio.com/docs)\n下面分别从单文件调试和项目文件调试两个方面进行测试，具体测试文档可参看[我的哔哩哔哩视频](https://www.bilibili.com/video/BV1TK4y187kn)\n\n### 🚲单文件，单步调试\n\n- 配置生成可执行文件task.json\n\n- 配置调试执行文件lauch.json\n\n\n```task.json\n{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"type\": \"shell\",\n            \"label\": \"C/C++: cpp.exe build active file\",\n            \"command\": \"D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\cpp.exe\",\n            \"args\": [\n                \"-g\",\n                \"${file}\",\n                \"-o\",\n                \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\"\n            ],\n            \"options\": {\n                \"cwd\": \"D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\"\n            },\n            \"problemMatcher\": [\n                \"$gcc\"\n            ],\n            \"group\": \"build\"\n        }\n    ]\n}\n```\n\n\n```lauch.json\n{\n    // 使用 IntelliSense 了解相关属性。 \n    // 悬停以查看现有属性的描述。\n    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"g++.exe - 生成和调试活动文件\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"miDebuggerPath\": \"D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\gdb.exe\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"为 gdb 启用整齐打印\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ],\n            \"preLaunchTask\": \"g++.exe build active file\"\n        }\n    ]\n}\n```\n\n### 🚍项目文件，单步调试\n\n- CMake `负责配置生成可执行文件`\n- launch.json `负责调试`\n\n```CMakeLists.txt\ncmake_minimum_required(VERSION 3.10.0)\n# 定义项目名称变量PROJECT_NAME, 默认值为demo\nset(PROJECT_NAME demo)\n\nset(CMAKE_BUILD_TYPE \"Debug\")\n\nset(CMAKE_CXX_STANDARD_REQUIRED 14)\n#----------------------------------------------------------------------------\n# Setup include directory for this project\n#\n\ninclude_directories(${PROJECT_SOURCE_DIR}/include)\n#----------------------------------------------------------------------------\n# Locate sources and headers for this project\n# NB: headers are included so they will show up in IDEs\n#\nfile(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)\nfile(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.h)\n\n# 指定生成目标\nadd_executable(${PROJECT_NAME} main.cc ${sources} ${headers})\n\n```\n\n```launch.json\n{\n    // 使用 IntelliSense 了解相关属性。 \n    // 悬停以查看现有属性的描述。\n    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"(gdb) 启动\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}\\\\build\\\\demo.exe\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${workspaceFolder}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"miDebuggerPath\": \"D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\gdb.exe\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"为 gdb 启用整齐打印\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ]\n        }\n    ]\n}\n```","tags":["VSCode"],"categories":["编程工具学习与应用"]},{"title":"hexo结合next主题搭建博客及其版本更新方法","url":"/2020/05/01/hexo结合next主题搭建博客及其版本更新方法/","content":"\n\n# 🍳此文要解决的问题 \n\n- 原博客本地文件库在linux系统下，现在想迁移到windows下。\n- 原博客使用的next主题版本落后\n- 如何使配置文件不依赖next主题配置文件，使next主题文档更新更方便？\n\n# 🚲方法\n\n## 🍗博客搭建工具有哪些？\n\n\n1. hexo  速度快，中文文档和教程比较多\n2. jekyll  基于ruby语言\n3. hugo  基于go语言 部署最快\n4. pelican 基于python语言 快与安全\n\n![](comp.jpg)\n\n## 🧨基本原理\n\n\n{% mermaid graph LR%}\nA[模板] --> B[编译]\nC(内容) --> B\nB --> D[网络发布]\n{% endmermaid %}\n\n\n\n\n![](frame.png)\n\n## 🍔我们用哪个工具？\n\n**在此，作者选择采用hexo工具。原因如下**\n\n1. 作者以前的博客既是使用hexo搭建的，配置和上手较快。\n2. 作者尝试过使用github服务器自带的jekyll，发现生成速度比较慢，除此之外还需要`git`命令行操作，记住命令行比较麻烦。\n3. hexo 开发者是台湾人，故而中文社区比较庞大；\n4. hexo的模板个人感觉比较jekyll模板功能更加丰富。\n\n**hexo主题模板有很多，配置文件中文文档最全的当属next主题 **\n\n1. [老版本中文配置文档](http://theme-next.iissnan.com/)  `不推荐使用`\n2. [next 主题官网说明文档](https://theme-next.org/) `具有官方维护团队，推荐使用该文档进行学习`\n\n# 🚆如何将博客的本地文档迁移到windows下\n\n1. 将博客文件夹拷贝到windows\n2. 安装`node.js`\n3. 进入博客文件夹，安装npm\n```\nnpm install\n```\n4. 安装hexo\n```\nnpm install hexo\n```\n5. hexo生成部署即可\n\n# 👼如何更新next主题\n\n1.从github上下载next主题，解压后放置到themes主题下；\n\n{% tabs Fourth unique name %}\n<!-- tab Solution 1 -->\ngithub网页下载并解压\n<!-- endtab -->\n\n<!-- tab Solution 2 -->\n在博客根文件夹下，命令行克隆\n```\ngit clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n<!-- endtab -->\n\n{% endtabs %}\n\n2. 修改`themes/next/_config.yml`配置文件，具体配置方法参考[next 主题官网说明文档](https://theme-next.org/) \n\n\n# 😍如何使配置文件不依赖`themes/next/_config.yml`\n只需将`themes/next/_config.yml`中你想修改的内容，拷贝到你的博客根目录下的`_config.yml`文件中就可以了。\n\n**注意** ：在拷贝到根目录下的`_config.yml`文件中前，需要添加`theme_config:`, 拷贝内容为其子内容，注意格式。拷贝内容每行前需要有两个空格，可以通过文档列编辑添加。\n\n下次更新next版本，只需到next文件夹下，运行命令行`get pull`即可。\n\n# 🎈如何自定义配色布局等\n## 🎩页面布局配置\n编辑根目录下`source\\_data`下的配置文档，如`styles.styl``variables.styl`等即可。\n\n\n# 🎃配置成功测试\n\n插件测试具体见[官方网站说明](https://theme-next.org/docs/tag-plugins/)\n\n\n## 🧨Label测试\n```md label.js\n{% label [class]@Text %}\n\n[class] : default | primary | success | info | warning | danger.\n          '@Text' can be specified with or without space\n          E.g. 'success @text' similar to 'success@text'.\n          If not specified, default class will be selected.\n```\n```\n {% label @ipsum %} {% label primary@dolor sit %} {% label success@adipiscing elit, %} sed {% label info@do eiusmod %}\n```\nLorem {% label @ipsum %} {% label primary@dolor sit %} amet, consectetur {% label success@adipiscing elit, %} sed {% label info@do eiusmod %} tempor incididunt ut labore et dolore magna aliqua.\n\nUt enim *{% label warning @ad %}* minim veniam, quis **{% label danger@nostrud %}** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n\nDuis aute irure dolor in reprehenderit in voluptate ~~{% label default @velit %}~~ <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n## ✨图片组加载配置，3副图两行排列\n```md grouppicture.js\n{% grouppicture [group]-[layout] %}{% endgrouppicture %}\n{% gp [group]-[layout] %}{% endgp %}\n\n[group]  : Total number of pictures to add in the group.\n[layout] : Default picture under the group to show.\n```\n{% grouppicture 3-2 %}\n  ![](希腊字母简表.png)\n  ![](希腊字母简表.png)\n  ![](希腊字母简表.png)\n{% endgrouppicture %}\n## 🎄mermaid 测试\n```md mermaid.js\n{% mermaid type %}\n{% endmermaid %}\n\ntype : type of the mermaid chart, visit https://github.com/knsv/mermaid for more information.\n```\n\n{% mermaid sequenceDiagram %}\nparticipant Alice\nparticipant Bob\nparticipant John as John<br>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n{% endmermaid %}\n\n\n\n{% mermaid graph LR %}\n47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n{% endmermaid %}\n\n## 🎉tabs测试\n使用方法\n```md tabs.js\n{% tabs Unique name, [index] %}\n<!-- tab [Tab caption] [@icon] -->\nAny content (support inline tags too).\n<!-- endtab -->\n{% endtabs %}\n\nUnique name   : Unique name of tabs block tag without comma.\n                Will be used in #id's as prefix for each tab with their index numbers.\n                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.\n                Only for current url of post/page must be unique!\n[index]       : Index number of active tab.\n                If not specified, first tab (1) will be selected.\n                If index is -1, no tab will be selected. It's will be something like spoiler.\n                Optional parameter.\n[Tab caption] : Caption of current tab.\n                If not caption specified, unique name with tab index suffix will be used as caption of tab.\n                If not caption specified, but specified icon, caption will empty.\n                Optional parameter.\n[@icon]       : FontAwesome icon name (without 'fa-' at the begining).\n                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.\n                Optional parameter.\n```\n\n{% tabs Tags %}\n<!-- tab -->\n**This is Tab 1.**\n\n1. One\n2. Two\n3. Three\n\n4-spaces code block:\n\n    nano /etc\n\nTagged code block:\n\n{% code %}\ncode tag\ncode tag\ncode tag\n{% endcode %}\n\n{% note default %}\nNote default tag.\n{% endnote %}\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 2.**\n\n* Five\n* Six\n* Seven\n\n{% note primary %}\n{% youtube Kt7u5kr_P5o %}\n{% endnote %}\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n\n{% subtabs Sub Tabs %}\n<!-- tab -->\n**This is Sub Tab 1.**\n{% note success %}\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n\n{% note warning %}\nSed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.\n{% endnote %}\n\nMorbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.\n{% endnote %}\n<!-- endtab -->\n\n<!-- tab -->\n**This is Sub Tab 2.**\n{% note success %}\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n\nSed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.\n\n{% note danger %}\nMorbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.\n{% endnote %}\n{% endnote %}\n<!-- endtab -->\n\n<!-- tab -->\n**This is Sub Tab 3.**\n\n{% subtabs Sub-Sub Tabs %}\n<!-- tab -->\n**This is Sub-Sub Tab 1 of Sub Tab 3.**\n{% note success %}\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n\nSed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.\n\nMorbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.\n{% endnote %}\n<!-- endtab -->\n\n<!-- tab -->\n**This is Sub-Sub Tab 2 of Sub Tab 3.**\n{% note success %}\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n\n{% note warning %}\nSed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.\n\nMorbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.\n{% endnote %}\n\n{% endnote %}\n<!-- endtab -->\n\n<!-- tab -->\n**This is Sub-Sub Tab 3 of Sub Tab 3.**\n\n{% note success %}\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.\n\n{% note warning %}\nSed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.\n\n{% note danger %}\nMorbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.\n{% endnote %}\n\n{% endnote %}\n\n{% endnote %}\n<!-- endtab -->\n{% endsubtabs %}\n\n<!-- endtab -->\n{% endsubtabs %}\n\n<!-- endtab -->\n{% endtabs %}\n\n## 🎊Note测试\n使用方法：\n```md note.js\n{% note [class] [no-icon] %}\nAny content (support inline tags too.io).\n{% endnote %}\n\n[class]   : default | primary | success | info | warning | danger.\n[no-icon] : Disable icon in note.\n\nAll parameters are optional.\n```\n{% note primary %}\n#### Primary Header\n**Welcome** to [Hexo!](https://hexo.io)\n{% endnote %}\n\n{% note info %}\n### Info Header\n**Welcome** to [Hexo!](https://hexo.io)\n{% endnote %}\n\n{% note success %}\n#### Success Header\n**Welcome** to [Hexo!](https://hexo.io)\n{% endnote %}\n{% note warning %}\n#### Warning Header\n**Welcome** to [Hexo!](https://hexo.io)\n{% endnote %}\n{% note danger %}\n#### Danger Header\n**Welcome** to [Hexo!](https://hexo.io)\n{% endnote %}\n`等等`\n\n\n## 🎋button测试\n\n```md button.js\n{% button url, text, icon [class], [title] %}\n<!-- Tag Alias -->\n{% btn url, text, icon [class], [title] %}\n\nurl     : Absolute or relative path to URL.\ntext    : Button text. Required if no icon specified.\nicon    : FontAwesome icon name (without 'fa-' at the begining). Required if no text specified.\n[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x\n          Optional parameter.\n[title] : Tooltip at mouseover.\n          Optional parameter.\n```\n{% btn #, Text %}\n{% btn #, Text & Title,, Title %}\n<p>{% btn #, Text & Large Icon, home fa-fw fa-lg %}\n{% btn #, Text & Large Icon & Title, home fa-fw fa-lg, Title %}</p>\nLorem {% btn #, Lorem, home fa-fw fa-lg %} ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident {% btn #, Ipsum, home fa-fw fa-lg %}, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n{% note info %}\n{% btn #, Text & Icon, home fa-fw %}\n\n{% btn #,, home, Title %}{% btn #, Text %}\n\n[Link](#)\n{% endnote %}\n\n<div class=\"text-center\"><div>{% btn #,, heading %}{% btn #,, fab fa-edge %}{% btn #,, times %}{% btn #,, far fa-circle %}</div>\n<div>{% btn #,, italic %}{% btn #,, fab fa-scribd %}</div>\n<div>{% btn #,, fab fa-google %}{% btn #,, fab fa-chrome %}{% btn #,, fab fa-opera %}{% btn #,, gem fa-rotate-270 %}</div></div>\n\n<div class=\"text-center\">{% btn #, Previous Chapter, arrow-left fa-fw fa-lg, Previous Chapter (Full Image) %} {% btn #, Next Chapter, arrow-right fa-fw fa-lg, Next Chapter (Label) %}</div>\n\n<div class=\"text-center\">{% btn https://github.com/theme-next/hexo-theme-next, NexT, fab fa-github fa-fw fa-lg, NexT source code %}</div>\n\n## 🎏Caniuse测试\n```md canius.js\n{% caniuse feature @ periods %}\n<!-- Tag Alias -->\n{% can feature @ periods %}\n\nfeature : Search for the feature you want on https://caniuse.com, then click on the hash sign to the left of the search result heading and you will get the unique name of this feature.\nperiods : Select the browser versions to display. Supported values: past_1, past_2, past_3, past_4, past_5, current, future_3, future_2, future_1. If this value is empty, the default value 'current' will be used.\n```\n{% caniuse sharedarraybuffer @ current %}\n{% caniuse link-rel-modulepreload @ past_1,past_2,past_3,past_4,past_5 %}\n\n## 🧧pdf测试\n\n```md pdf.js\n{% pdf url [height] %}\n\n[url]    : Relative path to PDF file.\n[height] : Optional. Height of the PDF display element, e.g. 800px.\n```\n\n\n\n{% pdf https://sci-hub.tw/downloads-ii/2020-03-01/f0/licata2020.pdf 600px %}\n\n\n\n## 🎞video测试\n```md video.js\n{% video url %}\n```\n{% video https://assets.mixkit.co/videos/download/mixkit-watering-a-flower-pot-1780.mp4 %}","tags":["hexo","博客搭建","next主题"],"categories":["编程工具学习与应用"]},{"title":"作者github项目导航","url":"/2020/04/30/作者github项目导航/","content":"\n\n\n\n\n# 个人笔记\n\n1. 日常学习笔记[Notes](https://hubery-lee.github.io/Notes/)\n\n# Bilibili视频资料\n\n1. Geant4教程[Geant4-jiaocheng](https://hubery-lee.github.io/Geant4-jiaocheng/)","tags":["作者github项目导航"],"categories":["作者github项目导航"]},{"title":"archlinux安装与使用体验","url":"/2020/04/28/archlinux安装与使用体验/","content":"\n# archlinux之manjaro之使用体验\n\n## 1.动机\n\n早上在微信群里看到有人发了一个manjaro系统上跑程序的图。我瞬间惊叹于其操作系统图像界面的炫酷。然后尝试去查证和安装manjaro。在查阅相关资料后，发现网上很多人在推荐manjaro、mint和deepin。今天分别对manjaro和deepin进行了安装和使用尝试。\n\n## 2.​现今Linux系统那么多，该怎么选呢？\n\n将linux系统推广到广为人知的功臣主要是Canoical和redhat。Canoical维护的Ubuntu具有安装简易和图像界面炫酷等特点，这些使得Ubuntu迅速占据个人PC装机量。Redhat系列的linux系统极其稳定，使得其被企业广泛使用。\n\nUbuntu基于Debian，属于Debian家族。具体的Debian的介绍可看[百科](https://baike.baidu.com/item/Debian/748667?fr=aladdin)，Debian是由自由操作系统合作组织的作品，所建基础工具均来着开源社区。特点是系统小运行速度快。在debian上虚拟的windows运行速度比windows原生系统还要快。\n\nRedhat是一家开源解决方案供应商，主要服务于企业。而企业对操作系统的要求主要是稳定，维护方便，不会因为经常更新软件而出现奔溃或问题，故而redhat 的linux系统一般不会像个人linux PC系统那样频繁的更新。redhat系统一般软件版本不新，版本更新一般以5年为周期，且付费。但redhat发展了其上游系统Fedora和下游系统Centos。 Fedora的特点是redhat系统的创新尝试。新技术新集成先在fedora上尝试，没有问题后再将其应用到redhat系统上。而Centos是免费的redhat系统，其特点是开源稳定免费，但其技术版本要落后于redhat系统。\n\n再看一下[全球linux下载热点排行版](https://distrowatch.com/dwres.php?resource=popularity)\t\n\n排名前三的MXlinux、manjaro和mint的特点是，图像界面炫丽，安装软件方便。比较适合个人用户工作和体验。各种软件库滚动更新快，追求新颖性，缺点是稳定性较差和图像界面内存占用较多。比较适合个人用户使用和学习。\n\nmanjaro 基于archlinux。archlinux的特点是优雅、极简和注重代码正确。通过安装系统和软件，可以使用户学习linux的原理和系统的操作。\n\n| 家族     | Debian                         | redhat                 | archlinux            |\n| -------- | ------------------------------ | ---------------------- | -------------------- |\n| 特点     | 软件多开源、系统小、运行速度快 | 稳定                   | 优雅、简洁           |\n| 用户对象 | 个人PC、单片机，企业等         | 企业                   | 个人                 |\n| 用户追求 | 使用简易，图形炫酷             | 系统稳定不影响企业经营 | 学习和优雅的使用体验 |\n\n\n\n## License\n\n由Hubery-Lee编写，喜欢请收藏给一个赞吧捐赠\n\n## Copyright :copyright:2019 [Hubery-Lee](https://github.com/Hubery-Lee)\n\n\n\n\n\n\n\n","tags":["linux"],"categories":["软件使用体验"]},{"title":"如何利用python爬取网页图片-你懂的","url":"/2020/04/28/如何利用python爬取网页图片-你懂的/","content":"\n# 如何利用python爬取网页图片\n\n## 1.相关依赖库\n\n- [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/)   可以从HTML或XML文件中提取数据的Python库\n\n- [requests](https://2.python-requests.org//en/master/)  **Requests** is an elegant and simple HTTP library for Python, built for human beings. \n\n## 2.代码实现\n\n代码编写调试过程，可以参考简书📕 [小董不太懂](https://www.jianshu.com/p/37202bec8f97)的教程，其代码编写思路如下\n```flow\nst=>start: 开始\ne=>end: 保存或处理爬去的信息\nop1=>operation: 利用获取爬取的网页网址的html\nop2=>operation: 利用BeautifulSoup将html信息转换成xml信息\nop3=>operation: 利用BeautifulSoup挑选xml中想要的信息\n\nst->op1->op2->op3->e\n```\n\n下面贴出代码全文\n\n```python\nimport requests\nimport os\nfrom hashlib import md5\nfrom requests.exceptions import RequestException\nfrom bs4 import BeautifulSoup\n\nheaders = {'If-None-Match': 'W/\"5cc2cd8f-2c58\"',\n           \"Referer\": \"http://www.mzitu.com/all/\",\n           'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.204 SafarMozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'}\n#请求头的这个Referer一定要加，妹子网有反爬，反正粘贴复制就行，多加几个信息无所谓\ndef get_page(url):\n    try:\n        response = requests.get(url, headers=headers)\n        if response.status_code == 200:\n            #print(response.text)\n            return response.text\n        return None\n    except RequestException:\n        print('获取索引页失败')\n        return None\n\ndef parse_page(html):\n    soup = BeautifulSoup(html, 'lxml')\n    items = soup.select('#pins li')\n    for link in items:\n        href = link.a['href']\n        #print(href)\n        get_detail_page(href)\n    # print(items)\n\ndef get_detail_page(href):\n    for i in range(1,100):\n        detail_url = href + '/' + str(i)\n        if requests.get(detail_url, headers=headers).status_code == 200:\n            #print(detail_url)\n            parse_detail_page(detail_url)\n        else:\n            print('已至末尾页')\n            return None\n \n\ndef parse_detail_page(detail_url):\n    try:\n        response = requests.get(detail_url, headers=headers)\n        if response.status_code == 200:\n            print('获取详情页成功')\n            detail_html = response.text\n            # print(detail_html)\n            get_image(detail_html)\n        return None\n    except RequestException:\n        print('获取详情页失败')\n        return None\n\ndef get_image(detail_html):\n    soup = BeautifulSoup(detail_html, 'lxml')\n    items= soup.select('.main-image')\n    # print(items)\n    for item in items:\n        #return item.img['src']\n    \timage = item.img['src']\n        save_image(image)\n\ndef save_image(image):\n   response = requests.get(image,headers=headers)\n   if response.status_code == 200:\n       data = response.content\n       file_path = '{0}/{1}.{2}'.format(os.getcwd(), md5(data).hexdigest(), 'jpg')\n       print(file_path)\n       if not os.path.exists(file_path):\n           with open(file_path, 'wb') as f:\n               f.write(data)\n               f.close()\n               print('保存成功')\n   else:\n       print('保存失败')\n\ndef main():\n    url = 'https://www.mzitu.com/tag/youhuo/'\n    html = get_page(url)\n    parse_page(html)\n\n\nif __name__ == '__main__':\n    main()\n```\n\n[^1] https://www.jianshu.com/p/37202bec8f97","tags":["python爬妹子图"],"categories":["python代码应用"]},{"title":"如何利用python发送邮件进行表白和问安","url":"/2020/04/28/如何利用python发送邮件进行表白和问安/","content":"\n\n\n# 如何利用python发送邮件\n\n### 1. python 相关依赖库\n\n说明 ：本文档针对的式利用python 3.7 发送邮件，python发送邮件的相关包比较多，除了SMTP还有POP3和IMAP两种邮件协议。本文档针对的式利用stmp服务器发送邮件\n\n**相关依赖库**\n\n- stmplib\n- EmailMessage\n\n### 2. 测试利用smtp发送邮件\n\n```python\nimport os\nimport smtplib\n\nEMAIL_ADDRESSS =  \"xxx@126.com\"\nEMAIL_PASSWORD = \"xxx\"   #邮箱smtp授权码\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)\n    \n    subject = 'grab dinner this weekend?'\n    body = 'how about dinner at 7pm this saturday?'\n    \n    msg = f'Subject:{subject}\\n\\n{body}'\n    \n    smtp.sendmail(EMAIL_ADDRESSS,'xxx@126.com',msg)\n```\n\n### 3. email.message使用\n\n```python\nimport os\nimport smtplib\nfrom email.message import EmailMessage\n\nEMAIL_ADDRESSS =  \"XXX@126.com\"\nEMAIL_PASSWORD = \"XXX\"   #邮箱smtp授权码\n\nmsg = EmailMessage()\nmsg['Subject'] = 'grab dinner this weekend?'\nmsg['From'] = EMAIL_ADDRESSS\nmsg['To'] = 'hrbeulh@126.com'\nmsg.set_content('how about dinner at 7pm this saturday?')\n\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    \n    smtp.send_message(msg)\n```\n\n### 4.发送给多个用户\n\n```python\nimport os\nimport smtplib\nfrom email.message import EmailMessage\n\nEMAIL_ADDRESSS =  \"hrbeulh@126.com\"\nEMAIL_PASSWORD = \"XXX\"   #邮箱smtp授权码\n\nmulti_recipients = ['Fxxx@gmail.com','Mxxx@gmail.com']\n\nmsg = EmailMessage()\nmsg['Subject'] = 'grab dinner this weekend?'\nmsg['From'] = EMAIL_ADDRESSS\nmsg['To'] = ','.join(multi_recipients)\nmsg.set_content('how about dinner at 7pm this saturday?')\n\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    \n    smtp.send_message(msg)\n```\n\n### 5.Add image attachment\n\n```python\nimport os\nimport smtplib\nimport imghdr\nfrom email.message import EmailMessage\n\nEMAIL_ADDRESSS =  \"hrbeulh@126.com\"\nEMAIL_PASSWORD = \"XXX\"   #邮箱smtp授权码\n\nmsg = EmailMessage()\nmsg['Subject'] = 'Check out Bronx as puppy!'\nmsg['From'] = EMAIL_ADDRESSS\nmsg['To'] = 'hrbeulh@126.com'\nmsg.set_content('Image attched ...')\n\nwith open('P1.png','rb') as f:\n    file_data = f.read()\n    #file_path = os.getcwd()\n    #print(file_path)\n    file_type = imghdr.what(f.name)\n    #print(file_type)\n    #file_name =f.name\n\nmsg.add_attachment(file_data, maintype='image',subtype=imghdr.what(f.name, file_data))\n#msg.add_attachment(file_data, maintype='image',subtype= filetype, filename = file_name))\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    \n    smtp.send_message(msg)\n\n```\n\n### 6. Add images attachments\n\n```python\nimport os\nimport smtplib\nimport imghdr\nfrom email.message import EmailMessage\n\nEMAIL_ADDRESSS =  \"hrbeulh@126.com\"\nEMAIL_PASSWORD = \"XXX\"   #邮箱smtp授权码\n\nmsg = EmailMessage()\nmsg['Subject'] = 'Check out Bronx as puppy!'\nmsg['From'] = EMAIL_ADDRESSS\nmsg['To'] = 'hrbeulh@126.com'\nmsg.set_content('Image attched ...')\n\nfiles =['P1.png','P2.png','girl.jpeg']\n\nfor file in files:\n    with open(file,'rb') as f:\n        file_data = f.read()\n#         file_path = os.getcwd()\n#         print(file_path)\n#         file_type = imghdr.what(f.name)\n#         print(file_type)\n\n    msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(f.name, file_data))\n#     msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(None, file_data))\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    \n    smtp.send_message(msg)\n\n```\n\n### 7. Add pdf attachment \n\n```python\nimport os\nimport smtplib\nimport imghdr\nfrom email.message import EmailMessage\n\nEMAIL_ADDRESSS =  \"hrbeulh@126.com\"\nEMAIL_PASSWORD = \"XXX\"   #邮箱smtp授权码\n\nmsg = EmailMessage()\nmsg['Subject'] = 'Check out Bronx as puppy!'\nmsg['From'] = EMAIL_ADDRESSS\nmsg['To'] = 'hrbeulh@126.com'\nmsg.set_content('Image attched ...')\n\nfiles =['EEE.pdf']\n\nfor file in files:\n    with open(file,'rb') as f:\n        file_data = f.read()\n#         file_path = os.getcwd()\n#         print(file_path)\n#         file_type = imghdr.what(f.name)\n#         print(file_type)\n\n    msg.add_attachment(file_data, maintype='application',subtype='octet-stream',filename = f.name)\n#     msg.add_attachment(file_data, maintype='image',subtype=imghdr.what(None, file_data))\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    \n    smtp.send_message(msg)\n```\n\n### 8.Using plain text to send html  email\n\n```python\nimport os\nimport smtplib\nimport imghdr\nfrom email.message import EmailMessage\n\n\nHTML = \"\"\"\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n</head>\n<body>\n    <div align=\"center\">\n        <h2>😘 Daily</h2>\n        <p>傻宝宝，今天已经是我们相恋的第 {loving_days} 天了喔 💓。</p>\n        <br/>\n#        <img style=\"padding: 0.60em; background: white; box-shadow: 1px #1px 10px #999;\" #src=\"cid:one\" />\n    </div>\n</body>\n</html>\n\"\"\"\n\nEMAIL_ADDRESSS =  \"hrbeulh@126.com\"\nEMAIL_PASSWORD = \"lihui123\"   #邮箱smtp授权码\n\nmsg = EmailMessage()\nmsg['Subject'] = 'This is a html email using plain '\nmsg['From'] = EMAIL_ADDRESSS\nmsg['To'] = 'hrbeulh@126.com'\nmsg.set_content('This is a plain test email')\n\nmsg.add_alternative(HTML,subtype='html')\n\nwith smtplib.SMTP('smtp.126.com',25) as smtp:\n    \n    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    \n    smtp.send_message(msg)\n```\n\n### 参考资料\n\n- python3.7 [doc/library/email.examples](https://docs.python.org/3/library/email.examples.html)\n- [Corey Schafer youtube视频](https://www.youtube.com/watch?v=JRCJ6RtE3xU)\n\n## 如何给html邮件文件中添加图片\n\n### 1. 相关依赖库\n\n目前采用的式python2发邮件的库，python3发送邮件方式相对要简化了一些，但是还没有弄懂，感兴趣的同学可以探索以下\n\n**相关库文件**\n\n- smtplib\n- asyncio\n- MIMEImage\n- MIMEMultipart\n- MIMEText\n- Header\n- pyppeteer\n\n### 2. 代码思路\n\n```mermaid\ngraph TD\nA[import libraries]-->B[获取待发送信息材料]\nB-->C[html信息]\nB--pyppeteer-->D[打开网页并截图工具截取图片]\nD--asyncio-->C\nC--smtp-->E[发送信息]\n```\n\n**注释：** Mermaid(美人鱼)图的编写可参考简书此文  [1](https://www.jianshu.com/p/b421cc723da5)\n\n### 3.代码实现\n\n```python\nimport os\nimport datetime\nimport asyncio\nimport smtplib\nfrom email.header import Header\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\n\nfrom pyppeteer import launch\n\nFALL_IN_LOVE = (2019, 8, 22)\n\nMAIL_HOST = \"smtp.126.com\"\nMAIL_USER = \"hrbeulh@126.com\"\nMAIL_PASS = \"lihui123\"\nMAIL_SENDER = \"hrbeulh@126.com\"\nMAIL_RECEIVER = [\"1306504695@qq.com\",\"hrbeulh@126.com\"]\n\nMAIL_ENCODING = \"utf8\"\n\n\ndef get_loving_days():\n    \"\"\"\n    获取恋爱天数\n    \"\"\"\n    today = datetime.datetime.today()\n    anniversary = datetime.datetime(*FALL_IN_LOVE)\n    return (today - anniversary).days\n\nHTML = \"\"\"\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n</head>\n<body>\n    <div align=\"center\">\n        <h2>😘 男朋友的日常问候</h2>\n        <p>傻宝宝，今天已经是我们相恋的第 {loving_days} 天了喔 💓。</p>\n        <br/>\n        <img style=\"padding: 0.60em; background: white; box-shadow: 1px 1px 10px #999;\" src=\"cid:one\" />\n    </div>\n</body>\n</html>\n\"\"\"\nIMAGE_NAME = \"one.png\"\n\n\n#open website and screenshot\nasync def fetch():\n    browser = await launch(\n        {\"args\": [\"--no-sandbox\", \"--disable-setuid-sandbox\"]}\n    )\n    page = await browser.newPage()\n    await page.goto(\"http://wufazhuce.com/\")\n    await page.screenshot(\n        {\n            \"path\": IMAGE_NAME,\n            \"clip\": {\"x\": 60, \"y\": 120, \"height\": 570, \"width\": 700},\n        }\n    )\n    await browser.close()\n\ndef send_email():\n    html_content = HTML.replace(\"{loving_days}\", str(get_loving_days()))\n\n    msg = MIMEMultipart(\"alternative\")\n    msg[\"Subject\"] = Header(\"😘 男朋友的日常问候\", MAIL_ENCODING )\n    msg[\"From\"] = Header(\"暖宝宝\", MAIL_ENCODING)\n    msg[\"To\"] = Header(\"小仙女\")\n\n    with open(IMAGE_NAME, \"rb\") as f:\n        img = MIMEImage(f.read())\n        img.add_header(\"Content-ID\", \"one\")\n        msg.attach(img)\n    msg.attach(MIMEText(html_content, \"html\", MAIL_ENCODING))\n\n    try:\n        smtp_obj = smtplib.SMTP_SSL(MAIL_HOST)\n        smtp_obj.login(MAIL_USER, MAIL_PASS)\n        smtp_obj.sendmail(MAIL_SENDER, MAIL_RECEIVER, msg.as_string())\n        smtp_obj.quit()\n    except Exception as e:\n        print(e)\n\n\nif __name__ == \"__main__\":\n    try:\n        asyncio.get_event_loop().run_until_complete(fetch())\n    except Exception:\n        asyncio.get_event_loop().run_until_complete(fetch())\n    send_email()\n```\n\n## python3 如何将中文转换成urlencode\n\n### 1.相关依赖库\n\n- quote, unquote\n\n### 2.代码实现\n\n``` python\nfrom urllib.parse import unquote,quote\n \nurl1 = \"https://www.qichacha.com/search?key=河南正商河洛置业有限公司\"\nurl2 = \"https://www.qichacha.com/search?key=%E6%B2%B3%E5%8D%97%E6%AD%A3%E5%95%86%E6%B2%B3%E6%B4%9B%E7%BD%AE%E4%B8%9A%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8\"\n# 解码\nurl = unquote(url2)\nprint(url)\n#编码\nurl = quote(\"河南正商河洛置业有限公司\")\nprint(url)\n```","tags":["python邮件表白"],"categories":["python代码应用"]},{"title":"多人协同在线编辑文档软件使用体验","url":"/2020/04/28/多人协同在线编辑文档软件使用体验/","content":"\n# 多人协同在线编辑文档软件使用体验\n\n## 什么是协同在线编辑文档？\n\n- 协同 ——多人一起完成一件事情\n- 在线——online，在网络上实时做一件事\n- 编辑文档——编写文档，如，word，ppt，excel，支持pdf图片等的导出。\n## 🚩目前市场上存在的产品\n\n- **onlyoffice**\n\n  * 其是一款开源的协作文档、项目及邮件管理软件。\n\n  * 图像界面跟接近office，比较方便使用\n\n  * 开源特性，数据可以放到自己的服务器上\n\n    ![word](onlyoffice.png)\n\n    ![ppt](onlyoffice_ppt.png)\n\n    ![excel](onlyoffice_excel.png)\n\n    \n\n- **石墨文档**\n\n  - 国产知名文本协作编辑软件，优点是用户交互界面做的比较好，不过是水墨风格，偏性冷淡风。\n  \n  - 数据不可以发到用户服务器上，没有TIM方便，无办公社交功能。\n  \n  - 无自己的核心功能，但使用简便性类似于Google Doc\n  \n  - 无待办事项等功能\n  \n    ![](石墨文档.jpg)\n  \n    \n\n\n- **一起写**\n\n- **腾讯文档协作TIM**\n\n  - 结合了社交与文档协同编辑功能\n  - 有待办事项和日程安排功能\n\n- **google doc**\n\n  - 批注功能更友好，方便。\n  \n  - 有待办事项和日程安排功能\n  \n  - 缺点，国内用不了他的平板和手机等功能\n  \n    ![](googleDOC.jpg)\n\n[](以下三个均是国内外office主要开发者开发，均有电脑，平板和手机用户端。)\n\n- office 365\n\n- office online\n\n- wps\n\n## 总结\n\n推荐使用TIM，腾讯出品结合了社交功能外，大公司维护比较好，不会轻易倒闭。\n\n推荐使用onlyoffice，开源自定制特性较好。","tags":["协同办公"],"categories":["软件使用体验"]},{"title":"CMakeLists.txt编写基础知识","url":"/2018/11/23/CMakeLists-txt编写基础知识/","content":"# 参考文献\n[cmake 背景知识](http://www.cnblogs.com/52php/p/5681745.html)\n[cmake 基础2](http://www.cnblogs.com/52php/p/5681751.html)\n[cmake  共享库文件，外部链接](http://www.cnblogs.com/52php/p/5681755.html)\n\n# 应用实例\n**说明**\n采用c++的类来写hello world，然后编写教程。\n- bin  二进制文档\n- build 链接文档\n- doc README、COPYRIGHT等的说明文档\n- inc 头文件文档  hello.hh\n- src 源文件文档  hello.cc\nmain.cc 为主文件\n\n**附录**\n\n- main.cc\n\n```\n#include \"hello.hh\"\n\nint main()\n{\n  \n  HelloFunc hi;\n  hi.Hello();\n  return 0;\n}\n```\n- hello.hh\n\n```\n#ifndef HELLO_hh\n#define HELLO_hh 1\n\nclass HelloFunc\n{\n public:\n  HelloFunc();\n  virtual ~HelloFunc();  \n  \n  void Hello();\n private:\n\n};\n\n#endif\n```\n- hello.cc\n\n```\n#include \"hello.hh\"\n#include \"iostream\"\nusing namespace std;\n\nHelloFunc::HelloFunc()\n{\n\n}\n\nHelloFunc::~HelloFunc()\n{}\n\nvoid HelloFunc::Hello()\n{\n  cout<<\"Hello World\"<<endl;\n}\n```\n-CMakeList.txt 编译文件\n\n```\n##\n##  cmake module authored by Hubery Lee(李会)\n##  2018年11月22日 \n##\n\ncmake_minimum_required(VERSION 2.6 FATAL_ERROR) #\nset(PROJ_NAME hello)\nproject(${PROJ_NAME})\n\n#project(${PROJ_NAME} C CXX Fortran)\n#enable_language(Fortran) ##允许使用语言类型\n#set(CMAKE_BUILD_TYPE release) ##release or debug\n#set(CMAKE_CXX_FLAGS \"-std=c++11 ${CMAKE_CXX_FLAGS}\") ##\n\n#------------------------------------\n# Include directory for this project\n#\ninclude_directories(${PROJECT_SOURCE_DIR}/inc)\n\n#------------------------------------\n# Locate sources and headers for this project\n#\nfile(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)\nfile(GLOB headers ${PROJECT_SOURCE_DIR}/inc/*.hh)\n\n#------------------------------------\n# Add the executable and link it to the libraries\n#\n\nadd_executable(${PROJ_NAME} main.cc ${sources} ${headers})\n\n#target_link_libraries(${PROJ_NAME} -L${PROJECT_SOURE_DIR}/lib hello.so) ##链接库文件\n\n#-------------------------------------\n# Install the executable or files to 'bin' directory\n# under CMAKE_INSTALL_PREFIX\n#\ninstall(TARGETS ${PROJ_NAME} DESTINATION bin)\n```\n# 问题描述 \n## 如何外部编译 ？\n```\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/lib\ncd build\ncmake -DCMAKE_INSTALL_PREFIX=../ ../\nmake -j4\nmake install\ncd ../bin\n```\n  ## 设置二进制文件存放地址\n```\nSET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\nSET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\n```\n  ## 如何生成动态库或静态库？\n [参考文献](https://blog.csdn.net/weixin_42111770/article/details/80595633)\n```\n1.add_library(name SHARED source1, source2, ..., sourceN)\n2.add_library(name_static STATIC source1, source2, ... , sourceN)\n3.set_target_properties(name_static PROPERTIES OUTPUT_NAME \"name\")\n4.set_target_properties(name_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)\n5.set_target_properties(name PROPERTIES CLEAN_DIRECT_OUTPUT 1)\n6.set_target_properties(name PROPERTIES VERSION 1.2 SOVERSION 1)\n7.install(TARGETS name name_static \n          LIBRARY DESTINATION lib\n          ARCHIVE DESTINATION lib)\n8.install(DIRECTORY ${titile_H} DESTINATION include/tH)\n```\n第一条\t指令是生成动态库（扩展名为.so），类型关键字是SHARED，并不需要写全libname.so，只需要填写name即可，cmake系统会自动生成libname.so。\n\n第二条\t指令是在支持动态库的基础上为工程添加一个静态库，因为静态库和动态库同名时，构建静态库的指令是无效的，所以把上面的name修改为name_static，就可以构建一个libname_static的静态库；然而我们需要的是名字相同的静态库和动态库，因为target的唯一性，所以就不能通过add_library指令实现，所以用到第三条指令\n\n第三条\t指令是为了能够同时得到libname.so/libname.a两个库文件，但是因为cmake在构建一个新的target时，会尝试清理掉具有相同命名的库文件，所以，在构建libname.a的时候会将libname.so库文件清理掉，因此需要再次使用set_target_properties定义的CLEAN_DIRECT_OUTPUT属性，如第四条和第五条指令所示，至此，我们再次进行构建，就会发现在目录中同时生成libname.so动态库文件和libname.a静态库文件\n\n第六条\t指令是因为按照规则，动态库是应当包含一个版本号的， 为了实现动态库版本号，仍然需要使用SET_TARGET_PROPERTIES指令，其中VERSON指代动态库版本，SOVERSION指代API版本。\n\n第七条\t指令是将动态库和静态库文件安装到系统目录，才能够真正地让其他人开发使用，我们将库文件安装到<prefix>/lib目录下\n\n第八条\t指令是将头文件安装到<prefix>/include/tH目录中。\n\n## 外部引用动态库和静态库\n```\n1.INCLUDE_DIRECTORIES(头文件在系统中的位置)\n2.ADD_EXECUTABLE(main source/main.cpp)\n3.TARGET_LINK_LIBRARIES(main libfaceDetection.a)\n```\n因为编译安装将动态库安装到/usr/local/lib，/usr/bin目录下，对于动态库的外部引用有些麻烦；\n\n# 库文件的编译和封装\n\n- 新建`build`文件夹，将要编译成库文件的`inc`和`src`拷贝到`build`文件夹下，然后在此编写CMakeLists.txt 文件,在将头文件和源文件安装成库，CMakeLists的编写如下：\n\n```\n#----------------------------------------------------------------------------\n# Setup the project\ncmake_minimum_required(VERSION 2.6 FATAL_ERROR)\nset(PROJ_NAME hello)\nproject($PROJ_NAME)\n\n#----------------------------------------------------------------------------\n# Setup Geant4 include directories and compile definitions\n# Setup include directory for this project\n#\ninclude_directories(${PROJECT_SOURCE_DIR}/inc)\n\n#----------------------------------------------------------------------------\n# Locate sources and headers for this project\n# NB: headers are included so they will show up in IDEs\n#\nfile(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)\nfile(GLOB headers ${PROJECT_SOURCE_DIR}/inc/*.hh)\n\n#-------------------------------------------\n# Create static and dynamic library\n#\nadd_library(${PROJ_NAME} SHARED ${sources} ${headers})\nset_target_properties(${PROJ_NAME} PROPERTIES VERSION 1.2 SOVERSION 1)\n\n#----------------------------------------------------------------------------\n# Install the executable to 'bin' directory under CMAKE_INSTALL_PREFIX\n#\n#install(TARGETS ${PROJ_NAME}  DESTINATION lib)\n#install(FILES ${headers} DESTINATION inc)\nSET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}../../../lib)\n```\n**注意** \n- 将可执行二进制文件安装到文件夹时，采用`install(TARGETS )`方式存在一定问题，生存的二进制文件在`usr/bin`，同理，头文件安装在`usr/local/inc`下。\n- ` SET(LIBRARY_OUTPUT_PATH )`可以设置库文件安装位置。\n- 在`main()`的编译链接中，CMakeLists.txt将会存在以下问题，头文件必须包含生成库文件所用的全部头文件，链接生成的所有动态库文件；如，在上述的\n\n```\n    set_target_properties(${PROJ_NAME} PROPERTIES VERSION 1.2 SOVERSION 1) \n```\n其将，生成三个库文件，分别如下：\n```\n    libhello.so\n    libhello.so.1\n    libhello.so.1.2\n```\n在链接库文件时，则需要将三个库文件均包含\n\n- API (Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。[百度百科](https://baike.baidu.com/item/api/10154)\n\n# 外部引用库的优势\n\n- 隐藏源码\n- 不依赖机器的性能和配置差异\n- 二进制库文件位置明确，脱离源码可移植性高\n\n \n\n\n","tags":["cmake"],"categories":["编程工具学习与应用"]},{"title":"Show RunTime and Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode","url":"/2018/10/16/Show RunTime and Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode/","content":"\n# How to show runtime\n\n## Using G4Timer in RunAction\ntime count start at the begin of run and stop at the end of run. \n## Detail Consturciton\ndeclare a pionter to G4Timer in construct function.\n\n``` bash\nfTimer = new G4Timer;\n```\n\nfree memory of G4Timer in distruct function\n\n``` bash\ndelete fTimer;\n```\n\ntime count start in BeginOfRunAction()\n\n``` bash\nfTimer ->Start()\n```\n\ntime count stop in EndOfRunAction()\n\n``` bash\nfTimer ->Stop();\n```\n\n## Result Shows\nTime used will be showed in the end of run.\n\n```\nnumber of event = ... User=...s Real=...s Sys=...s\n```\n\n# Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode\n\n## problem discription\n I encountered a problem in Geant4 multi-thread run mode. The data readout from two different sensitive detector with hits  are corrected in single thread mode but disordered  in multi-thread run mode. I don't know how this problem should happen. I think there must be something wrong in the Merge() function. Memory storage may be disordered in the multi-thread mode.\n\n## problem solving\n\nDo not use Geant4 Data Merge() in root mode\n\n``` bash\n//analysisManager->SetNtupleMerging(true);\n//or\nanalysisManager->SetNtupleMerging(false);\n```\n","tags":["Geant"],"categories":["Geant4及Root应用"]},{"title":"Emacs yasnippets and markdown configure","url":"/2018/10/11/Emacs-yasnippets-and-markdown-configure/","content":"\n@[TOC](emacs yasnippets 和makrdown的配置)\n## yasnippets 的配置\n-  安装\n\n\n```lisp\ncd ~/.emacs.d/site-lisp\ngit clone https://github.com/capitaomorte/yasnippet\n```\n- 配置==init.el==\n\n```lisp\n(add-to-list 'load-path\n              \"~/.emacs.d/site-lisp/yasnippet\")\n(require 'yasnippet)\n(setq yas-snippet-dirs\n      '(\"~/.emacs.d/snippets\" ;; personal snippets\n        ))\n(yas-global-mode 1)\n```\n- 添加自定义模板\n\n   M-x yas-new-snippet 创建新模板\n   C-c C-c 保存\n\n- 模板内容说明\n\n contributor: snippet作者名称及电邮\nsnippet的语法变量是以$美元符开始的，根据变量$1 $2 $... 定义顺序光标移动位置，特殊的$0是最后光标停位置，语法${N:default value}。\n\n## markdown 的配置\n\n- [参看这篇文章](https://blog.csdn.net/csdnmonkey/article/details/54934663)\ngoogle markdown emacs 配置\nhttps://linuxtoy.org/archives/emacs-markdown-mode.html\n\n- 重点看下面这个，此为产品原网址。该网站介绍了产品的多种安装方式。\ngoogle markdown-mode\n==http://jblevins.org/projects/markdown-mode/==  \n\n- 常用命令\n* `C-c C-c m: markdown-command` > ` *markdown-output*` buffer.\n* `C-c C-c p: markdown-command `> temporary file> browser.\n* `C-c C-c e: markdown-command` > `basename.html`.\n* `C-c C-c v: markdown-command` > `basename.html` > browser.\n* `C-c C-c w: markdown-command` > kill ring.\n* `C-c C-c o: markdown-open-command`.\n* `C-c C-c l: markdown-live-preview-mode` >` *eww*` buffer.\n\n\n\n\n\n## 参考资料\n\n[1] https://www.cnblogs.com/liweilijie/archive/2012/12/30/2840081.html\n[2] https://www.douban.com/note/551980740/\n[3] https://blog.csdn.net/csdnmonkey/article/details/54934663\n[4] https://jblevins.org/projects/markdown-mode/\n","tags":["Emacs24.3","markdown"],"categories":["编程工具学习与应用"]},{"title":"G4 Detector CopyNo and MotherCopyNo access","url":"/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/","content":"\n## How to construct assembly or replices\n\nYou can refer to Geant4 Book for Application Developers [User Guide](http://geant4-userdoc.web.cern.ch/geant4-userdoc/UsersGuides/ForApplicationDeveloper/html/Detector/Geometry/geomAssembly.html)\n\nThere are discriptions in the chapter4 Geometry/Assembly、Navigator、TouchableHandles.\n\n## How to distinguish different detector array components\n\n\nUsing the ‘step’ to retrieve geometrical information\n\nDuring the tracking run, geometrical information can be retrieved through the touchable handle associated to the current step. For example, to identify the exact copy-number of a specific physical volume in the mass geometry, one should do the following:\n\n``` bash\n// Given the pointer to the step object ...\n//\nG4Step* aStep = ..;\n\n// ... retrieve the 'pre-step' point\n//\nG4StepPoint* preStepPoint = aStep->GetPreStepPoint();\n\n// ... retrieve a touchable handle and access to the information\n//\nG4TouchableHandle theTouchable = preStepPoint->GetTouchableHandle();\nG4int copyNo = theTouchable->GetCopyNumber();\nG4int motherCopyNo = theTouchable->GetCopyNumber(1);\n\nTo determine the exact position in global coordinates in the mass geometry and convert to local coordinates (local to the current volume):\n\nG4ThreeVector worldPosition = preStepPoint->GetPosition();\nG4ThreeVector localPosition = theTouchable->GetHistory()->\n              GetTopTransform().TransformPoint(worldPosition);\n\n```\n\n## Attention\n\nthe motherCopyNo start from 2 to motherNoCopy+1,  copyNo start from 0 to NoCopy-1;","tags":["geant4"],"categories":["Geant4及Root应用"]},{"title":"How to Use Hit to Get Primary Information in Geant4","url":"/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/","content":"\n## Code Structure of Geant4\n\nThe structure shows as the following pictrue.\n![Class categories in Geant4](Geant4CodeStructure.png)\n\n* Run and Event\nThese are categories related to the generation of events, interfaces to event generators, and any secondary particles produced. Their roles are principally to provide particles to be tracked to the Tracking Management.\n* Tracking and Track\nThese are categories related to propagating a particle by analyzing the factors limiting the step and applying the relevant physics processes. The important aspect of the design was that a generalized GEANT4 physics process (or interaction) could perform actions, along a tracking step, either localized in space, or in time, or distributed in space and time (and all the possible combinations that could be built from these cases).\n* Geometry and Magnetic Field\nThese categories manage the geometrical definition of a detector (solid modeling) and the computation of distances to solids (also in a magnetic field). The GEANT4 geometry solid modeler is based on the ISO STEP\nstandard and it is fully compliant with it. A key feature of the GEANT4 geometry is that the volume definitions\nare independent of the solid representation. By this abstract interface for the G4 solids, the tracking component works identically for various representations. The treatment of the propagation in the presence of fields has been provided within specified accuracy. An OO design allows to exchange different numerical algorithms and/or different fields (not only B-field), without affecting any other component of the toolkit.\n* Particle Definition and Matter\nThese two categories manage the the definition of materials and particles.\n* Physics\nThis category manages all physics processes participating in the interactions of particles in matter. The abstract interface of physics processes allows multiple implementations of physics models per interaction or per channel. Models can be selected by energy range, particle type, material, etc. Data encapsulation and polymorphism make it possible to give transparent access to the cross sections (independently of the choice of reading from an ascii file, or of interpolating from a tabulated set, or of computing analytically from a formula). Electromagnetic and hadronic physics were handled in a uniform way in such a design, opening up the physics to the users.\n* Hits and Digitization\nThese two categories manage the creation of hits and their use for the digitization phase. The basic design and\nimplementation of the Hits and Digi had been realized, and also several prototypes, test cases and scenarios\nhad been developed before the alpha-release. Volumes (not necessarily the ones used by the tracking) are\naggregated in sensitive detectors, while hits collections represent the logical read out of the detector. Different ways of creating and managing hits collections had been delivered and tested, notably for both single hits and calorimetry hits types. In all cases, hits collections had been successfully stored into and retrieved from an Object Data Base Management System.\n* Visualization\nThis manages the visualization of solids, trajectories and hits, and interacts with underlying graphical libraries(the Visualization class category). The basic and most frequently used graphics functionality had been implemented already by the alpha-release. The OO design of the visualization component allowed us to develop\nseveral drivers independently, such as for OpenGL, Qt and OpenInventor (for X11 and Windows), DAWN, Postscript (via DAWN) and VRML.\n* Interfaces\nThis category handles the production of the graphical user interface (GUI) and the interactions with external\nsoftware (OODBMS, reconstruction etc.).\n\n`MORE DETAIL INFORMATION ABOUT THIS，YOU CAN REFER TO GEANT4 BOOK FOR APPLICATION CHAPTER 3`\n\n## Collect information from PrimaryGeneratorAction\n\nData record in step or event, and stored in hitscollection. data write in EventAction; general understanding of geant4 and its application as follows. Geant is the abbreviation of Geometry and Tracking. \n![General UnderStanding of Geant4](Geant4Application.png)\n","tags":["geant4"],"categories":["Geant4及Root应用"]},{"title":"How to Use Root to Draw 3D Histogram","url":"/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/","content":"\n## Reference\n\nRoot/tutoriors/gl/glvox2.C\n\n## Results Shows\n\n![example1](_glovx2.png)\n![example2](c2.png)\n![example3](level41.png)","tags":["root"],"categories":["Geant4及Root应用"]},{"title":"Gean4 Data Read Out Methods","url":"/2018/09/17/G4DataReadOutMethods/","content":"\n## Introduction of Data Aquisition Methods in Geant4 Simulation\n\n* G4ScoringManager\n* SteppingAction\n* TrackingAction\n* SensitiveDetctor + HitCollection\n\n![Geant4 Data Read Out Method](Geant4数据输出方式.png)\n\nMore detail information about these methods to get data can you refer to [this site](https://wenku.baidu.com/view/f13f4725be23482fb5da4c63.html)\n\n```\nA: To get the information at tracking time in a given volume A, one can adopt either one or a combination of the following strategies:\n\n1.  If the geometry is simple enough, and wish to score some commonly used physics quantities (e.g. energy deposition, dose, flux, etc.), just activate G4ScoringManager in your main program, and use the scorer-based UI commands to transform volume A into a scorer.\n\n    See Option 6 below, and the example examples/extended/runAndEvent/RE03.\n\n2.  Through the SteppingAction, check that the particle is inside volume A and do whatever needed. Hints can be found in the previous chapter of this FAQ document.\n\n    Usually, the hits containers and histograms are attributes of a Track, Event or Run and can be managed through either a TrackingAction, EventAction and/or RunAction and eventually messaging their pointer to the SteppingAction.\n\n    A similar approach is illustrated in examples/basic/B2, B4, extended/electromagnetic, optical, and many others…\n\n3.  In DetectorConstruction, by declaring volume A as a SensitiveDetector. At stepping time, the Geant4 kernel will automatically check that a particle is inside volume A and will handle the control to a specific function G4VSensitiveDetector::ProcessHits(). It is just necessary to instanciate a class inherited from G4VSensitiveDetector, say VolumeA_SD, and do whatever needed by implementing the function VolumeA_SD::ProcessHits(), as described in Option 2 above.\n\n4.  In addition to Option 3 above, should create a HitsCollection to store the information. A HitsCollection can be created in VolumeA_SD::Initialize(). A Hit can be created or filled in VolumeA_SD::ProcessHits(). Additional operations on HitsCollection can be performed in VolumeA_SD::EndOfEvent().\n\n    This approach is illustrated in examples/basic/B2, B4 and extended/analysis, extended/runAndEvent/RE01, etc…\n\n5.  In DetectorConstruction, volume A can be declared as SensitiveDetector, and one or several pre-defined scorers can be attached to volume A. In this case, neither a SteppingAction nor a spcific VolumeA_SD sensitive detector is needed any longer. It is just necessary to create a dedicated scorer, e.g. MyRunScorer, inherited from G4Run, and handle the HitsCollections within MyRunScorer::RecordEvent(). MyRunScorer itself can be instanciated from RunAction::GenerateRun().\n\n    This approach is illustrated in examples/novice/N07, extended/runAndEvent/RE02.\n\n6.  A set of build-in scorer-based UI commands allows to perform most possible operations described through the previous Option 5 directly from run-time macros.\n\n    See example extended/runAndEvent/RE03.\n\n```\n\n## Detector Response\n\n\n对于Geant4模拟数据输出与存储可以参看`examples/basic/B4`,对于不同的数据输出方式，看该文件夹下的`README`.\n\n```\n 6- DETECTOR RESPONSE\n \n   The energy deposit and track lengths of the charged particles are recorded on\n   an event by event basis in the Absober and Gap layers.\n   \n   In order to demonstrate several possible ways of data scoring,\n   the example is provided in four variants:\n   \n   Variant a: User Actions\n   \n     These 4 quantities are data members of the B4aEventAction class.  \n     They are collected step by step in \n     B4aSteppingAction::UserSteppingAction(), and passed to the event action\n     via two methods: B4aEventAction::AddAbs() and B4aEventAction::AddGap().\n   \n     In B4aEventAction::EndOfEventAction(), these quantities are printed and \n     filled in H1D histograms and ntuple to accumulate statistic and compute \n     dispersion.\n     \n   Variant b: User data object \n   \n     In order to avoid dependencies between action classes, a user object\n     B4bRunData, derived from G4Run, is defined with data members needed \n     for the accounted information. \n     In order to reduce the number of data members a 2-dimensions array\n     is introduced for each quantity.\n     Then the quantities are collected step by step in user action classes:\n     B4bSteppingAction::UserSteppingAction() and \n     B4bEventAction::EndOfEventAction() in a similar way as in variant a. \n     \n   Variant c: Hits and Sensitive detectors\n   \n     In this option, the physics quantities are accounted using the hits\n     and sensitive detectors framework defined in the Geant4 kernel.  \n     The physics quantities are stored in B4cCalorHit via two B4cCalorimeterSD\n     objects, one associated with the Absorber volume and another one with Gap\n     in B4cDetectorConstruction::ConstructSDandField().\n     \n     In contrary to the B2 example (Tracker) where a new hit is created\n     with each track passing the sensitive volume (in the calorimeter), only one\n     hit is created for each calorimeter layer and one more hit to account for\n     the total quantities in all layers. In addition to the variants a and b,\n     the quantities per each layer are also available in addition to the total \n     quantities.\n     \n   Variant d: Scorer\n    \n     In this option, the Geant4 scorers which are defined on the top of hits\n     and sensitive detectors Geant4 framework are used.  \n     In practice this means that the user does not need to define hits and sensitive\n     detector classes but rather uses the classes already defined\n     in Geant4. In this example, the G4MultiFunctionalDetector with\n     G4PSEnergyDeposit and G4PSTrackLength primitive scores are used (see\n     B4dDetectorConstruction::ConstructSDandField()).\n    \n     Also with this approach, the quantities per each layer are available \n     in addition to the total quantities.\n       \n  7- HISTOGRAMS\n \n   The analysis tools are used to accumulate statistics and compute the dispersion\n   of the energy deposit and track lengths of the charged particles.\n   H1D histograms are created in B4[b]RunAction::B4[b]RunAction() for the \n   following quantities:\n   - Energy deposit in absorber\n   - Energy deposit in gap\n   - Track length in absorber\n   - Track length in gap\n   The same values are also saved in an ntuple.\n\n   The histograms and the ntuple are saved in the output file in a format\n   according to a technology selected in B4Analysis.hh, the default in this example\n   is ROOT.\n\n   The accumulated statistic and computed dispersion is printed at the end of \n   run, in B4RunAction::EndOfRunAction().\n   When running in multi-threading mode, the histograms and the ntuple accumulated \n   on threads are merged in a single output file. While merging of histograms is\n   performed by default, merging of ntuples is explicitly activated in the B4RunAction \n   constructor.\n\n   The ROOT histograms and ntuple can be plotted with ROOT using the plotHisto.C\n   and plotNtuple.C macros.\n```\n\n\n## Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods\n\n### RunAction\n\n* RunAction()\n* ~RunAction()\n* BegingOfRunAction(const G4Run *)\n* EndOfRunAction(const G4Run *)\n\n该方式的数据输出与存储参看`examples/basic/B4/B4c`\n\n#### RunAction() 构造函数\n\n打开和关闭数据存储文件，在RunAction中；\n\n```\n  // set printing event number per each event\n  G4RunManager::GetRunManager()->SetPrintProgress(1);\n  \n  // Create analysis manager\n  // The choice of analysis technology is done via selectin of a namespace\n  // in B4Analysis.hh\n  auto analysisManager = G4AnalysisManager::Instance();\n  G4cout << \"Using \" << analysisManager->GetType() << G4endl;\n\n  analysisManager->SetVerboseLevel(1);\n  analysisManager->SetNtupleMerging(true);  \n  // Note: merging ntuples is available only with Root output\n\n  // Book ntuples\t   \n\n  //Declare ntuples\n  // Creating 1st ntuple\n  //\n  analysisManager->CreateNtuple(\"Det\", \"xyz in Det\");\n  analysisManager->CreateNtupleSColumn(\"SDName\");\n  analysisManager->CreateNtupleIColumn(\"EventID\");\n  analysisManager->CreateNtupleIColumn(\"ParentID\");\n  analysisManager->CreateNtupleIColumn(\"TrackID\");\n  analysisManager->CreateNtupleIColumn(\"StepID\");\n  analysisManager->CreateNtupleDColumn(\"Edep\");\n  analysisManager->CreateNtupleDColumn(\"PosX\");\n  analysisManager->CreateNtupleDColumn(\"PosY\");\n  analysisManager->CreateNtupleDColumn(\"PosZ\");\n  analysisManager->CreateNtupleDColumn(\"GlobalT\");\n  analysisManager->CreateNtupleDColumn(\"LocalT\");\n  analysisManager->CreateNtupleDColumn(\"ProperT\");\n  analysisManager->CreateNtupleDColumn(\"Ekin\");\n  analysisManager->CreateNtupleDColumn(\"Velocity\");\n  analysisManager->CreateNtupleDColumn(\"MomentX\");\n  analysisManager->CreateNtupleDColumn(\"MomentY\");\n  analysisManager->CreateNtupleDColumn(\"MomentZ\");\n  analysisManager->CreateNtupleSColumn(\"ProC\");\n\n  analysisManager->FinishNtuple();\n```\n主要设置模拟运行参数，运行显示、多线程文件合并等；\n\n* `注意`\n`B4c`中将内容目录也在构造函数中创建，文件的创建在BeginOfRunAction()中。\n\n#### ~RunAction() 析构函数\n\n```\n  delete G4AnalysisManager::Instance(); \n```\n\n#### BeginOfRunAction(const G4Run*)\n\n```\n  // Get analysis manager\n  auto analysisManager = G4AnalysisManager::Instance();\n\n  // Open an output file\n  //\n  G4String fileName = \"APNIS\";\n  analysisManager->OpenFile(fileName);\n\n```\n新建储存文件并打开文件\n\n#### EndOfRunAction(const G4Run*)\n\n```\n  auto analysisManager = G4AnalysisManager::Instance();\n\n  // save histograms & ntuple\n  //\n  analysisManager->Write();\n  analysisManager->CloseFile();\n```\n\n一个Run结束后的写文件\n\n### EventAction\n\n采用SD+HitCollection方式存储数据，记录的是一个Event的所有Hit点的数据，那么Geant4中数据的存储就在EventAction中进行；\n\n当然，如果你采用StepAction方式存储数据，你只需在StepAction中去存储数据就行了；\n\n* EventAction()\n* ~EventAction()\n* BeginOfEventAction(const G4Event*)\n* EndOfEventAction(const G4Event*)\n\n```\n• beginOfEventAction() This method is invoked before converting the primary particles to G4Track\nobjects. A typical use of this method would be to initialize and/or book histograms for a particular event.\n• endOfEventAction() This method is invoked at the very end of event processing. It is typically used for\na simple analysis of the processed event. If the user wants to keep the currently processing event until\nthe end of the current run, the user can invoke fpEventManager->KeepTheCurrentEvent(); so\nthat it is kept in G4Run object. This should be quite useful if you simulate quite many events and want to\nvisualize only the most interest ones after the long execution. Given the memory size of an event and its\ncontents may be large, it is the user’s responsibility not to keep unnecessary events.\n```\n\n#### EndOfEventAction(const G4Event*)\n\n在每个Event结束时，将Hit数据存储写到存储文件中。首先获取这个Event有多少个HitCollection,（HitCollection编号HCID在Event开始前获得，在BegingOfEventAction()中定义），然后根据HCID查找对应的HitCollection，根据不同HitCollection的大小提取数据并写入到文件；\n\n```\n  G4HCofThisEvent * HCE = event->GetHCofThisEvent();//获得Event结束时，所有的HitCollection\n\n  //根据HitCollecitonID名称，获取不同的CollectionID\n  if(HCE){\n  PrimaryHC = (PLANETOCOSPrimaryHitsCollection*)(HCE->GetHC(primaryCollID));\n  FluxHC = (PLANETOCOSFluxHitsCollection*)(HCE->GetHC(fluxdetectorCollID));\n  //FluxHC = (PLANETOCOSFluxHitsCollection*)(HCE->GetHC(1));\n  //G4cout<<\"ANALYSE1\"<<std::endl;\n  EdepHC = (PLANETOCOSEdepHitsCollection*)(HCE->GetHC(edepCollID));\n  SoilEdepHC = (PLANETOCOSEdepHitsCollection*)(HCE->GetHC(edepSoilCollID));\n  \n  //EdepHC = (PLANETOCOSEdepHitsCollection*)(HCE->GetHC(2));\n  PostTrackHC = (PLANETOCOSPostTrackHitsCollection*)(HCE->GetHC(post_trackCollID));\n  //PostTrackHC = (PLANETOCOSPostTrackHitsCollection*)(HCE->GetHC(3));\n  \n  }\n\n```\n\n#### BeginOfEventAction(const G4Event*)\n\n在Event开始前的行为，可以写在这个函数中；如下，获得不同HitCollection的编码HCID；注意，不同的HitCollection 对应不同的SD；\n```\n  G4SDManager * SDman = G4SDManager::GetSDMpointer();\n  if(edepCollID<0||primaryCollID<0||fluxdetectorCollID<0 ||post_trackCollID <0 || edepSoilCollID<0){\n  \tedepCollID = SDman->GetCollectionID(\"edepCol\");\n\tedepSoilCollID = SDman->GetCollectionID(\"edepSoilCol\");\n\tprimaryCollID = SDman->GetCollectionID(\"primaryCol\");\n   \tfluxdetectorCollID = SDman->GetCollectionID(\"detCol\");\n\tpost_trackCollID = SDman->GetCollectionID(\"post_trackCol\");\n  } \n```\n\n当不考虑不同的SD，对所以SD的detector的响应都一样时采用如下方法读取数据；\n```\n/////////////////////////////////////////////\nvoid APNISEventAction::EndOfEventAction(const G4Event* event)\n{\n\n  G4HCofThisEvent * hce = event->GetHCofThisEvent();\n  if (!hce) {\n      G4ExceptionDescription msg;\n      msg << \"No hits collection of this event found.\" << G4endl; \n      G4Exception(\"APNISEventAction::EndOfEventAction()\",\n                  \"APNISCode001\", JustWarning, msg);\n      return;\n  }\n\n  //get hit collection\n  if(hce)\n    {\n      size_t nHCE=hce->GetCapacity();\n      for(size_t i=0;i<nHCE;i++){//多个SD时用\n  \tAPNISTrackHitsCollection *HC =0;\n      HC = (APNISTrackHitsCollection *)(hce->GetHC(i));\n      if(HC) OneHitOrder(HC);//写数据\t\n      }\n    }\n }\n\n////////////////////////////////////////////////////////////////\nvoid APNISEventAction::OneHitOrder(APNISTrackHitsCollection*HC)\n{\n  //////////////////////////////////////////\n  //\n  // Fill histograms & ntuple\n  //\n  //////////////////////////////////////////\n\n  // get analysis manager\n  auto analysisManager = G4AnalysisManager::Instance();\n\n  //analyse\n  G4int n_hit = HC->entries();\n  for(G4int i=0;i<n_hit;i++)\n    {\n      G4String SDName =(*HC)[i]->GetSDName();\n      G4int    EventID=(*HC)[i]->GetEventID();//\n      G4int    ParentID=(*HC)[i]->GetParentID();//\n      G4int    TrackID=(*HC)[i]->GetTrackID();//\n      G4int    StepID=(*HC)[i]->GetStepID();//       // Total steps number up to now\n      G4double fEdep=(*HC)[i]->GetEdep();\n      G4ThreeVector fPos=(*HC)[i]->GetPos();\n      G4double GlobalTime=(*HC)[i]->GetGlobalTime();//                   //Time since event is created\n      G4double LocalTime=(*HC)[i]->GetLocalTime();//                  // Time since track is created\n      G4double ProperTime=(*HC)[i]->GetProperTime();//            // Time since track is created (in rest frame of particle)\n      G4double Ekin=(*HC)[i]->GetEkin();//                    \n      G4double Velocity=(*HC)[i]->GetVelocity();//\n      G4ThreeVector MomentumDirection = (*HC)[i]->GetMomentumDirection();      // Direction of momentum \n      G4String CreatorProcess=(*HC)[i]->GetCreatorProcess();//\n\n      //塞选思路\n\n      \n      \n      //存储数据\n      // fill ntuple\n      G4int Count=0;\n      analysisManager->FillNtupleSColumn(Count,SDName);Count++;\n      analysisManager->FillNtupleIColumn(Count,EventID);Count++;\n      analysisManager->FillNtupleIColumn(Count,ParentID);Count++;\n      analysisManager->FillNtupleIColumn(Count,TrackID);Count++;\n      analysisManager->FillNtupleIColumn(Count,StepID);Count++;\n      analysisManager->FillNtupleDColumn(Count,fEdep/MeV);Count++;\n      analysisManager->FillNtupleDColumn(Count,fPos.x()/m);Count++;\n      analysisManager->FillNtupleDColumn(Count,fPos.y()/m);Count++;\n      analysisManager->FillNtupleDColumn(Count,fPos.z()/m);Count++;\n      analysisManager->FillNtupleDColumn(Count,GlobalTime/s);Count++;\n      analysisManager->FillNtupleDColumn(Count,LocalTime/s);Count++;\n      analysisManager->FillNtupleDColumn(Count,ProperTime/s);Count++;\n      analysisManager->FillNtupleDColumn(Count,Ekin/MeV);Count++;\n      analysisManager->FillNtupleDColumn(Count,Velocity/(m/s));Count++;\n      analysisManager->FillNtupleDColumn(Count,MomentumDirection.x());Count++;\n      analysisManager->FillNtupleDColumn(Count,MomentumDirection.y());Count++;\n      analysisManager->FillNtupleDColumn(Count,MomentumDirection.z());Count++;\n      analysisManager->FillNtupleSColumn(Count,CreatorProcess);Count++;\n\n      // analysisManager->FillNtupleIColumn(Count,);Count++;\n      // analysisManager->FillNtupleDColumn(Count,);Count++;\n      // analysisManager->FillNtupleSColumn(Count,);Count++;\n\n      analysisManager->AddNtupleRow();\n    }\n\n}\n```\n\n### Hit\n\n参考Book for applicaiton中的4.4 [Hits](http://geant4-userdoc.web.cern.ch/geant4-userdoc/UsersGuides/ForApplicationDeveloper/html/Detector/hit.html)\n\nA hit is a snapshot of the physical interaction of a track in the sensitive region of a detector. In it you can store\ninformation associated with a G4Step object. This information can be\n* the position and time of the step,\n* the momentum and energy of the track,\n* the energy deposition of the step,\n* geometrical information,\n* or any combination of the above.\n\n`简而言之`\n* G4中的Hit <==> C++中的vector  ，G4Allocator会给Hit分配内存空间；\n* G4中的Map <==> C++中的map\n\n#### Hit.hh头文件结构\n\n```\n  APNISTrackHit();\n  APNISTrackHit(const APNISTrackHit &right);\n  virtual ~APNISTrackHit();\n  //operator\n  const APNISTrackHit& operator=(const APNISTrackHit &right);\n  G4int operator ==(const APNISTrackHit &right)const;\n\n  inline void *operator new(size_t);\n  inline void operator delete(void *aHit);\n\n  //获取数据\n  inline void SetSDName(G4String name){SDName=name;}\n  inline const G4String& GetSDName() const{return SDName;}\n\n  inline void SetEventID(G4int id){EventID=id;}//ok\n  inline G4int GetEventID() const{return EventID;}//\n\n  inline void SetParentID(G4int id){ParentID=id;}//ok\n  inline G4int GetParentID() const{return ParentID;}//\n\n  inline void SetTrackID(G4int id){TrackID=id;}//ok\n  inline G4int GetTrackID() const{return TrackID;}//\n\n  inline void SetStepID(G4int id){CurrentStepNumber=id;}//ok\n  inline G4int GetStepID() const{return CurrentStepNumber;}//\n\n  inline void SetEdep(G4double de){ fEdep = de; }\n  inline G4double GetEdep(){ return fEdep; }\n  ...\n```\n\n分配HitCollection存储空间，新建内存空间用完后并释放内存空间；\n\n```\n///////////////////////////////////////////////////////////////\ntypedef G4THitsCollection<APNISTrackHit> APNISTrackHitsCollection;\n\nextern G4ThreadLocal G4Allocator<APNISTrackHit>* APNISTrackHitAllocator;\n//////////////////////////////////////////////////////////////\ninline void* APNISTrackHit::operator new(size_t)\n{\n  if(!APNISTrackHitAllocator) APNISTrackHitAllocator = new G4Allocator<APNISTrackHit>;\n  return (void *)APNISTrackHitAllocator->MallocSingle();\n}\n\ninline void APNISTrackHit::operator delete(void* aHit)\n{\n  APNISTrackHitAllocator->FreeSingle((APNISTrackHit*)aHit);\n}\n```\n\n#### Hit.cc\n\n```\n////////////////////////////////////////////////////////\nAPNISTrackHit::APNISTrackHit(const APNISTrackHit &right):G4VHit()\n{\n  SDName =right.SDName;\n  EventID=right.EventID;\n  ParentID =right.ParentID;\n  TrackID =right.TrackID;\n  CurrentStepNumber =right.CurrentStepNumber;\n  fEdep = right.fEdep;\n  ...\n}\n////////////////////////////////////////////////////////\n//\n// operator\nconst APNISTrackHit& APNISTrackHit::operator=(const APNISTrackHit &right)\n{\n  SDName =right.SDName;\n  EventID=right.EventID;\n  ParentID =right.ParentID;\n  TrackID =right.TrackID;\n  CurrentStepNumber =right.CurrentStepNumber;\n  fEdep = right.fEdep;\n  ...\n\n  return *this;\n}\n////////\nG4int APNISTrackHit::operator==(const APNISTrackHit &right) const\n{\n  return (this==&right) ? 1 : 0;\n}\n```\n\n### SensitiveDetector\n\nSD的作用时根据Step和Track信息，构建Hit信息；SD有以下一些函数：\n* ProcessHits()\n* Initialize()\n* EndOfEvent()\n\n\n\n#### ProcessHits(G4Step* aStep, G4TouchableHistory*)\n\n在ProcessHits()中将数据存入Hit()申明的存储空间中;\n\n```\nProcessHits() This method is invoked by G4SteppingManager when a step is composed in the\nG4LogicalVolume which has the pointer to this sensitive detector. The first argument of this method is\na G4Step object of the current step. The second argument is a G4TouchableHistory object for the\nReadout geometry described in the next section. The second argument is NULL if Readout geometry\nis not assigned to this sensitive detector. In this method, one or more G4VHit objects should be constructed if\nthe current step is meaningful for your detector.\nInitialize() This method is invoked at the beginning of each event. The argument of this method is an object\nof the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,\ncan be associated with the G4HCofThisEvent object in this method. The hit collections associated with\nthe G4HCofThisEvent object during this method can be used for during the event processing\ndigitization.\n```\nexample\n```\n  G4StepPoint* preStepPoint=aStep->GetPreStepPoint();\n  G4StepPoint* postStepPoint=aStep->GetPostStepPoint();\n  G4Track* aTrack=aStep->GetTrack();\n\n  // G4double edep = aStep->GetTotalEnergyDeposit();\n  // if(edep==0.) return false;\n  G4ParticleDefinition* theparticle=aStep->GetTrack()->GetDefinition();\n  G4String PName=theparticle->GetParticleName();\n\n  G4TouchableHandle touch1 = preStepPoint->GetTouchableHandle();\n  G4VPhysicalVolume* volume = touch1->GetVolume();\n\n\tif(preStepPoint->GetStepStatus()==fGeomBoundary)\n\t  {\n\t    // if(volume->GetName()==\"AirDet\")\n\t    //   {\n\t    APNISTrackHit* newHit1 = new APNISTrackHit();\n\t    // G4cout<<\"####----In AirDet----\"<<SensitiveDetectorName<<G4endl;\n\t    newHit1->SetSDName(volume->GetName());\n\t    newHit1->SetEventID(G4EventManager::GetEventManager()->GetConstCurrentEvent()->GetEventID());//ok\n\t    newHit1->SetParentID(aTrack->GetParentID());//ok\n\t    newHit1->SetTrackID(aTrack->GetTrackID());//ok\n\t    newHit1->SetStepID(aTrack->GetCurrentStepNumber());//ok\n\n\t    newHit1->SetEdep( aStep->GetTotalEnergyDeposit() );\n\t    newHit1->SetPos( aStep->GetPreStepPoint()->GetPosition());\n\t    newHit1->SetGlobalTime(preStepPoint->GetGlobalTime());//ok\n\t    newHit1->SetLocalTime(preStepPoint->GetLocalTime());//ok\n\t    newHit1->SetProperTime(preStepPoint->GetProperTime());//ok\n\t    newHit1->SetEkin(preStepPoint->GetKineticEnergy());//ok\n\t    newHit1->SetVelocity(preStepPoint->GetVelocity());//ok\n\t    newHit1->SetMomentumDirection(preStepPoint->GetMomentumDirection());//ok\n\t    const G4VProcess* pcr=aTrack->GetCreatorProcess();\n\t    if(pcr)newHit1->SetCreatorProcess(pcr->GetProcessName());\n\t    else newHit1->SetCreatorProcess(\"##\");//ok\n\t    //数据存储到HitCollection中\n\t    fTrackHitCollection->insert( newHit1 );\n\t    }\n```\n\n#### Initialize(G4HCofThisEvent* HCE)\n\n\n初始化HitsCollection，将数据存入HitsCollection前都需将空间初始化\n```\nInitialize() This method is invoked at the beginning of each event. The argument of this method is an object\nof the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,\ncan be associated with the G4HCofThisEvent object in this method. The hit collections associated with\nthe G4HCofThisEvent object during this method can be used for during the event processing\ndigitization.\n```\nexample\n```\nvoid PLANETOCOSSoilSD::Initialize(G4HCofThisEvent*HCE)\n{ static int HCID = -1;\n  \n  SoilEdepHitCollection = new PLANETOCOSEdepHitsCollection\n                                  (SensitiveDetectorName,collectionName[0]);\n  \n  HCID = GetCollectionID(0);\n  HCE->AddHitsCollection(HCID,SoilEdepHitCollection);\n}\n```\n```\nvoid B4cCalorimeterSD::Initialize(G4HCofThisEvent* hce)\n{\n  // Create hits collection\n  fHitsCollection \n    = new B4cCalorHitsCollection(SensitiveDetectorName, collectionName[0]); \n\n  // Add this collection in hce\n  auto hcID \n    = G4SDManager::GetSDMpointer()->GetCollectionID(collectionName[0]);\n  hce->AddHitsCollection( hcID, fHitsCollection ); \n\n  // Create hits\n  // fNofCells for cells + one more for total sums \n  for (G4int i=0; i<fNofCells+1; i++ ) {\n    fHitsCollection->insert(new B4cCalorHit());\n  }\n}\n\n```\n```\nvoid APNISTrackSD::Initialize(G4HCofThisEvent* HCE)\n{\n  // static int HCID = -1;\n  fTrackHitCollection = new APNISTrackHitsCollection\n                      (SensitiveDetectorName,collectionName[0]); \n  // if(HCID<0)\n  // { HCID = GetCollectionID(0); }\n\n  // get the collection name according to the object(name).\n  if(HCID<0){\n    HCID = G4SDManager::GetSDMpointer()\n      ->GetCollectionID(fTrackHitCollection);\n  }\n  HCE->AddHitsCollection(HCID,fTrackHitCollection);\n}\n```\n\n### 结语\n\n到这里，数据文件打开，写入；数据的传递与存储就介绍完了；RunAction中实现对数据文件的打开与关闭；EventAction中实现将数据写入到文件，当然，如果你采用SteppingAction方式也可以将数据写入文件（此文不再介绍）；Hit中实现给需要传递的数据分配内存空间；SensitiveDetector中实现将数据传递给Hit分配的内存空间；如果将这个问题表述为送快递的过程，那么RunAction就是告诉快递员有堆快递需要在什么时候开始送，什么时候完全送达；EventAction就是需要送的快递，Hit就是送一份快递，给快递员分配的货箱大小；SensitiveDetector就是告诉快递员将货物放到货箱里；\n\n![SensitiveDetector+HitsCollection方式存储数据方法示意图](Geant4SD_Hit.png)","tags":["geant4"],"categories":["Geant4及Root应用"]},{"title":"Hexo Next theme Setting","url":"/2018/09/14/Hexo-Next-theme-Setting/","content":"\n[referrence site1](http://theme-next.iissnan.com)\n[referrence site2](https://blog.csdn.net/w_ngzeqi/article/details/73863543)  文章版权声明、文章加密访问、字数、时长、访问量 [another site](https://www.jianshu.com/p/1ff2fcbdd155)\n[referrence site3](https://blog.csdn.net/qq_32454537/article/details/79482896) 侧边栏社交小图标设置、设置网站图标、评论功能插件配置\n[referrence site3](https://blog.csdn.net/manmandong123/article/details/80739126) 添加评论功能[another site](https://blog.csdn.net/qq_32454537/article/details/79482879)\n[Somebody's blog Note](https://blog.csdn.net/lanuage/article/details/78991798) 站外分享 [another site](https://asdfv1929.github.io/categories/GitBlog/)\n[referrence sit4](https://blog.csdn.net/qq_30242609/article/details/54799019) 修改主题配色\n\n\n对于文章版权声明功能，可以直接去next主题下的`_config.yml`中开启，个人认为抱着开源开放特性，这个功能并不是很重要；\n\n## 设置版权信息\n\n1.在next主题下的next/_config.yml中设置copyright;\n``` bash\n# Declare license on posts\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 3.0\n  license_url: #https://creativecommons.org/licenses/by-nc-sa/3.0/\n```\n在hexo站点配置文件_config.yml中设置url;\n``` bash\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://lihui-snippets.cn/ #https://github.com/Hubery-Lee\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults: http://lihui-snippets.cn\n```\n\n## 文章加密访问\n\n### 该加密方法密码暴露在网页调试代码中\n\n1. 配置加密功能，打开`themes->next->layout->_partials->head.swig`文件,在以下位置![](.\\Hexo-Next-theme-Setting\\password.png)插入这样一段代码：\n```  html\n<script>\n    (function(){\n        if('{{ page.password }}'){\n            if (prompt('请输入文章密码') !== '{{ page.password }}'){\n                alert('密码错误！');\n                history.back();\n            }\n        }\n    })();\n</script>\n```\n在scaffolds文件夹post.md文件中，加入`password: `,新建博客将有如下的形式文件头；\n``` bash\n---\ntitle: {{ title }}\ndate: {{ date }}\ncategories:\ntags:\ndescription:\npassword: \n---\n```\n2.设置给文章设置访问密码，经过以上的配置，`hexo new \"newblog\"`在`password: #密码`设置密码；也可以在以往的文章设置加密访问，只需在文章头中加入`password: #密码`即可；\n``` bash\n---\ntitle: The use of gnome-screenshot command\ndate: 2018-09-11 16:12:50\ntags: [linux tool]\ncategories: linux tool\ndescription: gnome-screenshot command\npassword: pass\n---\n```\n如，要访问这篇The use of gnome-screenshot command文章就需要输入密码pass;\n\n### 该加密方法加密效果更好\n\n以上方法给文章加密，可以通过浏览器调试界面看到网页密码，故而考虑另外的文章加密方式，可以参考留言版中的[hexo-blog-encrypt](https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.md)地址尝试另一种加密方式；注意，对next主题，安装`hexo-blog-encrypt2.0.*`;对加密文章的头文件写法如下：\n``` bash\n---\ntitle: The use of gnome-screenshot command\ndate: 2018-09-11 16:12:50\ntags: [linux tool]\ncategories: linux tool\nabstract: gnome-screenshot command;encrypt this article\npassword: pass\nmessage: Please input password to read\n---\n```\n其中，`abstract`后面写的是摘要，即是非加密文章头的`description`功能一样；`message`是加密文章所特有，指的是设置提示输入密码；`password`后面是设置的密码；\nBug在打开文章页面后，不再显示摘要，解决办法是再加一遍`description`,故而，完全正确的加密文章抬头应该这么写：\n``` bash\n---\ntitle: The use of gnome-screenshot command\ndate: 2018-09-11 16:12:50\ntags: [linux tool]\ncategories: linux tool\nabstract: gnome-screenshot command;encrypt this article\npassword: pass\nmessage: Please input password to read\ndescription: gnome-screenshot command;encrypt this article\n---\n```\n经过测试，直接用`description`替代`abstract`也能达到这样的效果,并不存在Bug；\n``` bash\n---\ntitle: The use of gnome-screenshot command\ndate: 2018-09-11 16:12:50\ntags: [linux tool]\ncategories: linux tool\ndescription: gnome-screenshot command;encrypt this article\npassword: pass\nmessage: Please input password to read\n---\n```\n`Bug: 第二种加密方式，没法自动生成文章目录栏；`\n\n## 访问量设置\n\n采用busuanzi 和leancloud设置，在themes的文件夹下`_config.yml`中打开busuanzi配置，如下\n``` bash\n# Show PV/UV of the website/page with busuanzi.\n# Get more information on http://ibruce.info/2015/04/04/busuanzi/\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i>\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i>\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: false\n  page_pv_header: <i class=\"fa fa-file-eye\"></i>\n  page_pv_footer:\n```\n其中，`site_uv`指的是user visitors,`site_pv`指的是passager visitors; `<i class=\"fa fa-file-eye\"></i>`设置的是显示图标\n\n对于文章的阅读量也可采用leancloud的应用来设置，如下：\n``` bash\n# Show number of visitors to each article.\n# You can visit https://leancloud.cn get AppID and AppKey.\nleancloud_visitors:\n  enable: true\n  app_id:  #<app_id>\n  app_key:   #<app_key>\n```\n相对于busuanzi统计计数方法，leancloud方法能通过leancloud账户管理，并且leancloud统计的阅读量能够在首页显示；busuanzi统计数据无法在首页显示；leancloud应用的配置可以参考这篇文章 [参考文章链接](https://www.meiwen.com.cn/subject/yssswftx.html)\n\n## 评论功能设置\n\n评论功能采用leancloud valine应用，国内其他的友言、畅言和以及来必力都不能匿名评论，国外的gitalk,gitment以github用户授权评论，Hypercomments，Disqus等都被国内墙的厉害；只有国内leancloud应用具有匿名评论功能；在next主题下的`_config.yml`配置如下:\n``` bash\n# Valine.\n# You can get your appid and appkey from https://leancloud.cn\n# more info please open https://valine.js.org\nvaline:\n  enable: true\n  appid:  ooozwlclX00aJabPvk1WTj7J-gzGzoHsz # your leancloud application appid\n  appkey:  CnXrRUVdUdMXgEvGbdolWGYX # your leancloud application appkey\n  notify: false # mail notifier , https://github.com/xCss/Valine/wiki\n  verify: false # Verification code\n  placeholder: Just go go # comment box placeholder\n  avatar: mm # gravatar style\n  guest_info: nick,mail,link # custom comment header\n  pageSize: 10 # pagination size\n```\n\n## 站外分享功能\n\n具体的配置，可以参考文章开头列出的参考链接；在此，我只是用next主题模版，不作具体深入配置，工作中心放在作笔记上；在`_config.yml`中，打开百度分享选项即可：\n``` bash\n# Baidu Share\n# Available value:\n#    button | slide\n# Warning: Baidu Share does not support https.\nbaidushare:\n  type: slide\n```\n\n## 侧边栏社交小图标设置\n\nnext主题的网站小图标采用FrontAwesome插件[frontawesome icon site](https://fontawesome.com/icons?from=io);在实际应用中，在frontawesome网站搜索图标，在next主题的配置文件中用名字直接应用就行了，举例如下；\n``` bash\n# Social Links.\n# Usage: `Key: permalink || icon`\n# Key is the link label showing to end users.\n# Value before `||` delimeter is the target permalink.\n# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.\nsocial:\n  GitHub: https://github.com/Hubery-Lee || github\n  Runoob: https://www.runoob.com || cube\n  #Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n\nsocial_icons:\n  enable: true\n  icons_only: false\n  transition: false\n```\n以上脚本中的`github,cube`即是在frontawesome上搜索到的图标名称；同样，links的图标也是这么配置的\n``` bash\n# Blog rolls\nlinks_icon: globe\nlinks_title: Index\n#links_layout: block\nlinks_layout: inline\n\nlinks:\n  Geant4: http://geant4.web.cern.ch/\n  Root: https://root.cern.ch/\n```\n其中，`globe`即是frontawesome搜索到的图标名称；\n\n## 设置网站图标\n\n若要对网站图标进行修改，只需将你要改的图标拷贝到`themes/next/source/images/`文件夹下，并修改`themes/next/_config.yml`文件中的，favicon后面对应的图片文件名即可；\n``` bash\n# For example, you put your favicons into `hexo-site/source/images` directory.\n# Then need to rename & redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.\nfavicon:\n  small: /images/favicon-16x16-next.png\n  medium: /images/favicon-32x32-next.png\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n  #android_manifest: /images/manifest.json\n  #ms_browserconfig: /images/browserconfig.xml\n```\n\n## 主题配色修改\n\n修改`themes/next/source/css/_variables/base.styl`文件；具体配色，暂时没有调整；另外`next/_config.yml`中有5种可直接用的配色方案，如下：\n``` bash\n# Code Highlight theme\n# Available value:\n#    normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: night eighties\n```\n\n## 头部顶栏背景颜色或图片设置\n\n1.在themes/next/source/css/_schemes/Mist/_header.styl中以下代码中修改颜色（我采用Next-Mist主题）\n``` bash\n.header { background: $blue-bright; }\n```\n2.也可改为背景图片，背景图片的添加如下：\n``` bash\n.header { background: url('../image/background.jpg'); }\n```\n将你要作为背景的图片`background.jpg`放到`Hexo/source/images/`文件夹下；当然你也可以采用图片网址链接，如：\n``` bash\n.header { background: url('http://xx.xx.xx.com/hexo/image/header-backgroud.jpg'); }\n```\n\n## 页脚设置\n\n在next/_config.yml中，修改`footer:`下面的配置，如下：\n``` bash\nfooter:   \n  ##这一段为页脚设置，footer英文意思即为页脚意思\n  # Specify the date when the site was setup.\n  # If not defined, current year will be used.\n  #since: 2015\n\n  # Icon between year and copyright info.\n  icon: user\n\n  # If not defined, will be used `author` from Hexo main config.\n  copyright:\n  # -------------------------------------------------------------\n  # Hexo link (Powered by Hexo).\n  powered: false\n\n  theme:\n    # Theme & scheme info link (Theme - NexT.scheme).\n    enable: false\n    # Version info of NexT after scheme info (vX.X.X).\n    version: false\n  # -------------------------------------------------------------\n  # Any custom text can be defined here.\n  #custom_text: Hosted by <a target=\"_blank\" href=\"https://pages.github.com\">GitHub Pages</a>\n```","tags":["hexo"],"categories":["编程工具学习与应用"]},{"title":"icon download site","url":"/2018/09/14/icon-download-site/","content":"\n## icon download site\n\n[icon download site](https://fontawesome.com/icons?from=io)\n","tags":["hexo"],"categories":["素材"]},{"title":"Geant4 and Root Class Index","url":"/2018/09/14/Geant4-and-Root-Class-Index/","content":"\n## Geant4 Class Index\n\n[Geant4 Class Index](http://www.apc.univ-paris7.fr/~franco/g4doxy4.10/html/annotated.html)\n\n## Root Class Index\n\n[Root Class Index](https://root.cern/doc/master/modules.html)\n","tags":["geant4","root"],"categories":["Geant4及Root应用"]},{"title":"Git Remote Repository UserGuide ","url":"/2018/09/13/Git-Remote-Repository-UserGuide/","content":"\n## git remote repository Using\n\n[reference site](https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8)\n\n### 查看远程仓库\n\n``` bash\n$ git remote  #显示仓库信息\n$ git remote --version #显示对应的克隆地址\n$ git remote -v   #显示对应的克隆地址\n```\n\n### 添加远程仓库\n\n``` bash\n$ git remote add pb git://github.com/paulboone/ticgit.git  #git remote add [shortname] [url]\n```\n\n### 远程仓库抓取数据\n\n``` bash\n$ git fetch pb # git fetch [remote-name]\n```\n\n### 推送数据到远程仓库\n\n``` bash\n$ git push origin master #git push [remote-name] [branch-name]\n```\n\n### 查看远程仓库信息\n\n``` bash\n$ git remote show origin  #git remote show [remote-name] \n```\n\n\n\n","tags":["git"],"categories":["编程工具学习与应用"]},{"title":"The use of gnome-screenshot command","url":"/2018/09/11/The-use-of-gnomescreenshot-command/","content":"\n## gnome-screenshot command\n\n```bash\n$ gnome-screenshot  #截取整个屏幕\n$ gnome-screenshot -w #截取当前活动窗口\n$ gnome-screenshot -a #选择截图区域\n$ gnome-screenshot -d=5 #延迟5妙截图\n$ gnome-screenshot -i #交互模式使用截屏工具\n```\n当然，遇到不会用gnome-screenshot命令时，最好的方法是问linux系统自带的manual\n```\n$ man gnome-screenshot\n```\n","tags":["linux tool"],"categories":["linux tool"]},{"title":"geant4DetectorConstruction","url":"/2018/09/11/geant4DetectorConstruction/","content":"\n## geant detector construction\n\n1. 几何旋转符合`左手法则`及RotationMatrix的使用\n经过验证geant4中的rotate符合`左手法则`\n\n``` bash\n  G4RotationMatrix *rot=new G4RotationMatrix;\n  rot->rotateX(90*degree);\n  rot->rotateY(90*degree);\n  rot->rotateZ(90*degree);\n```\n\n注意，再次对rot重复赋值无效，如对上述代码再作如下操作`rot->rotateX(180*degree)`,该操作将无效，不会改变之前的rot；\n那么，要对rot再次赋值该怎么办呢？如下：只需在再次赋值前加`rot =new G4RotationMatrix`即可；\n```bash\n  G4RotationMatrix* rotationMatrix_X = new G4RotationMatrix;\n\n  for(G4int x_col_num = 0; x_col_num <=NBD_colNb; x_col_num++){\n    if(x_col_num==0){  // the center colume\n      NBDx = NBDx0;\n      for(G4int y_row_num = 0; y_row_num <=NBD_rowNb; y_row_num++ ){\n\t// NBDx = NBDx0;\n\tNBDy = NBDy0+R*sin(y_row_num*theta);\n\tNBDz = NBDz0+R*(1-cos(y_row_num*theta));\n\n\tif(y_row_num==0){\n\t  // center position\n\t  rotationMatrix_X = new G4RotationMatrix;\n\t  rotationMatrix_X->rotateX(y_row_num*theta);\n\n\t  new G4PVPlacement(rotationMatrix_X,                      //no rotation\n\t\t\t    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)\n\t\t\t    logicAssembleNBD,                    //its logical volume\n\t\t\t    \"AssembleNBD\",         //its name\n\t\t\t    expHall_logV,          //its mother  volume\n\t\t\t    false,                 //no boolean operation\n\t\t\t    0,                     //copy number\n\t\t\t    true);                    //overlaps checking    \n\t}\n\telse{\n\t  //+y++\n\t  rotationMatrix_X = new G4RotationMatrix;\n\t  rotationMatrix_X->rotateX(-y_row_num*theta);\n\n\t  new G4PVPlacement(rotationMatrix_X,                      //no rotation\n\t\t\t    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)\n\t\t\t    logicAssembleNBD,                    //its logical volume\n\t\t\t    \"AssembleNBD\",         //its name\n\t\t\t    expHall_logV,          //its mother  volume\n\t\t\t    false,                 //no boolean operation\n\t\t\t    0,                     //copy number\n\t\t\t    true);               // overlaps checking \n\t  //-y++\n\t  rotationMatrix_X = new G4RotationMatrix;\n\t  rotationMatrix_X->rotateX(y_row_num*theta);\n\t  new G4PVPlacement(rotationMatrix_X,                      //no rotation\n\t\t\t    G4ThreeVector(NBDx,-NBDy,NBDz),       //at (0,0,0)\n\t\t\t    logicAssembleNBD,                    //its logical volume\n\t\t\t    \"AssembleNBD\",         //its name\n\t\t\t    expHall_logV,          //its mother  volume\n\t\t\t    false,                 //no boolean operation\n\t\t\t    0,                     //copy number\n\t\t\t    true);               // overlaps checking    \n\t}\n      }\n...\n\n```\n\n2. G4VParameterisation()的使用\n\n* `ComputeTransformation` defines where one of the copies is placed\n* `ComputeDimensions` defines the size of one copy, and a constructor that initializes any member variables that are required.\n\nG4VParameterisation的具体应用可参看Basics/B2/B2b\n","tags":["geant4"],"categories":["Geant4及Root应用"]},{"title":"G4Color选项","url":"/2018/09/09/G4Color选项/","content":"\n## 颜色的配置\n\nGeant4中的颜色配置由红、绿、蓝、是否透明四个构成；red、green、blue、alpha(opacity/opaque)\n``` bash\nG4Colour::G4Colour ( G4double  r = 1.0,\n\t\t     G4double  g = 1.0,\n\t\t     G4double  b = 1.0,\n                     G4double  a = 1.0);\n                 //0<=red, green, blue <= 1.0\n\n```\n\n## 颜色的实例化应用\n\n1.颜色配置实例化\n``` bash\nG4Colour  white  ();  //white\nG4Colour  white  (1.0,1.0,1.0);  //white\nG4Colour  gray   (0.5,0.5,0.5);  //gray\nG4Colour  black  (0.0,0.0,0.0);\t //black\nG4Colour  red    (1.0,0.0,0.0);  //red\nG4Colour  green  (0.0,1.0,0.0);  //green\nG4Colour  blue   (0.0,0.0,1.0);  //blue\nG4Colour  cyan   (0.0,1.0,1.0);\t //cyan\nG4Colour  magenta(1.0,0.0,1.0);  //magenta\nG4Colour  yellow (1.0,1.0,0.0);  //yellow\n```\nexample \n``` bash\n  G4VisAttributes* Assemble_VisAtt= new G4VisAttributes(G4Colour(0.0,0.0,1.0));//blue\n```\n\n2.静态公用数据函数实例化\n``` bash\nstatic const G4Colour& White   ();\nstatic const G4Colour& Gray    ();\nstatic const G4Colour& Grey    ();\nstatic const G4Colour& Black   ();\nstatic const G4Colour& Red     ();\nstatic const G4Colour& Green   ();\nstatic const G4Colour& Blue    ();\nstatic const G4Colour& Cyan    ();\nstatic const G4Colour& Magenta ();\nstatic const G4Colour& Yellow  ();\n```\nexample\n``` bash\nG4Colour myRed(G4Colour::Red());\n```\n实例化Colour对象后，可以采用如下方式获得函数\n``` bash\nG4double G4Colour::GetRed   () const;\nG4double G4Colour::GetGreen () const;\nG4double G4Colour::GetBlue  () const;\n```\n\n## Colour Map的应用\n\n```\nG4String\t\tG4Colour\n---------------------------------------\nwhite\t\t\tG4Colour::White\t()\ngray\t\t\tG4Colour::Gray\t()\ngrey\t\t\tG4Colour::Grey\t()\nblack\t\t\tG4Colour::Black\t()\nred\t\t\tG4Colour::Red\t()\ngreen\t\t\tG4Colour::Green\t()\nblue\t\t\tG4Colour::Blue\t()\ncyan\t\t\tG4Colour::Cyan\t()\nmagenta\t\t\tG4Colour::Magenta ()\nyellow\t\t\tG4Colour::Yellow ()\n```\n\nColours的检索可以采用如下方式\n``` bash\nbool G4Colour::GetColour(const G4String& key, G4Colour& result)\n```\nexample\n``` bash\nG4Colour myColour(G4Colour::Black());\nif (G4Colour::GetColour(\"red\", myColour)) {\n// Successfully retrieved colour \"red\". myColour is now red\n}\nelse {\n// Colour did not exist in map. myColour is still black\n}\n```\n","tags":["Geant4"],"categories":["Geant4及Root应用"]},{"title":"Add menubar and search function to hexo blog","url":"/2018/09/09/How-to-add-menubar-and-search-function-to-blog-with-hexo/","content":"\n## Add Menubar\n\nIn the theme folder, we can find the following scripts in the _config.yml file.\n``` bash\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\n\n# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -> archives).\n# Usage: `Key: /link/ || icon`\n# Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.\n# Value before `||` delimeter is the target link.\n# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.\nmenu:\n  home: / || home\n  about: /about/ || user\n  tags: /tags/ || tags\n  categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n\n# Enable/Disable menu icons.\nmenu_icons:\n  enable: true\n\n```\nThe default menubars are home and archives. I want to add tags, categories and about to menubar. The problems appear when I only note off the options in the above scripts.\n\nAfter investigation about this problem, I find the ansower in this site  http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml `method one to cite website`\n\n[this site](http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml)  `method two to cite website`\n\nActually, we should add folder with commond `hexo new page  menubar_name`, then corresponding folders will appear in the source folder which is the site configure source folder. Then add configure information in the correspongding index.md.\nTake tags for example.\n\n``` bash\n$ hexo new page tags\n```\n\nWe will see follow information in index.md.\n\n``` bash\n---\ntitle: tags\ndate: 2018-09-09 13:34:49\n---\n```\nThen we add `type: \"tags\"` to the index.md\n``` bash\n---\ntitle: tags\ndate: 2018-09-09 13:34:49\ntype: \"tags\"\n---\n```\nSimilar methods are used to add categories and about to menubar.\n\n## Add local search function to menubar\n\n1. install `hexo-generator-search`, hexo-theme-next search function depend on this package.\n\n``` bash\n$ npm install hexo-generator-search --save\n```\n\n2. active the local search configure in theme configure file `_config.yml`.\n\n``` bash\n# Local search\n# Dependencies: https://github.com/flashlab/hexo-generator-search\nlocal_search:\n  enable: true #false modified by hubery lee @2018/9/9\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n\n","tags":["hexo"],"categories":["编程工具学习与应用"]},{"title":"hexo中插入图片测试","url":"/2018/09/01/图片测试/","content":"\n##  hexo 站点配置\n\n设置_config.yml\n\n``` bash\npost_asset_folder: true\n```\n\n## 安装插件\n\n``` bash\n$ npm install hexo-asset-image --save\n$ npm install https://github.com/CodeFalling/hexo-asset-image -- save  #该方法安装测试成功\n```\n\n## 图片引用\n\n``` bash\n$ hexo new \"newblog\"\n \n会有newblog.md和newblog文件夹，将需要引用的图片放到文件夹内\n```\n在newblog.md中图片的引用\n\n1.标签引用\n\n``` bash\n$ {% asset_path slug %}\n$ {% asset_img slug [title] %}\n$ {% asset_link slug [title] %}\n```\n{% asset_path gitProcess.png %}\n{% asset_img gitProcess.png 第二种方法 %}\n{% asset_link  https://image.baidu.com/search/detail?ct=503316480&z=&tn=baiduimagedetail&ipn=d&word=%E7%8C%AB%E5%A4%B4%E9%B9%B0&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=-1&cs=2028628767,61876418&os=4058183028,3413382511&pn=0&rn=1&di=196345561830&ln=1940&fr=&fmq=1535807535286_R&fm=&ic=0&s=undefined&se=&sme=&tab=0&width=&height=&face=undefined&is=0,0&istype=2&ist=&jit=&bdtype=0&pi=0&gsm=0&objurl=http%3A%2F%2Fimg5q.duitang.com%2Fuploads%2Fblog%2F201502%2F08%2F20150208122643_s2BMS.jpeg&rpstart=0&rpnum=0&adpicid=0&ctd=1535807540714^3_1354X569%1 owl %}\n\n{% asset_link  gitProcess.png 第三种方法 %}\n\n\n``` bash\n{% asset_path gitProcess.png %}\n{% asset_img gitProcess.png 第二种方法 %}\n{% asset_link  https://image.baidu.com/search/detail?ct=503316480&z=&tn=baiduimagedetail&ipn=d&word=%E7%8C%AB%E5%A4%B4%E9%B9%B0&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=-1&cs=2028628767,61876418&os=4058183028,3413382511&pn=0&rn=1&di=196345561830&ln=1940&fr=&fmq=1535807535286_R&fm=&ic=0&s=undefined&se=&sme=&tab=0&width=&height=&face=undefined&is=0,0&istype=2&ist=&jit=&bdtype=0&pi=0&gsm=0&objurl=http%3A%2F%2Fimg5q.duitang.com%2Fuploads%2Fblog%2F201502%2F08%2F20150208122643_s2BMS.jpeg&rpstart=0&rpnum=0&adpicid=0&ctd=1535807540714^3_1354X569%1 owl %}\n```\n\n\n\n2.利用markdown\n\n``` bash\n![图片说明](XXX/图片.jpg)  #XXX为文件夹名\n```\n\n![图片测试1](图片测试/gitProcess.png)\n![图片测试2](gitProcess.png)\n\n``` bash\n![图片测试1](图片测试/gitProcess.png)\n![图片测试2](gitProcess.png)\n```\n\n\n\n","tags":["hexo"],"categories":["编程工具学习与应用"]},{"title":"Git简易使用笔记","url":"/2018/09/01/GitUseGuide/","content":"\n\n## 创建仓库\n\n采用git init 在目录创建新的仓库\n\n``` bash\n$ mkdir newrepository  #\n$ cd newrepository\n$ git init\n```\n\n或者直接采用 git init 仓库名\n\n``` bash\n$ git init newrepository\n```\n\n## 软件仓库下载\n\n下载仓库 git clone 拷贝到本地\n``` bash\n$ get clone [url]\n```\n例如，从我的github上下载代码到本地\n``` bash\n$ get clone https://github.com/Hubery-Lee/LeeEmacs-setting\n```\n\n## 软件仓库的快照\n\n### git的日常使用\n\ngit 的日常使用过程\n\n{% asset_img 1.jpg 日常使用原理 %}\n\ngit add 命令可将文件添加到缓存()\ngit status 查看添加到缓存的文件状态 -s 简短结果输出\n\n``` bash\n$ touch README\n$ touch hello.php\n$ ls\nREADME        hello.php\n$ git status -s\n?? README\n?? hello.php\n\n$ git add README hello.php \n\n$ git status -s\nA  README\nA  hello.php\n$ \n\n在 README 添加以下内容：# Runoob Git 测试，然后保存退出。\n\n$ echo \"# Runoob Git\">>README \n$ git status -s\nAM README\nA  hello.php\n\n$ git add .\n$ git status -s\nA  README\nA  hello.php\n\n```\n\n执行 git diff 来查看执行 git status 的结果的详细信息。\n\ngit diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。\n\n    尚未缓存的改动：git diff\n    查看已缓存的改动： git diff --cached\n    查看已缓存的与未缓存的所有改动：git diff HEAD\n    显示摘要而非整个 diff：git diff --stat\n\ngit status 显示你上次提交更新后的更改或者写入缓存的改动， 而 git diff 一行一行地显示这些改动具体是啥。\n\n接下来我们来查看下 git diff --cached 的执行效果：\n\n``` bash\n在 hello.php 文件中输入以下内容：\n<?php\necho '菜鸟教程：www.runoob.com';\n?>\n\n$ git status -s\nA  README\nAM hello.php\n$ git diff\ndiff --git a/hello.php b/hello.php\nindex e69de29..69b5711 100644\n--- a/hello.php\n+++ b/hello.php\n@@ -0,0 +1,3 @@\n+<?php\n+echo '菜鸟教程：www.runoob.com';\n+?>\n\n$ git add hello.php \n$ git status -s\nA  README\nA  hello.php\n$ git diff --cached\ndiff --git a/README b/README\nnew file mode 100644\nindex 0000000..8f87495\n--- /dev/null\n+++ b/README\n@@ -0,0 +1 @@\n+# Runoob Git 测试\ndiff --git a/hello.php b/hello.php\nnew file mode 100644\nindex 0000000..69b5711\n--- /dev/null\n+++ b/hello.php\n@@ -0,0 +1,3 @@\n+<?php\n+echo '菜鸟教程：www.runoob.com';\n+?>\n\n```\n\ngit commit 将缓存区内容添加到仓库中\n``` bash\n 配置用户名和邮箱地址\n$ git config --global user.name 'runoob'\n$ git config --global user.email test@runoob.com\n```\n提交缓存到仓库\n``` bash\n$ git commit -m '第一次版本提交'\n[master (root-commit) d32cf1f] 第一次版本提交\n 2 files changed, 4 insertions(+)\n create mode 100644 README\n create mode 100644 hello.php\n\n$ git status\n# On branch master\nnothing to commit (working directory clean)\n```\n\ngit reset HEAD 命令用于取消已缓存的内容。\n同时修改README和hello.php,然后撤销hello.php的缓存\n``` bash\n$ git status -s\n M README\n M hello.php\n$ git add .\n$ git status -s\nM  README\nM  hello.pp\n$ git reset HEAD hello.php \nUnstaged changes after reset:\nM    hello.php\n$ git status -s\nM  README\n M hello.php\n\n$ git commit -m '修改'\n[master f50cfda] 修改\n 1 file changed, 1 insertion(+)\n$ git status -s\n M hello.php\n```\n仍然可以再次提交hello.php修改的内容\n``` bash\n$ git commit -am '修改 hello.php 文件'\n[master 760f74d] 修改 hello.php 文件\n 1 file changed, 1 insertion(+)\n$ git status\nOn branch master\nnothing to commit, working directory clean\n```\n\n简而言之，执行 git reset HEAD 以取消之前 git add 添加，但不希望包含在下一提交快照中的缓存。\n\ngit rm\n如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。\n\n``` bash\n$ git rm <file>\n$ git rm -f  <file>\n$ git rm -r <file>\n$ git rm --cached <file>\n类似有git mv 移动和重命名\n$ git mv README  README.md\n```\n要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作\n\n\n\n### git中tag和branch的使用\n\n\n{% asset_img 2.png tag和branch %}\n\n创建分支、列出分支、切换分支、删除分支\n``` bash\n$ git branch testing #创建testing分支\n$ git branch   #列出分支\n* master\n  testing\n\n$ git checkout testing\nSwitched to branch 'testing'\n\n$ git checkout master\nSwitched to branch 'master'\n\n$ git checkout -b newtest  #创建newtest分支并切换到该分支\nSwitched to a new branch 'newtest'\n\n$ git branch -d testing  #删除testing分支\nDeleted branch testing (was 85fc7e7).\n\n$ git branch  \n* master\n  newtest\n\n$ git merge newtest     #将newtest分支合并到master分支\nUpdating 2e082b7..556f0a0\nFast-forward\n test2.txt | 1 -\n 1 file changed, 1 deletion(-)\n delete mode 100644 test2.txt\n```\n\n当同时记录到master的修改和branch分支的修改时，会出现合并分支冲突\n手动修改冲突部分\n采用git add 告诉git文件冲突已经解决；\n``` bash\n$ git merge change_site\nAuto-merging test.txt\nCONFLICT (content): Merge conflict in test.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n$ cat test.txt \n<<<<<<< HEAD\nrunoob.com\n新增加一行\n=======\nwww.runoob.com\n>>>>>>> change_site\n\n$ vim test.txt \n$ cat test.txt \nwww.runoob.com\n新增加一行\n$ git diff\ndiff --cc test.txt\nindex f84c2a4,bccb7c2..0000000\n--- a/test.txt\n+++ b/test.txt\n@@@ -1,2 -1,1 +1,2 @@@\n- runoob.com\n+ www.runoob.com\n +新增加一行\n\n$ git status -s\nUU test.txt\n$ git add test.txt \n$ git status -s\nM  test.txt\n$ git commit\n[master 88afe0e] Merge branch 'change_site'\n\n```\n\n查看提交历史\n``` bash\n$ git log  #详细提交历史\n$ git log --oneline  #简洁提交历史\n$ git log --oneline --graph  #--graph开启了拓扑图选项\n$ git log --reverse --oneline #用 '--reverse'参数来逆向显示所有日志。\n$ git log --author=Linus --oneline -5 #--author查找指定用户提交的记录\n$ git log --oneline --before={3.weeks.ago} --after={2010-04-18} --no-merges#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交\n\n```\n\n标签\n写一句标签注解，就像你给提交写注解一样。\n``` bash\n$ git tag -a v1.0 \n$ git log --oneline --decorate --graph  #执行 git log --decorate 时，可以看到标签\n$ git tag -a v0.9 85fc7e7       #给提交代码85fc7e7追加标签\n$ git log --oneline --decorate --graph\n*   88afe0e (HEAD, tag: v1.0, master) Merge branch 'change_site'\n|\\  \n| * d7e7346 (change_site) changed the site\n* | 14b4dca 新增加一行\n|/  \n* 556f0a0 removed test2.txt\n* 2e082b7 add test2.txt\n* 048598f add test.txt\n* 85fc7e7 (tag: v0.9) test comment from runoob.com\n\n$ git tag  #查看所有标签\nv0.9\nv1.0\n\n$ git tag -a <tagname> -m \"runoob.com标签\"  #指定标签信息命令\n$ git tag -s <tagname> -m \"runoob.com标签\"  #PGP签名标签命令\n```\n\n## 远程软件仓库的提取\n\n``` bash\n$ git remote   #查看远程仓库\norigin\n$ git remote -v  #-v 参数，可以看到每个别名的实际链接地址。\norigin    git@github.com:tianqixin/runoob-git-test.git (fetch)\norigin    git@github.com:tianqixin/runoob-git-test.git (push)\n\n$ git fetch [alias] #从远程仓库下载分支和数据\n$ git fetch origin  #从远程仓库下载origin分支和数据\nremote: Counting objects: 3, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (3/3), done.\nFrom github.com:tianqixin/runoob-git-test\n   0205aab..febd8ed  master     -> origin/master\n```\n\n\n## 远程软件仓库的上传\n``` bash\n$ git merge [alias]/[branch] #以将服务器上的任何更新合并到你的当前分支\n$ git merge origin/master  #从远端仓库提取数据并尝试合并到当前分支\nUpdating 0205aab..febd8ed\nFast-forward\n README.md | 1 +\n 1 file changed, 1 insertion(+)\n\n$ git push [alias] [branch] #推送你的新分支与数据到某个远端仓库\n$ git push origin master    # 推送到 Github\n\ngit remote rm  [alias]\ngit remote mv [aliasA] [aliasB]\n\n```\n\n## 获取软件仓库更改历史\n\n``` bash\n\n$ git status\n$ git status -s\n$ git diff \n$ git diff --cached\n$ git log  #详细提交历史\n$ git log --oneline  #简洁提交历史\n$ git log --oneline --graph  #--graph开启了拓扑图选项\n$ git log --reverse --oneline #用 '--reverse'参数来逆向显示所有日志。\n$ git log --author=Linus --oneline -5 #--author查找指定用户提交的记录\n$ git log --oneline --before={3.weeks.ago} --after={2010-04-18} --no-merges#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交\n\n$ git branch\n$ git tag\n$ git remote\n\n```\n\n## 回滚到软件仓库的历史版本\n\n``` bash\n$ git reset \n$ git reset HEAD [file]\n$ git reset --hard <target_commit_id>\n$ git reset --soft origin/source 命令（source 分支）\n```\n\n\n\n\n\n","tags":["git"],"categories":["编程工具学习与应用"]},{"title":"hexo简易使用笔记","url":"/2018/09/01/hexo简易使用笔记/","content":"\n## 常用命令\n\n``` bash\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n\n```\n\n## 缩写\n\n``` bash\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n## 组合命令\n``` bash\nhexo s -g #生成并本地预览\nhexo d -g #生成并上传\n```\n\n## hexo发布博客预览\n\n本地预览\n\n``` bash\nhexo s -g #生成并本地预览\n```\n然后，在浏览器中打开 http://localhost:4000/\n\n发布到github绑定的个人博客网页上\n\n``` bash\nhexo d -g #生成并上传\n```\n比如，我发布博客后，就直接可以采用个人网络域名访问 http://lihui-snippets.cn/ \n\n具体github+hexo如何搭建个人博客教程可以百度以下；我觉得这篇博客写的比较好 https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2\n\n\n\n\n","tags":["hexo"],"categories":["编程工具学习与应用"]},{"title":"LeeEmacs-setting","url":"/2018/09/01/LeeEmacs-setting/","content":"\n## 模块功能yasnippet\n\n1. 下载yasnippet安葬包，加压到~/.emacs.d/plugins目录下\n2. 在～/.emacs文件中配置yasnippet\n\n``` bash\n;; add yasnippet plugin \n(add-to-list 'load-path\n              \"~/.emacs.d/plugins/yasnippet\")\n(require 'yasnippet)\n(yas-global-mode 1)\n\n\n;;代码折叠\n(load-library \"hideshow\")\n(add-hook 'java-mode-hook 'hs-minor-mode)\n(add-hook 'perl-mode-hook 'hs-minor-mode)\n(add-hook 'php-mode-hook 'hs-minor-mode)\n(add-hook 'emacs-lisp-mode-hook 'hs-minor-mode)\n(add-hook 'c++-mode-hook 'hs-minor-mode)\n(add-hook 'c-mode-hook 'hs-minor-mode)\n(add-hook 'matlab-mode-hook 'hs-minor-mode)\n(add-hook 'fortran-mode-hook 'hs-minor-mode)\n(add-hook 'f90-mode-hook 'hs-minor-mode)\n(add-hook 'markdown-mode-hook 'hs-minor-mode)\n(add-hook 'org-mode-hook 'hs-minor-mode)\n```\n\n## 文件头个人信息设置——header2.el\n\n1. wiki 下载header2.el\n2. 将header2.el 放到~/.emacs.d/plugins文件夹下；\n3. 在～/.emacs文件中配置个人信息\n\n``` bash\n;;====================info of user====================\n;;********************header**************************\n;;(load-file \"~/.emacs.d/header2.el\")\n(add-to-list 'load-path \"~/.emacs.d/plugins\" )\n;; 设置文件头中的姓名\n(require 'header2)\n(setq user-full-name \"Li Hui\")\n\n;; 设置邮箱\n(setq user-email-address \"h*****@126.com\")\n\n \n;; 设置每次保存时要更新的项目\n(autoload 'auto-update-file-header \"header2\")\n(add-hook 'write-file-hooks 'auto-update-file-header)\n(autoload 'auto-make-header \"header2\")\n(add-hook 'emacs-lisp-mode-hook 'auto-make-header)\n(add-hook 'c-mode-common-hook   'auto-make-header) \n(add-hook 'c++-mode-common-hook   'auto-make-header)\n(add-hook 'text-mode-hook   'auto-make-header)\n\n;;(add-hook 'make-header-hook 'header-shell nil t) \n```\n\n## 自动补全 auto-complete\n\n经过尝试，直接解压到~/.emacs.d/plugins文件夹然后make 和make install 然后在.emacs文件配置导入auto-complete插件，但并不能实现自动补全功能。但也没有报错；我认为可能是由于可能式auto-complete没有开启的缘故；\n\n1. 检测auto-complete有没有安装成功的方法\n\n``` bash\n安装完后，重启emacs然后输入ac，若出现可选的自动补全选项，那么说明已经安装成功了；\n```\n\n2. auto-complete的安装方法——第二种安装成功\n（1）传统方法是采用解压到~/.emacs.d/plugins,然后make和make install，再在.emacs中进行配置\n\n``` bash\n(add-to-list 'load-path \"/home/hubery_lee/.emacs.d/plugins/auto-complete\")\n(require 'auto-complete-config)\n(add-to-list 'ac-dictionary-directories \"/home/hubery_lee/.emacs.d/plugins/auto-complete/ac-dict\")\n(ac-config-default)\n```\n（2）通过MELPA或MELPA Stable的package.el安装auto-complete.el；\n参考github这个开放者介绍的方法进行安装 https://github.com/auto-complete/auto-complete/blob/master/doc/manual.md\n\n首先，添加melpa或melpa-stable的package库\n\n``` bash\n(require 'package)\n\n;; If you want to use latest version\n(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\"))\n\n;; If you want to use last tagged version\n(add-to-list 'package-archives '(\"melpa-stable\" . \"https://stable.melpa.org/packages/\"))\n(package-initialize)\n```\n然后,利用package功能安装auto-complete\n\n``` bash\n在emacs的minibuffer里选取以下一种命令安装auto-complete\n    M-x package-list-packages and select auto-complete\n    M-x package-refresh-contents and M-x package-install auto-complete\n```\n最后，根据显示的安装路径，在.emacs中进行配置\n\n``` bash\n;; add auto-complete plugin\n\n(add-to-list 'load-path \n\t\"/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245\")\n(require 'auto-complete-config)\n(add-to-list 'ac-dictionary-directories \"/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245/ac-dict\")\n(ac-config-default)\n```\n\n## 自定义小功能\n\n``` bash\n\n;;显示匹配的括号\n(show-paren-mode t) \n\n;;光标显示为一竖线\n(setq-default cursor-type 'bar)\n\n;;setting frame title \n(setq frame-title-format \"%b - LiHui@CIRP\")\n\n;;鼠标指针避光标\n(mouse-avoidance-mode 'animate)\n\n;;不生成临时文件\n(setq-default make-backup-files nil)\n;;允许emacs和外部其他程序的粘贴\n(setq x-select-enable-clipboard t)\n;;使用鼠标中键可以粘贴\n(setq mouse-yank-at-point t)\n;; 自动的在文件末增加一新行\n;;(setq require-final-newline t)\n;; 当光标在行尾上下移动的时候，始终保持在行尾。\n\n;;color\n;;(add-to-list 'load-path \"~/.emacs.d/plugins\")\n;;(require 'color-theme)\n;;(color-theme-subtle-hacker)\n;;(color-theme-xemacs)\n;;(color-theme-wheat)\n;;(color-theme-calm-forest)\n;;(color-theme-matrix)\n;;(color-theme-robin-hood)\n;;(color-theme-euphoria)\n;;(color-theme-arjen)\n;;(color-theme-jsc-dark)\n\n;;hide tool bar\n(tool-bar-mode 0)\n\n;; show line number\n(global-linum-mode 'linum-mode)  \n```\n\n","tags":["Emacs24.3"],"categories":["编程工具学习与应用"]},{"title":"Git-VS-SVN","url":"/2018/08/20/Git-VS-SVN/","content":"\n## Git和SVN主要差别\n\nSVN只有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。\nGit每一个终端都是一个仓库，客户端并不只提取最新版本的文件快照，而是把原始的代码仓库完整地镜像下来。每一次的提取操作，实际上都是一次对代码仓库的完整备份。Git不仅仅是个版本控制系统，它也是个内容管理系统（CMS），工作管理系统等。\n\n### 1.分布式VS集中式版本控制\n\nsvn采用集中式版本控制\n\n{% asset_img 20161214020406505.jpg svn集中式版本控制 %}\n\ngit采用分布式版本控制\n\n{% asset_img 20161214020603227.jpg git分布式版本控制 %}\n\n两种版本控制的区别：\n（1）svn 过渡依赖中央服务器，出现故障影响其他工作;git中央服务器只用于方便交流，有没有中央服务器都行；\n（2）svn 版本库只保存在中央服务器，本地检测时不会检出版本库；git每个本地电脑均会保存完整的版本库；\n（3）svn 的commit依赖连接中央服务器的网络；git由于有本地版本库，可以commit不依赖网络，commit可以频繁使用；git 通过push来实现其他电脑的版本库的同步（synchronize）操作；\n\n### 2.分支功能\n\n（1）svn 创建分支就是创建了一个新文件夹并拥有实际的文件，类似于拷贝了一份源文件，相当于在服务器上创建了分支，会影响到连接服务器的所有本地工作副本；git创建分支并没有创建文件夹，创建分支只是多了一个索引文件，并记录这个分支的变化，占用空间小，分支之间可以自由切换互不影响。\n（2）git具有代码审核功能，各个成员请求将自己的分子合并到主分支均需要管理人员进行审核。\ngit的工作流程如下：\n\n\n{% asset_img gitProcess.png gitprocess %}\n\n### 3.git的使用\n\n（1）安装配置\n（2）pc上任意获取，运行git clone url，将远程版本库克隆到本地\n（3）日常场景\n\n{% asset_img 20180227165834705.png 日常使用 %}\n\na.创建一个新文件，并添加到版本库中使用命令：\n创建了一个新文件，需要添加到版本库里（追踪此文件）使用git add filename命令，我想保存一下，使用git commit -m ..... 我想把我改变的推送给其他人（服务器）git push -u origin master(提交代码)。\n``` bash\n$ mkdir newDoc\n$ git add newDoc\n```\nb.保存一下修改记录\n``` bash\n$ git commit -m \"提交添加一个新文件到版本库\"  #“”内为chang messages\n```\nc.将我的修改推送给其他人或服务器\n``` bash\n$ git push -u origin master\n```\n我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + merge。\n\nd.将别人的代码拉取过来\n``` bash\n$ git pull\n```\n我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + git merge。\n\ne.删除原来的文件\n``` bash\n$ git rm file #将会将file文件从暂存区与磁盘删除\n```\n原来的有个文件，想删除了，使用git rm file(停止追踪文件并从磁盘上删除),如果我们只想将 停止追踪文件，但是不删除只需要 git rm --cached <file>。然后想把这个改变推送给别人，就应该是用git commit 然后git push 将自己的改变推送到git服务器。\n\nf.git分支功能的使用\n那么平时我们收到一个新功能的任务，应该是怎样的操作呢？比较正确的操作流程应该是这样，我们先使用git branch 查看一下我们本地到底有多少分支，然后我们先使用git branch <new branch>从develop分支新建一个分支featureN,然后使用git checkout <branch/tag> 切换到新建的featureN分支里。在新的分支里进行新功能开发。\n``` bash\n$ git branch #查看分支\n$ git branch #新建分支featureN 即 <new branch>\n$ git checkout <branch/tag> #切换到新建的featureN分支里，在新的分支里进行新功能的开发。\n```\ng.恢复到某一时刻\n我们在进行新功能开发的时候，每实现一个小功能的时候，我们就git commit 进行提交一下，刚提交完，突然发现，这次提交的东西会严重影响其他功能，想撤销这次提交，我们需要使用git reset --hart HEAD 来撤销工作目录中所有未提交文件的修改内容。那么如果我们想撤销指定的一次提交呢？我们需要使用git revert <commit> 进行指定的提交。\n``` bash\n$ git reset HEAD #撤回暂存中未提交的内容\n$ git revert <commit> #撤回一次指到定的提交\n```\n\nh.分支的合并\n假设开发完毕后，应该怎么做？对，就是将新功能的分支合并到develop分支里。就是先切换到develop分支里，然后使用git merge 命令进行合并。这时，新功能开发完毕，新建的featureN分支就没用了，我们使用git branch -d <branch>将无用的分支删除。至此，我们新功能开发完毕。\n``` bash\n$ git merge \n$ git branch -d <branch>\n```\n\ni.查看工作日志\n``` bash\n$ git log\n```\nGit log 作用很大，功能也很多\n","tags":["git","svn"],"categories":["编程工具学习与应用"]},{"title":"About","url":"/about/index.html","content":"\n## 关于此网站\n\n* 这是LiHui的个人博客，该博客主要用于记录工作和学习所遇到的问题和有趣的事情，俗称碎碎念。\n* 主要内容为编程工具的配置及使用，项目的问题解决及个人见解。\n* 本站提供了geant和root学习和工作经常用链接。\n\n## 关于LiHui\n\n* LiHui的英文名为Hubery Lee. \n* 出生年月: 1993年1月   `单身`\n* LiHui本硕毕业于哈尔滨工程大学.\n* 研究领域为核科学与技术，辐射探测与应用.\n* 爱好音乐、运动和旅游；网易云音乐中毒重度症患者；`微博`和`网易云音乐`主页可以通过此博客的侧边栏超链接关注；在此，我也给出我的个人主页链接:[微博](https://weibo.com/2823926590/profile?rightmod=1&wvr=6&mod=personinfo&is_all=1)、[网易云音乐](https://music.163.com/#/user/home?id=357692542)，欢迎交朋友。\n* 目前工作单位:  中国辐射防护研究院\n\n## About this website\n\n* This is Hubery-Lee's personal blog, which records problems and solutions in Hubery's work and learning.\n* The main contents are the configuration and use of programming tools, the problem solving methods and personal opinions to the solution in his simulation projects.\n* This site provides links for Hubery's daily learning and work.\n\n## About LiHui\n\n* LiHui's English name is Hubery Lee.\n\n* birthday: January,1993 `single`\n* Achieved bacholar degree and master degree in Harbin Engineering University.\n* Devoted to nuclear science and technology simulation research.\n* Love music, sports and Tourism. Addicted to netease cloud music; You can follow my `weibo` and `netease cloud music` from siderbar links of this blog. I also off my weibo and netease cloud music links here. [weibo](https://weibo.com/2823926590/profile?rightmod=1&wvr=6&mod=personinfo&is_all=1), [netease cloud music](https://music.163.com/#/user/home?id=357692542). I am glad to be friends with you.\n* Institute: Institute for Radiation Protection\n\n\n\n\n\n\n\n"},{"title":"archives","url":"/archives/index.html"},{"title":"tags","url":"/tags/index.html"},{"title":"categories","url":"/categories/index.html"}]