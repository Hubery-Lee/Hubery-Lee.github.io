[{"title":"CMakeLists.txt编写基础知识","url":"/2018/11/23/CMakeLists-txt%E7%BC%96%E5%86%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","content":"<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NDUuaHRtbA==\">cmake 背景知识<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTEuaHRtbA==\">cmake 基础2<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTUuaHRtbA==\">cmake  共享库文件，外部链接<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"应用实例\"><a href=\"#应用实例\" class=\"headerlink\" title=\"应用实例\"></a>应用实例</h1><p><strong>说明</strong><br>采用c++的类来写hello world，然后编写教程。</p>\n<ul>\n<li>bin  二进制文档</li>\n<li>build 链接文档</li>\n<li>doc README、COPYRIGHT等的说明文档</li>\n<li>inc 头文件文档  hello.hh</li>\n<li>src 源文件文档  hello.cc<br>main.cc 为主文件</li>\n</ul>\n<p><strong>附录</strong></p>\n<ul>\n<li>main.cc</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include &quot;hello.hh&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  HelloFunc hi;</span><br><span class=\"line\">  hi.Hello();</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hello.hh</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#ifndef HELLO_hh</span><br><span class=\"line\">#define HELLO_hh 1</span><br><span class=\"line\"></span><br><span class=\"line\">class HelloFunc</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> public:</span><br><span class=\"line\">  HelloFunc();</span><br><span class=\"line\">  virtual ~HelloFunc();  </span><br><span class=\"line\">  </span><br><span class=\"line\">  void Hello();</span><br><span class=\"line\"> private:</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hello.cc</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include &quot;hello.hh&quot;</span><br><span class=\"line\">#include &quot;iostream&quot;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">HelloFunc::HelloFunc()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">HelloFunc::~HelloFunc()</span><br><span class=\"line\">&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void HelloFunc::Hello()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cout&lt;&lt;&quot;Hello World&quot;&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>-CMakeList.txt 编译文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">##</span><br><span class=\"line\">##  cmake module authored by Hubery Lee(李会)</span><br><span class=\"line\">##  2018年11月22日 </span><br><span class=\"line\">##</span><br><span class=\"line\"></span><br><span class=\"line\">cmake_minimum_required(VERSION 2.6 FATAL_ERROR) #</span><br><span class=\"line\">set(PROJ_NAME hello)</span><br><span class=\"line\">project($&#123;PROJ_NAME&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">#project($&#123;PROJ_NAME&#125; C CXX Fortran)</span><br><span class=\"line\">#enable_language(Fortran) ##允许使用语言类型</span><br><span class=\"line\">#set(CMAKE_BUILD_TYPE release) ##release or debug</span><br><span class=\"line\">#set(CMAKE_CXX_FLAGS &quot;-std&#x3D;c++11 $&#123;CMAKE_CXX_FLAGS&#125;&quot;) ##</span><br><span class=\"line\"></span><br><span class=\"line\">#------------------------------------</span><br><span class=\"line\"># Include directory for this project</span><br><span class=\"line\">#</span><br><span class=\"line\">include_directories($&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc)</span><br><span class=\"line\"></span><br><span class=\"line\">#------------------------------------</span><br><span class=\"line\"># Locate sources and headers for this project</span><br><span class=\"line\">#</span><br><span class=\"line\">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;src&#x2F;*.cc)</span><br><span class=\"line\">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc&#x2F;*.hh)</span><br><span class=\"line\"></span><br><span class=\"line\">#------------------------------------</span><br><span class=\"line\"># Add the executable and link it to the libraries</span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">add_executable($&#123;PROJ_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">#target_link_libraries($&#123;PROJ_NAME&#125; -L$&#123;PROJECT_SOURE_DIR&#125;&#x2F;lib hello.so) ##链接库文件</span><br><span class=\"line\"></span><br><span class=\"line\">#-------------------------------------</span><br><span class=\"line\"># Install the executable or files to &#39;bin&#39; directory</span><br><span class=\"line\"># under CMAKE_INSTALL_PREFIX</span><br><span class=\"line\">#</span><br><span class=\"line\">install(TARGETS $&#123;PROJ_NAME&#125; DESTINATION bin)</span><br></pre></td></tr></table></figure>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><h2 id=\"如何外部编译-？\"><a href=\"#如何外部编译-？\" class=\"headerlink\" title=\"如何外部编译 ？\"></a>如何外部编译 ？</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:$(pwd)&#x2F;lib</span><br><span class=\"line\">cd build</span><br><span class=\"line\">cmake -DCMAKE_INSTALL_PREFIX&#x3D;..&#x2F; ..&#x2F;</span><br><span class=\"line\">make -j4</span><br><span class=\"line\">make install</span><br><span class=\"line\">cd ..&#x2F;bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置二进制文件存放地址\"><a href=\"#设置二进制文件存放地址\" class=\"headerlink\" title=\"设置二进制文件存放地址\"></a>设置二进制文件存放地址</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SET(EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;&#x2F;bin)</span><br><span class=\"line\">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;&#x2F;lib)</span><br></pre></td></tr></table></figure>\n<h2 id=\"如何生成动态库或静态库？\"><a href=\"#如何生成动态库或静态库？\" class=\"headerlink\" title=\"如何生成动态库或静态库？\"></a>如何生成动态库或静态库？</h2><p> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjExMTc3MC9hcnRpY2xlL2RldGFpbHMvODA1OTU2MzM=\">参考文献<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.add_library(name SHARED source1, source2, ..., sourceN)</span><br><span class=\"line\">2.add_library(name_static STATIC source1, source2, ... , sourceN)</span><br><span class=\"line\">3.set_target_properties(name_static PROPERTIES OUTPUT_NAME &quot;name&quot;)</span><br><span class=\"line\">4.set_target_properties(name_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class=\"line\">5.set_target_properties(name PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class=\"line\">6.set_target_properties(name PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class=\"line\">7.install(TARGETS name name_static </span><br><span class=\"line\">          LIBRARY DESTINATION lib</span><br><span class=\"line\">          ARCHIVE DESTINATION lib)</span><br><span class=\"line\">8.install(DIRECTORY $&#123;titile_H&#125; DESTINATION include&#x2F;tH)</span><br></pre></td></tr></table></figure>\n<p>第一条    指令是生成动态库（扩展名为.so），类型关键字是SHARED，并不需要写全libname.so，只需要填写name即可，cmake系统会自动生成libname.so。</p>\n<p>第二条    指令是在支持动态库的基础上为工程添加一个静态库，因为静态库和动态库同名时，构建静态库的指令是无效的，所以把上面的name修改为name_static，就可以构建一个libname_static的静态库；然而我们需要的是名字相同的静态库和动态库，因为target的唯一性，所以就不能通过add_library指令实现，所以用到第三条指令</p>\n<p>第三条    指令是为了能够同时得到libname.so/libname.a两个库文件，但是因为cmake在构建一个新的target时，会尝试清理掉具有相同命名的库文件，所以，在构建libname.a的时候会将libname.so库文件清理掉，因此需要再次使用set_target_properties定义的CLEAN_DIRECT_OUTPUT属性，如第四条和第五条指令所示，至此，我们再次进行构建，就会发现在目录中同时生成libname.so动态库文件和libname.a静态库文件</p>\n<p>第六条    指令是因为按照规则，动态库是应当包含一个版本号的， 为了实现动态库版本号，仍然需要使用SET_TARGET_PROPERTIES指令，其中VERSON指代动态库版本，SOVERSION指代API版本。</p>\n<p>第七条    指令是将动态库和静态库文件安装到系统目录，才能够真正地让其他人开发使用，我们将库文件安装到<prefix>/lib目录下</prefix></p>\n<p>第八条    指令是将头文件安装到<prefix>/include/tH目录中。</prefix></p>\n<h2 id=\"外部引用动态库和静态库\"><a href=\"#外部引用动态库和静态库\" class=\"headerlink\" title=\"外部引用动态库和静态库\"></a>外部引用动态库和静态库</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.INCLUDE_DIRECTORIES(头文件在系统中的位置)</span><br><span class=\"line\">2.ADD_EXECUTABLE(main source&#x2F;main.cpp)</span><br><span class=\"line\">3.TARGET_LINK_LIBRARIES(main libfaceDetection.a)</span><br></pre></td></tr></table></figure>\n<p>因为编译安装将动态库安装到/usr/local/lib，/usr/bin目录下，对于动态库的外部引用有些麻烦；</p>\n<h1 id=\"库文件的编译和封装\"><a href=\"#库文件的编译和封装\" class=\"headerlink\" title=\"库文件的编译和封装\"></a>库文件的编译和封装</h1><ul>\n<li>新建<code>build</code>文件夹，将要编译成库文件的<code>inc</code>和<code>src</code>拷贝到<code>build</code>文件夹下，然后在此编写CMakeLists.txt 文件,在将头文件和源文件安装成库，CMakeLists的编写如下：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Setup the project</span><br><span class=\"line\">cmake_minimum_required(VERSION 2.6 FATAL_ERROR)</span><br><span class=\"line\">set(PROJ_NAME hello)</span><br><span class=\"line\">project($PROJ_NAME)</span><br><span class=\"line\"></span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Setup Geant4 include directories and compile definitions</span><br><span class=\"line\"># Setup include directory for this project</span><br><span class=\"line\">#</span><br><span class=\"line\">include_directories($&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc)</span><br><span class=\"line\"></span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Locate sources and headers for this project</span><br><span class=\"line\"># NB: headers are included so they will show up in IDEs</span><br><span class=\"line\">#</span><br><span class=\"line\">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;src&#x2F;*.cc)</span><br><span class=\"line\">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc&#x2F;*.hh)</span><br><span class=\"line\"></span><br><span class=\"line\">#-------------------------------------------</span><br><span class=\"line\"># Create static and dynamic library</span><br><span class=\"line\">#</span><br><span class=\"line\">add_library($&#123;PROJ_NAME&#125; SHARED $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class=\"line\">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class=\"line\"></span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Install the executable to &#39;bin&#39; directory under CMAKE_INSTALL_PREFIX</span><br><span class=\"line\">#</span><br><span class=\"line\">#install(TARGETS $&#123;PROJ_NAME&#125;  DESTINATION lib)</span><br><span class=\"line\">#install(FILES $&#123;headers&#125; DESTINATION inc)</span><br><span class=\"line\">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;..&#x2F;..&#x2F;..&#x2F;lib)</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong> </p>\n<ul>\n<li>将可执行二进制文件安装到文件夹时，采用<code>install(TARGETS )</code>方式存在一定问题，生存的二进制文件在<code>usr/bin</code>，同理，头文件安装在<code>usr/local/inc</code>下。</li>\n<li><code>SET(LIBRARY_OUTPUT_PATH )</code>可以设置库文件安装位置。</li>\n<li>在<code>main()</code>的编译链接中，CMakeLists.txt将会存在以下问题，头文件必须包含生成库文件所用的全部头文件，链接生成的所有动态库文件；如，在上述的</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1) </span><br></pre></td></tr></table></figure>\n<p>其将，生成三个库文件，分别如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">libhello.so</span><br><span class=\"line\">libhello.so.1</span><br><span class=\"line\">libhello.so.1.2</span><br></pre></td></tr></table></figure>\n<p>在链接库文件时，则需要将三个库文件均包含</p>\n<ul>\n<li>API (Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9hcGkvMTAxNTQ=\">百度百科<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h1 id=\"外部引用库的优势\"><a href=\"#外部引用库的优势\" class=\"headerlink\" title=\"外部引用库的优势\"></a>外部引用库的优势</h1><ul>\n<li>隐藏源码</li>\n<li>不依赖机器的性能和配置差异</li>\n<li>二进制库文件位置明确，脱离源码可移植性高</li>\n</ul>\n","categories":["编程工具学习与应用"],"tags":["cmake"]},{"title":"Django如何搭建web应用","url":"/2020/07/12/Django%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAweb%E5%BA%94%E7%94%A8/","content":"<h1 id=\"Django如何搭建web应用\"><a href=\"#Django如何搭建web应用\" class=\"headerlink\" title=\"Django如何搭建web应用\"></a>Django如何搭建web应用</h1><h2 id=\"🛒Django的特点\"><a href=\"#🛒Django的特点\" class=\"headerlink\" title=\"🛒Django的特点\"></a>🛒Django的特点</h2><p>Django 最初被设计用于具有快速开发需求的新闻类站点，目的是要实现简单快捷的网站开发。以下内容简要介绍了如何使用 Django 实现一个数据库驱动的 Web 应用。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL292ZXJ2aWV3Lw==\">https://docs.djangoproject.com/zh-hans/3.0/intro/overview/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li><p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2JqZWN0LXJlbGF0aW9uYWxfbWFwcGluZw==\">对象关系映射器<i class=\"fa fa-external-link-alt\"></i></span></strong> </p>\n<p>可以使用强大的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9kYi9tb2RlbHMv\">数据-模型语句<i class=\"fa fa-external-link-alt\"></i></span> 来描述你的数据模型，这解决了数年以来在数据库模式中的难题。</p>\n</li>\n<li><p><strong>享用便捷的 API</strong></p>\n<p>可以使用一套便捷而丰富的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9kYi9xdWVyaWVzLw==\">Python API<i class=\"fa fa-external-link-alt\"></i></span> 访问你的数据。API是动态创建的，不需要代码生成</p>\n</li>\n<li><p><strong>动态管理接口</strong></p>\n<p>当你的模型完成定义，Django 就会自动生成一个专业的生产级 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3JlZi9jb250cmliL2FkbWluLw==\">管理接口<i class=\"fa fa-external-link-alt\"></i></span> ——一个允许认证用户添加、更改和删除对象的 Web 站点。你只需在 admin 站点上注册你的模型即可：</p>\n</li>\n<li><p><strong>规划 URLs</strong></p>\n<p>Django 推崇优美的 URL 设计，所以不要把诸如 <code>.php</code> 和 <code>.asp</code> 之类的冗余的后缀放到 URL 里。</p>\n<p>需要创建一个叫做 URLconf 的 Python 模块。这是网站的目录，它包含了一张 URL 和 Python 回调函数之间的映射表。URLconf 也有利于将 Python 代码与 URL 进行解耦（译注：使各个模块分离，独立）</p>\n</li>\n<li><p><strong>编写视图</strong></p>\n<p>视图函数的执行结果只可能有两种：返回一个包含请求页面元素的 <a href=\"https://docs.djangoproject.com/zh-hans/3.0/ref/request-response/#django.http.HttpResponse\"><code>HttpResponse</code></a> 对象，或者是抛出 <a href=\"https://docs.djangoproject.com/zh-hans/3.0/topics/http/views/#django.http.Http404\"><code>Http404</code></a> 这类异常。至于执行过程中的其它的动作则由你决定。</p>\n</li>\n<li><p><strong>设计模板</strong><br>Django 允许设置搜索模板路径，这样可以最小化模板之间的冗余。在 Django 设置中，你可以通过 DIRS 参数指定一个路径列表用于检索模板。如果第一个路径中不包含任何模板，就继续检查第二个，以此类推。</p>\n</li>\n</ul>\n<h2 id=\"🎈项目框架\"><a href=\"#🎈项目框架\" class=\"headerlink\" title=\"🎈项目框架\"></a>🎈项目框架</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysite&#x2F;</span><br><span class=\"line\">    manage.py</span><br><span class=\"line\">    mysite&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">        settings.py</span><br><span class=\"line\">        urls.py</span><br><span class=\"line\">        asgi.py</span><br><span class=\"line\">        wsgi.py</span><br></pre></td></tr></table></figure>\n<p>这些目录和文件的用处是：</p>\n<ul>\n<li><p>最外层的 <code>mysite/</code> 根目录只是你项目的容器， 根目录名称对Django没有影响，你可以将它重命名为任何你喜欢的名称。</p>\n</li>\n<li><p><code>manage.py</code>: 一个让你用各种方式管理 Django 项目的命令行工具。你可以阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3JlZi9kamFuZ28tYWRtaW4v\">django-admin and manage.py<i class=\"fa fa-external-link-alt\"></i></span> 获取所有 <code>manage.py</code> 的细节。</p>\n</li>\n<li><p>里面一层的 <code>mysite/</code> 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 <code>mysite.urls</code>).</p>\n</li>\n<li><p><code>mysite/__init__.py</code>：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。如果你是 Python 初学者，阅读官方文档中的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy90dXRvcmlhbC9tb2R1bGVzLmh0bWwjdHV0LXBhY2thZ2Vz\">更多关于包的知识<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n</li>\n<li><p><code>mysite/settings.py</code>：Django 项目的配置文件。如果你想知道这个文件是如何工作的，请查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9zZXR0aW5ncy8=\">Django 配置<i class=\"fa fa-external-link-alt\"></i></span> 了解细节。</p>\n</li>\n<li><p><code>mysite/urls.py</code>：Django 项目的 URL 声明，就像你网站的“目录”。阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9odHRwL3VybHMv\">URL调度器<i class=\"fa fa-external-link-alt\"></i></span> 文档来获取更多关于 URL 的内容。</p>\n</li>\n<li><p><code>mysite/asgi.py</code>：作为你的项目的运行在 ASGI 兼容的Web服务器上的入口。阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2hvd3RvL2RlcGxveW1lbnQvd3NnaS8=\">如何使用 WSGI 进行部署<i class=\"fa fa-external-link-alt\"></i></span> 了解更多细节。</p>\n</li>\n<li><p><code>mysite/wsgi.py</code>：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2hvd3RvL2RlcGxveW1lbnQvd3NnaS8=\">如何使用 WSGI 进行部署<i class=\"fa fa-external-link-alt\"></i></span> 了解更多细节。</p>\n</li>\n</ul>\n<h2 id=\"🍎应用框架\"><a href=\"#🍎应用框架\" class=\"headerlink\" title=\"🍎应用框架\"></a>🍎应用框架</h2><h3 id=\"🍏应用与项目的关系\"><a href=\"#🍏应用与项目的关系\" class=\"headerlink\" title=\"🍏应用与项目的关系\"></a>🍏应用与项目的关系</h3><p><img src=\"/2020/07/12/Django%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAweb%E5%BA%94%E7%94%A8/%E6%A0%B9%E7%9B%AE%E5%BD%95.png\" alt></p>\n<h3 id=\"🔱创建应用的框架\"><a href=\"#🔱创建应用的框架\" class=\"headerlink\" title=\"🔱创建应用的框架\"></a>🔱创建应用的框架</h3><p>创建一个 <code>polls</code> 目录，它的目录结构大致如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">polls&#x2F;</span><br><span class=\"line\">    __init__.py</span><br><span class=\"line\">    admin.py</span><br><span class=\"line\">    apps.py</span><br><span class=\"line\">    migrations&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">    models.py</span><br><span class=\"line\">    tests.py</span><br><span class=\"line\">    views.py</span><br></pre></td></tr></table></figure>\n<p>这个目录结构包括了投票应用的全部内容。</p>\n<h3 id=\"❗应用的调试模块\"><a href=\"#❗应用的调试模块\" class=\"headerlink\" title=\"❗应用的调试模块\"></a>❗应用的调试模块</h3><p><strong><code>为什么要进行调试？</code><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3R1dG9yaWFsMDUv\">参考<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n<ul>\n<li><h4 id=\"测试将节约你的时间\"><a href=\"#测试将节约你的时间\" class=\"headerlink\" title=\"测试将节约你的时间\"></a>测试将节约你的时间</h4><p>当某人写出错误的代码时，自动化测试还能帮助你定位错误代码的位置。</p>\n</li>\n<li><h4 id=\"测试不仅能发现错误，而且能预防错误\"><a href=\"#测试不仅能发现错误，而且能预防错误\" class=\"headerlink\" title=\"测试不仅能发现错误，而且能预防错误\"></a>测试不仅能发现错误，而且能预防错误</h4><p>测试就好像是从内部仔细检查你的代码，当有些地方出错时，这些地方将会变得很显眼——<em>就算你自己没有意识到那里写错了</em>。</p>\n</li>\n<li><h4 id=\"测试使你的代码更有吸引力\"><a href=\"#测试使你的代码更有吸引力\" class=\"headerlink\" title=\"测试使你的代码更有吸引力\"></a>测试使你的代码更有吸引力</h4><p>复杂的应用可能由团队维护。测试的存在保证了协作者不会不小心破坏了了你的代码（也保证你不会不小心弄坏他们的）。</p>\n</li>\n</ul>\n<p><strong>unittest 和django.test   TestCase 类似</strong></p>\n<h2 id=\"❓如何编写可重用程序\"><a href=\"#❓如何编写可重用程序\" class=\"headerlink\" title=\"❓如何编写可重用程序\"></a>❓如何编写可重用程序</h2><h3 id=\"☯可重用很重要\"><a href=\"#☯可重用很重要\" class=\"headerlink\" title=\"☯可重用很重要\"></a>☯可重用很重要</h3><p>可重用性是 Python 的根本。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXBpLnB5dGhvbi5vcmcvcHlwaQ==\">The Python Package Index (PyPI)<i class=\"fa fa-external-link-alt\"></i></span> 有许大量的包，都可被用在你自己的 Python 项目中。同样可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kamFuZ29wYWNrYWdlcy5vcmcv\">Django Packages<i class=\"fa fa-external-link-alt\"></i></span> 中查找已发布的可重用应用，也可将其引入到你的项目中。Django 本身也是一个 Python 包，也就是说你可以将已有的 Python 包或 Django 应用并入你的项目。你只需要编写属于你的那部分即可。</p>\n<h3 id=\"🚀​你的项目和可复用应用¶\"><a href=\"#🚀​你的项目和可复用应用¶\" class=\"headerlink\" title=\"🚀​你的项目和可复用应用¶\"></a>🚀​你的项目和可复用应用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3JldXNhYmxlLWFwcHMvI3lvdXItcHJvamVjdC1hbmQteW91ci1yZXVzYWJsZS1hcHA=\">¶<i class=\"fa fa-external-link-alt\"></i></span></h3><p>通过前面的教程，我们的工程应该看起来像这样:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysite&#x2F;</span><br><span class=\"line\">    manage.py</span><br><span class=\"line\">    mysite&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">        settings.py</span><br><span class=\"line\">        urls.py</span><br><span class=\"line\">        asgi.py</span><br><span class=\"line\">        wsgi.py</span><br><span class=\"line\">    polls&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">        admin.py</span><br><span class=\"line\">        apps.py</span><br><span class=\"line\">        migrations&#x2F;</span><br><span class=\"line\">            __init__.py</span><br><span class=\"line\">            0001_initial.py</span><br><span class=\"line\">        models.py</span><br><span class=\"line\">        static&#x2F;</span><br><span class=\"line\">            polls&#x2F;</span><br><span class=\"line\">                images&#x2F;</span><br><span class=\"line\">                    background.gif</span><br><span class=\"line\">                style.css</span><br><span class=\"line\">        templates&#x2F;</span><br><span class=\"line\">            polls&#x2F;</span><br><span class=\"line\">                detail.html</span><br><span class=\"line\">                index.html</span><br><span class=\"line\">                results.html</span><br><span class=\"line\">        tests.py</span><br><span class=\"line\">        urls.py</span><br><span class=\"line\">        views.py</span><br><span class=\"line\">    templates&#x2F;</span><br><span class=\"line\">        admin&#x2F;</span><br><span class=\"line\">            base_site.html</span><br></pre></td></tr></table></figure>\n\n\n<p>目录 <code>polls</code> 现在可以被拷贝至一个新的 Django 工程，且立刻被复用。不过现在还不是发布它的时候。为了这样做，我们需要打包这个应用，便于其他人安装它。</p>\n<h3 id=\"💯打包你的应用\"><a href=\"#💯打包你的应用\" class=\"headerlink\" title=\"💯打包你的应用\"></a>💯打包你的应用</h3><p>目前，打包 Python 程序需要工具，有许多工具可以完成此项工作。在此教程中，我们将使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L3NldHVwdG9vbHMv\">setuptools<i class=\"fa fa-external-link-alt\"></i></span> 来打包我们的程序。</p>\n<p><strong><code>具体</code><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3JldXNhYmxlLWFwcHMv\">参考链接<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n","categories":["Web应用"],"tags":["web","django","数据库sqlite"]},{"title":"G4 Detector CopyNo and MotherCopyNo access","url":"/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/","content":"<h2 id=\"How-to-construct-assembly-or-replices\"><a href=\"#How-to-construct-assembly-or-replices\" class=\"headerlink\" title=\"How to construct assembly or replices\"></a>How to construct assembly or replices</h2><p>You can refer to Geant4 Book for Application Developers <span class=\"exturl\" data-url=\"aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvR2VvbWV0cnkvZ2VvbUFzc2VtYmx5Lmh0bWw=\">User Guide<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>There are discriptions in the chapter4 Geometry/Assembly、Navigator、TouchableHandles.</p>\n<h2 id=\"How-to-distinguish-different-detector-array-components\"><a href=\"#How-to-distinguish-different-detector-array-components\" class=\"headerlink\" title=\"How to distinguish different detector array components\"></a>How to distinguish different detector array components</h2><p>Using the ‘step’ to retrieve geometrical information</p>\n<p>During the tracking run, geometrical information can be retrieved through the touchable handle associated to the current step. For example, to identify the exact copy-number of a specific physical volume in the mass geometry, one should do the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Given the pointer to the step object ...</span><br><span class=\"line\">//</span><br><span class=\"line\">G4Step* aStep = ..;</span><br><span class=\"line\"></span><br><span class=\"line\">// ... retrieve the <span class=\"string\">&#x27;pre-step&#x27;</span> point</span><br><span class=\"line\">//</span><br><span class=\"line\">G4StepPoint* preStepPoint = aStep-&gt;GetPreStepPoint();</span><br><span class=\"line\"></span><br><span class=\"line\">// ... retrieve a touchable handle and access to the information</span><br><span class=\"line\">//</span><br><span class=\"line\">G4TouchableHandle theTouchable = preStepPoint-&gt;GetTouchableHandle();</span><br><span class=\"line\">G4int copyNo = theTouchable-&gt;GetCopyNumber();</span><br><span class=\"line\">G4int motherCopyNo = theTouchable-&gt;GetCopyNumber(1);</span><br><span class=\"line\"></span><br><span class=\"line\">To determine the exact position <span class=\"keyword\">in</span> global coordinates <span class=\"keyword\">in</span> the mass geometry and convert to <span class=\"built_in\">local</span> coordinates (<span class=\"built_in\">local</span> to the current volume):</span><br><span class=\"line\"></span><br><span class=\"line\">G4ThreeVector worldPosition = preStepPoint-&gt;GetPosition();</span><br><span class=\"line\">G4ThreeVector localPosition = theTouchable-&gt;GetHistory()-&gt;</span><br><span class=\"line\">              GetTopTransform().TransformPoint(worldPosition);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Attention\"><a href=\"#Attention\" class=\"headerlink\" title=\"Attention\"></a>Attention</h2><p>the motherCopyNo start from 2 to motherNoCopy+1,  copyNo start from 0 to NoCopy-1;</p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"Emacs yasnippets and markdown configure","url":"/2018/10/11/Emacs-yasnippets-and-markdown-configure/","content":"<p>[toc]</p>\n<h2 id=\"yasnippets-的配置\"><a href=\"#yasnippets-的配置\" class=\"headerlink\" title=\"yasnippets 的配置\"></a>yasnippets 的配置</h2><ul>\n<li>安装</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd ~/.emacs.d/site-lisp</span><br><span class=\"line\">git clone https://github.com/capitaomorte/yasnippet</span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置==init.el==</li>\n</ul>\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"name\">add-to-list</span> &#x27;load-path</span><br><span class=\"line\">              <span class=\"string\">&quot;~/.emacs.d/site-lisp/yasnippet&quot;</span>)</span><br><span class=\"line\">(<span class=\"name\">require</span> &#x27;yasnippet)</span><br><span class=\"line\">(<span class=\"name\">setq</span> yas-snippet-dirs</span><br><span class=\"line\">      &#x27;(<span class=\"string\">&quot;~/.emacs.d/snippets&quot;</span> ;; personal snippets</span><br><span class=\"line\">        ))</span><br><span class=\"line\">(<span class=\"name\">yas-global-mode</span> <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>添加自定义模板</p>\n<p> M-x yas-new-snippet 创建新模板<br> C-c C-c 保存</p>\n</li>\n<li><p>模板内容说明</p>\n<p>contributor: snippet作者名称及电邮<br>snippet的语法变量是以$美元符开始的，根据变量$1 $2 $... 定义顺序光标移动位置，特殊的$0是最后光标停位置，语法${N:default value}。</p>\n</li>\n</ul>\n<h2 id=\"markdown-的配置\"><a href=\"#markdown-的配置\" class=\"headerlink\" title=\"markdown 的配置\"></a>markdown 的配置</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz\">参看这篇文章<i class=\"fa fa-external-link-alt\"></i></span><br>google markdown emacs 配置<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eHRveS5vcmcvYXJjaGl2ZXMvZW1hY3MtbWFya2Rvd24tbW9kZS5odG1s\">https://linuxtoy.org/archives/emacs-markdown-mode.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>重点看下面这个，此为产品原网址。该网站介绍了产品的多种安装方式。<br>google markdown-mode<br>==<span class=\"exturl\" data-url=\"aHR0cDovL2pibGV2aW5zLm9yZy9wcm9qZWN0cy9tYXJrZG93bi1tb2RlLz09\">http://jblevins.org/projects/markdown-mode/==<i class=\"fa fa-external-link-alt\"></i></span>  </p>\n</li>\n<li><p>常用命令</p>\n</li>\n</ul>\n<ul>\n<li><code>C-c C-c m: markdown-command</code> &gt; <code>*markdown-output*</code> buffer.</li>\n<li><code>C-c C-c p: markdown-command</code>&gt; temporary file&gt; browser.</li>\n<li><code>C-c C-c e: markdown-command</code> &gt; <code>basename.html</code>.</li>\n<li><code>C-c C-c v: markdown-command</code> &gt; <code>basename.html</code> &gt; browser.</li>\n<li><code>C-c C-c w: markdown-command</code> &gt; kill ring.</li>\n<li><code>C-c C-c o: markdown-open-command</code>.</li>\n<li><code>C-c C-c l: markdown-live-preview-mode</code> &gt;<code>*eww*</code> buffer.</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>[1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl3ZWlsaWppZS9hcmNoaXZlLzIwMTIvMTIvMzAvMjg0MDA4MS5odG1s\">https://www.cnblogs.com/liweilijie/archive/2012/12/30/2840081.html<i class=\"fa fa-external-link-alt\"></i></span><br>[2] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzU1MTk4MDc0MC8=\">https://www.douban.com/note/551980740/<i class=\"fa fa-external-link-alt\"></i></span><br>[3] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz\">https://blog.csdn.net/csdnmonkey/article/details/54934663<i class=\"fa fa-external-link-alt\"></i></span><br>[4] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYmxldmlucy5vcmcvcHJvamVjdHMvbWFya2Rvd24tbW9kZS8=\">https://jblevins.org/projects/markdown-mode/<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["编程工具学习与应用"],"tags":["Emacs24.3","markdown"]},{"title":"G4Color选项","url":"/2018/09/09/G4Color%E9%80%89%E9%A1%B9/","content":"<h2 id=\"颜色的配置\"><a href=\"#颜色的配置\" class=\"headerlink\" title=\"颜色的配置\"></a>颜色的配置</h2><p>Geant4中的颜色配置由红、绿、蓝、是否透明四个构成；red、green、blue、alpha(opacity/opaque)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour::G4Colour ( G4double  r = 1.0,</span><br><span class=\"line\">indexindex     G4double  g = 1.0,</span><br><span class=\"line\">indexindex     G4double  b = 1.0,</span><br><span class=\"line\">                     G4double  a = 1.0);</span><br><span class=\"line\">                 //0&lt;=red, green, blue &lt;= 1.0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"颜色的实例化应用\"><a href=\"#颜色的实例化应用\" class=\"headerlink\" title=\"颜色的实例化应用\"></a>颜色的实例化应用</h2><p>1.颜色配置实例化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour  white  ();  //white</span><br><span class=\"line\">G4Colour  white  (1.0,1.0,1.0);  //white</span><br><span class=\"line\">G4Colour  gray   (0.5,0.5,0.5);  //gray</span><br><span class=\"line\">G4Colour  black  (0.0,0.0,0.0);\t //black</span><br><span class=\"line\">G4Colour  red    (1.0,0.0,0.0);  //red</span><br><span class=\"line\">G4Colour  green  (0.0,1.0,0.0);  //green</span><br><span class=\"line\">G4Colour  blue   (0.0,0.0,1.0);  //blue</span><br><span class=\"line\">G4Colour  cyan   (0.0,1.0,1.0);\t //cyan</span><br><span class=\"line\">G4Colour  magenta(1.0,0.0,1.0);  //magenta</span><br><span class=\"line\">G4Colour  yellow (1.0,1.0,0.0);  //yellow</span><br></pre></td></tr></table></figure>\n<p>example </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4VisAttributes* Assemble_VisAtt= new G4VisAttributes(G4Colour(0.0,0.0,1.0));//blue</span><br></pre></td></tr></table></figure>\n<p>2.静态公用数据函数实例化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">static const G4Colour&amp; White   ();</span><br><span class=\"line\">static const G4Colour&amp; Gray    ();</span><br><span class=\"line\">static const G4Colour&amp; Grey    ();</span><br><span class=\"line\">static const G4Colour&amp; Black   ();</span><br><span class=\"line\">static const G4Colour&amp; Red     ();</span><br><span class=\"line\">static const G4Colour&amp; Green   ();</span><br><span class=\"line\">static const G4Colour&amp; Blue    ();</span><br><span class=\"line\">static const G4Colour&amp; Cyan    ();</span><br><span class=\"line\">static const G4Colour&amp; Magenta ();</span><br><span class=\"line\">static const G4Colour&amp; Yellow  ();</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour myRed(G4Colour::Red());</span><br></pre></td></tr></table></figure>\n<p>实例化Colour对象后，可以采用如下方式获得函数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4double G4Colour::GetRed   () const;</span><br><span class=\"line\">G4double G4Colour::GetGreen () const;</span><br><span class=\"line\">G4double G4Colour::GetBlue  () const;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Colour-Map的应用\"><a href=\"#Colour-Map的应用\" class=\"headerlink\" title=\"Colour Map的应用\"></a>Colour Map的应用</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4String\t\tG4Colour</span><br><span class=\"line\">---------------------------------------</span><br><span class=\"line\">white\t\t\tG4Colour::White\t()</span><br><span class=\"line\">gray\t\t\tG4Colour::Gray\t()</span><br><span class=\"line\">grey\t\t\tG4Colour::Grey\t()</span><br><span class=\"line\">black\t\t\tG4Colour::Black\t()</span><br><span class=\"line\">red\t\t\tG4Colour::Red\t()</span><br><span class=\"line\">green\t\t\tG4Colour::Green\t()</span><br><span class=\"line\">blue\t\t\tG4Colour::Blue\t()</span><br><span class=\"line\">cyan\t\t\tG4Colour::Cyan\t()</span><br><span class=\"line\">magenta\t\t\tG4Colour::Magenta ()</span><br><span class=\"line\">yellow\t\t\tG4Colour::Yellow ()</span><br></pre></td></tr></table></figure>\n<p>Colours的检索可以采用如下方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">bool G4Colour::GetColour(const G4String&amp; key, G4Colour&amp; result)</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour myColour(G4Colour::Black());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (G4Colour::GetColour(<span class=\"string\">&quot;red&quot;</span>, myColour)) &#123;</span><br><span class=\"line\">// Successfully retrieved colour <span class=\"string\">&quot;red&quot;</span>. myColour is now red</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">// Colour did not exist <span class=\"keyword\">in</span> map. myColour is still black</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Geant4及Root应用"],"tags":["Geant4"]},{"title":"Geant4 and Root Class Index","url":"/2018/09/14/Geant4-and-Root-Class-Index/","content":"<h2 id=\"Geant4-Class-Index\"><a href=\"#Geant4-Class-Index\" class=\"headerlink\" title=\"Geant4 Class Index\"></a>Geant4 Class Index</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hcGMudW5pdi1wYXJpczcuZnIvfmZyYW5jby9nNGRveHk0LjEwL2h0bWwvYW5ub3RhdGVkLmh0bWw=\">Geant4 Class Index<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Root-Class-Index\"><a href=\"#Root-Class-Index\" class=\"headerlink\" title=\"Root Class Index\"></a>Root Class Index</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb290LmNlcm4vZG9jL21hc3Rlci9tb2R1bGVzLmh0bWw=\">Root Class Index<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["Geant4及Root应用"],"tags":["geant4","root"]},{"title":"Geant4中如何添加复杂组件","url":"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/","content":"<h1 id=\"Geant4中如何添加复杂组件\"><a href=\"#Geant4中如何添加复杂组件\" class=\"headerlink\" title=\"Geant4中如何添加复杂组件\"></a>Geant4中如何添加复杂组件</h1><h2 id=\"1-bool-运算\"><a href=\"#1-bool-运算\" class=\"headerlink\" title=\"1. bool 运算\"></a>1. bool 运算</h2><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;G4SubtractionSolid.hh&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4SubtractionSolid*\tTsubtraction = <span class=\"keyword\">new</span> G4SubtractionSolid(<span class=\"string\">&quot;PipeWall-Strips&quot;</span>,solidPWall,solidStrips,rotz0,G4ThreeVector());</span><br></pre></td></tr></table></figure>\n<p>用例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//=====================================</span></span><br><span class=\"line\"> <span class=\"comment\">// 圆柱形准直器</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> <span class=\"keyword\">double</span> I_R1=<span class=\"number\">90.0</span>*mm;<span class=\"comment\">//,I_R2=100.0*mm;</span></span><br><span class=\"line\"> <span class=\"comment\">//double O_R1=97.1*mm,O_R2=107.1*mm;</span></span><br><span class=\"line\"> <span class=\"keyword\">double</span> O_R1=<span class=\"number\">140.0</span>*mm;<span class=\"comment\">//,O_R2=135.4*mm;</span></span><br><span class=\"line\"> <span class=\"keyword\">double</span> C_z =<span class=\"number\">150.0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\"> pSPhi= <span class=\"number\">0.</span>*degree;</span><br><span class=\"line\"> pDPhi= <span class=\"number\">360.</span>*degree;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Tubs* solidCol =   </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4Tubs(<span class=\"string\">&quot;Collimator&quot;</span>,     I_R1, O_R1,C_z,pSPhi,pDPhi);     <span class=\"comment\">//its size</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//====================================</span></span><br><span class=\"line\"> <span class=\"comment\">// void in collimator</span></span><br><span class=\"line\"> pSPhi = <span class=\"number\">0.</span>;</span><br><span class=\"line\"> pDPhi = <span class=\"number\">2.0</span>*pi/(<span class=\"number\">90.0</span>*pi);</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Tubs* solidVoidC = <span class=\"keyword\">new</span> G4Tubs(<span class=\"string\">&quot;VCollimator&quot;</span>,I_R1<span class=\"number\">-0.1</span>*mm, O_R1+<span class=\"number\">0.1</span>*mm,C_z+<span class=\"number\">0.1</span>*mm,pSPhi,pDPhi);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// G4SubtractionSolid* subtraction[94];</span></span><br><span class=\"line\"> G4SubtractionSolid* subtraction[<span class=\"number\">141</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">141</span>;i++)&#123;</span><br><span class=\"line\">   G4RotationMatrix* rotz= <span class=\"keyword\">new</span> G4RotationMatrix;</span><br><span class=\"line\">   rotz-&gt;rotateZ(<span class=\"number\">-2</span>*i*<span class=\"number\">2.0</span>*pi/(<span class=\"number\">90.0</span>*pi));</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>)</span><br><span class=\"line\">     subtraction[<span class=\"number\">0</span>]=</span><br><span class=\"line\"> \t<span class=\"keyword\">new</span> G4SubtractionSolid(<span class=\"string\">&quot;Collimator-Void&quot;</span>, solidCol, solidVoidC,rotz,G4ThreeVector(<span class=\"number\">0.0</span>*mm,<span class=\"number\">0.0</span>*mm,<span class=\"number\">10.0</span>*mm));</span><br><span class=\"line\">   <span class=\"keyword\">else</span></span><br><span class=\"line\">     subtraction[i<span class=\"number\">-1</span>]=</span><br><span class=\"line\"> \t<span class=\"keyword\">new</span> G4SubtractionSolid(<span class=\"string\">&quot;Collimator-Void&quot;</span>, subtraction[i<span class=\"number\">-2</span>], solidVoidC,rotz,G4ThreeVector(<span class=\"number\">0.0</span>*mm,<span class=\"number\">0.0</span>*mm,<span class=\"number\">10.0</span>*mm));</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> G4LogicalVolume* logicCol =                         </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4LogicalVolume(subtraction[<span class=\"number\">140</span>],          <span class=\"comment\">//its solid</span></span><br><span class=\"line\">                       col_mat,           <span class=\"comment\">//its material</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;Collimator&quot;</span>);            <span class=\"comment\">//its name</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4PVPlacement* physCol = </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,                     <span class=\"comment\">//no rotation</span></span><br><span class=\"line\">                     G4ThreeVector(<span class=\"number\">0.</span>*mm,<span class=\"number\">0.</span>*mm,<span class=\"number\">160.0</span>*mm),<span class=\"comment\">//65.0*mm),       //at (0,0,0)</span></span><br><span class=\"line\">                     logicCol,              <span class=\"comment\">//its logical volume</span></span><br><span class=\"line\">                     <span class=\"string\">&quot;Collimator&quot;</span>,                 <span class=\"comment\">//its name</span></span><br><span class=\"line\">                     logicWorld,            <span class=\"comment\">//its mother  volume</span></span><br><span class=\"line\">                     <span class=\"literal\">false</span>,                 <span class=\"comment\">//no boolean operation</span></span><br><span class=\"line\">                     <span class=\"number\">0</span>,                     <span class=\"comment\">//copy number</span></span><br><span class=\"line\">                     checkOverlaps);        <span class=\"comment\">//overlaps checking</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>建出来的结果：圆柱形准直器</p>\n<p><img src=\"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/11-37-25.png\" alt></p>\n<h2 id=\"2-Assemble组件\"><a href=\"#2-Assemble组件\" class=\"headerlink\" title=\"2. Assemble组件\"></a>2. Assemble组件</h2><p>闪烁体pixel阵列构建代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//*************************************************     </span></span><br><span class=\"line\"> <span class=\"comment\">// AssembleNBD World</span></span><br><span class=\"line\"> <span class=\"comment\">//*************************************************</span></span><br><span class=\"line\"> G4double sizeXY = <span class=\"number\">100.77</span>*mm+<span class=\"number\">2.</span>*mm;</span><br><span class=\"line\"> G4double sizeZ  = <span class=\"number\">100.14</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Box* solidAssembleNBD =   </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;AssembleNBD&quot;</span>,     <span class=\"number\">0.5</span>*sizeXY, <span class=\"number\">0.5</span>*sizeXY, <span class=\"number\">0.5</span>*sizeZ);     <span class=\"comment\">//its size</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> logicAssembleNBD =                         </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4LogicalVolume(solidAssembleNBD,          <span class=\"comment\">//its solid</span></span><br><span class=\"line\">                       world_mat,           <span class=\"comment\">//its material</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;AssembleNBD&quot;</span>);            <span class=\"comment\">//its name</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//***************</span></span><br><span class=\"line\"> <span class=\"comment\">//test for one NBD</span></span><br><span class=\"line\"></span><br><span class=\"line\"> physAssembleNBD = </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,                     <span class=\"comment\">//no rotation</span></span><br><span class=\"line\">                     G4ThreeVector(<span class=\"number\">0.0</span>*cm,<span class=\"number\">0.0</span>*cm,<span class=\"number\">-85.007</span>*cm),       <span class=\"comment\">//at (0,0,0)</span></span><br><span class=\"line\">                     logicAssembleNBD,      <span class=\"comment\">//its logical volume</span></span><br><span class=\"line\">                     <span class=\"string\">&quot;physAssembleNBD&quot;</span>,         <span class=\"comment\">//its name</span></span><br><span class=\"line\">                     expHall_logV,          <span class=\"comment\">//its mother  volume</span></span><br><span class=\"line\">                     <span class=\"literal\">false</span>,                 <span class=\"comment\">//no boolean operation</span></span><br><span class=\"line\">                     <span class=\"number\">0</span>,                     <span class=\"comment\">//copy number</span></span><br><span class=\"line\"> \t\t      checkOverlaps);        <span class=\"comment\">//overlaps checking</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//*************************************************</span></span><br><span class=\"line\"> <span class=\"comment\">// EJ200 scintillator</span></span><br><span class=\"line\"> <span class=\"comment\">//*************************************************</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> <span class=\"comment\">//      ------------- Volumes --------------</span></span><br><span class=\"line\"> <span class=\"comment\">//  10X10X50 mm3 EJ-200/BC408</span></span><br><span class=\"line\"> <span class=\"comment\">//  spacing is 65 um between two EJ-200 with reflector</span></span><br><span class=\"line\"> <span class=\"comment\">//  </span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//  </span></span><br><span class=\"line\"> <span class=\"comment\">// EJ200 reflector box</span></span><br><span class=\"line\"> <span class=\"comment\">//----------------------------------</span></span><br><span class=\"line\"> <span class=\"comment\">// 100.770X100.770X50.070 mm3</span></span><br><span class=\"line\"> <span class=\"comment\">// 10X10+0.07*11; 50 + 0.07</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4double ej200_x=<span class=\"number\">10</span>*mm, ej200_y=<span class=\"number\">10</span>*mm, ej200_z=<span class=\"number\">50</span>*mm; <span class=\"comment\">//full size of ej200</span></span><br><span class=\"line\"> G4double rowNb_ej200=<span class=\"number\">10</span>, colNb_ej200=<span class=\"number\">10</span>; <span class=\"comment\">// 10X10 ej200</span></span><br><span class=\"line\"> G4double gap=<span class=\"number\">0.070</span>*mm; <span class=\"comment\">// gap between two ej200</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4double EJ200_Box_x = ej200_x*rowNb_ej200/<span class=\"number\">2</span>+gap*(rowNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\"> G4double EJ200_Box_y = ej200_y*colNb_ej200/<span class=\"number\">2</span>+gap*(colNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\"> G4double EJ200_Box_z = (ej200_z+gap)/<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//  mother volume of 10 X 10  EJ200  </span></span><br><span class=\"line\"> G4double Assemble_x = EJ200_Box_x; </span><br><span class=\"line\"> G4double Assemble_y = EJ200_Box_y;</span><br><span class=\"line\"> G4double Assemble_z = EJ200_Box_z;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Box* Assemble_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;Assemble_solidV&quot;</span>, </span><br><span class=\"line\"> \t\t\tAssemble_x, Assemble_y, Assemble_z);</span><br><span class=\"line\"> Assemble_logV  = <span class=\"keyword\">new</span> G4LogicalVolume(Assemble_solidV, ESR, <span class=\"string\">&quot;Assemble_logV&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">G4double Assemble_px = <span class=\"number\">0</span>;  <span class=\"comment\">// put it at (0,0, EJ200_Box_z)</span></span><br><span class=\"line\"> G4double Assemble_py = <span class=\"number\">0</span>;</span><br><span class=\"line\"> G4double Assemble_pz = EJ200_Box_z;  </span><br><span class=\"line\"> Assemble_physV = <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,</span><br><span class=\"line\">                            G4ThreeVector(Assemble_px, Assemble_py, Assemble_pz),</span><br><span class=\"line\">                            Assemble_logV,</span><br><span class=\"line\">                            <span class=\"string\">&quot;Assemble_physV&quot;</span>,</span><br><span class=\"line\">                            logicAssembleNBD,</span><br><span class=\"line\">                            <span class=\"literal\">false</span>,</span><br><span class=\"line\">                            <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> <span class=\"comment\">// each EJ-200</span></span><br><span class=\"line\"> <span class=\"comment\">//-------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4double EJ200_x = ej200_x/<span class=\"number\">2</span>;  <span class=\"comment\">// half size</span></span><br><span class=\"line\"> G4double EJ200_y = ej200_y/<span class=\"number\">2</span>;</span><br><span class=\"line\"> G4double EJ200_z = ej200_z/<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Box* EJ200_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;EJ200_solidV&quot;</span>, EJ200_x, EJ200_y, EJ200_z);</span><br><span class=\"line\"> EJ200_logV = <span class=\"keyword\">new</span> G4LogicalVolume(EJ200_solidV, EJ200, <span class=\"string\">&quot;EJ200_logV&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// create Assembly of EJ200 array Box</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> G4AssemblyVolume* assemblyEJ200 = <span class=\"keyword\">new</span> G4AssemblyVolume();</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// Rotation and translation of the logical volume</span></span><br><span class=\"line\"> G4RotationMatrix rotationMatrixEJ200; </span><br><span class=\"line\"> <span class=\"function\">G4ThreeVector <span class=\"title\">positionEJ200</span><span class=\"params\">(<span class=\"number\">0.</span>, <span class=\"number\">0.</span>, <span class=\"number\">0.</span>)</span></span>;</span><br><span class=\"line\"> G4Transform3D transform3DEJ200;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// Fill the assembly by EJ200</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> G4int max_x = rowNb_ej200; </span><br><span class=\"line\"> G4int max_y = colNb_ej200;</span><br><span class=\"line\"> <span class=\"keyword\">for</span>(G4int x_row_num = <span class=\"number\">0</span>; x_row_num &lt; max_x; x_row_num++ )&#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(G4int y_col_num = <span class=\"number\">0</span>; y_col_num &lt; max_y; y_col_num++ )&#123;  </span><br><span class=\"line\">     positionEJ200.setX( -EJ200_Box_x + (x_row_num+<span class=\"number\">1</span>)*gap + (<span class=\"number\">2</span>*x_row_num+<span class=\"number\">1</span>)*EJ200_x );</span><br><span class=\"line\">     positionEJ200.setY( -EJ200_Box_y + (y_col_num+<span class=\"number\">1</span>)*gap + (<span class=\"number\">2</span>*y_col_num+<span class=\"number\">1</span>)*EJ200_y );</span><br><span class=\"line\">     positionEJ200.setZ( <span class=\"number\">0.0</span>*mm );</span><br><span class=\"line\">     transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);</span><br><span class=\"line\">     assemblyEJ200-&gt;AddPlacedVolume(EJ200_logV, transform3DEJ200);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// Place the Assembly</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> positionEJ200.setX(<span class=\"number\">0.0</span> ); positionEJ200.setY(<span class=\"number\">0.0</span> ); positionEJ200.setZ(<span class=\"number\">-0.5</span>*gap);</span><br><span class=\"line\"> transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);</span><br><span class=\"line\"> assemblyEJ200-&gt;MakeImprint(Assemble_logV, transform3DEJ200);</span><br></pre></td></tr></table></figure>\n<p>闪烁体探测器芯块阵列：</p>\n<p><img src=\"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/15-21-17.png\" alt></p>\n<h2 id=\"3-Parameterised\"><a href=\"#3-Parameterised\" class=\"headerlink\" title=\"3. Parameterised\"></a>3. Parameterised</h2><p>光导构建代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;G4PVParameterised.hh&quot;</span> <span class=\"comment\">//得包含G4PVParameterised头文件</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide top mother volume</span></span><br><span class=\"line\">  <span class=\"comment\">//-------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// The defination of light guide</span></span><br><span class=\"line\">  <span class=\"comment\">// define mother volume of light guide</span></span><br><span class=\"line\">  <span class=\"comment\">// half size of volume</span></span><br><span class=\"line\">  G4double LightGuide_x = ej200_x*rowNb_ej200/<span class=\"number\">2</span>+gap*(rowNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>; </span><br><span class=\"line\">  G4double LightGuide_y = ej200_y*colNb_ej200/<span class=\"number\">2</span>+gap*(colNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">  G4double LightGuide_z = <span class=\"number\">3</span>*mm/<span class=\"number\">2</span>;</span><br><span class=\"line\">  gap = <span class=\"number\">0.07</span>*mm; <span class=\"comment\">// gap between the boxes which is used to put</span></span><br><span class=\"line\">          \t\t  <span class=\"comment\">// the reflector </span></span><br><span class=\"line\">  G4Box* LightGuide_top_motherV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_top_motherV&quot;</span>,</span><br><span class=\"line\">                                LightGuide_x, LightGuide_y, LightGuide_z);</span><br><span class=\"line\">  LightGuide_top_mother_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_top_motherV,</span><br><span class=\"line\">                                ESR, <span class=\"comment\">// ESR reflector</span></span><br><span class=\"line\">                                <span class=\"string\">&quot;LightGuide_top_mother_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  LightGuide_top_mother_physV = <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,</span><br><span class=\"line\">        G4ThreeVector(<span class=\"number\">0</span>, <span class=\"number\">0</span>, (grease_pz-grease_z)-LightGuide_z),</span><br><span class=\"line\">        LightGuide_top_mother_logV,</span><br><span class=\"line\">        <span class=\"string\">&quot;LightGuide_top_mother_physV&quot;</span>,</span><br><span class=\"line\">        logicAssembleNBD,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide top </span></span><br><span class=\"line\">  <span class=\"comment\">//-------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// top part of light guide</span></span><br><span class=\"line\">  <span class=\"comment\">// it consists of 5X5 boxes with same height</span></span><br><span class=\"line\">  <span class=\"comment\">// TopX =&gt; x of each box in the top part, </span></span><br><span class=\"line\">  <span class=\"comment\">// TopY =&gt; y of each box in the top part,</span></span><br><span class=\"line\">  <span class=\"comment\">// TopHeight =&gt; height of each box, they are same.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// here, the value is the full size of box</span></span><br><span class=\"line\">  G4double TopX[<span class=\"number\">5</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">31.15</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double TopY[<span class=\"number\">5</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">31.15</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double TopHeight = <span class=\"number\">3.0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4int rowNb = <span class=\"number\">5</span>;</span><br><span class=\"line\">  G4int colNb = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4double TopGap = gap; <span class=\"comment\">// ESR materials</span></span><br><span class=\"line\">  G4double x0, y0; <span class=\"comment\">// coordinate of the left bottom corner</span></span><br><span class=\"line\">  x0 = -LightGuide_x;</span><br><span class=\"line\">  y0 = -LightGuide_y;</span><br><span class=\"line\">  <span class=\"comment\">// left bottom conner of X-Y plane (-A, -A)</span></span><br><span class=\"line\">  <span class=\"comment\">// this box is a seed of other boxes</span></span><br><span class=\"line\">  G4Box* LightGuide_top_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_top_solidV&quot;</span>,</span><br><span class=\"line\">           \t\tTopX[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, TopY[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, TopHeight/<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  LightGuide_top_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_top_solidV,</span><br><span class=\"line\">                                        BC800, <span class=\"comment\">// light guide material</span></span><br><span class=\"line\">                                        <span class=\"string\">&quot;LightGuide_top_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// all the coordinates are relative to the coordinate system of LightGuide_mother_logV </span></span><br><span class=\"line\">  G4double LightGuide_top_px = x0;</span><br><span class=\"line\">  G4double LightGuide_top_py = y0;</span><br><span class=\"line\">  G4double LightGuide_top_pz = <span class=\"number\">0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//G4VPVParameterisation </span></span><br><span class=\"line\">  APNISLGParameterisation *lightGuide_para_top = </span><br><span class=\"line\">  \t\t<span class=\"keyword\">new</span> APNISLGParameterisation(</span><br><span class=\"line\">  \t\t\t\trowNb, colNb, <span class=\"comment\">// number of row and column</span></span><br><span class=\"line\">   \t\t\t\tTopX, TopY,</span><br><span class=\"line\">  \t\t\t\tTopGap, TopHeight,</span><br><span class=\"line\">  \t\t\t\tLightGuide_top_px, LightGuide_top_py, LightGuide_top_pz,</span><br><span class=\"line\">  \t\t\t\tBC800, ESR);</span><br><span class=\"line\"></span><br><span class=\"line\">  LightGuide_top_physV = <span class=\"keyword\">new</span> G4PVParameterised(<span class=\"string\">&quot;LightGuide_top_physV&quot;</span>,</span><br><span class=\"line\">  \t\t\t\tLightGuide_top_logV, LightGuide_top_mother_logV,</span><br><span class=\"line\">  \t\t\t\tkUndefined, rowNb*colNb, lightGuide_para_top);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide bottom mother volume</span></span><br><span class=\"line\">  <span class=\"comment\">//-------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Bottom part of light guide, half size</span></span><br><span class=\"line\">  G4double LightGuide_z_ = <span class=\"number\">18</span>*mm/<span class=\"number\">2</span>;</span><br><span class=\"line\">  G4Box* LightGuide_bottom_motherV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_bottom_motherV&quot;</span>,</span><br><span class=\"line\">                                LightGuide_x, LightGuide_y, LightGuide_z_);</span><br><span class=\"line\">  LightGuide_bottom_mother_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_bottom_motherV,</span><br><span class=\"line\">                                ESR, <span class=\"comment\">// ESR reflector</span></span><br><span class=\"line\">                                <span class=\"string\">&quot;LightGuide_bottom_mother_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  LightGuide_bottom_mother_physV = <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,</span><br><span class=\"line\">        G4ThreeVector(<span class=\"number\">0</span>, <span class=\"number\">0</span>, (grease_pz-grease_z)-LightGuide_z*<span class=\"number\">2</span>-LightGuide_z_),</span><br><span class=\"line\">        LightGuide_bottom_mother_logV,</span><br><span class=\"line\">        <span class=\"string\">&quot;LightGuide_bottom_mother_physV&quot;</span>,</span><br><span class=\"line\">        logicAssembleNBD,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide bottom</span></span><br><span class=\"line\">  <span class=\"comment\">//---------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  G4double BottomX[<span class=\"number\">3</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">75.89</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double BottomY[<span class=\"number\">3</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">75.89</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double BottomHeight = LightGuide_z_*<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4int rowNb_ = <span class=\"number\">3</span>;</span><br><span class=\"line\">  G4int colNb_ = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4double BottomGap = gap; <span class=\"comment\">// ESR materials</span></span><br><span class=\"line\">  <span class=\"comment\">// left bottom conner of X-Y plane (-A, -A)</span></span><br><span class=\"line\">  <span class=\"comment\">// this box is a seed of other boxes</span></span><br><span class=\"line\">  G4Box* LightGuide_bottom_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_bottom_solidV&quot;</span>,</span><br><span class=\"line\">                        BottomX[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, BottomY[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, BottomHeight/<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  LightGuide_bottom_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_bottom_solidV,</span><br><span class=\"line\">                                        BC800, <span class=\"comment\">// light guide material</span></span><br><span class=\"line\">                                        <span class=\"string\">&quot;LightGuide_bottom_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// all the coordinates are relative to the coordinate system of LightGuide_mother_logV </span></span><br><span class=\"line\">  G4double LightGuide_bottom_px = x0;</span><br><span class=\"line\">  G4double LightGuide_bottom_py = y0;</span><br><span class=\"line\">  G4double LightGuide_bottom_pz = <span class=\"number\">0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//G4VPVParameterisation </span></span><br><span class=\"line\">  APNISLGParameterisation *lightGuide_para_bottom =</span><br><span class=\"line\">                <span class=\"keyword\">new</span> APNISLGParameterisation(</span><br><span class=\"line\">                                rowNb_, colNb_, <span class=\"comment\">// number of row and column</span></span><br><span class=\"line\">                                BottomX, BottomY,</span><br><span class=\"line\">                                BottomGap, BottomHeight,</span><br><span class=\"line\">                                LightGuide_bottom_px, LightGuide_bottom_py, LightGuide_bottom_pz,</span><br><span class=\"line\">                                BC800, ESR);</span><br><span class=\"line\">  LightGuide_bottom_physV = <span class=\"keyword\">new</span> G4PVParameterised(<span class=\"string\">&quot;LightGuide_bottom_physV&quot;</span>,</span><br><span class=\"line\">                                LightGuide_bottom_logV, LightGuide_bottom_mother_logV,</span><br><span class=\"line\">                                kUndefined, rowNb_*colNb_, lightGuide_para_bottom);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>光导构建图：</p>\n<p><img src=\"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/15-00-25.png\" alt></p>\n","categories":["Geant4"],"tags":["geant4"]},{"title":"Git Remote Repository UserGuide ","url":"/2018/09/13/Git-Remote-Repository-UserGuide/","content":"<h2 id=\"git-remote-repository-Using\"><a href=\"#git-remote-repository-Using\" class=\"headerlink\" title=\"git remote repository Using\"></a>git remote repository Using</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3YxL0dpdC0lRTUlOUYlQkElRTclQTElODAtJUU4JUJGJTlDJUU3JUE4JThCJUU0JUJCJTkzJUU1JUJBJTkzJUU3JTlBJTg0JUU0JUJEJUJGJUU3JTk0JUE4\">reference site<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"查看远程仓库\"><a href=\"#查看远程仓库\" class=\"headerlink\" title=\"查看远程仓库\"></a>查看远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote  <span class=\"comment\">#显示仓库信息</span></span><br><span class=\"line\">$ git remote --version <span class=\"comment\">#显示对应的克隆地址</span></span><br><span class=\"line\">$ git remote -v   <span class=\"comment\">#显示对应的克隆地址</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote add pb git://github.com/paulboone/ticgit.git  <span class=\"comment\">#git remote add [shortname] [url]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"远程仓库抓取数据\"><a href=\"#远程仓库抓取数据\" class=\"headerlink\" title=\"远程仓库抓取数据\"></a>远程仓库抓取数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git fetch pb <span class=\"comment\"># git fetch [remote-name]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"推送数据到远程仓库\"><a href=\"#推送数据到远程仓库\" class=\"headerlink\" title=\"推送数据到远程仓库\"></a>推送数据到远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin master <span class=\"comment\">#git push [remote-name] [branch-name]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"查看远程仓库信息\"><a href=\"#查看远程仓库信息\" class=\"headerlink\" title=\"查看远程仓库信息\"></a>查看远程仓库信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote show origin  <span class=\"comment\">#git remote show [remote-name] </span></span><br></pre></td></tr></table></figure>\n\n\n","categories":["编程工具学习与应用"],"tags":["git"]},{"title":"Git-VS-SVN","url":"/2018/08/20/Git-VS-SVN/","content":"<h2 id=\"Git和SVN主要差别\"><a href=\"#Git和SVN主要差别\" class=\"headerlink\" title=\"Git和SVN主要差别\"></a>Git和SVN主要差别</h2><p>SVN只有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br>Git每一个终端都是一个仓库，客户端并不只提取最新版本的文件快照，而是把原始的代码仓库完整地镜像下来。每一次的提取操作，实际上都是一次对代码仓库的完整备份。Git不仅仅是个版本控制系统，它也是个内容管理系统（CMS），工作管理系统等。</p>\n<h3 id=\"1-分布式VS集中式版本控制\"><a href=\"#1-分布式VS集中式版本控制\" class=\"headerlink\" title=\"1.分布式VS集中式版本控制\"></a>1.分布式VS集中式版本控制</h3><p>svn采用集中式版本控制</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/20161214020406505.jpg\" class title=\"svn集中式版本控制\">\n\n<p>git采用分布式版本控制</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/20161214020603227.jpg\" class title=\"git分布式版本控制\">\n\n<p>两种版本控制的区别：<br>（1）svn 过渡依赖中央服务器，出现故障影响其他工作;git中央服务器只用于方便交流，有没有中央服务器都行；<br>（2）svn 版本库只保存在中央服务器，本地检测时不会检出版本库；git每个本地电脑均会保存完整的版本库；<br>（3）svn 的commit依赖连接中央服务器的网络；git由于有本地版本库，可以commit不依赖网络，commit可以频繁使用；git 通过push来实现其他电脑的版本库的同步（synchronize）操作；</p>\n<h3 id=\"2-分支功能\"><a href=\"#2-分支功能\" class=\"headerlink\" title=\"2.分支功能\"></a>2.分支功能</h3><p>（1）svn 创建分支就是创建了一个新文件夹并拥有实际的文件，类似于拷贝了一份源文件，相当于在服务器上创建了分支，会影响到连接服务器的所有本地工作副本；git创建分支并没有创建文件夹，创建分支只是多了一个索引文件，并记录这个分支的变化，占用空间小，分支之间可以自由切换互不影响。<br>（2）git具有代码审核功能，各个成员请求将自己的分子合并到主分支均需要管理人员进行审核。<br>git的工作流程如下：</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/gitProcess.png\" class title=\"gitprocess\">\n\n<h3 id=\"3-git的使用\"><a href=\"#3-git的使用\" class=\"headerlink\" title=\"3.git的使用\"></a>3.git的使用</h3><p>（1）安装配置<br>（2）pc上任意获取，运行git clone url，将远程版本库克隆到本地<br>（3）日常场景</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/20180227165834705.png\" class title=\"日常使用\">\n\n<p>a.创建一个新文件，并添加到版本库中使用命令：<br>创建了一个新文件，需要添加到版本库里（追踪此文件）使用git add filename命令，我想保存一下，使用git commit -m ..... 我想把我改变的推送给其他人（服务器）git push -u origin master(提交代码)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir newDoc</span><br><span class=\"line\">$ git add newDoc</span><br></pre></td></tr></table></figure>\n<p>b.保存一下修改记录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">&quot;提交添加一个新文件到版本库&quot;</span>  <span class=\"comment\">#“”内为chang messages</span></span><br></pre></td></tr></table></figure>\n<p>c.将我的修改推送给其他人或服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n<p>我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + merge。</p>\n<p>d.将别人的代码拉取过来</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<p>我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + git merge。</p>\n<p>e.删除原来的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git rm file <span class=\"comment\">#将会将file文件从暂存区与磁盘删除</span></span><br></pre></td></tr></table></figure>\n<p>原来的有个文件，想删除了，使用git rm file(停止追踪文件并从磁盘上删除),如果我们只想将 停止追踪文件，但是不删除只需要 git rm --cached <file>。然后想把这个改变推送给别人，就应该是用git commit 然后git push 将自己的改变推送到git服务器。</file></p>\n<p>f.git分支功能的使用<br>那么平时我们收到一个新功能的任务，应该是怎样的操作呢？比较正确的操作流程应该是这样，我们先使用git branch 查看一下我们本地到底有多少分支，然后我们先使用git branch <new branch>从develop分支新建一个分支featureN,然后使用git checkout &lt;branch/tag&gt; 切换到新建的featureN分支里。在新的分支里进行新功能开发。</new></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git branch <span class=\"comment\">#查看分支</span></span><br><span class=\"line\">$ git branch <span class=\"comment\">#新建分支featureN 即 &lt;new branch&gt;</span></span><br><span class=\"line\">$ git checkout &lt;branch/tag&gt; <span class=\"comment\">#切换到新建的featureN分支里，在新的分支里进行新功能的开发。</span></span><br></pre></td></tr></table></figure>\n<p>g.恢复到某一时刻<br>我们在进行新功能开发的时候，每实现一个小功能的时候，我们就git commit 进行提交一下，刚提交完，突然发现，这次提交的东西会严重影响其他功能，想撤销这次提交，我们需要使用git reset --hart HEAD 来撤销工作目录中所有未提交文件的修改内容。那么如果我们想撤销指定的一次提交呢？我们需要使用git revert <commit> 进行指定的提交。</commit></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git reset HEAD <span class=\"comment\">#撤回暂存中未提交的内容</span></span><br><span class=\"line\">$ git revert &lt;commit&gt; <span class=\"comment\">#撤回一次指到定的提交</span></span><br></pre></td></tr></table></figure>\n<p>h.分支的合并<br>假设开发完毕后，应该怎么做？对，就是将新功能的分支合并到develop分支里。就是先切换到develop分支里，然后使用git merge 命令进行合并。这时，新功能开发完毕，新建的featureN分支就没用了，我们使用git branch -d <branch>将无用的分支删除。至此，我们新功能开发完毕。</branch></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge </span><br><span class=\"line\">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<p>i.查看工作日志</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<p>Git log 作用很大，功能也很多</p>\n","categories":["编程工具学习与应用"],"tags":["git","svn"]},{"title":"Git简易使用笔记","url":"/2018/09/01/GitUseGuide/","content":"<h2 id=\"创建仓库\"><a href=\"#创建仓库\" class=\"headerlink\" title=\"创建仓库\"></a>创建仓库</h2><p>采用git init 在目录创建新的仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir newrepository  <span class=\"comment\">#</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> newrepository</span><br><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n<p>或者直接采用 git init 仓库名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git init newrepository</span><br></pre></td></tr></table></figure>\n<h2 id=\"软件仓库下载\"><a href=\"#软件仓库下载\" class=\"headerlink\" title=\"软件仓库下载\"></a>软件仓库下载</h2><p>下载仓库 git clone 拷贝到本地</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ get <span class=\"built_in\">clone</span> [url]</span><br></pre></td></tr></table></figure>\n<p>例如，从我的github上下载代码到本地</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ get <span class=\"built_in\">clone</span> https://github.com/Hubery-Lee/LeeEmacs-setting</span><br></pre></td></tr></table></figure>\n<h2 id=\"软件仓库的快照\"><a href=\"#软件仓库的快照\" class=\"headerlink\" title=\"软件仓库的快照\"></a>软件仓库的快照</h2><h3 id=\"git的日常使用\"><a href=\"#git的日常使用\" class=\"headerlink\" title=\"git的日常使用\"></a>git的日常使用</h3><p>git 的日常使用过程</p>\n<img src=\"/2018/09/01/GitUseGuide/09/01/GitUseGuide/1.jpg\" class title=\"日常使用原理\">\n\n<p>git add 命令可将文件添加到缓存()<br>git status 查看添加到缓存的文件状态 -s 简短结果输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch README</span><br><span class=\"line\">$ touch hello.php</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">README        hello.php</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">?? README</span><br><span class=\"line\">?? hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add README hello.php </span><br><span class=\"line\"></span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\">$ </span><br><span class=\"line\"></span><br><span class=\"line\">在 README 添加以下内容：<span class=\"comment\"># Runoob Git 测试，然后保存退出。</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;# Runoob Git&quot;</span>&gt;&gt;README </span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">AM README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>执行 git diff 来查看执行 git status 的结果的详细信息。</p>\n<p>git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。</p>\n<pre><code>尚未缓存的改动：git diff\n查看已缓存的改动： git diff --cached\n查看已缓存的与未缓存的所有改动：git diff HEAD\n显示摘要而非整个 diff：git diff --stat</code></pre><p>git status 显示你上次提交更新后的更改或者写入缓存的改动， 而 git diff 一行一行地显示这些改动具体是啥。</p>\n<p>接下来我们来查看下 git diff --cached 的执行效果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">在 hello.php 文件中输入以下内容：</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;菜鸟教程：www.runoob.com&#x27;</span>;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">AM hello.php</span><br><span class=\"line\">$ git diff</span><br><span class=\"line\">diff --git a/hello.php b/hello.php</span><br><span class=\"line\">index e69de29..69b5711 100644</span><br><span class=\"line\">--- a/hello.php</span><br><span class=\"line\">+++ b/hello.php</span><br><span class=\"line\">@@ -0,0 +1,3 @@</span><br><span class=\"line\">+&lt;?php</span><br><span class=\"line\">+<span class=\"built_in\">echo</span> <span class=\"string\">&#x27;菜鸟教程：www.runoob.com&#x27;</span>;</span><br><span class=\"line\">+?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add hello.php </span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\">$ git diff --cached</span><br><span class=\"line\">diff --git a/README b/README</span><br><span class=\"line\">new file mode 100644</span><br><span class=\"line\">index 0000000..8f87495</span><br><span class=\"line\">--- /dev/null</span><br><span class=\"line\">+++ b/README</span><br><span class=\"line\">@@ -0,0 +1 @@</span><br><span class=\"line\">+<span class=\"comment\"># Runoob Git 测试</span></span><br><span class=\"line\">diff --git a/hello.php b/hello.php</span><br><span class=\"line\">new file mode 100644</span><br><span class=\"line\">index 0000000..69b5711</span><br><span class=\"line\">--- /dev/null</span><br><span class=\"line\">+++ b/hello.php</span><br><span class=\"line\">@@ -0,0 +1,3 @@</span><br><span class=\"line\">+&lt;?php</span><br><span class=\"line\">+<span class=\"built_in\">echo</span> <span class=\"string\">&#x27;菜鸟教程：www.runoob.com&#x27;</span>;</span><br><span class=\"line\">+?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>git commit 将缓存区内容添加到仓库中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"> 配置用户名和邮箱地址</span><br><span class=\"line\">$ git config --global user.name <span class=\"string\">&#x27;runoob&#x27;</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"built_in\">test</span>@runoob.com</span><br></pre></td></tr></table></figure>\n<p>提交缓存到仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">&#x27;第一次版本提交&#x27;</span></span><br><span class=\"line\">[master (root-commit) d32cf1f] 第一次版本提交</span><br><span class=\"line\"> 2 files changed, 4 insertions(+)</span><br><span class=\"line\"> create mode 100644 README</span><br><span class=\"line\"> create mode 100644 hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git status</span><br><span class=\"line\"><span class=\"comment\"># On branch master</span></span><br><span class=\"line\">nothing to commit (working directory clean)</span><br></pre></td></tr></table></figure>\n<p>git reset HEAD 命令用于取消已缓存的内容。<br>同时修改README和hello.php,然后撤销hello.php的缓存</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git status -s</span><br><span class=\"line\"> M README</span><br><span class=\"line\"> M hello.php</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">M  README</span><br><span class=\"line\">M  hello.pp</span><br><span class=\"line\">$ git reset HEAD hello.php </span><br><span class=\"line\">Unstaged changes after reset:</span><br><span class=\"line\">M    hello.php</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">M  README</span><br><span class=\"line\"> M hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git commit -m <span class=\"string\">&#x27;修改&#x27;</span></span><br><span class=\"line\">[master f50cfda] 修改</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\"> M hello.php</span><br></pre></td></tr></table></figure>\n<p>仍然可以再次提交hello.php修改的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit -am <span class=\"string\">&#x27;修改 hello.php 文件&#x27;</span></span><br><span class=\"line\">[master 760f74d] 修改 hello.php 文件</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>\n<p>简而言之，执行 git reset HEAD 以取消之前 git add 添加，但不希望包含在下一提交快照中的缓存。</p>\n<p>git rm<br>如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git rm &lt;file&gt;</span><br><span class=\"line\">$ git rm -f  &lt;file&gt;</span><br><span class=\"line\">$ git rm -r &lt;file&gt;</span><br><span class=\"line\">$ git rm --cached &lt;file&gt;</span><br><span class=\"line\">类似有git mv 移动和重命名</span><br><span class=\"line\">$ git mv README  README.md</span><br></pre></td></tr></table></figure>\n<p>要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作</p>\n<h3 id=\"git中tag和branch的使用\"><a href=\"#git中tag和branch的使用\" class=\"headerlink\" title=\"git中tag和branch的使用\"></a>git中tag和branch的使用</h3><img src=\"/2018/09/01/GitUseGuide/09/01/GitUseGuide/2.png\" class title=\"tag和branch\">\n\n<p>创建分支、列出分支、切换分支、删除分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git branch testing <span class=\"comment\">#创建testing分支</span></span><br><span class=\"line\">$ git branch   <span class=\"comment\">#列出分支</span></span><br><span class=\"line\">* master</span><br><span class=\"line\">  testing</span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout testing</span><br><span class=\"line\">Switched to branch <span class=\"string\">&#x27;testing&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout master</span><br><span class=\"line\">Switched to branch <span class=\"string\">&#x27;master&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout -b newtest  <span class=\"comment\">#创建newtest分支并切换到该分支</span></span><br><span class=\"line\">Switched to a new branch <span class=\"string\">&#x27;newtest&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git branch -d testing  <span class=\"comment\">#删除testing分支</span></span><br><span class=\"line\">Deleted branch testing (was 85fc7e7).</span><br><span class=\"line\"></span><br><span class=\"line\">$ git branch  </span><br><span class=\"line\">* master</span><br><span class=\"line\">  newtest</span><br><span class=\"line\"></span><br><span class=\"line\">$ git merge newtest     <span class=\"comment\">#将newtest分支合并到master分支</span></span><br><span class=\"line\">Updating 2e082b7..556f0a0</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> test2.txt | 1 -</span><br><span class=\"line\"> 1 file changed, 1 deletion(-)</span><br><span class=\"line\"> delete mode 100644 test2.txt</span><br></pre></td></tr></table></figure>\n<p>当同时记录到master的修改和branch分支的修改时，会出现合并分支冲突<br>手动修改冲突部分<br>采用git add 告诉git文件冲突已经解决；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge change_site</span><br><span class=\"line\">Auto-merging test.txt</span><br><span class=\"line\">CONFLICT (content): Merge conflict <span class=\"keyword\">in</span> test.txt</span><br><span class=\"line\">Automatic merge failed; fix conflicts and <span class=\"keyword\">then</span> commit the result.</span><br><span class=\"line\">$ cat test.txt </span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class=\"string\">HEAD</span></span><br><span class=\"line\"><span class=\"string\">runoob.com</span></span><br><span class=\"line\"><span class=\"string\">新增加一行</span></span><br><span class=\"line\"><span class=\"string\">=======</span></span><br><span class=\"line\"><span class=\"string\">www.runoob.com</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; change_site</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">$ vim test.txt </span></span><br><span class=\"line\"><span class=\"string\">$ cat test.txt </span></span><br><span class=\"line\"><span class=\"string\">www.runoob.com</span></span><br><span class=\"line\"><span class=\"string\">新增加一行</span></span><br><span class=\"line\"><span class=\"string\">$ git diff</span></span><br><span class=\"line\"><span class=\"string\">diff --cc test.txt</span></span><br><span class=\"line\"><span class=\"string\">index f84c2a4,bccb7c2..0000000</span></span><br><span class=\"line\"><span class=\"string\">--- a/test.txt</span></span><br><span class=\"line\"><span class=\"string\">+++ b/test.txt</span></span><br><span class=\"line\"><span class=\"string\">@@@ -1,2 -1,1 +1,2 @@@</span></span><br><span class=\"line\"><span class=\"string\">- runoob.com</span></span><br><span class=\"line\"><span class=\"string\">+ www.runoob.com</span></span><br><span class=\"line\"><span class=\"string\"> +新增加一行</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">$ git status -s</span></span><br><span class=\"line\"><span class=\"string\">UU test.txt</span></span><br><span class=\"line\"><span class=\"string\">$ git add test.txt </span></span><br><span class=\"line\"><span class=\"string\">$ git status -s</span></span><br><span class=\"line\"><span class=\"string\">M  test.txt</span></span><br><span class=\"line\"><span class=\"string\">$ git commit</span></span><br><span class=\"line\"><span class=\"string\">[master 88afe0e] Merge branch &#x27;change_site&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br></pre></td></tr></table></figure>\n<p>查看提交历史</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span>  <span class=\"comment\">#详细提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline  <span class=\"comment\">#简洁提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --graph  <span class=\"comment\">#--graph开启了拓扑图选项</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --reverse --oneline <span class=\"comment\">#用 &#x27;--reverse&#x27;参数来逆向显示所有日志。</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --author=Linus --oneline -5 <span class=\"comment\">#--author查找指定用户提交的记录</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges<span class=\"comment\">#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>标签<br>写一句标签注解，就像你给提交写注解一样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git tag -a v1.0 </span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --decorate --graph  <span class=\"comment\">#执行 git log --decorate 时，可以看到标签</span></span><br><span class=\"line\">$ git tag -a v0.9 85fc7e7       <span class=\"comment\">#给提交代码85fc7e7追加标签</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --decorate --graph</span><br><span class=\"line\">*   88afe0e (HEAD, tag: v1.0, master) Merge branch <span class=\"string\">&#x27;change_site&#x27;</span></span><br><span class=\"line\">|\\  </span><br><span class=\"line\">| * d7e7346 (change_site) changed the site</span><br><span class=\"line\">* | 14b4dca 新增加一行</span><br><span class=\"line\">|/  </span><br><span class=\"line\">* 556f0a0 removed test2.txt</span><br><span class=\"line\">* 2e082b7 add test2.txt</span><br><span class=\"line\">* 048598f add test.txt</span><br><span class=\"line\">* 85fc7e7 (tag: v0.9) <span class=\"built_in\">test</span> comment from runoob.com</span><br><span class=\"line\"></span><br><span class=\"line\">$ git tag  <span class=\"comment\">#查看所有标签</span></span><br><span class=\"line\">v0.9</span><br><span class=\"line\">v1.0</span><br><span class=\"line\"></span><br><span class=\"line\">$ git tag -a &lt;tagname&gt; -m <span class=\"string\">&quot;runoob.com标签&quot;</span>  <span class=\"comment\">#指定标签信息命令</span></span><br><span class=\"line\">$ git tag -s &lt;tagname&gt; -m <span class=\"string\">&quot;runoob.com标签&quot;</span>  <span class=\"comment\">#PGP签名标签命令</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"远程软件仓库的提取\"><a href=\"#远程软件仓库的提取\" class=\"headerlink\" title=\"远程软件仓库的提取\"></a>远程软件仓库的提取</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote   <span class=\"comment\">#查看远程仓库</span></span><br><span class=\"line\">origin</span><br><span class=\"line\">$ git remote -v  <span class=\"comment\">#-v 参数，可以看到每个别名的实际链接地址。</span></span><br><span class=\"line\">origin    git@github.com:tianqixin/runoob-git-test.git (fetch)</span><br><span class=\"line\">origin    git@github.com:tianqixin/runoob-git-test.git (push)</span><br><span class=\"line\"></span><br><span class=\"line\">$ git fetch [<span class=\"built_in\">alias</span>] <span class=\"comment\">#从远程仓库下载分支和数据</span></span><br><span class=\"line\">$ git fetch origin  <span class=\"comment\">#从远程仓库下载origin分支和数据</span></span><br><span class=\"line\">remote: Counting objects: 3, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (2/2), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">From github.com:tianqixin/runoob-git-test</span><br><span class=\"line\">   0205aab..febd8ed  master     -&gt; origin/master</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"远程软件仓库的上传\"><a href=\"#远程软件仓库的上传\" class=\"headerlink\" title=\"远程软件仓库的上传\"></a>远程软件仓库的上传</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge [<span class=\"built_in\">alias</span>]/[branch] <span class=\"comment\">#以将服务器上的任何更新合并到你的当前分支</span></span><br><span class=\"line\">$ git merge origin/master  <span class=\"comment\">#从远端仓库提取数据并尝试合并到当前分支</span></span><br><span class=\"line\">Updating 0205aab..febd8ed</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> README.md | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\">$ git push [<span class=\"built_in\">alias</span>] [branch] <span class=\"comment\">#推送你的新分支与数据到某个远端仓库</span></span><br><span class=\"line\">$ git push origin master    <span class=\"comment\"># 推送到 Github</span></span><br><span class=\"line\"></span><br><span class=\"line\">git remote rm  [<span class=\"built_in\">alias</span>]</span><br><span class=\"line\">git remote mv [aliasA] [aliasB]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"获取软件仓库更改历史\"><a href=\"#获取软件仓库更改历史\" class=\"headerlink\" title=\"获取软件仓库更改历史\"></a>获取软件仓库更改历史</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ git status</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">$ git diff </span><br><span class=\"line\">$ git diff --cached</span><br><span class=\"line\">$ git <span class=\"built_in\">log</span>  <span class=\"comment\">#详细提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline  <span class=\"comment\">#简洁提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --graph  <span class=\"comment\">#--graph开启了拓扑图选项</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --reverse --oneline <span class=\"comment\">#用 &#x27;--reverse&#x27;参数来逆向显示所有日志。</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --author=Linus --oneline -5 <span class=\"comment\">#--author查找指定用户提交的记录</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges<span class=\"comment\">#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\">$ git tag</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"回滚到软件仓库的历史版本\"><a href=\"#回滚到软件仓库的历史版本\" class=\"headerlink\" title=\"回滚到软件仓库的历史版本\"></a>回滚到软件仓库的历史版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git reset </span><br><span class=\"line\">$ git reset HEAD [file]</span><br><span class=\"line\">$ git reset --hard &lt;target_commit_id&gt;</span><br><span class=\"line\">$ git reset --soft origin/<span class=\"built_in\">source</span> 命令（<span class=\"built_in\">source</span> 分支）</span><br></pre></td></tr></table></figure>\n\n\n\n\n","categories":["编程工具学习与应用"],"tags":["git"]},{"title":"Hexo Next theme Setting","url":"/2018/09/14/Hexo-Next-theme-Setting/","content":"<p><span class=\"exturl\" data-url=\"aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20=\">referrence site1<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dfbmd6ZXFpL2FydGljbGUvZGV0YWlscy83Mzg2MzU0Mw==\">referrence site2<i class=\"fa fa-external-link-alt\"></i></span>  文章版权声明、文章加密访问、字数、时长、访问量 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xZmYyZmNiZGQxNTU=\">another site<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNDU0NTM3L2FydGljbGUvZGV0YWlscy83OTQ4Mjg5Ng==\">referrence site3<i class=\"fa fa-external-link-alt\"></i></span> 侧边栏社交小图标设置、设置网站图标、评论功能插件配置<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hbm1hbmRvbmcxMjMvYXJ0aWNsZS9kZXRhaWxzLzgwNzM5MTI2\">referrence site3<i class=\"fa fa-external-link-alt\"></i></span> 添加评论功能<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNDU0NTM3L2FydGljbGUvZGV0YWlscy83OTQ4Mjg3OQ==\">another site<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhbnVhZ2UvYXJ0aWNsZS9kZXRhaWxzLzc4OTkxNzk4\">Somebody&#39;s blog Note<i class=\"fa fa-external-link-alt\"></i></span> 站外分享 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2RmdjE5MjkuZ2l0aHViLmlvL2NhdGVnb3JpZXMvR2l0QmxvZy8=\">another site<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMwMjQyNjA5L2FydGljbGUvZGV0YWlscy81NDc5OTAxOQ==\">referrence sit4<i class=\"fa fa-external-link-alt\"></i></span> 修改主题配色</p>\n<p>对于文章版权声明功能，可以直接去next主题下的<code>_config.yml</code>中开启，个人认为抱着开源开放特性，这个功能并不是很重要；</p>\n<h2 id=\"设置版权信息\"><a href=\"#设置版权信息\" class=\"headerlink\" title=\"设置版权信息\"></a>设置版权信息</h2><p>1.在next主题下的next/_config.yml中设置copyright;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Declare license on posts</span></span><br><span class=\"line\">post_copyright:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  license: CC BY-NC-SA 3.0</span><br><span class=\"line\">  license_url: <span class=\"comment\">#https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure>\n<p>在hexo站点配置文件_config.yml中设置url;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class=\"line\">url: http://lihui-snippets.cn/ <span class=\"comment\">#https://github.com/Hubery-Lee</span></span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults: http://lihui-snippets.cn</span><br></pre></td></tr></table></figure>\n<h2 id=\"文章加密访问\"><a href=\"#文章加密访问\" class=\"headerlink\" title=\"文章加密访问\"></a>文章加密访问</h2><h3 id=\"该加密方法密码暴露在网页调试代码中\"><a href=\"#该加密方法密码暴露在网页调试代码中\" class=\"headerlink\" title=\"该加密方法密码暴露在网页调试代码中\"></a>该加密方法密码暴露在网页调试代码中</h3><ol>\n<li>配置加密功能，打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置<img src=\"/2018/09/14/Hexo-Next-theme-Setting/.%5CHexo-Next-theme-Setting%5Cpassword.png\" alt>插入这样一段代码：<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">        if(&#x27;</span><span class=\"template-variable\">&#123;&#123; <span class=\"name\">page.password</span> &#125;&#125;</span><span class=\"xml\">&#x27;)&#123;</span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">            if (prompt(&#x27;请输入文章密码&#x27;) !== &#x27;</span><span class=\"template-variable\">&#123;&#123; <span class=\"name\">page.password</span> &#125;&#125;</span><span class=\"xml\">&#x27;)&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                alert(<span class=\"string\">&#x27;密码错误！&#x27;</span>);</span></span><br><span class=\"line\">                history.back();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n在scaffolds文件夹post.md文件中，加入<code>password:</code>,新建博客将有如下的形式文件头；<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">description:</span><br><span class=\"line\">password: </span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li>设置给文章设置访问密码，经过以上的配置，<code>hexo new &quot;newblog&quot;</code>在<code>password: #密码</code>设置密码；也可以在以往的文章设置加密访问，只需在文章头中加入<code>password: #密码</code>即可；<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">description: gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">password: pass</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n如，要访问这篇The use of gnome-screenshot command文章就需要输入密码pass;</li>\n</ol>\n<h3 id=\"该加密方法加密效果更好\"><a href=\"#该加密方法加密效果更好\" class=\"headerlink\" title=\"该加密方法加密效果更好\"></a>该加密方法加密效果更好</h3><p>以上方法给文章加密，可以通过浏览器调试界面看到网页密码，故而考虑另外的文章加密方式，可以参考留言版中的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01pa2VDb2Rlci9oZXhvLWJsb2ctZW5jcnlwdC9ibG9iL21hc3Rlci9SZWFkTWUubWQ=\">hexo-blog-encrypt<i class=\"fa fa-external-link-alt\"></i></span>地址尝试另一种加密方式；注意，对next主题，安装<code>hexo-blog-encrypt2.0.*</code>;对加密文章的头文件写法如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">abstract: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">password: pass</span><br><span class=\"line\">message: Please input password to <span class=\"built_in\">read</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>其中，<code>abstract</code>后面写的是摘要，即是非加密文章头的<code>description</code>功能一样；<code>message</code>是加密文章所特有，指的是设置提示输入密码；<code>password</code>后面是设置的密码；<br>Bug在打开文章页面后，不再显示摘要，解决办法是再加一遍<code>description</code>,故而，完全正确的加密文章抬头应该这么写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">abstract: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">password: pass</span><br><span class=\"line\">message: Please input password to <span class=\"built_in\">read</span></span><br><span class=\"line\">description: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>经过测试，直接用<code>description</code>替代<code>abstract</code>也能达到这样的效果,并不存在Bug；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">description: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">password: pass</span><br><span class=\"line\">message: Please input password to <span class=\"built_in\">read</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p><code>Bug: 第二种加密方式，没法自动生成文章目录栏；</code></p>\n<h2 id=\"访问量设置\"><a href=\"#访问量设置\" class=\"headerlink\" title=\"访问量设置\"></a>访问量设置</h2><p>采用busuanzi 和leancloud设置，在themes的文件夹下<code>_config.yml</code>中打开busuanzi配置，如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class=\"line\"><span class=\"comment\"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  <span class=\"comment\"># count values only if the other configs are false</span></span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># custom uv span for the whole site</span></span><br><span class=\"line\">  site_uv: <span class=\"literal\">true</span></span><br><span class=\"line\">  site_uv_header: &lt;i class=<span class=\"string\">&quot;fa fa-user&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  <span class=\"comment\"># custom pv span for the whole site</span></span><br><span class=\"line\">  site_pv: <span class=\"literal\">true</span></span><br><span class=\"line\">  site_pv_header: &lt;i class=<span class=\"string\">&quot;fa fa-eye&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  <span class=\"comment\"># custom pv span for one page only</span></span><br><span class=\"line\">  page_pv: <span class=\"literal\">false</span></span><br><span class=\"line\">  page_pv_header: &lt;i class=<span class=\"string\">&quot;fa fa-file-eye&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n<p>其中，<code>site_uv</code>指的是user visitors,<code>site_pv</code>指的是passager visitors; <code>&lt;i class=&quot;fa fa-file-eye&quot;&gt;&lt;/i&gt;</code>设置的是显示图标</p>\n<p>对于文章的阅读量也可采用leancloud的应用来设置，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show number of visitors to each article.</span></span><br><span class=\"line\"><span class=\"comment\"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class=\"line\">leancloud_visitors:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  app_id:  <span class=\"comment\">#&lt;app_id&gt;</span></span><br><span class=\"line\">  app_key:   <span class=\"comment\">#&lt;app_key&gt;</span></span><br></pre></td></tr></table></figure>\n<p>相对于busuanzi统计计数方法，leancloud方法能通过leancloud账户管理，并且leancloud统计的阅读量能够在首页显示；busuanzi统计数据无法在首页显示；leancloud应用的配置可以参考这篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVpd2VuLmNvbS5jbi9zdWJqZWN0L3lzc3N3ZnR4Lmh0bWw=\">参考文章链接<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"评论功能设置\"><a href=\"#评论功能设置\" class=\"headerlink\" title=\"评论功能设置\"></a>评论功能设置</h2><p>评论功能采用leancloud valine应用，国内其他的友言、畅言和以及来必力都不能匿名评论，国外的gitalk,gitment以github用户授权评论，Hypercomments，Disqus等都被国内墙的厉害；只有国内leancloud应用具有匿名评论功能；在next主题下的<code>_config.yml</code>配置如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Valine.</span></span><br><span class=\"line\"><span class=\"comment\"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class=\"line\"><span class=\"comment\"># more info please open https://valine.js.org</span></span><br><span class=\"line\">valine:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  appid:  ooozwlclX00aJabPvk1WTj7J-gzGzoHsz <span class=\"comment\"># your leancloud application appid</span></span><br><span class=\"line\">  appkey:  CnXrRUVdUdMXgEvGbdolWGYX <span class=\"comment\"># your leancloud application appkey</span></span><br><span class=\"line\">  notify: <span class=\"literal\">false</span> <span class=\"comment\"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class=\"line\">  verify: <span class=\"literal\">false</span> <span class=\"comment\"># Verification code</span></span><br><span class=\"line\">  placeholder: Just go go <span class=\"comment\"># comment box placeholder</span></span><br><span class=\"line\">  avatar: mm <span class=\"comment\"># gravatar style</span></span><br><span class=\"line\">  guest_info: nick,mail,link <span class=\"comment\"># custom comment header</span></span><br><span class=\"line\">  pageSize: 10 <span class=\"comment\"># pagination size</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"站外分享功能\"><a href=\"#站外分享功能\" class=\"headerlink\" title=\"站外分享功能\"></a>站外分享功能</h2><p>具体的配置，可以参考文章开头列出的参考链接；在此，我只是用next主题模版，不作具体深入配置，工作中心放在作笔记上；在<code>_config.yml</code>中，打开百度分享选项即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Baidu Share</span></span><br><span class=\"line\"><span class=\"comment\"># Available value:</span></span><br><span class=\"line\"><span class=\"comment\">#    button | slide</span></span><br><span class=\"line\"><span class=\"comment\"># Warning: Baidu Share does not support https.</span></span><br><span class=\"line\">baidushare:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: slide</span><br></pre></td></tr></table></figure>\n<h2 id=\"侧边栏社交小图标设置\"><a href=\"#侧边栏社交小图标设置\" class=\"headerlink\" title=\"侧边栏社交小图标设置\"></a>侧边栏社交小图标设置</h2><p>next主题的网站小图标采用FrontAwesome插件<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZnJvbT1pbw==\">frontawesome icon site<i class=\"fa fa-external-link-alt\"></i></span>;在实际应用中，在frontawesome网站搜索图标，在next主题的配置文件中用名字直接应用就行了，举例如下；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Social Links.</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: permalink || icon`</span></span><br><span class=\"line\"><span class=\"comment\"># Key is the link label showing to end users.</span></span><br><span class=\"line\"><span class=\"comment\"># Value before `||` delimeter is the target permalink.</span></span><br><span class=\"line\"><span class=\"comment\"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span></span><br><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/Hubery-Lee || github</span><br><span class=\"line\">  Runoob: https://www.runoob.com || cube</span><br><span class=\"line\">  <span class=\"comment\">#Google: https://plus.google.com/yourname || google</span></span><br><span class=\"line\">  <span class=\"comment\">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class=\"line\">  <span class=\"comment\">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class=\"line\">  <span class=\"comment\">#VK Group: https://vk.com/yourname || vk</span></span><br><span class=\"line\">  <span class=\"comment\">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class=\"line\">  <span class=\"comment\">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class=\"line\">  <span class=\"comment\">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class=\"line\">  <span class=\"comment\">#Skype: skype:yourname?call|chat || skype</span></span><br><span class=\"line\"></span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  icons_only: <span class=\"literal\">false</span></span><br><span class=\"line\">  transition: <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>以上脚本中的<code>github,cube</code>即是在frontawesome上搜索到的图标名称；同样，links的图标也是这么配置的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Blog rolls</span></span><br><span class=\"line\">links_icon: globe</span><br><span class=\"line\">links_title: Index</span><br><span class=\"line\"><span class=\"comment\">#links_layout: block</span></span><br><span class=\"line\">links_layout: inline</span><br><span class=\"line\"></span><br><span class=\"line\">links:</span><br><span class=\"line\">  Geant4: http://geant4.web.cern.ch/</span><br><span class=\"line\">  Root: https://root.cern.ch/</span><br></pre></td></tr></table></figure>\n<p>其中，<code>globe</code>即是frontawesome搜索到的图标名称；</p>\n<h2 id=\"设置网站图标\"><a href=\"#设置网站图标\" class=\"headerlink\" title=\"设置网站图标\"></a>设置网站图标</h2><p>若要对网站图标进行修改，只需将你要改的图标拷贝到<code>themes/next/source/images/</code>文件夹下，并修改<code>themes/next/_config.yml</code>文件中的，favicon后面对应的图片文件名即可；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># For example, you put your favicons into `hexo-site/source/images` directory.</span></span><br><span class=\"line\"><span class=\"comment\"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span></span><br><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/favicon-16x16-next.png</span><br><span class=\"line\">  medium: /images/favicon-32x32-next.png</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br><span class=\"line\">  <span class=\"comment\">#android_manifest: /images/manifest.json</span></span><br><span class=\"line\">  <span class=\"comment\">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"主题配色修改\"><a href=\"#主题配色修改\" class=\"headerlink\" title=\"主题配色修改\"></a>主题配色修改</h2><p>修改<code>themes/next/source/css/_variables/base.styl</code>文件；具体配色，暂时没有调整；另外<code>next/_config.yml</code>中有5种可直接用的配色方案，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\"><span class=\"comment\"># Available value:</span></span><br><span class=\"line\"><span class=\"comment\">#    normal | night | night eighties | night blue | night bright</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class=\"line\">highlight_theme: night eighties</span><br></pre></td></tr></table></figure>\n<h2 id=\"头部顶栏背景颜色或图片设置\"><a href=\"#头部顶栏背景颜色或图片设置\" class=\"headerlink\" title=\"头部顶栏背景颜色或图片设置\"></a>头部顶栏背景颜色或图片设置</h2><p>1.在themes/next/source/css/_schemes/Mist/_header.styl中以下代码中修改颜色（我采用Next-Mist主题）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.header &#123; background: <span class=\"variable\">$blue</span>-bright; &#125;</span><br></pre></td></tr></table></figure>\n<p>2.也可改为背景图片，背景图片的添加如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.header &#123; background: url(<span class=\"string\">&#x27;../image/background.jpg&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>将你要作为背景的图片<code>background.jpg</code>放到<code>Hexo/source/images/</code>文件夹下；当然你也可以采用图片网址链接，如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.header &#123; background: url(<span class=\"string\">&#x27;http://xx.xx.xx.com/hexo/image/header-backgroud.jpg&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"页脚设置\"><a href=\"#页脚设置\" class=\"headerlink\" title=\"页脚设置\"></a>页脚设置</h2><p>在next/_config.yml中，修改<code>footer:</code>下面的配置，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">footer:   </span><br><span class=\"line\">  <span class=\"comment\">##这一段为页脚设置，footer英文意思即为页脚意思</span></span><br><span class=\"line\">  <span class=\"comment\"># Specify the date when the site was setup.</span></span><br><span class=\"line\">  <span class=\"comment\"># If not defined, current year will be used.</span></span><br><span class=\"line\">  <span class=\"comment\">#since: 2015</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Icon between year and copyright info.</span></span><br><span class=\"line\">  icon: user</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class=\"line\">  copyright:</span><br><span class=\"line\">  <span class=\"comment\"># -------------------------------------------------------------</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo link (Powered by Hexo).</span></span><br><span class=\"line\">  powered: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  theme:</span><br><span class=\"line\">    <span class=\"comment\"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class=\"line\">    <span class=\"built_in\">enable</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class=\"line\">    version: <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># -------------------------------------------------------------</span></span><br><span class=\"line\">  <span class=\"comment\"># Any custom text can be defined here.</span></span><br><span class=\"line\">  <span class=\"comment\">#custom_text: Hosted by &lt;a target=&quot;_blank&quot; href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"How to Use Hit to Get Primary Information in Geant4","url":"/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/","content":"<h2 id=\"Code-Structure-of-Geant4\"><a href=\"#Code-Structure-of-Geant4\" class=\"headerlink\" title=\"Code Structure of Geant4\"></a>Code Structure of Geant4</h2><p>The structure shows as the following pictrue.<br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Geant4CodeStructure.png\" alt=\"Class categories in Geant4\"></p>\n<ul>\n<li>Run and Event<br>These are categories related to the generation of events, interfaces to event generators, and any secondary particles produced. Their roles are principally to provide particles to be tracked to the Tracking Management.</li>\n<li>Tracking and Track<br>These are categories related to propagating a particle by analyzing the factors limiting the step and applying the relevant physics processes. The important aspect of the design was that a generalized GEANT4 physics process (or interaction) could perform actions, along a tracking step, either localized in space, or in time, or distributed in space and time (and all the possible combinations that could be built from these cases).</li>\n<li>Geometry and Magnetic Field<br>These categories manage the geometrical definition of a detector (solid modeling) and the computation of distances to solids (also in a magnetic field). The GEANT4 geometry solid modeler is based on the ISO STEP<br>standard and it is fully compliant with it. A key feature of the GEANT4 geometry is that the volume definitions<br>are independent of the solid representation. By this abstract interface for the G4 solids, the tracking component works identically for various representations. The treatment of the propagation in the presence of fields has been provided within specified accuracy. An OO design allows to exchange different numerical algorithms and/or different fields (not only B-field), without affecting any other component of the toolkit.</li>\n<li>Particle Definition and Matter<br>These two categories manage the the definition of materials and particles.</li>\n<li>Physics<br>This category manages all physics processes participating in the interactions of particles in matter. The abstract interface of physics processes allows multiple implementations of physics models per interaction or per channel. Models can be selected by energy range, particle type, material, etc. Data encapsulation and polymorphism make it possible to give transparent access to the cross sections (independently of the choice of reading from an ascii file, or of interpolating from a tabulated set, or of computing analytically from a formula). Electromagnetic and hadronic physics were handled in a uniform way in such a design, opening up the physics to the users.</li>\n<li>Hits and Digitization<br>These two categories manage the creation of hits and their use for the digitization phase. The basic design and<br>implementation of the Hits and Digi had been realized, and also several prototypes, test cases and scenarios<br>had been developed before the alpha-release. Volumes (not necessarily the ones used by the tracking) are<br>aggregated in sensitive detectors, while hits collections represent the logical read out of the detector. Different ways of creating and managing hits collections had been delivered and tested, notably for both single hits and calorimetry hits types. In all cases, hits collections had been successfully stored into and retrieved from an Object Data Base Management System.</li>\n<li>Visualization<br>This manages the visualization of solids, trajectories and hits, and interacts with underlying graphical libraries(the Visualization class category). The basic and most frequently used graphics functionality had been implemented already by the alpha-release. The OO design of the visualization component allowed us to develop<br>several drivers independently, such as for OpenGL, Qt and OpenInventor (for X11 and Windows), DAWN, Postscript (via DAWN) and VRML.</li>\n<li>Interfaces<br>This category handles the production of the graphical user interface (GUI) and the interactions with external<br>software (OODBMS, reconstruction etc.).</li>\n</ul>\n<p><code>MORE DETAIL INFORMATION ABOUT THIS，YOU CAN REFER TO GEANT4 BOOK FOR APPLICATION CHAPTER 3</code></p>\n<h2 id=\"Collect-information-from-PrimaryGeneratorAction\"><a href=\"#Collect-information-from-PrimaryGeneratorAction\" class=\"headerlink\" title=\"Collect information from PrimaryGeneratorAction\"></a>Collect information from PrimaryGeneratorAction</h2><p>Data record in step or event, and stored in hitscollection. data write in EventAction; general understanding of geant4 and its application as follows. Geant is the abbreviation of Geometry and Tracking.<br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Geant4Application.png\" alt=\"General UnderStanding of Geant4\"></p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"How to Use Root to Draw 3D Histogram","url":"/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/","content":"<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Root/tutoriors/gl/glvox2.C</p>\n<h2 id=\"Results-Shows\"><a href=\"#Results-Shows\" class=\"headerlink\" title=\"Results Shows\"></a>Results Shows</h2><p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/_glvox2.png\" alt=\"example1\"><br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/c2.png\" alt=\"example2\"><br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/level41.png\" alt=\"example3\"></p>\n","categories":["Geant4及Root应用"],"tags":["root"]},{"title":"Add menubar and search function to hexo blog","url":"/2018/09/09/How-to-add-menubar-and-search-function-to-blog-with-hexo/","content":"<h2 id=\"Add-Menubar\"><a href=\"#Add-Menubar\" class=\"headerlink\" title=\"Add Menubar\"></a>Add Menubar</h2><p>In the theme folder, we can find the following scripts in the _config.yml file.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Menu Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: /link/ || icon`</span></span><br><span class=\"line\"><span class=\"comment\"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class=\"line\"><span class=\"comment\"># Value before `||` delimeter is the target link.</span></span><br><span class=\"line\"><span class=\"comment\"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || heartbeat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable/Disable menu icons.</span></span><br><span class=\"line\">menu_icons:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>The default menubars are home and archives. I want to add tags, categories and about to menubar. The problems appear when I only note off the options in the above scripts.</p>\n<p>After investigation about this problem, I find the ansower in this site  <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMTgvMDUyMS8xMy8xNDcxNTYzN183NTU2ODU5MTguc2h0bWw=\">http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml<i class=\"fa fa-external-link-alt\"></i></span> <code>method one to cite website</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMTgvMDUyMS8xMy8xNDcxNTYzN183NTU2ODU5MTguc2h0bWw=\">this site<i class=\"fa fa-external-link-alt\"></i></span>  <code>method two to cite website</code></p>\n<p>Actually, we should add folder with commond <code>hexo new page  menubar_name</code>, then corresponding folders will appear in the source folder which is the site configure source folder. Then add configure information in the correspongding index.md.<br>Take tags for example.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>We will see follow information in index.md.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2018-09-09 13:34:49</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>Then we add <code>type: &quot;tags&quot;</code> to the index.md</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2018-09-09 13:34:49</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>Similar methods are used to add categories and about to menubar.</p>\n<h2 id=\"Add-local-search-function-to-menubar\"><a href=\"#Add-local-search-function-to-menubar\" class=\"headerlink\" title=\"Add local search function to menubar\"></a>Add local search function to menubar</h2><ol>\n<li>install <code>hexo-generator-search</code>, hexo-theme-next search function depend on this package.</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>active the local search configure in theme configure file <code>_config.yml</code>.</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Local search</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span> <span class=\"comment\">#false modified by hubery lee @2018/9/9</span></span><br><span class=\"line\">  <span class=\"comment\"># if auto, trigger search by changing input</span></span><br><span class=\"line\">  <span class=\"comment\"># if manual, trigger search by pressing enter key or search button</span></span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  <span class=\"comment\"># show top n results per article, show all results by setting to -1</span></span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"LeeEmacs-setting","url":"/2018/09/01/LeeEmacs-setting/","content":"<h2 id=\"模块功能yasnippet\"><a href=\"#模块功能yasnippet\" class=\"headerlink\" title=\"模块功能yasnippet\"></a>模块功能yasnippet</h2><ol>\n<li>下载yasnippet安葬包，加压到~/.emacs.d/plugins目录下</li>\n<li>在～/.emacs文件中配置yasnippet</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">;; add yasnippet plugin </span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path</span></span><br><span class=\"line\"><span class=\"string\">              &quot;~/.emacs.d/plugins/yasnippet&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>yasnippet)</span><br><span class=\"line\">(yas-global-mode 1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">;;代码折叠</span><br><span class=\"line\">(load-library <span class=\"string\">&quot;hideshow&quot;</span>)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;java-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;perl-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;php-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;emacs-lisp-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c++-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;matlab-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;fortran-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;f90-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;markdown-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;org-mode-hook &#x27;</span>hs-minor-mode)</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件头个人信息设置——header2-el\"><a href=\"#文件头个人信息设置——header2-el\" class=\"headerlink\" title=\"文件头个人信息设置——header2.el\"></a>文件头个人信息设置——header2.el</h2><ol>\n<li>wiki 下载header2.el</li>\n<li>将header2.el 放到~/.emacs.d/plugins文件夹下；</li>\n<li>在～/.emacs文件中配置个人信息</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">;;====================info of user====================</span><br><span class=\"line\">;;********************header**************************</span><br><span class=\"line\">;;(load-file <span class=\"string\">&quot;~/.emacs.d/header2.el&quot;</span>)</span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path &quot;~/.emacs.d/plugins&quot; )</span></span><br><span class=\"line\"><span class=\"string\">;; 设置文件头中的姓名</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>header2)</span><br><span class=\"line\">(setq user-full-name <span class=\"string\">&quot;Li Hui&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">;; 设置邮箱</span><br><span class=\"line\">(setq user-email-address <span class=\"string\">&quot;h*****@126.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">;; 设置每次保存时要更新的项目</span><br><span class=\"line\">(<span class=\"built_in\">autoload</span> <span class=\"string\">&#x27;auto-update-file-header &quot;header2&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(add-hook &#x27;</span>write-file-hooks <span class=\"string\">&#x27;auto-update-file-header)</span></span><br><span class=\"line\"><span class=\"string\">(autoload &#x27;</span>auto-make-header <span class=\"string\">&quot;header2&quot;</span>)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;emacs-lisp-mode-hook &#x27;</span>auto-make-header)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c-mode-common-hook   &#x27;</span>auto-make-header) </span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c++-mode-common-hook   &#x27;</span>auto-make-header)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;text-mode-hook   &#x27;</span>auto-make-header)</span><br><span class=\"line\"></span><br><span class=\"line\">;;(add-hook <span class=\"string\">&#x27;make-header-hook &#x27;</span>header-shell nil t) </span><br></pre></td></tr></table></figure>\n<h2 id=\"自动补全-auto-complete\"><a href=\"#自动补全-auto-complete\" class=\"headerlink\" title=\"自动补全 auto-complete\"></a>自动补全 auto-complete</h2><p>经过尝试，直接解压到~/.emacs.d/plugins文件夹然后make 和make install 然后在.emacs文件配置导入auto-complete插件，但并不能实现自动补全功能。但也没有报错；我认为可能是由于可能式auto-complete没有开启的缘故；</p>\n<ol>\n<li>检测auto-complete有没有安装成功的方法</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">安装完后，重启emacs然后输入ac，若出现可选的自动补全选项，那么说明已经安装成功了；</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>auto-complete的安装方法——第二种安装成功<br>（1）传统方法是采用解压到~/.emacs.d/plugins,然后make和make install，再在.emacs中进行配置</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path &quot;/home/hubery_lee/.emacs.d/plugins/auto-complete&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>auto-complete-config)</span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;ac-dictionary-directories &quot;/home/hubery_lee/.emacs.d/plugins/auto-complete/ac-dict&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(ac-config-default)</span></span><br></pre></td></tr></table></figure>\n<p>（2）通过MELPA或MELPA Stable的package.el安装auto-complete.el；<br>参考github这个开放者介绍的方法进行安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F1dG8tY29tcGxldGUvYXV0by1jb21wbGV0ZS9ibG9iL21hc3Rlci9kb2MvbWFudWFsLm1k\">https://github.com/auto-complete/auto-complete/blob/master/doc/manual.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>首先，添加melpa或melpa-stable的package库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">(require <span class=\"string\">&#x27;package)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;; If you want to use latest version</span></span><br><span class=\"line\"><span class=\"string\">(add-to-list &#x27;</span>package-archives <span class=\"string\">&#x27;(&quot;melpa&quot; . &quot;https://melpa.org/packages/&quot;))</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;; If you want to use last tagged version</span></span><br><span class=\"line\"><span class=\"string\">(add-to-list &#x27;</span>package-archives <span class=\"string\">&#x27;(&quot;melpa-stable&quot; . &quot;https://stable.melpa.org/packages/&quot;))</span></span><br><span class=\"line\"><span class=\"string\">(package-initialize)</span></span><br></pre></td></tr></table></figure>\n<p>然后,利用package功能安装auto-complete</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">在emacs的minibuffer里选取以下一种命令安装auto-complete</span><br><span class=\"line\">    M-x package-list-packages and select auto-complete</span><br><span class=\"line\">    M-x package-refresh-contents and M-x package-install auto-complete</span><br></pre></td></tr></table></figure>\n<p>最后，根据显示的安装路径，在.emacs中进行配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">;; add auto-complete plugin</span><br><span class=\"line\"></span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path </span></span><br><span class=\"line\"><span class=\"string\">\t&quot;/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>auto-complete-config)</span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;ac-dictionary-directories &quot;/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245/ac-dict&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(ac-config-default)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义小功能\"><a href=\"#自定义小功能\" class=\"headerlink\" title=\"自定义小功能\"></a>自定义小功能</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">;;显示匹配的括号</span><br><span class=\"line\">(show-paren-mode t) </span><br><span class=\"line\"></span><br><span class=\"line\">;;光标显示为一竖线</span><br><span class=\"line\">(setq-default cursor-type <span class=\"string\">&#x27;bar)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;;setting frame title </span></span><br><span class=\"line\"><span class=\"string\">(setq frame-title-format &quot;%b - LiHui@CIRP&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;;鼠标指针避光标</span></span><br><span class=\"line\"><span class=\"string\">(mouse-avoidance-mode &#x27;</span>animate)</span><br><span class=\"line\"></span><br><span class=\"line\">;;不生成临时文件</span><br><span class=\"line\">(setq-default make-backup-files nil)</span><br><span class=\"line\">;;允许emacs和外部其他程序的粘贴</span><br><span class=\"line\">(setq x-select-enable-clipboard t)</span><br><span class=\"line\">;;使用鼠标中键可以粘贴</span><br><span class=\"line\">(setq mouse-yank-at-point t)</span><br><span class=\"line\">;; 自动的在文件末增加一新行</span><br><span class=\"line\">;;(setq require-final-newline t)</span><br><span class=\"line\">;; 当光标在行尾上下移动的时候，始终保持在行尾。</span><br><span class=\"line\"></span><br><span class=\"line\">;;color</span><br><span class=\"line\">;;(add-to-list <span class=\"string\">&#x27;load-path &quot;~/.emacs.d/plugins&quot;)</span></span><br><span class=\"line\"><span class=\"string\">;;(require &#x27;</span>color-theme)</span><br><span class=\"line\">;;(color-theme-subtle-hacker)</span><br><span class=\"line\">;;(color-theme-xemacs)</span><br><span class=\"line\">;;(color-theme-wheat)</span><br><span class=\"line\">;;(color-theme-calm-forest)</span><br><span class=\"line\">;;(color-theme-matrix)</span><br><span class=\"line\">;;(color-theme-robin-hood)</span><br><span class=\"line\">;;(color-theme-euphoria)</span><br><span class=\"line\">;;(color-theme-arjen)</span><br><span class=\"line\">;;(color-theme-jsc-dark)</span><br><span class=\"line\"></span><br><span class=\"line\">;;hide tool bar</span><br><span class=\"line\">(tool-bar-mode 0)</span><br><span class=\"line\"></span><br><span class=\"line\">;; show line number</span><br><span class=\"line\">(global-linum-mode <span class=\"string\">&#x27;linum-mode)  </span></span><br></pre></td></tr></table></figure>\n","categories":["编程工具学习与应用"],"tags":["Emacs24.3"]},{"title":"PET_SPECT成像与CT成像的区别","url":"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"<h1 id=\"PET-SPECT成像与CT成像的区别\"><a href=\"#PET-SPECT成像与CT成像的区别\" class=\"headerlink\" title=\"PET/SPECT成像与CT成像的区别\"></a>PET/SPECT成像与CT成像的区别</h1><h2 id=\"成像原理的区别\"><a href=\"#成像原理的区别\" class=\"headerlink\" title=\"成像原理的区别\"></a>成像原理的区别</h2><p>PET和SPECT是属于发射成像，CT属于透射成像。</p>\n<p>所谓发射型成像就是把放射源放在病人身体的内部，放射线从病人身体内部射出，最后被探测器接收。 具有短半衰期的放射性的原子可以由回旋加速器或核反应堆生产出来。这些放射性元素再用来制造放射性药物。 通常放射性药物是通过手臂静脉血管注射而进入体内的。放射性药物进入人体后会跟踪病理过程。放射性药物也可以通过病人的呼吸道或消化道进入人体。放射性药物实际上是个分子载体，它依附于特定的生理组织或病理过程。放射性物质在药物的带领下在人体内做有目的的分布。发射型断层成像的目的就是要得到一个放射<br>性物质在人体内部的分布图。 </p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603105809886.png\" alt=\"image-20200603105809886\"></p>\n<p>PET和SPECT的主要区别是采用的核药不同，PET全程叫正电子发射成像，通常采用的是能够发射正电子的核药，如==C-11，N-13，O-15和 F-18==，在放射性衰退时会释放出正电子 (即带一个正电荷的电子)。正电子在自然界中生存的时间十分短暂，因为在自然界中正电子很快就会遇到一个 (带负电的) 电子。当正电子与电子发生作用时，它们的质量会湮灭 (即完全消失)，它们的质量完全转换为能量而产生出两个能量为 511 keV 的伽玛光子。这两个光子沿着相隔 180º 角的方向传播。也就是说，它们在一条直线上朝相反的方向射出。有一种特殊的伽玛照相机可专门用来检测这一对光子。这种特殊的伽玛照相机运用的是同时检测技术。当两个探测器同时各接收到一个能量为 511 keV 的伽玛光子时，说明在连接这两个探测器的线段上曾经有过一个正电子。</p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603110137644.png\" alt=\"image-20200603110137644\"></p>\n<p>而SPECT全称叫单光子发射断层成像，采用发射单个光子的核药，如$^{99}Tc、^{131}I、^{113}In、^{67}Ga、^{201}Tl、^{113}Xn$;</p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111107360.png\" alt=\"image-20200603111107360\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111146266.png\" alt=\"image-20200603111146266\"></p>\n<h2 id=\"图像重建方法上的不同点\"><a href=\"#图像重建方法上的不同点\" class=\"headerlink\" title=\"图像重建方法上的不同点\"></a>图像重建方法上的不同点</h2><p>发射成像需要对成像介质进行射线衰减修正；</p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111313807.png\" alt=\"image-20200603111313807\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111400117.png\" alt=\"image-20200603111400117\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111438883.png\" alt=\"image-20200603111438883\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111455329.png\" alt=\"image-20200603111455329\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111535455.png\" alt=\"image-20200603111535455\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111656132.png\" alt=\"image-20200603111656132\"></p>\n<p>比较复杂。</p>\n<p><strong>参考文献：</strong></p>\n","categories":["医学图像重建"],"tags":["PET","SPECT","CT"]},{"title":"Show RunTime and Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode","url":"/2018/10/16/Show%20RunTime%20and%20Solve%20Problem%20that%20Data%20ReadOut%20Are%20Disordered%20in%20Geant4%20Multi-thread%20Mode/","content":"<h1 id=\"How-to-show-runtime\"><a href=\"#How-to-show-runtime\" class=\"headerlink\" title=\"How to show runtime\"></a>How to show runtime</h1><h2 id=\"Using-G4Timer-in-RunAction\"><a href=\"#Using-G4Timer-in-RunAction\" class=\"headerlink\" title=\"Using G4Timer in RunAction\"></a>Using G4Timer in RunAction</h2><p>time count start at the begin of run and stop at the end of run. </p>\n<h2 id=\"Detail-Consturciton\"><a href=\"#Detail-Consturciton\" class=\"headerlink\" title=\"Detail Consturciton\"></a>Detail Consturciton</h2><p>declare a pionter to G4Timer in construct function.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fTimer = new G4Timer;</span><br></pre></td></tr></table></figure>\n<p>free memory of G4Timer in distruct function</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete fTimer;</span><br></pre></td></tr></table></figure>\n<p>time count start in BeginOfRunAction()</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fTimer -&gt;Start()</span><br></pre></td></tr></table></figure>\n<p>time count stop in EndOfRunAction()</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fTimer -&gt;Stop();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Result-Shows\"><a href=\"#Result-Shows\" class=\"headerlink\" title=\"Result Shows\"></a>Result Shows</h2><p>Time used will be showed in the end of run.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">number of event &#x3D; ... User&#x3D;...s Real&#x3D;...s Sys&#x3D;...s</span><br></pre></td></tr></table></figure>\n<h1 id=\"Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode\"><a href=\"#Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode\" class=\"headerlink\" title=\"Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode\"></a>Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode</h1><h2 id=\"problem-discription\"><a href=\"#problem-discription\" class=\"headerlink\" title=\"problem discription\"></a>problem discription</h2><p> I encountered a problem in Geant4 multi-thread run mode. The data readout from two different sensitive detector with hits  are corrected in single thread mode but disordered  in multi-thread run mode. I don&#39;t know how this problem should happen. I think there must be something wrong in the Merge() function. Memory storage may be disordered in the multi-thread mode.</p>\n<h2 id=\"problem-solving\"><a href=\"#problem-solving\" class=\"headerlink\" title=\"problem solving\"></a>problem solving</h2><p>Do not use Geant4 Data Merge() in root mode</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//analysisManager-&gt;SetNtupleMerging(<span class=\"literal\">true</span>);</span><br><span class=\"line\">//or</span><br><span class=\"line\">analysisManager-&gt;SetNtupleMerging(<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>","categories":["Geant4及Root应用"],"tags":["Geant"]},{"title":"The use of gnome-screenshot command","url":"/2018/09/11/The-use-of-gnomescreenshot-command/","content":"<h2 id=\"gnome-screenshot-command\"><a href=\"#gnome-screenshot-command\" class=\"headerlink\" title=\"gnome-screenshot command\"></a>gnome-screenshot command</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gnome-screenshot  <span class=\"comment\">#截取整个屏幕</span></span><br><span class=\"line\">$ gnome-screenshot -w <span class=\"comment\">#截取当前活动窗口</span></span><br><span class=\"line\">$ gnome-screenshot -a <span class=\"comment\">#选择截图区域</span></span><br><span class=\"line\">$ gnome-screenshot -d=5 <span class=\"comment\">#延迟5妙截图</span></span><br><span class=\"line\">$ gnome-screenshot -i <span class=\"comment\">#交互模式使用截屏工具</span></span><br></pre></td></tr></table></figure>\n<p>当然，遇到不会用gnome-screenshot命令时，最好的方法是问linux系统自带的manual</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ man gnome-screenshot</span><br></pre></td></tr></table></figure>","categories":["linux tool"],"tags":["linux tool"]},{"title":"geant4DetectorConstruction","url":"/2018/09/11/geant4DetectorConstruction/","content":"<h2 id=\"geant-detector-construction\"><a href=\"#geant-detector-construction\" class=\"headerlink\" title=\"geant detector construction\"></a>geant detector construction</h2><ol>\n<li>几何旋转符合<code>左手法则</code>及RotationMatrix的使用<br>经过验证geant4中的rotate符合<code>左手法则</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4RotationMatrix *rot=new G4RotationMatrix;</span><br><span class=\"line\">rot-&gt;rotateX(90*degree);</span><br><span class=\"line\">rot-&gt;rotateY(90*degree);</span><br><span class=\"line\">rot-&gt;rotateZ(90*degree);</span><br></pre></td></tr></table></figure>\n<p>注意，再次对rot重复赋值无效，如对上述代码再作如下操作<code>rot-&gt;rotateX(180*degree)</code>,该操作将无效，不会改变之前的rot；<br>那么，要对rot再次赋值该怎么办呢？如下：只需在再次赋值前加<code>rot =new G4RotationMatrix</code>即可；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  G4RotationMatrix* rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(G4int x_col_num = 0; x_col_num &lt;=NBD_colNb; x_col_num++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x_col_num==0)&#123;  // the center colume</span><br><span class=\"line\">      NBDx = NBDx0;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(G4int y_row_num = 0; y_row_num &lt;=NBD_rowNb; y_row_num++ )&#123;</span><br><span class=\"line\">index// NBDx = NBDx0;</span><br><span class=\"line\">indexNBDy = NBDy0+R*sin(y_row_num*theta);</span><br><span class=\"line\">indexNBDz = NBDz0+R*(1-cos(y_row_num*theta));</span><br><span class=\"line\"></span><br><span class=\"line\">index<span class=\"keyword\">if</span>(y_row_num==0)&#123;</span><br><span class=\"line\">index  // center position</span><br><span class=\"line\">index  rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\">index  rotationMatrix_X-&gt;rotateX(y_row_num*theta);</span><br><span class=\"line\"></span><br><span class=\"line\">index  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class=\"line\">indexindexindex    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)</span><br><span class=\"line\">indexindexindex    logicAssembleNBD,                    //its logical volume</span><br><span class=\"line\">indexindexindex    <span class=\"string\">&quot;AssembleNBD&quot;</span>,         //its name</span><br><span class=\"line\">indexindexindex    expHall_logV,          //its mother  volume</span><br><span class=\"line\">indexindexindex    <span class=\"literal\">false</span>,                 //no boolean operation</span><br><span class=\"line\">indexindexindex    0,                     //copy number</span><br><span class=\"line\">indexindexindex    <span class=\"literal\">true</span>);                    //overlaps checking    </span><br><span class=\"line\">index&#125;</span><br><span class=\"line\">index<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">index  //+y++</span><br><span class=\"line\">index  rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\">index  rotationMatrix_X-&gt;rotateX(-y_row_num*theta);</span><br><span class=\"line\"></span><br><span class=\"line\">index  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class=\"line\">indexindexindex    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)</span><br><span class=\"line\">indexindexindex    logicAssembleNBD,                    //its logical volume</span><br><span class=\"line\">indexindexindex    <span class=\"string\">&quot;AssembleNBD&quot;</span>,         //its name</span><br><span class=\"line\">indexindexindex    expHall_logV,          //its mother  volume</span><br><span class=\"line\">indexindexindex    <span class=\"literal\">false</span>,                 //no boolean operation</span><br><span class=\"line\">indexindexindex    0,                     //copy number</span><br><span class=\"line\">indexindexindex    <span class=\"literal\">true</span>);               // overlaps checking </span><br><span class=\"line\">index  //-y++</span><br><span class=\"line\">index  rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\">index  rotationMatrix_X-&gt;rotateX(y_row_num*theta);</span><br><span class=\"line\">index  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class=\"line\">indexindexindex    G4ThreeVector(NBDx,-NBDy,NBDz),       //at (0,0,0)</span><br><span class=\"line\">indexindexindex    logicAssembleNBD,                    //its logical volume</span><br><span class=\"line\">indexindexindex    <span class=\"string\">&quot;AssembleNBD&quot;</span>,         //its name</span><br><span class=\"line\">indexindexindex    expHall_logV,          //its mother  volume</span><br><span class=\"line\">indexindexindex    <span class=\"literal\">false</span>,                 //no boolean operation</span><br><span class=\"line\">indexindexindex    0,                     //copy number</span><br><span class=\"line\">indexindexindex    <span class=\"literal\">true</span>);               // overlaps checking    </span><br><span class=\"line\">index&#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>G4VParameterisation()的使用</li>\n</ol>\n<ul>\n<li><code>ComputeTransformation</code> defines where one of the copies is placed</li>\n<li><code>ComputeDimensions</code> defines the size of one copy, and a constructor that initializes any member variables that are required.</li>\n</ul>\n<p>G4VParameterisation的具体应用可参看Basics/B2/B2b</p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"archlinux安装与使用体验","url":"/2020/04/28/archlinux%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/","content":"<h1 id=\"archlinux之manjaro之使用体验\"><a href=\"#archlinux之manjaro之使用体验\" class=\"headerlink\" title=\"archlinux之manjaro之使用体验\"></a>archlinux之manjaro之使用体验</h1><h2 id=\"1-动机\"><a href=\"#1-动机\" class=\"headerlink\" title=\"1.动机\"></a>1.动机</h2><p>早上在微信群里看到有人发了一个manjaro系统上跑程序的图。我瞬间惊叹于其操作系统图像界面的炫酷。然后尝试去查证和安装manjaro。在查阅相关资料后，发现网上很多人在推荐manjaro、mint和deepin。今天分别对manjaro和deepin进行了安装和使用尝试。</p>\n<h2 id=\"2-​现今Linux系统那么多，该怎么选呢？\"><a href=\"#2-​现今Linux系统那么多，该怎么选呢？\" class=\"headerlink\" title=\"2.​现今Linux系统那么多，该怎么选呢？\"></a>2.​现今Linux系统那么多，该怎么选呢？</h2><p>将linux系统推广到广为人知的功臣主要是Canoical和redhat。Canoical维护的Ubuntu具有安装简易和图像界面炫酷等特点，这些使得Ubuntu迅速占据个人PC装机量。Redhat系列的linux系统极其稳定，使得其被企业广泛使用。</p>\n<p>Ubuntu基于Debian，属于Debian家族。具体的Debian的介绍可看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9EZWJpYW4vNzQ4NjY3P2ZyPWFsYWRkaW4=\">百科<i class=\"fa fa-external-link-alt\"></i></span>，Debian是由自由操作系统合作组织的作品，所建基础工具均来着开源社区。特点是系统小运行速度快。在debian上虚拟的windows运行速度比windows原生系统还要快。</p>\n<p>Redhat是一家开源解决方案供应商，主要服务于企业。而企业对操作系统的要求主要是稳定，维护方便，不会因为经常更新软件而出现奔溃或问题，故而redhat 的linux系统一般不会像个人linux PC系统那样频繁的更新。redhat系统一般软件版本不新，版本更新一般以5年为周期，且付费。但redhat发展了其上游系统Fedora和下游系统Centos。 Fedora的特点是redhat系统的创新尝试。新技术新集成先在fedora上尝试，没有问题后再将其应用到redhat系统上。而Centos是免费的redhat系统，其特点是开源稳定免费，但其技术版本要落后于redhat系统。</p>\n<p>再看一下<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXN0cm93YXRjaC5jb20vZHdyZXMucGhwP3Jlc291cmNlPXBvcHVsYXJpdHk=\">全球linux下载热点排行版<i class=\"fa fa-external-link-alt\"></i></span>    </p>\n<p>排名前三的MXlinux、manjaro和mint的特点是，图像界面炫丽，安装软件方便。比较适合个人用户工作和体验。各种软件库滚动更新快，追求新颖性，缺点是稳定性较差和图像界面内存占用较多。比较适合个人用户使用和学习。</p>\n<p>manjaro 基于archlinux。archlinux的特点是优雅、极简和注重代码正确。通过安装系统和软件，可以使用户学习linux的原理和系统的操作。</p>\n<table>\n<thead>\n<tr>\n<th>家族</th>\n<th>Debian</th>\n<th>redhat</th>\n<th>archlinux</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>特点</td>\n<td>软件多开源、系统小、运行速度快</td>\n<td>稳定</td>\n<td>优雅、简洁</td>\n</tr>\n<tr>\n<td>用户对象</td>\n<td>个人PC、单片机，企业等</td>\n<td>企业</td>\n<td>个人</td>\n</tr>\n<tr>\n<td>用户追求</td>\n<td>使用简易，图形炫酷</td>\n<td>系统稳定不影响企业经营</td>\n<td>学习和优雅的使用体验</td>\n</tr>\n</tbody></table>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>由Hubery-Lee编写，喜欢请收藏给一个赞吧捐赠</p>\n<h2 id=\"Copyright-copyright-2019-Hubery-Lee\"><a href=\"#Copyright-copyright-2019-Hubery-Lee\" class=\"headerlink\" title=\"Copyright :copyright:2019 Hubery-Lee\"></a>Copyright :copyright:2019 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWU=\">Hubery-Lee<i class=\"fa fa-external-link-alt\"></i></span></h2>","categories":["软件使用体验"],"tags":["linux"]},{"title":"hexo简易使用笔记","url":"/2018/09/01/hexo%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;postName&quot;</span> <span class=\"comment\">#新建文章</span></span><br><span class=\"line\">hexo new page <span class=\"string\">&quot;pageName&quot;</span> <span class=\"comment\">#新建页面</span></span><br><span class=\"line\">hexo generate <span class=\"comment\">#生成静态页面至public目录</span></span><br><span class=\"line\">hexo server <span class=\"comment\">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\">#部署到GitHub</span></span><br><span class=\"line\">hexo <span class=\"built_in\">help</span>  <span class=\"comment\"># 查看帮助</span></span><br><span class=\"line\">hexo version  <span class=\"comment\">#查看Hexo的版本</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"缩写\"><a href=\"#缩写\" class=\"headerlink\" title=\"缩写\"></a>缩写</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<h2 id=\"组合命令\"><a href=\"#组合命令\" class=\"headerlink\" title=\"组合命令\"></a>组合命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g <span class=\"comment\">#生成并本地预览</span></span><br><span class=\"line\">hexo d -g <span class=\"comment\">#生成并上传</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"hexo发布博客预览\"><a href=\"#hexo发布博客预览\" class=\"headerlink\" title=\"hexo发布博客预览\"></a>hexo发布博客预览</h2><p>本地预览</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g <span class=\"comment\">#生成并本地预览</span></span><br></pre></td></tr></table></figure>\n<p>然后，在浏览器中打开 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>发布到github绑定的个人博客网页上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g <span class=\"comment\">#生成并上传</span></span><br></pre></td></tr></table></figure>\n<p>比如，我发布博客后，就直接可以采用个人网络域名访问 <span class=\"exturl\" data-url=\"aHR0cDovL2xpaHVpLXNuaXBwZXRzLmNuLw==\">http://lihui-snippets.cn/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>具体github+hexo如何搭建个人博客教程可以百度以下；我觉得这篇博客写的比较好 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl1eGlhbmFuL3AvYnVpbGQtYmxvZy13ZWJzaXRlLWJ5LWhleG8tZ2l0aHViLmh0bWwjJUU0JUJEJUJGJUU3JTk0JUE4aGV4byVFNSU4NiU5OSVFNSU4RCU5QSVFNSVBRSVBMg==\">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"icon download site","url":"/2018/09/14/icon-download-site/","content":"<h2 id=\"icon-download-site\"><a href=\"#icon-download-site\" class=\"headerlink\" title=\"icon download site\"></a>icon download site</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZnJvbT1pbw==\">icon download site<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["素材"],"tags":["hexo"]},{"title":"二维图像重建的一般流程","url":"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/","content":"<h1 id=\"二维图像重建的一般流程\"><a href=\"#二维图像重建的一般流程\" class=\"headerlink\" title=\"二维图像重建的一般流程\"></a>二维图像重建的一般流程</h1><p>[toc]</p>\n<h2 id=\"❓什么是图像重建？\"><a href=\"#❓什么是图像重建？\" class=\"headerlink\" title=\"❓什么是图像重建？\"></a>❓什么是图像重建？</h2><p>断层成像顾名思义就是要得到一个物体内部的截面图像。比如你想知道西瓜里面是什么样的，最简单的办法就是把西瓜切开 (图1.1)。显然对病人来说，这是万不可行之举。我们真想有个办法，不用动刀，就可把病人内部看得清清楚楚。</p>\n<p>另一个例子。你想到一个美丽的街心公园去参观。可惜，公园正在维修，游人不得入内。你只好在公园的外围走走，拍几张照片。公园<br>内有两棵参天大树，极为壮观。你在公园的东面和南面对公园拍了照 ，颇为满意。回到家后，你用你的得意照片，居然画出了公园地图，并确定了那两棵树的位置 (图1.2右)。其实，要确定那两棵树的位置并不难。你只要把那两张照片按原本的方位放好。从照片上的每棵树画出一条垂线。</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601090416943.png\" alt=\"image-20200601090416943\"><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601090501929.png\" alt=\"image-20200601090501929\"></p>\n<h2 id=\"💫图像重建的算法思想是什么？\"><a href=\"#💫图像重建的算法思想是什么？\" class=\"headerlink\" title=\"💫图像重建的算法思想是什么？\"></a>💫图像重建的算法思想是什么？</h2><p>断层成像是个数学问题。让我们一起做个有趣的数学习题吧。这里有个 2x2 的矩阵。 矩阵中的元素的数值暂时保密。我给你一些暗示： 第一行的和是 5。第二行的和是 4。第一列的和是 7。第二列的和是 2 (图1.3)。你可以算出这个 2x2 矩阵吗?</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601090809554.png\" alt=\"image-20200601090809554\"></p>\n<p>这个问题可以用解方程组的方法解决。设那些矩阵元素为未知数，列一个线性方程组：<br>$$<br>\\begin{equation}<br>\\begin{aligned}<br>x_1+x_2=5;\\<br>x_3+x_4=4;\\<br>x_1+x_3=7;\\<br>x_2+x_4=2;\\<br>\\end{aligned}<br>\\end{equation}<br>$$</p>\n<p>解这个方程组便得到;</p>\n<p>$$<br>\\begin{equation}x_1=3,x_2=2,x_3=4,x_4=0\\end{equation}<br>$$<br>通过探测物体的投影数据，重建出物体的实际内部构造。这就是图像重建的一般思想。</p>\n<h2 id=\"✔图像重建算法的数学基础有哪些？\"><a href=\"#✔图像重建算法的数学基础有哪些？\" class=\"headerlink\" title=\"✔图像重建算法的数学基础有哪些？\"></a>✔图像重建算法的数学基础有哪些？</h2><h3 id=\"🍕中心切片定理\"><a href=\"#🍕中心切片定理\" class=\"headerlink\" title=\"🍕中心切片定理\"></a>🍕中心切片定理</h3><p>中心切片定理是断层成像的理论基础。这个定理还有其它的称谓，如投影切片定理和傅里叶中心切片定理。二维图像的中心切片定理指出：二维函数 f(x, y) 的投影 p(s) 之傅里叶变换 P(ω) 等于函数 f(x, y) 的傅里叶变换 F(ωx, ωy) 沿与探测器平行的方向过原点的片段。</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601104859436.png\" alt=\"image-20200601104859436\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601105629394.png\" alt></p>\n<h3 id=\"🚩为什么要引入滤波？\"><a href=\"#🚩为什么要引入滤波？\" class=\"headerlink\" title=\"🚩为什么要引入滤波？\"></a>🚩为什么要引入滤波？</h3><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601105835965.png\" alt><br><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601105911448.png\" alt></p>\n<p>第二个方案通常被称作处理FBP (Filtered Backprojection 先滤波后反投影) 算法。第二个方案比第一个方案知名度高得多。在断层成像领域里，函数|ω| 被称作斜坡滤波器。</p>\n<h3 id=\"❤有哪些滤波重建方法？\"><a href=\"#❤有哪些滤波重建方法？\" class=\"headerlink\" title=\"❤有哪些滤波重建方法？\"></a>❤有哪些滤波重建方法？</h3><p>==<strong>滤波的思想</strong>==：在中心切片定理中，旋转中心被切片涂抹的更浓密，这将导致图像像素比较均匀（低频区域；高频区域是指图像对比度比较大的图像边缘区域），进而重构的图像中心区域比较模糊。那么滤波器的思想是将中心切片函数乘以一个与旋转中心距离相关的权重因子，使得切片在图像上涂抹的比较均匀。这样重构出来的图像才不会出现旋转中心模糊的现象。下面介绍一下有哪些图像重建及滤波方法。</p>\n<h4 id=\"🛴方法1\"><a href=\"#🛴方法1\" class=\"headerlink\" title=\"🛴方法1\"></a>🛴方法1</h4><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111126392.png\" alt></p>\n<h4 id=\"🛵方法2\"><a href=\"#🛵方法2\" class=\"headerlink\" title=\"🛵方法2\"></a>🛵方法2</h4><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/ image-20200601111254399.png\" alt=\"image-20200601111254399\" style=\"zoom:80%;\">\n\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111254399.png\" alt></p>\n<h4 id=\"🏍方法3\"><a href=\"#🏍方法3\" class=\"headerlink\" title=\"🏍方法3\"></a>🏍方法3</h4><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111406287.png\" alt><br><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111430225.png\" alt></p>\n<h4 id=\"🧭算法一览表\"><a href=\"#🧭算法一览表\" class=\"headerlink\" title=\"🧭算法一览表\"></a>🧭算法一览表</h4><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111533233.png\" alt></p>\n<h2 id=\"👼扇形束投影算法如何转换到平行束投影算法\"><a href=\"#👼扇形束投影算法如何转换到平行束投影算法\" class=\"headerlink\" title=\"👼扇形束投影算法如何转换到平行束投影算法\"></a>👼扇形束投影算法如何转换到平行束投影算法</h2><p>==<strong>基本思想</strong>==：根据利用点扩散函数的移动不变性，可将扇形束投影重组成平行束投影；然而，在进行重组时将需要进行插值运算，这将导入不必要的误差。故而需要根据重组变换原理，采用变量替换原理，将适用于平行束投影算法中的变量替换成扇形束中的转换关系。</p>\n<h3 id=\"🍚点扩散函数的移动不变性\"><a href=\"#🍚点扩散函数的移动不变性\" class=\"headerlink\" title=\"🍚点扩散函数的移动不变性\"></a>🍚点扩散函数的移动不变性</h3><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602082326836.png\" alt=\"image-20200602082326836\"></p>\n<p>对于平行光束成像，我们用极为重要的中心切片定理推导出了一些图像重建的算法。可是，对与扇形束成像，我们并没有相应的中心切片定理。我们只好想个别的办法来推导扇形束的图像重建算法。这个办法就是把扇形束的成像问题转化成平行光束的成像问题，把平行光束图像重建的算法修正一下然后应用于解决扇形束的成像问题中。 </p>\n<p>假定探测器是匀速地绕物体转动，而且数据采样的角度区间也是均匀的。在这个假设下，平行光束的投影/反投影的点扩散函数 (PSF) 是移动不变的。换句话说，如果你把一个点源放在 x-y 平面上。放到哪里到无所谓，只要放在探测器的视野内就好。</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602083037903.png\" alt=\"image-20200602083037903\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602083341855.png\" alt=\"image-20200602083341855\"></p>\n<h3 id=\"🍳扇形束射线如何用平行束来描述\"><a href=\"#🍳扇形束射线如何用平行束来描述\" class=\"headerlink\" title=\"🍳扇形束射线如何用平行束来描述\"></a>🍳扇形束射线如何用平行束来描述</h3><p>一个直截了当的方法是把所有的扇形束射线放在一起进行分组，把互相平行的射线分在一组，这样就把扇形束的成像问题简化为平行光束的成像问题。正如图3.4所示，每一条扇形束的射线都刚好对应一条平行光束的射线。这两条线是完全重合的。也就是说，每一个扇形束的数据 g(γ, β) 都刚好对应一个平行光束的数据 p(s, θ)，它们的坐标满足下列关系:<br>$$<br>\\theta = \\gamma +\\beta \\<br>s=Dsin\\gamma<br>$$<br>其中 $$D$$ 为焦距，也就是从扇形的焦点到旋转中心的距离。当上面这两个关系成立时，这两个成像系统所测的数据是相同的:<br>$$<br>p(s,\\theta)=g(\\gamma,\\beta)<br>$$<br><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602083414444.png\" alt=\"image-20200602083414444\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602084149649.png\" alt=\"image-20200602084149649\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602084308687.png\" alt=\"image-20200602084308687\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602084333949.png\" alt=\"image-20200602084333949\"></p>\n<p><strong>参考文献：</strong></p>\n<p>[1] 曾更生，医学图像重建</p>\n","categories":["图像重建"],"tags":["二维CT图像重建"]},{"title":"作者github项目导航","url":"/2020/04/30/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/","content":"<h1 id=\"个人笔记\"><a href=\"#个人笔记\" class=\"headerlink\" title=\"个人笔记\"></a>个人笔记</h1><ol>\n<li>日常学习笔记<a href=\"https://hubery-lee.github.io/Notes/\">Notes</a></li>\n</ol>\n<h1 id=\"Bilibili视频资料\"><a href=\"#Bilibili视频资料\" class=\"headerlink\" title=\"Bilibili视频资料\"></a>Bilibili视频资料</h1><ol>\n<li>Geant4教程<a href=\"https://hubery-lee.github.io/Geant4-jiaocheng/\">Geant4-jiaocheng</a></li>\n</ol>\n","categories":["作者github项目导航"],"tags":["作者github项目导航"]},{"title":"利用VSCode调试Geant4项目和Qt项目","url":"/2020/05/19/%E5%88%A9%E7%94%A8VSCode%E8%B0%83%E8%AF%95Geant4%E9%A1%B9%E7%9B%AE%E5%92%8CQt%E9%A1%B9%E7%9B%AE/","content":"<h1 id=\"🌌利用VSCode调试Geant4项目和Qt项目\"><a href=\"#🌌利用VSCode调试Geant4项目和Qt项目\" class=\"headerlink\" title=\"🌌利用VSCode调试Geant4项目和Qt项目\"></a>🌌利用VSCode调试Geant4项目和Qt项目</h1><p>==<strong>注意</strong>==</p>\n<ul>\n<li><p>VSCode只是一个具有用户交互界面、可设置断点调试的集成开发环境，并具有编辑器的一些特色功能，如：代码补全、格式自动化和语法自动检查等。直白的理解，他是一个具有很多集成功能的高端编辑器，属于前端，代码的编译链接执行需要交给其他一些软件，如CMake等。</p>\n</li>\n<li><p>Geant4和Qt均是基于c++语言，调试程序需要用gdb。那么，调试geant4和Qt程序与调试C++程序一样没有什么区别。</p>\n</li>\n</ul>\n<h2 id=\"🧭c-如何开启调试模式\"><a href=\"#🧭c-如何开启调试模式\" class=\"headerlink\" title=\"🧭c++如何开启调试模式\"></a>🧭c++如何开启调试模式</h2><p>C++单文件编译</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">g++ main.cpp -o a.out</span><br></pre></td></tr></table></figure>\n<p>C++单文件gdb调试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">g++ -g main.cpp -o a.out</span><br><span class=\"line\">gdb a.out</span><br></pre></td></tr></table></figure>\n<h2 id=\"🚀geant4-和qt等项目文件如何用调试\"><a href=\"#🚀geant4-和qt等项目文件如何用调试\" class=\"headerlink\" title=\"🚀geant4 和qt等项目文件如何用调试\"></a>🚀geant4 和qt等项目文件如何用调试</h2><p>C++项目的链接通常采用可采用CMake，需要编写<code>CMakeLists.txt</code><br>如需打开调试模式，只需奖<code>CMAKE_BUILD_TYPE</code> 设置成<code>&quot;Debug&quot;</code>模式即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br></pre></td></tr></table></figure>\n","categories":["编程工具学习与应用"],"tags":["vscode"]},{"title":"hexo中插入图片测试","url":"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/","content":"<h2 id=\"hexo-站点配置\"><a href=\"#hexo-站点配置\" class=\"headerlink\" title=\"hexo 站点配置\"></a>hexo 站点配置</h2><p>设置_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-asset-image --save</span><br><span class=\"line\">$ npm install https://github.com/CodeFalling/hexo-asset-image -- save  <span class=\"comment\">#该方法安装测试成功</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"图片引用\"><a href=\"#图片引用\" class=\"headerlink\" title=\"图片引用\"></a>图片引用</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;newblog&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">会有newblog.md和newblog文件夹，将需要引用的图片放到文件夹内</span><br></pre></td></tr></table></figure>\n<p>在newblog.md中图片的引用</p>\n<p>1.标签引用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ &#123;% asset_path slug %&#125;</span><br><span class=\"line\">$ &#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">$ &#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\n<img src=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" class title=\"第二种方法\">\n\n\n<a href=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" title=\"第三种方法\">第三种方法</a>\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path gitProcess.png %&#125;</span><br><span class=\"line\">&#123;% asset_img gitProcess.png 第二种方法 %&#125;</span><br><span class=\"line\">&#123;% asset_link  https://image.baidu.com/search/detail?ct=503316480&amp;z=&amp;tn=baiduimagedetail&amp;ipn=d&amp;word=%E7%8C%AB%E5%A4%B4%E9%B9%B0&amp;step_word=&amp;ie=utf-8&amp;<span class=\"keyword\">in</span>=&amp;cl=2&amp;lm=-1&amp;st=-1&amp;cs=2028628767,61876418&amp;os=4058183028,3413382511&amp;pn=0&amp;rn=1&amp;di=196345561830&amp;ln=1940&amp;fr=&amp;fmq=1535807535286_R&amp;fm=&amp;ic=0&amp;s=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=&amp;height=&amp;face=undefined&amp;is=0,0&amp;istype=2&amp;ist=&amp;jit=&amp;bdtype=0&amp;pi=0&amp;gsm=0&amp;objurl=http%3A%2F%2Fimg5q.duitang.com%2Fuploads%2Fblog%2F201502%2F08%2F20150208122643_s2BMS.jpeg&amp;rpstart=0&amp;rpnum=0&amp;adpicid=0&amp;ctd=1535807540714^3_1354X569%1 owl %&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>2.利用markdown</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">![图片说明](XXX/图片.jpg)  <span class=\"comment\">#XXX为文件夹名</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" alt=\"图片测试1\"><br><img src=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" alt=\"图片测试2\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">![图片测试1](图片测试/gitProcess.png)</span><br><span class=\"line\">![图片测试2](gitProcess.png)</span><br></pre></td></tr></table></figure>\n\n\n","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"多人协同在线编辑文档软件使用体验","url":"/2020/04/28/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E6%96%87%E6%A1%A3%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/","content":"<h1 id=\"多人协同在线编辑文档软件使用体验\"><a href=\"#多人协同在线编辑文档软件使用体验\" class=\"headerlink\" title=\"多人协同在线编辑文档软件使用体验\"></a>多人协同在线编辑文档软件使用体验</h1><h2 id=\"什么是协同在线编辑文档？\"><a href=\"#什么是协同在线编辑文档？\" class=\"headerlink\" title=\"什么是协同在线编辑文档？\"></a>什么是协同在线编辑文档？</h2><ul>\n<li><p>协同 ——多人一起完成一件事情</p>\n</li>\n<li><p>在线——online，在网络上实时做一件事</p>\n</li>\n<li><p>编辑文档——编写文档，如，word，ppt，excel，支持pdf图片等的导出。</p>\n<h2 id=\"🚩目前市场上存在的产品\"><a href=\"#🚩目前市场上存在的产品\" class=\"headerlink\" title=\"🚩目前市场上存在的产品\"></a>🚩目前市场上存在的产品</h2></li>\n<li><p><strong>onlyoffice</strong></p>\n<ul>\n<li><p>其是一款开源的协作文档、项目及邮件管理软件。</p>\n</li>\n<li><p>图像界面跟接近office，比较方便使用</p>\n</li>\n<li><p>开源特性，数据可以放到自己的服务器上</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/onlyoffice.png\" alt=\"word\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/onlyoffice_ppt.png\" alt=\"ppt\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/onlyoffice_excel.png\" alt=\"excel\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>石墨文档</strong></p>\n<ul>\n<li><p>国产知名文本协作编辑软件，优点是用户交互界面做的比较好，不过是水墨风格，偏性冷淡风。</p>\n</li>\n<li><p>数据不可以发到用户服务器上，没有TIM方便，无办公社交功能。</p>\n</li>\n<li><p>无自己的核心功能，但使用简便性类似于Google Doc</p>\n</li>\n<li><p>无待办事项等功能</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/%E7%9F%B3%E5%A2%A8%E6%96%87%E6%A1%A3.jpg\" alt></p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>一起写</strong></p>\n</li>\n<li><p><strong>腾讯文档协作TIM</strong></p>\n<ul>\n<li>结合了社交与文档协同编辑功能</li>\n<li>有待办事项和日程安排功能</li>\n</ul>\n</li>\n<li><p><strong>google doc</strong></p>\n<ul>\n<li><p>批注功能更友好，方便。</p>\n</li>\n<li><p>有待办事项和日程安排功能</p>\n</li>\n<li><p>缺点，国内用不了他的平板和手机等功能</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/googleDOC.jpg\" alt></p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"以下三个均是国内外office主要开发者开发，均有电脑，平板和手机用户端。\"></a></p>\n<ul>\n<li><p>office 365</p>\n</li>\n<li><p>office online</p>\n</li>\n<li><p>wps</p>\n</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>推荐使用TIM，腾讯出品结合了社交功能外，大公司维护比较好，不会轻易倒闭。</p>\n<p>推荐使用onlyoffice，开源自定制特性较好。</p>\n","categories":["软件使用体验"],"tags":["协同办公"]},{"title":"如何利用python发送邮件进行表白和问安","url":"/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%BF%9B%E8%A1%8C%E8%A1%A8%E7%99%BD%E5%92%8C%E9%97%AE%E5%AE%89/","content":"<h1 id=\"如何利用python发送邮件\"><a href=\"#如何利用python发送邮件\" class=\"headerlink\" title=\"如何利用python发送邮件\"></a>如何利用python发送邮件</h1><h3 id=\"1-python-相关依赖库\"><a href=\"#1-python-相关依赖库\" class=\"headerlink\" title=\"1. python 相关依赖库\"></a>1. python 相关依赖库</h3><p>说明 ：本文档针对的式利用python 3.7 发送邮件，python发送邮件的相关包比较多，除了SMTP还有POP3和IMAP两种邮件协议。本文档针对的式利用stmp服务器发送邮件</p>\n<p><strong>相关依赖库</strong></p>\n<ul>\n<li>stmplib</li>\n<li>EmailMessage</li>\n</ul>\n<h3 id=\"2-测试利用smtp发送邮件\"><a href=\"#2-测试利用smtp发送邮件\" class=\"headerlink\" title=\"2. 测试利用smtp发送邮件\"></a>2. 测试利用smtp发送邮件</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;xxx@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;xxx&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)</span><br><span class=\"line\">    </span><br><span class=\"line\">    subject = <span class=\"string\">&#x27;grab dinner this weekend?&#x27;</span></span><br><span class=\"line\">    body = <span class=\"string\">&#x27;how about dinner at 7pm this saturday?&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    msg = <span class=\"string\">f&#x27;Subject:<span class=\"subst\">&#123;subject&#125;</span>\\n\\n<span class=\"subst\">&#123;body&#125;</span>&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.sendmail(EMAIL_ADDRESSS,<span class=\"string\">&#x27;xxx@126.com&#x27;</span>,msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-email-message使用\"><a href=\"#3-email-message使用\" class=\"headerlink\" title=\"3. email.message使用\"></a>3. email.message使用</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;XXX@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;grab dinner this weekend?&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;how about dinner at 7pm this saturday?&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-发送给多个用户\"><a href=\"#4-发送给多个用户\" class=\"headerlink\" title=\"4.发送给多个用户\"></a>4.发送给多个用户</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">multi_recipients = [<span class=\"string\">&#x27;Fxxx@gmail.com&#x27;</span>,<span class=\"string\">&#x27;Mxxx@gmail.com&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;grab dinner this weekend?&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;,&#x27;</span>.join(multi_recipients)</span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;how about dinner at 7pm this saturday?&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-Add-image-attachment\"><a href=\"#5-Add-image-attachment\" class=\"headerlink\" title=\"5.Add image attachment\"></a>5.Add image attachment</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;Check out Bronx as puppy!&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;Image attched ...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;P1.png&#x27;</span>,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    file_data = f.read()</span><br><span class=\"line\">    <span class=\"comment\">#file_path = os.getcwd()</span></span><br><span class=\"line\">    <span class=\"comment\">#print(file_path)</span></span><br><span class=\"line\">    file_type = imghdr.what(f.name)</span><br><span class=\"line\">    <span class=\"comment\">#print(file_type)</span></span><br><span class=\"line\">    <span class=\"comment\">#file_name =f.name</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg.add_attachment(file_data, maintype=<span class=\"string\">&#x27;image&#x27;</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class=\"line\"><span class=\"comment\">#msg.add_attachment(file_data, maintype=&#x27;image&#x27;,subtype= filetype, filename = file_name))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"6-Add-images-attachments\"><a href=\"#6-Add-images-attachments\" class=\"headerlink\" title=\"6. Add images attachments\"></a>6. Add images attachments</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;Check out Bronx as puppy!&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;Image attched ...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">files =[<span class=\"string\">&#x27;P1.png&#x27;</span>,<span class=\"string\">&#x27;P2.png&#x27;</span>,<span class=\"string\">&#x27;girl.jpeg&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        file_data = f.read()</span><br><span class=\"line\"><span class=\"comment\">#         file_path = os.getcwd()</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_path)</span></span><br><span class=\"line\"><span class=\"comment\">#         file_type = imghdr.what(f.name)</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_type)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    msg.add_attachment(file_data, maintype=<span class=\"string\">&#x27;image&#x27;</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class=\"line\"><span class=\"comment\">#     msg.add_attachment(file_data, maintype=&#x27;image&#x27;,subtype=imghdr.what(None, file_data))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"7-Add-pdf-attachment\"><a href=\"#7-Add-pdf-attachment\" class=\"headerlink\" title=\"7. Add pdf attachment\"></a>7. Add pdf attachment</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;Check out Bronx as puppy!&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;Image attched ...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">files =[<span class=\"string\">&#x27;EEE.pdf&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        file_data = f.read()</span><br><span class=\"line\"><span class=\"comment\">#         file_path = os.getcwd()</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_path)</span></span><br><span class=\"line\"><span class=\"comment\">#         file_type = imghdr.what(f.name)</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_type)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    msg.add_attachment(file_data, maintype=<span class=\"string\">&#x27;application&#x27;</span>,subtype=<span class=\"string\">&#x27;octet-stream&#x27;</span>,filename = f.name)</span><br><span class=\"line\"><span class=\"comment\">#     msg.add_attachment(file_data, maintype=&#x27;image&#x27;,subtype=imghdr.what(None, file_data))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-Using-plain-text-to-send-html-email\"><a href=\"#8-Using-plain-text-to-send-html-email\" class=\"headerlink\" title=\"8.Using plain text to send html  email\"></a>8.Using plain text to send html  email</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HTML = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;head&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div align=&quot;center&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h2&gt;😘 Daily&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;br/&gt;</span></span><br><span class=\"line\"><span class=\"string\">#        &lt;img style=&quot;padding: 0.60em; background: white; box-shadow: 1px #1px 10px #999;&quot; #src=&quot;cid:one&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;lihui123&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;This is a html email using plain &#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;This is a plain test email&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">msg.add_alternative(HTML,subtype=<span class=\"string\">&#x27;html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li>python3.7 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2VtYWlsLmV4YW1wbGVzLmh0bWw=\">doc/library/email.examples<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1KUkNKNlJ0RTN4VQ==\">Corey Schafer youtube视频<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"如何给html邮件文件中添加图片\"><a href=\"#如何给html邮件文件中添加图片\" class=\"headerlink\" title=\"如何给html邮件文件中添加图片\"></a>如何给html邮件文件中添加图片</h2><h3 id=\"1-相关依赖库\"><a href=\"#1-相关依赖库\" class=\"headerlink\" title=\"1. 相关依赖库\"></a>1. 相关依赖库</h3><p>目前采用的式python2发邮件的库，python3发送邮件方式相对要简化了一些，但是还没有弄懂，感兴趣的同学可以探索以下</p>\n<p><strong>相关库文件</strong></p>\n<ul>\n<li>smtplib</li>\n<li>asyncio</li>\n<li>MIMEImage</li>\n<li>MIMEMultipart</li>\n<li>MIMEText</li>\n<li>Header</li>\n<li>pyppeteer</li>\n</ul>\n<h3 id=\"2-代码思路\"><a href=\"#2-代码思路\" class=\"headerlink\" title=\"2. 代码思路\"></a>2. 代码思路</h3><pre class=\"mermaid\">graph TD\nA[import libraries]-->B[获取待发送信息材料]\nB-->C[html信息]\nB--pyppeteer-->D[打开网页并截图工具截取图片]\nD--asyncio-->C\nC--smtp-->E[发送信息]</pre>\n\n<p><strong>注释：</strong> Mermaid(美人鱼)图的编写可参考简书此文  <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9iNDIxY2M3MjNkYTU=\">1<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3.代码实现\"></a>3.代码实现</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">import</span> asyncio</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> pyppeteer <span class=\"keyword\">import</span> launch</span><br><span class=\"line\"></span><br><span class=\"line\">FALL_IN_LOVE = (<span class=\"number\">2019</span>, <span class=\"number\">8</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">MAIL_HOST = <span class=\"string\">&quot;smtp.126.com&quot;</span></span><br><span class=\"line\">MAIL_USER = <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">MAIL_PASS = <span class=\"string\">&quot;lihui123&quot;</span></span><br><span class=\"line\">MAIL_SENDER = <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">MAIL_RECEIVER = [<span class=\"string\">&quot;1306504695@qq.com&quot;</span>,<span class=\"string\">&quot;hrbeulh@126.com&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">MAIL_ENCODING = <span class=\"string\">&quot;utf8&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_loving_days</span>():</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    获取恋爱天数</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    today = datetime.datetime.today()</span><br><span class=\"line\">    anniversary = datetime.datetime(*FALL_IN_LOVE)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (today - anniversary).days</span><br><span class=\"line\"></span><br><span class=\"line\">HTML = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;head&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div align=&quot;center&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h2&gt;😘 男朋友的日常问候&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;br/&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;img style=&quot;padding: 0.60em; background: white; box-shadow: 1px 1px 10px #999;&quot; src=&quot;cid:one&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">IMAGE_NAME = <span class=\"string\">&quot;one.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#open website and screenshot</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fetch</span>():</span></span><br><span class=\"line\">    browser = <span class=\"keyword\">await</span> launch(</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;args&quot;</span>: [<span class=\"string\">&quot;--no-sandbox&quot;</span>, <span class=\"string\">&quot;--disable-setuid-sandbox&quot;</span>]&#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    page = <span class=\"keyword\">await</span> browser.newPage()</span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.goto(<span class=\"string\">&quot;http://wufazhuce.com/&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.screenshot(</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;path&quot;</span>: IMAGE_NAME,</span><br><span class=\"line\">            <span class=\"string\">&quot;clip&quot;</span>: &#123;<span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">60</span>, <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">120</span>, <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">570</span>, <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">700</span>&#125;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">await</span> browser.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_email</span>():</span></span><br><span class=\"line\">    html_content = HTML.replace(<span class=\"string\">&quot;&#123;loving_days&#125;&quot;</span>, <span class=\"built_in\">str</span>(get_loving_days()))</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = MIMEMultipart(<span class=\"string\">&quot;alternative&quot;</span>)</span><br><span class=\"line\">    msg[<span class=\"string\">&quot;Subject&quot;</span>] = Header(<span class=\"string\">&quot;😘 男朋友的日常问候&quot;</span>, MAIL_ENCODING )</span><br><span class=\"line\">    msg[<span class=\"string\">&quot;From&quot;</span>] = Header(<span class=\"string\">&quot;暖宝宝&quot;</span>, MAIL_ENCODING)</span><br><span class=\"line\">    msg[<span class=\"string\">&quot;To&quot;</span>] = Header(<span class=\"string\">&quot;小仙女&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(IMAGE_NAME, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        img = MIMEImage(f.read())</span><br><span class=\"line\">        img.add_header(<span class=\"string\">&quot;Content-ID&quot;</span>, <span class=\"string\">&quot;one&quot;</span>)</span><br><span class=\"line\">        msg.attach(img)</span><br><span class=\"line\">    msg.attach(MIMEText(html_content, <span class=\"string\">&quot;html&quot;</span>, MAIL_ENCODING))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        smtp_obj = smtplib.SMTP_SSL(MAIL_HOST)</span><br><span class=\"line\">        smtp_obj.login(MAIL_USER, MAIL_PASS)</span><br><span class=\"line\">        smtp_obj.sendmail(MAIL_SENDER, MAIL_RECEIVER, msg.as_string())</span><br><span class=\"line\">        smtp_obj.quit()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(e)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class=\"line\">    send_email()</span><br></pre></td></tr></table></figure>\n<h2 id=\"python3-如何将中文转换成urlencode\"><a href=\"#python3-如何将中文转换成urlencode\" class=\"headerlink\" title=\"python3 如何将中文转换成urlencode\"></a>python3 如何将中文转换成urlencode</h2><h3 id=\"1-相关依赖库-1\"><a href=\"#1-相关依赖库-1\" class=\"headerlink\" title=\"1.相关依赖库\"></a>1.相关依赖库</h3><ul>\n<li>quote, unquote</li>\n</ul>\n<h3 id=\"2-代码实现\"><a href=\"#2-代码实现\" class=\"headerlink\" title=\"2.代码实现\"></a>2.代码实现</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> unquote,quote</span><br><span class=\"line\"> </span><br><span class=\"line\">url1 = <span class=\"string\">&quot;https://www.qichacha.com/search?key=河南正商河洛置业有限公司&quot;</span></span><br><span class=\"line\">url2 = <span class=\"string\">&quot;https://www.qichacha.com/search?key=%E6%B2%B3%E5%8D%97%E6%AD%A3%E5%95%86%E6%B2%B3%E6%B4%9B%E7%BD%AE%E4%B8%9A%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 解码</span></span><br><span class=\"line\">url = unquote(url2)</span><br><span class=\"line\">print(url)</span><br><span class=\"line\"><span class=\"comment\">#编码</span></span><br><span class=\"line\">url = quote(<span class=\"string\">&quot;河南正商河洛置业有限公司&quot;</span>)</span><br><span class=\"line\">print(url)</span><br></pre></td></tr></table></figure>","categories":["python代码应用"],"tags":["python邮件表白"]},{"title":"如何利用python爬取网页图片-你懂的","url":"/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87-%E4%BD%A0%E6%87%82%E7%9A%84/","content":"<h1 id=\"如何利用python爬取网页图片\"><a href=\"#如何利用python爬取网页图片\" class=\"headerlink\" title=\"如何利用python爬取网页图片\"></a>如何利用python爬取网页图片</h1><h2 id=\"1-相关依赖库\"><a href=\"#1-相关依赖库\" class=\"headerlink\" title=\"1.相关依赖库\"></a>1.相关依赖库</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3J1bW15LmNvbS9zb2Z0d2FyZS9CZWF1dGlmdWxTb3VwLw==\">BeautifulSoup<i class=\"fa fa-external-link-alt\"></i></span>   可以从HTML或XML文件中提取数据的Python库</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly8yLnB5dGhvbi1yZXF1ZXN0cy5vcmcvL2VuL21hc3Rlci8=\">requests<i class=\"fa fa-external-link-alt\"></i></span>  <strong>Requests</strong> is an elegant and simple HTTP library for Python, built for human beings. </p>\n</li>\n</ul>\n<h2 id=\"2-代码实现\"><a href=\"#2-代码实现\" class=\"headerlink\" title=\"2.代码实现\"></a>2.代码实现</h2><p>代码编写调试过程，可以参考简书📕 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=\">小董不太懂<i class=\"fa fa-external-link-alt\"></i></span>的教程，其代码编写思路如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 保存或处理爬去的信息</span><br><span class=\"line\">op1&#x3D;&gt;operation: 利用获取爬取的网页网址的html</span><br><span class=\"line\">op2&#x3D;&gt;operation: 利用BeautifulSoup将html信息转换成xml信息</span><br><span class=\"line\">op3&#x3D;&gt;operation: 利用BeautifulSoup挑选xml中想要的信息</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op1-&gt;op2-&gt;op3-&gt;e</span><br></pre></td></tr></table></figure>\n<p>下面贴出代码全文</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> md5</span><br><span class=\"line\"><span class=\"keyword\">from</span> requests.exceptions <span class=\"keyword\">import</span> RequestException</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&#x27;If-None-Match&#x27;</span>: <span class=\"string\">&#x27;W/&quot;5cc2cd8f-2c58&quot;&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;Referer&quot;</span>: <span class=\"string\">&quot;http://www.mzitu.com/all/&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.204 SafarMozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#请求头的这个Referer一定要加，妹子网有反爬，反正粘贴复制就行，多加几个信息无所谓</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_page</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        response = requests.get(url, headers=headers)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            <span class=\"comment\">#print(response.text)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> response.text</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> RequestException:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;获取索引页失败&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse_page</span>(<span class=\"params\">html</span>):</span></span><br><span class=\"line\">    soup = BeautifulSoup(html, <span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">    items = soup.select(<span class=\"string\">&#x27;#pins li&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">        href = link.a[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">        <span class=\"comment\">#print(href)</span></span><br><span class=\"line\">        get_detail_page(href)</span><br><span class=\"line\">    <span class=\"comment\"># print(items)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_detail_page</span>(<span class=\"params\">href</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">        detail_url = href + <span class=\"string\">&#x27;/&#x27;</span> + <span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> requests.get(detail_url, headers=headers).status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            <span class=\"comment\">#print(detail_url)</span></span><br><span class=\"line\">            parse_detail_page(detail_url)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;已至末尾页&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse_detail_page</span>(<span class=\"params\">detail_url</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        response = requests.get(detail_url, headers=headers)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;获取详情页成功&#x27;</span>)</span><br><span class=\"line\">            detail_html = response.text</span><br><span class=\"line\">            <span class=\"comment\"># print(detail_html)</span></span><br><span class=\"line\">            get_image(detail_html)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> RequestException:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;获取详情页失败&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_image</span>(<span class=\"params\">detail_html</span>):</span></span><br><span class=\"line\">    soup = BeautifulSoup(detail_html, <span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">    items= soup.select(<span class=\"string\">&#x27;.main-image&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># print(items)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">        <span class=\"comment\">#return item.img[&#x27;src&#x27;]</span></span><br><span class=\"line\">    \timage = item.img[<span class=\"string\">&#x27;src&#x27;</span>]</span><br><span class=\"line\">        save_image(image)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_image</span>(<span class=\"params\">image</span>):</span></span><br><span class=\"line\">   response = requests.get(image,headers=headers)</span><br><span class=\"line\">   <span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">       data = response.content</span><br><span class=\"line\">       file_path = <span class=\"string\">&#x27;&#123;0&#125;/&#123;1&#125;.&#123;2&#125;&#x27;</span>.<span class=\"built_in\">format</span>(os.getcwd(), md5(data).hexdigest(), <span class=\"string\">&#x27;jpg&#x27;</span>)</span><br><span class=\"line\">       print(file_path)</span><br><span class=\"line\">       <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(file_path):</span><br><span class=\"line\">           <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">               f.write(data)</span><br><span class=\"line\">               f.close()</span><br><span class=\"line\">               print(<span class=\"string\">&#x27;保存成功&#x27;</span>)</span><br><span class=\"line\">   <span class=\"keyword\">else</span>:</span><br><span class=\"line\">       print(<span class=\"string\">&#x27;保存失败&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://www.mzitu.com/tag/youhuo/&#x27;</span></span><br><span class=\"line\">    html = get_page(url)</span><br><span class=\"line\">    parse_page(html)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>[^1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=\">https://www.jianshu.com/p/37202bec8f97<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["python代码应用"],"tags":["python爬妹子图"]},{"title":"如何搭建感知器并使用其进行分类","url":"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/","content":"<h1 id=\"😋如何搭建感知器并使用其进行分类\"><a href=\"#😋如何搭建感知器并使用其进行分类\" class=\"headerlink\" title=\"😋如何搭建感知器并使用其进行分类\"></a>😋如何搭建感知器并使用其进行分类</h1><p>[toc]</p>\n<h2 id=\"💨python-编程基础，需要掌握几个库\"><a href=\"#💨python-编程基础，需要掌握几个库\" class=\"headerlink\" title=\"💨python 编程基础，需要掌握几个库\"></a>💨python 编程基础，需要掌握几个库</h2><ul>\n<li>numpy</li>\n<li>pandas</li>\n<li>matplotlib</li>\n</ul>\n<h2 id=\"💖什么是感知器？\"><a href=\"#💖什么是感知器？\" class=\"headerlink\" title=\"💖什么是感知器？\"></a>💖什么是感知器？</h2><h3 id=\"🎈神经元与机器学习感知机\"><a href=\"#🎈神经元与机器学习感知机\" class=\"headerlink\" title=\"🎈神经元与机器学习感知机\"></a>🎈神经元与机器学习感知机</h3><p>信号在神经元中的传播过程如下：信号通过神经粒质与神经元树突结合，通过神经细胞的认知处理（分类等），由神经末梢输出信号。</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602160802363.png\" alt=\"image-20200602160802363\"><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602161216932.png\" alt=\"image-20200602161216932\"></p>\n<p>感知器类似于生物神经系统中的神经元。特征数据$x_1,x_2,...x_m$，作为输入信号，权重因子$\\omega_1,\\omega_2,...\\omega_m$,作信号接收单元，激活函数用于根据$\\omega x$输入信号产生输出分类结果。其中，$x_0=1,\\omega_0=y_0$</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602160731313.png\" alt=\"image-20200602160731313\"></p>\n<p>感知机的基本数学原理，既是逻辑回归/线性回归，直白一点就是大学物理实验中的实验数据处理，数据拟合和类似最小二乘法的误差分析；</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/1.png\" alt></p>\n<p>为了使拟合或分类效果最好，需要求一组$\\omega$,要求方差最小即下式最小：$\\widehat y$为预测数据，${(i)}$为第i个样本，下标为特征</p>\n<p>$$<br>\\begin{equation}<br>J(\\boldsymbol{w})=\\frac{1}{2} \\sum_{i}\\left(y^{(i)}-\\widehat y^{(i)}\\right)^{2}<br>\\end{equation}<br>$$</p>\n<p>线性回归或逻辑回归得目的是根据已有数据发现规律或现象，建立相应得模型，最终目的是利用模型进行预测；机器学习算法就是一种事物规律建模技术。训练机器学习算法，并用其对新的数据进行预测或分类。</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602220300807.png\" alt=\"image-20200602220300807\"></p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602220058431.png\" alt=\"image-20200602220058431\"></p>\n<p>机器学习算法的核心既是获得较合理的$\\omega$, 要想获得$\\omega$就需要利用数据集对算法进行训练。样本数据输入，预测值$\\widehat y$与实际值之间会有偏差。要求训练样本足够多的情况下，偏差变小，逐渐收敛。那么，每个训练样本进行训练时，均需对权重因子进行更新。</p>\n<p>$$<br>w_{j}:=w_{j}+\\Delta w_{j}\\<br>$$</p>\n<h3 id=\"🚲最简单的感知机\"><a href=\"#🚲最简单的感知机\" class=\"headerlink\" title=\"🚲最简单的感知机\"></a>🚲最简单的感知机</h3><p>权重更新方法如下<br>$$<br>\\begin{equation}\\Delta w_{j}=\\eta\\left(y^{(i)}-\\hat{y}^{(i)}\\right) x_{j}^{(i)}\\end{equation}<br>$$<br>其中，$\\eta$成为学习率<br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/2.png\" alt></p>\n<h3 id=\"🛴自适应线性神经元与学习的收敛性\"><a href=\"#🛴自适应线性神经元与学习的收敛性\" class=\"headerlink\" title=\"🛴自适应线性神经元与学习的收敛性\"></a>🛴自适应线性神经元与学习的收敛性</h3><p>其采用线性激活函数$\\phi(z)=z$，那么；<br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/3.png\" alt><br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602223450727.png\" alt=\"image-20200602223450727\"></p>\n<p>权重更新采用梯度下降法：<br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/4.png\" alt></p>\n<h2 id=\"🍜如何搭建感知机并进行分类？\"><a href=\"#🍜如何搭建感知机并进行分类？\" class=\"headerlink\" title=\"🍜如何搭建感知机并进行分类？\"></a>🍜如何搭建感知机并进行分类？</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.colors <span class=\"keyword\">import</span> ListedColormap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # Implementing a perceptron learning algorithm in Python</span></span><br><span class=\"line\"><span class=\"comment\"># ## An object-oriented perceptron API</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Perceptron</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Perceptron classifier.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ------------</span></span><br><span class=\"line\"><span class=\"string\">    eta : float</span></span><br><span class=\"line\"><span class=\"string\">      Learning rate (between 0.0 and 1.0)</span></span><br><span class=\"line\"><span class=\"string\">    n_iter : int</span></span><br><span class=\"line\"><span class=\"string\">      Passes over the training dataset.</span></span><br><span class=\"line\"><span class=\"string\">    random_state : int</span></span><br><span class=\"line\"><span class=\"string\">      Random number generator seed for random weight</span></span><br><span class=\"line\"><span class=\"string\">      initialization.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Attributes</span></span><br><span class=\"line\"><span class=\"string\">    -----------</span></span><br><span class=\"line\"><span class=\"string\">    w_ : 1d-array</span></span><br><span class=\"line\"><span class=\"string\">      Weights after fitting.</span></span><br><span class=\"line\"><span class=\"string\">    errors_ : list</span></span><br><span class=\"line\"><span class=\"string\">      Number of misclassifications (updates) in each epoch.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, eta=<span class=\"number\">0.01</span>, n_iter=<span class=\"number\">50</span>, random_state=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">        self.eta = eta</span><br><span class=\"line\">        self.n_iter = n_iter</span><br><span class=\"line\">        self.random_state = random_state</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Fit training data.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        ----------</span></span><br><span class=\"line\"><span class=\"string\">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class=\"line\"><span class=\"string\">          Training vectors, where n_samples is the number of samples and</span></span><br><span class=\"line\"><span class=\"string\">          n_features is the number of features.</span></span><br><span class=\"line\"><span class=\"string\">        y : array-like, shape = [n_samples]</span></span><br><span class=\"line\"><span class=\"string\">          Target values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Returns</span></span><br><span class=\"line\"><span class=\"string\">        -------</span></span><br><span class=\"line\"><span class=\"string\">        self : object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        rgen = np.random.RandomState(self.random_state)</span><br><span class=\"line\">        self.w_ = rgen.normal(loc=<span class=\"number\">0.0</span>, scale=<span class=\"number\">0.01</span>, size=<span class=\"number\">1</span> + X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        self.errors_ = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iter):</span><br><span class=\"line\">            errors = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> xi, target <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X, y):</span><br><span class=\"line\">                update = self.eta * (target - self.predict(xi))</span><br><span class=\"line\">                self.w_[<span class=\"number\">1</span>:] += update * xi</span><br><span class=\"line\">                self.w_[<span class=\"number\">0</span>] += update</span><br><span class=\"line\">                errors += <span class=\"built_in\">int</span>(update != <span class=\"number\">0.0</span>)</span><br><span class=\"line\">            self.errors_.append(errors)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">net_input</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Calculate net input&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.dot(X, self.w_[<span class=\"number\">1</span>:]) + self.w_[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Return class label after unit step&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.where(self.net_input(X) &gt;= <span class=\"number\">0.0</span>, <span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ## Training a perceptron model on the Iris dataset</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### Reading-in the Iris data</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;https://archive.ics.uci.edu/ml/&#x27;</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;machine-learning-databases/iris/iris.data&#x27;</span>, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">df.tail()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># ### Note:</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># You can find a copy of the Iris dataset (and all other datasets used in this book) in the code bundle of this book, which you can use if you are working offline or the UCI server at https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data is temporarily unavailable. For instance, to load the Iris dataset from a local directory, you can replace the line </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\">#     df = pd.read_csv(&#x27;https://archive.ics.uci.edu/ml/&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#         &#x27;machine-learning-databases/iris/iris.data&#x27;, header=None)</span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># by</span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\">#     df = pd.read_csv(&#x27;your/local/path/to/iris.data&#x27;, header=None)</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;iris.data&#x27;</span>, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">df.tail()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### Plotting the Iris data</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># select setosa and versicolor</span></span><br><span class=\"line\">y = df.iloc[<span class=\"number\">0</span>:<span class=\"number\">100</span>, <span class=\"number\">4</span>].values</span><br><span class=\"line\">y = np.where(y == <span class=\"string\">&#x27;Iris-setosa&#x27;</span>, -<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># extract sepal length and petal length</span></span><br><span class=\"line\">X = df.iloc[<span class=\"number\">0</span>:<span class=\"number\">100</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>]].values</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot data</span></span><br><span class=\"line\">plt.scatter(X[:<span class=\"number\">50</span>, <span class=\"number\">0</span>], X[:<span class=\"number\">50</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">            color=<span class=\"string\">&#x27;red&#x27;</span>, marker=<span class=\"string\">&#x27;o&#x27;</span>, label=<span class=\"string\">&#x27;setosa&#x27;</span>)</span><br><span class=\"line\">plt.scatter(X[<span class=\"number\">50</span>:<span class=\"number\">100</span>, <span class=\"number\">0</span>], X[<span class=\"number\">50</span>:<span class=\"number\">100</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">            color=<span class=\"string\">&#x27;blue&#x27;</span>, marker=<span class=\"string\">&#x27;x&#x27;</span>, label=<span class=\"string\">&#x27;versicolor&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_06.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### Training the perceptron model</span></span><br><span class=\"line\">ppn = Perceptron(eta=<span class=\"number\">0.1</span>, n_iter=<span class=\"number\">10</span>)</span><br><span class=\"line\">ppn.fit(X, y)</span><br><span class=\"line\">plt.plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ppn.errors_) + <span class=\"number\">1</span>), ppn.errors_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Number of updates&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_07.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### A function for plotting decision regions</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">plot_decision_regions</span>(<span class=\"params\">X, y, classifier, resolution=<span class=\"number\">0.02</span></span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># setup marker generator and color map</span></span><br><span class=\"line\">    markers = (<span class=\"string\">&#x27;s&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>, <span class=\"string\">&#x27;^&#x27;</span>, <span class=\"string\">&#x27;v&#x27;</span>)</span><br><span class=\"line\">    colors = (<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;lightgreen&#x27;</span>, <span class=\"string\">&#x27;gray&#x27;</span>, <span class=\"string\">&#x27;cyan&#x27;</span>)</span><br><span class=\"line\">    cmap = ListedColormap(colors[:<span class=\"built_in\">len</span>(np.unique(y))])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># plot the decision surface</span></span><br><span class=\"line\">    x1_min, x1_max = X[:, <span class=\"number\">0</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span>, X[:, <span class=\"number\">0</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">    x2_min, x2_max = X[:, <span class=\"number\">1</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span>, X[:, <span class=\"number\">1</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),</span><br><span class=\"line\">                           np.arange(x2_min, x2_max, resolution))</span><br><span class=\"line\">    Z = classifier.predict(np.array([xx1.ravel(), xx2.ravel()]).T)</span><br><span class=\"line\">    Z = Z.reshape(xx1.shape)</span><br><span class=\"line\">    plt.contourf(xx1, xx2, Z, alpha=<span class=\"number\">0.3</span>, cmap=cmap)</span><br><span class=\"line\">    plt.xlim(xx1.<span class=\"built_in\">min</span>(), xx1.<span class=\"built_in\">max</span>())</span><br><span class=\"line\">    plt.ylim(xx2.<span class=\"built_in\">min</span>(), xx2.<span class=\"built_in\">max</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># plot class samples</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, cl <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(np.unique(y)):</span><br><span class=\"line\">        plt.scatter(x=X[y == cl, <span class=\"number\">0</span>], </span><br><span class=\"line\">                    y=X[y == cl, <span class=\"number\">1</span>],</span><br><span class=\"line\">                    alpha=<span class=\"number\">0.8</span>, </span><br><span class=\"line\">                    c=colors[idx],</span><br><span class=\"line\">                    marker=markers[idx], </span><br><span class=\"line\">                    label=cl, </span><br><span class=\"line\">                    edgecolor=<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">plot_decision_regions(X, y, classifier=ppn)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_08.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################################################################</span></span><br><span class=\"line\"><span class=\"comment\">## Adaptive linear neurons and the convergence of learning</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># ## Minimizing cost functions with gradient descent</span></span><br><span class=\"line\"><span class=\"comment\"># ## Implementing an adaptive linear neuron in Python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdalineGD</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;ADAptive LInear NEuron classifier.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ------------</span></span><br><span class=\"line\"><span class=\"string\">    eta : float</span></span><br><span class=\"line\"><span class=\"string\">      Learning rate (between 0.0 and 1.0)</span></span><br><span class=\"line\"><span class=\"string\">    n_iter : int</span></span><br><span class=\"line\"><span class=\"string\">      Passes over the training dataset.</span></span><br><span class=\"line\"><span class=\"string\">    random_state : int</span></span><br><span class=\"line\"><span class=\"string\">      Random number generator seed for random weight</span></span><br><span class=\"line\"><span class=\"string\">      initialization.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Attributes</span></span><br><span class=\"line\"><span class=\"string\">    -----------</span></span><br><span class=\"line\"><span class=\"string\">    w_ : 1d-array</span></span><br><span class=\"line\"><span class=\"string\">      Weights after fitting.</span></span><br><span class=\"line\"><span class=\"string\">    cost_ : list</span></span><br><span class=\"line\"><span class=\"string\">      Sum-of-squares cost function value in each epoch.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, eta=<span class=\"number\">0.01</span>, n_iter=<span class=\"number\">50</span>, random_state=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">        self.eta = eta</span><br><span class=\"line\">        self.n_iter = n_iter</span><br><span class=\"line\">        self.random_state = random_state</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot; Fit training data.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        ----------</span></span><br><span class=\"line\"><span class=\"string\">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class=\"line\"><span class=\"string\">          Training vectors, where n_samples is the number of samples and</span></span><br><span class=\"line\"><span class=\"string\">          n_features is the number of features.</span></span><br><span class=\"line\"><span class=\"string\">        y : array-like, shape = [n_samples]</span></span><br><span class=\"line\"><span class=\"string\">          Target values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Returns</span></span><br><span class=\"line\"><span class=\"string\">        -------</span></span><br><span class=\"line\"><span class=\"string\">        self : object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        rgen = np.random.RandomState(self.random_state)</span><br><span class=\"line\">        self.w_ = rgen.normal(loc=<span class=\"number\">0.0</span>, scale=<span class=\"number\">0.01</span>, size=<span class=\"number\">1</span> + X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        self.cost_ = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iter):</span><br><span class=\"line\">            net_input = self.net_input(X)</span><br><span class=\"line\">            <span class=\"comment\"># Please note that the &quot;activation&quot; method has no effect</span></span><br><span class=\"line\">            <span class=\"comment\"># in the code since it is simply an identity function. We</span></span><br><span class=\"line\">            <span class=\"comment\"># could write `output = self.net_input(X)` directly instead.</span></span><br><span class=\"line\">            <span class=\"comment\"># The purpose of the activation is more conceptual, i.e.,  </span></span><br><span class=\"line\">            <span class=\"comment\"># in the case of logistic regression (as we will see later), </span></span><br><span class=\"line\">            <span class=\"comment\"># we could change it to</span></span><br><span class=\"line\">            <span class=\"comment\"># a sigmoid function to implement a logistic regression classifier.</span></span><br><span class=\"line\">            output = self.activation(net_input)</span><br><span class=\"line\">            errors = (y - output)</span><br><span class=\"line\">            self.w_[<span class=\"number\">1</span>:] += self.eta * X.T.dot(errors)</span><br><span class=\"line\">            self.w_[<span class=\"number\">0</span>] += self.eta * errors.<span class=\"built_in\">sum</span>()</span><br><span class=\"line\">            cost = (errors**<span class=\"number\">2</span>).<span class=\"built_in\">sum</span>() / <span class=\"number\">2.0</span></span><br><span class=\"line\">            self.cost_.append(cost)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">net_input</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Calculate net input&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.dot(X, self.w_[<span class=\"number\">1</span>:]) + self.w_[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">activation</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Compute linear activation&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> X</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Return class label after unit step&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.where(self.activation(self.net_input(X)) &gt;= <span class=\"number\">0.0</span>, <span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(nrows=<span class=\"number\">1</span>, ncols=<span class=\"number\">2</span>, figsize=(<span class=\"number\">10</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ada1 = AdalineGD(n_iter=<span class=\"number\">10</span>, eta=<span class=\"number\">0.01</span>).fit(X, y)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada1.cost_) + <span class=\"number\">1</span>), np.log10(ada1.cost_), marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;log(Sum-squared-error)&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Adaline - Learning rate 0.01&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ada2 = AdalineGD(n_iter=<span class=\"number\">10</span>, eta=<span class=\"number\">0.0001</span>).fit(X, y)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada2.cost_) + <span class=\"number\">1</span>), ada2.cost_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_ylabel(<span class=\"string\">&#x27;Sum-squared-error&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Adaline - Learning rate 0.0001&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_11.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ## Improving gradient descent through feature scaling</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># standardize features</span></span><br><span class=\"line\">X_std = np.copy(X)</span><br><span class=\"line\">X_std[:, <span class=\"number\">0</span>] = (X[:, <span class=\"number\">0</span>] - X[:, <span class=\"number\">0</span>].mean()) / X[:, <span class=\"number\">0</span>].std()</span><br><span class=\"line\">X_std[:, <span class=\"number\">1</span>] = (X[:, <span class=\"number\">1</span>] - X[:, <span class=\"number\">1</span>].mean()) / X[:, <span class=\"number\">1</span>].std()</span><br><span class=\"line\"></span><br><span class=\"line\">ada = AdalineGD(n_iter=<span class=\"number\">15</span>, eta=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">ada.fit(X_std, y)</span><br><span class=\"line\"></span><br><span class=\"line\">plot_decision_regions(X_std, y, classifier=ada)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Adaline - Gradient Descent&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_14_1.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada.cost_) + <span class=\"number\">1</span>), ada.cost_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Sum-squared-error&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_14_2.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ## Large scale machine learning and stochastic gradient descent</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdalineSGD</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;ADAptive LInear NEuron classifier.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ------------</span></span><br><span class=\"line\"><span class=\"string\">    eta : float</span></span><br><span class=\"line\"><span class=\"string\">      Learning rate (between 0.0 and 1.0)</span></span><br><span class=\"line\"><span class=\"string\">    n_iter : int</span></span><br><span class=\"line\"><span class=\"string\">      Passes over the training dataset.</span></span><br><span class=\"line\"><span class=\"string\">    shuffle : bool (default: True)</span></span><br><span class=\"line\"><span class=\"string\">      Shuffles training data every epoch if True to prevent cycles.</span></span><br><span class=\"line\"><span class=\"string\">    random_state : int</span></span><br><span class=\"line\"><span class=\"string\">      Random number generator seed for random weight</span></span><br><span class=\"line\"><span class=\"string\">      initialization.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Attributes</span></span><br><span class=\"line\"><span class=\"string\">    -----------</span></span><br><span class=\"line\"><span class=\"string\">    w_ : 1d-array</span></span><br><span class=\"line\"><span class=\"string\">      Weights after fitting.</span></span><br><span class=\"line\"><span class=\"string\">    cost_ : list</span></span><br><span class=\"line\"><span class=\"string\">      Sum-of-squares cost function value averaged over all</span></span><br><span class=\"line\"><span class=\"string\">      training samples in each epoch.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, eta=<span class=\"number\">0.01</span>, n_iter=<span class=\"number\">10</span>, shuffle=<span class=\"literal\">True</span>, random_state=<span class=\"literal\">None</span></span>):</span></span><br><span class=\"line\">        self.eta = eta</span><br><span class=\"line\">        self.n_iter = n_iter</span><br><span class=\"line\">        self.w_initialized = <span class=\"literal\">False</span></span><br><span class=\"line\">        self.shuffle = shuffle</span><br><span class=\"line\">        self.random_state = random_state</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot; Fit training data.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        ----------</span></span><br><span class=\"line\"><span class=\"string\">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class=\"line\"><span class=\"string\">          Training vectors, where n_samples is the number of samples and</span></span><br><span class=\"line\"><span class=\"string\">          n_features is the number of features.</span></span><br><span class=\"line\"><span class=\"string\">        y : array-like, shape = [n_samples]</span></span><br><span class=\"line\"><span class=\"string\">          Target values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Returns</span></span><br><span class=\"line\"><span class=\"string\">        -------</span></span><br><span class=\"line\"><span class=\"string\">        self : object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        self._initialize_weights(X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        self.cost_ = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iter):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.shuffle:</span><br><span class=\"line\">                X, y = self._shuffle(X, y)</span><br><span class=\"line\">            cost = []</span><br><span class=\"line\">            <span class=\"keyword\">for</span> xi, target <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X, y):</span><br><span class=\"line\">                cost.append(self._update_weights(xi, target))</span><br><span class=\"line\">            avg_cost = <span class=\"built_in\">sum</span>(cost) / <span class=\"built_in\">len</span>(y)</span><br><span class=\"line\">            self.cost_.append(avg_cost)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">partial_fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Fit training data without reinitializing the weights&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.w_initialized:</span><br><span class=\"line\">            self._initialize_weights(X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> y.ravel().shape[<span class=\"number\">0</span>] &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> xi, target <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X, y):</span><br><span class=\"line\">                self._update_weights(xi, target)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self._update_weights(X, y)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_shuffle</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Shuffle training data&quot;&quot;&quot;</span></span><br><span class=\"line\">        r = self.rgen.permutation(<span class=\"built_in\">len</span>(y))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> X[r], y[r]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_initialize_weights</span>(<span class=\"params\">self, m</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Initialize weights to small random numbers&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.rgen = np.random.RandomState(self.random_state)</span><br><span class=\"line\">        self.w_ = self.rgen.normal(loc=<span class=\"number\">0.0</span>, scale=<span class=\"number\">0.01</span>, size=<span class=\"number\">1</span> + m)</span><br><span class=\"line\">        self.w_initialized = <span class=\"literal\">True</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_update_weights</span>(<span class=\"params\">self, xi, target</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Apply Adaline learning rule to update the weights&quot;&quot;&quot;</span></span><br><span class=\"line\">        output = self.activation(self.net_input(xi))</span><br><span class=\"line\">        error = (target - output)</span><br><span class=\"line\">        self.w_[<span class=\"number\">1</span>:] += self.eta * xi.dot(error)</span><br><span class=\"line\">        self.w_[<span class=\"number\">0</span>] += self.eta * error</span><br><span class=\"line\">        cost = <span class=\"number\">0.5</span> * error**<span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cost</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">net_input</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Calculate net input&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.dot(X, self.w_[<span class=\"number\">1</span>:]) + self.w_[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">activation</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Compute linear activation&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> X</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Return class label after unit step&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.where(self.activation(self.net_input(X)) &gt;= <span class=\"number\">0.0</span>, <span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ada = AdalineSGD(n_iter=<span class=\"number\">15</span>, eta=<span class=\"number\">0.01</span>, random_state=<span class=\"number\">1</span>)</span><br><span class=\"line\">ada.fit(X_std, y)</span><br><span class=\"line\"></span><br><span class=\"line\">plot_decision_regions(X_std, y, classifier=ada)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Adaline - Stochastic Gradient Descent&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_15_1.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada.cost_) + <span class=\"number\">1</span>), ada.cost_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Average Cost&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_15_2.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">ada.partial_fit(X_std[<span class=\"number\">0</span>, :], y[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # Summary</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --- </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># Readers may ignore the following cell</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n","categories":["机器学习"],"tags":["感知器","神经元"]},{"title":"数据拟合","url":"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/","content":"<h1 id=\"数据拟合\"><a href=\"#数据拟合\" class=\"headerlink\" title=\"数据拟合\"></a>数据拟合</h1><p>[toc]</p>\n<h2 id=\"1-问题描述\"><a href=\"#1-问题描述\" class=\"headerlink\" title=\"1.问题描述\"></a>1.问题描述</h2><p>手里有三组数据，用来分析探测器散射体材料厚度与探测器效率之间的关系。需要对三组数据进行画散点图，并进行拟合。拟合函数采用如下形式<br>$$<br>\\eta = 1- exp(-\\mu x)<br>$$<br>准备采用三种方法进行数据拟合，数据分析软件root、matlab和python.</p>\n<h2 id=\"2-三种数据分析软件的数据拟合实现\"><a href=\"#2-三种数据分析软件的数据拟合实现\" class=\"headerlink\" title=\"2.三种数据分析软件的数据拟合实现\"></a>2.三种数据分析软件的数据拟合实现</h2><h3 id=\"2-1-matlab的数据拟合实现\"><a href=\"#2-1-matlab的数据拟合实现\" class=\"headerlink\" title=\"2.1 matlab的数据拟合实现\"></a>2.1 matlab的数据拟合实现</h3><figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%% 读入数据x,y</span></span><br><span class=\"line\">x=<span class=\"number\">5</span>:<span class=\"number\">5</span>:<span class=\"number\">100</span>;</span><br><span class=\"line\">y1=textread(&#x27;dataout1.txt&#x27;); //textread读入数据</span><br><span class=\"line\">y2=textread(<span class=\"string\">&#x27;dataout2.txt&#x27;</span>);</span><br><span class=\"line\">y3=textread(<span class=\"string\">&#x27;dataout3.txt&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 自定义函数形式数据拟合</span></span><br><span class=\"line\">myfittype = fittype(<span class=\"string\">&#x27;1. - exp(a*x)&#x27;</span>,...</span><br><span class=\"line\">    <span class=\"string\">&#x27;dependent&#x27;</span>,&#123;<span class=\"string\">&#x27;y&#x27;</span>&#125;,<span class=\"string\">&#x27;independent&#x27;</span>,&#123;<span class=\"string\">&#x27;x&#x27;</span>&#125;,...</span><br><span class=\"line\">    <span class=\"string\">&#x27;coefficients&#x27;</span>,&#123;<span class=\"string\">&#x27;a&#x27;</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">myfit1 = fit(x&#x27;,y1,myfittype);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(myfit1,<span class=\"string\">&#x27;r-&#x27;</span>,x,y1,<span class=\"string\">&#x27;r*&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">myfit2 = fit(x&#x27;,y2,myfittype);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(myfit2,<span class=\"string\">&#x27;b-&#x27;</span>,x,y2,<span class=\"string\">&#x27;bo&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">myfit3 = fit(x&#x27;,y3,myfittype);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(myfit3,<span class=\"string\">&#x27;g-&#x27;</span>,x,y3,<span class=\"string\">&#x27;gx&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/fittedData.png\" alt=\"fittedData\"></p>\n<h3 id=\"2-2-root中的数据拟合实现\"><a href=\"#2-2-root中的数据拟合实现\" class=\"headerlink\" title=\"2.2 root中的数据拟合实现\"></a>2.2 root中的数据拟合实现</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//参考 root tutorial/graphs/zdemo.C  /fit/FittingDemo.C</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;iostream&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;fstream&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;vector&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;cstring&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;string.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> NMAX=<span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> xx[NMAX],yy[NMAX];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReadData</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> </span><br><span class=\"line\">  ReadData(<span class=\"built_in\">string</span> fname)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    filename=fname;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  ~ReadData()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetData</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"built_in\">string</span> filename;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReadData::GetData</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"function\">ifstream <span class=\"title\">input</span><span class=\"params\">(filename)</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">double</span> a,b;</span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">double</span>&gt; x,y;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(!input.eof())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">      a=i*<span class=\"number\">5</span>;</span><br><span class=\"line\">      input&gt;&gt;b;</span><br><span class=\"line\">      x.push_back(a);</span><br><span class=\"line\">      y.push_back(<span class=\"number\">1.0</span>-(b/<span class=\"number\">1.e6</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  input.close();</span><br><span class=\"line\">  i=i<span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;i&amp;&amp;j&lt;NMAX;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      xx[j]=x[j],yy[j]=y[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">plot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">ReadData <span class=\"title\">a1</span><span class=\"params\">(<span class=\"string\">&quot;./EJ200-100/data.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">  a1.GetData();</span><br><span class=\"line\"></span><br><span class=\"line\">  TGraph *g1 =<span class=\"keyword\">new</span> TGraph(NMAX,xx,yy);</span><br><span class=\"line\">  g1-&gt;SetLineColor(<span class=\"number\">38</span>);</span><br><span class=\"line\">  g1-&gt;SetMarkerColor(kBlue);</span><br><span class=\"line\">  g1-&gt;SetMarkerStyle(<span class=\"number\">21</span>);</span><br><span class=\"line\">  g1-&gt;SetMarkerSize(<span class=\"number\">1.1</span>);</span><br><span class=\"line\">  g1-&gt;Draw(<span class=\"string\">&quot;AP&quot;</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">ReadData <span class=\"title\">a2</span><span class=\"params\">(<span class=\"string\">&quot;./EJ200-140/data.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">  a2.GetData();</span><br><span class=\"line\"></span><br><span class=\"line\">  TGraph *gr2 = <span class=\"keyword\">new</span> TGraph(NMAX,xx,yy);</span><br><span class=\"line\">  gr2-&gt;SetLineColor(<span class=\"number\">38</span>);</span><br><span class=\"line\">  gr2-&gt;SetMarkerColor(kRed);</span><br><span class=\"line\">  gr2-&gt;SetMarkerStyle(<span class=\"number\">29</span>);</span><br><span class=\"line\">  gr2-&gt;SetMarkerSize(<span class=\"number\">1.5</span>);</span><br><span class=\"line\">  gr2-&gt;Draw(<span class=\"string\">&quot;P&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">ReadData <span class=\"title\">a3</span><span class=\"params\">(<span class=\"string\">&quot;./EJ200-180/data.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">  a3.GetData();</span><br><span class=\"line\"></span><br><span class=\"line\">  TGraph *gr3 = <span class=\"keyword\">new</span> TGraph(NMAX,xx,yy);</span><br><span class=\"line\"></span><br><span class=\"line\">  gr3-&gt;SetLineColor(<span class=\"number\">38</span>);</span><br><span class=\"line\">  gr3-&gt;SetMarkerColor(<span class=\"number\">6</span>);</span><br><span class=\"line\">  gr3-&gt;SetMarkerStyle(<span class=\"number\">8</span>);</span><br><span class=\"line\">  gr3-&gt;SetMarkerSize(<span class=\"number\">1.1</span>);</span><br><span class=\"line\">  gr3-&gt;Draw(<span class=\"string\">&quot;P&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//////////////////</span></span><br><span class=\"line\">  <span class=\"comment\">////</span></span><br><span class=\"line\">  <span class=\"comment\">//      elta = 1-exp(a*x) //拟合函数形式</span></span><br><span class=\"line\"></span><br><span class=\"line\">  TF1 *fun =<span class=\"keyword\">new</span> TF1(<span class=\"string\">&quot;#elta = 1-exp(A*x)&quot;</span>,<span class=\"string\">&quot;1.-exp([0]*x)&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">  fun-&gt;SetLineColor(kBlue);fun-&gt;SetLineStyle(<span class=\"number\">2</span>);</span><br><span class=\"line\">  g1-&gt;Fit(fun);</span><br><span class=\"line\"></span><br><span class=\"line\">  fun-&gt;SetLineColor(kRed);fun-&gt;SetLineStyle(<span class=\"number\">2</span>);</span><br><span class=\"line\">  gr2-&gt;Fit(fun);</span><br><span class=\"line\"></span><br><span class=\"line\">  fun-&gt;SetLineColor(<span class=\"number\">6</span>);fun-&gt;SetLineStyle(<span class=\"number\">2</span>);</span><br><span class=\"line\">  gr3-&gt;Fit(fun);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//////////////////</span></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">//  legend</span></span><br><span class=\"line\">  TLegend *lg=<span class=\"keyword\">new</span> TLegend(<span class=\"number\">0.6</span>,<span class=\"number\">0.65</span>,<span class=\"number\">0.88</span>,<span class=\"number\">0.85</span>);</span><br><span class=\"line\">  lg-&gt;SetTextFont(<span class=\"number\">62</span>);</span><br><span class=\"line\">  lg-&gt;SetTextAlign(<span class=\"number\">12</span>);</span><br><span class=\"line\">  lg-&gt;SetTextSize(<span class=\"number\">0.04</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(g1,<span class=\"string\">&quot;100keV&quot;</span>,<span class=\"string\">&quot;p&quot;</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(gr2,<span class=\"string\">&quot;140keV&quot;</span>,<span class=\"string\">&quot;p&quot;</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(gr3,<span class=\"string\">&quot;180keV&quot;</span>,<span class=\"string\">&quot;p&quot;</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(fun,<span class=\"string\">&quot; #eta = 1-exp(#mu *x)&quot;</span>,<span class=\"string\">&quot;l&quot;</span>);</span><br><span class=\"line\">  lg-&gt;Draw();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/c1.png\" alt=\"c1\"></p>\n<h3 id=\"2-3-python中的数据拟合实现\"><a href=\"#2-3-python中的数据拟合实现\" class=\"headerlink\" title=\"2.3 python中的数据拟合实现\"></a>2.3 python中的数据拟合实现</h3><p>python 中做数据分析常用的几个包<code>matplotlib,numpy,scipy,pandas</code></p>\n<ul>\n<li>scipy中的curve_fit函数</li>\n<li>lmfit中的fit函数</li>\n</ul>\n<p>下面从这两种包来拟合这两组数据。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2020/6/6 17:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Hubery-Lee  </span></span><br><span class=\"line\"><span class=\"comment\"># @Email   : hrbeulh@126.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##   case 1: curve_fit</span></span><br><span class=\"line\"><span class=\"comment\">##   case 2: lmfit</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"><span class=\"comment\"># Header</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.optimize <span class=\"keyword\">import</span> curve_fit</span><br><span class=\"line\"><span class=\"keyword\">from</span> lmfit <span class=\"keyword\">import</span> Model</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x, a</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1.</span> - np.exp(a * x)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Read data from text</span></span><br><span class=\"line\">x = np.linspace(<span class=\"number\">5</span>, <span class=\"number\">100</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">y1 = np.loadtxt(<span class=\"string\">&#x27;dataout1.txt&#x27;</span>)</span><br><span class=\"line\">y2 = np.loadtxt(<span class=\"string\">&#x27;dataout2.txt&#x27;</span>)</span><br><span class=\"line\">y3 = np.loadtxt(<span class=\"string\">&#x27;dataout3.txt&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#  plot data</span></span><br><span class=\"line\">plt.plot(x, y1, <span class=\"string\">&#x27;bo&#x27;</span>, label=<span class=\"string\">&#x27;100 keV&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y2, <span class=\"string\">&#x27;r*&#x27;</span>, label=<span class=\"string\">&#x27;140 keV&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y3, <span class=\"string\">&#x27;gx&#x27;</span>, label=<span class=\"string\">&#x27;180 keV&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## case 1:</span></span><br><span class=\"line\"><span class=\"comment\">## https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.curve_fit.html</span></span><br><span class=\"line\"><span class=\"comment\"># Fit for the parameters a of the function func:</span></span><br><span class=\"line\">popt1, pcov1 = curve_fit(func, x, y1)</span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class=\"line\">plt.plot(x, func(x, *popt1), <span class=\"string\">&#x27;b-&#x27;</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;100 keV fit: a=%5.3f&#x27;</span> % <span class=\"built_in\">tuple</span>(popt1))</span><br><span class=\"line\"></span><br><span class=\"line\">popt2, pcov2 = curve_fit(func, x, y2)</span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class=\"line\">plt.plot(x, func(x, *popt2), <span class=\"string\">&#x27;r-&#x27;</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;140 keV fit: a=%5.3f&#x27;</span> % <span class=\"built_in\">tuple</span>(popt2))</span><br><span class=\"line\"></span><br><span class=\"line\">popt3, pcov3 = curve_fit(func, x, y3)</span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class=\"line\">plt.plot(x, func(x, *popt3), <span class=\"string\">&#x27;g-&#x27;</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;180 keV fit: a=%5.3f&#x27;</span> % <span class=\"built_in\">tuple</span>(popt3))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # In the case of parameters a need be constrainted</span></span><br><span class=\"line\"><span class=\"comment\"># # Constrain the optimization to the region of</span></span><br><span class=\"line\"><span class=\"comment\"># # 0 &lt;= a &lt;= 3, 0 &lt;= b &lt;= 1 and 0 &lt;= c &lt;= 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># popt, pcov = curve_fit(func, xdata, ydata, bounds=(0, [3., 1., 0.5]))</span></span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.43708906, 1. , 0.35015434])</span></span><br><span class=\"line\"><span class=\"comment\"># plt.plot(xdata, func(xdata, *popt), &#x27;g--&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#          label=&#x27;fit: a=%5.3f, b=%5.3f, c=%5.3f&#x27; % tuple(popt))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## case 2:</span></span><br><span class=\"line\"><span class=\"comment\">## https://lmfit.github.io/lmfit-py/model.html</span></span><br><span class=\"line\"><span class=\"comment\"># Fitting</span></span><br><span class=\"line\">gmodel = Model(func)</span><br><span class=\"line\">result = gmodel.fit(y1, x=x, a=-<span class=\"number\">0.02</span>)  <span class=\"comment\"># Fit from initial values (5,5,1)</span></span><br><span class=\"line\">print(result.fit_report())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Plot</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(x, y1, &#x27;bo&#x27;, label=&#x27;raw data&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(x, result.init_fit, &#x27;b--&#x27;, label=&#x27;init_fit&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(x, result.best_fit, &#x27;k--&#x27;, label=&#x27;best_fit&#x27;)</span></span><br><span class=\"line\">plt.plot(x, result.best_fit, <span class=\"string\">&#x27;k--&#x27;</span>, label=<span class=\"string\">&#x27;100 keV lmfit&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># draw option</span></span><br><span class=\"line\"><span class=\"comment\"># Labels</span></span><br><span class=\"line\">plt.title(<span class=\"string\">r&#x27;Fitting Function $\\eta = 1.0-exp(a*x)$&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;x/mm&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">r&#x27;$\\eta$&#x27;</span>)  <span class=\"comment\"># 公式的添加 latex风格 https://matplotlib.org/tutorials/text/mathtext.html</span></span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">leg = plt.legend()  <span class=\"comment\"># remove the frame of Legend, personal choice</span></span><br><span class=\"line\">leg.get_frame().set_linewidth(<span class=\"number\">0.0</span>)  <span class=\"comment\"># remove the frame of Legend, personal choice</span></span><br><span class=\"line\"><span class=\"comment\"># leg.get_frame().set_edgecolor(&#x27;b&#x27;)  # change the color of Legend frame</span></span><br><span class=\"line\"><span class=\"comment\"># plt.show()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Export figurey</span></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;fit1.eps&#x27;, format=&#x27;eps&#x27;, dpi=1000)</span></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;fit1.pdf&#x27;, format=&#x27;pdf&#x27;, dpi=1000, figsize=(8, 6), facecolor=&#x27;w&#x27;, edgecolor=&#x27;k&#x27;)</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;myfit.jpg&#x27;</span>, <span class=\"built_in\">format</span>=<span class=\"string\">&#x27;jpg&#x27;</span>, dpi=<span class=\"number\">1000</span>, figsize=(<span class=\"number\">8</span>, <span class=\"number\">6</span>), facecolor=<span class=\"string\">&#x27;w&#x27;</span>, edgecolor=<span class=\"string\">&#x27;k&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/myfit.jpg\" alt=\"myfit\"></p>\n","categories":["数据拟合"],"tags":["root","matlab","python"]},{"title":"用VSCode的IDE调试CPP","url":"/2020/05/05/%E7%94%A8VSCode%E7%9A%84IDE%E8%B0%83%E8%AF%95CPP/","content":"<h1 id=\"💘VSCODE-IDE在C-C-项目编程中的使用\"><a href=\"#💘VSCODE-IDE在C-C-项目编程中的使用\" class=\"headerlink\" title=\"💘VSCODE IDE在C/C++项目编程中的使用\"></a>💘VSCODE IDE在C/C++项目编程中的使用</h1><h2 id=\"🌴IDE的作用\"><a href=\"#🌴IDE的作用\" class=\"headerlink\" title=\"🌴IDE的作用\"></a>🌴IDE的作用</h2><p>IDE的作用就是有用户交互界面的代码调试编辑器（也称集成开发环境，Integrated Development Environment）</p>\n<h3 id=\"💨c-c-编程主要基于两类编译器\"><a href=\"#💨c-c-编程主要基于两类编译器\" class=\"headerlink\" title=\"💨c/c++编程主要基于两类编译器\"></a>💨c/c++编程主要基于两类编译器</h3><ul>\n<li>gcc, <code>开源、更新较快</code></li>\n<li>visual studio,<code>微软全家桶</code></li>\n</ul>\n<p>所有linux系统的均是用gcc，linux系统对c/c++的支持更好。linux系统的核心代码基本是用c/c++编写的。</p>\n<p>windows系统上c/c++编程一般用<code>visual studio</code>,当然，为了用到与linux上一样的开源gcc编译器，可以在windows上安装<code>mingw</code>或者<code>cywin</code>两种中的任意一款编译器。</p>\n<h3 id=\"🛴gcc编译器的没有图形Debug界面\"><a href=\"#🛴gcc编译器的没有图形Debug界面\" class=\"headerlink\" title=\"🛴gcc编译器的没有图形Debug界面\"></a>🛴gcc编译器的没有图形Debug界面</h3><p>visual studio自带的调试界面，编程比较方便。gcc的调试需要用<code>gdb</code>,而gdb存在的缺陷是其没有采用命令行调试，需要记住的命令太多，但缺少图像界面，大大降低了编程人员的生成效率。</p>\n<p>由于gdb自身没有合适的IDE,项目配置通常用<code>makefile</code>。makefile继承linux系统下万物用命令行解决的风格。为了避免编写令人难懂的makefile文件，程序员开发了用于生成makefile的<code>cmake</code>工具 .</p>\n<p>gcc等属于开源社区的软件，特点是版本多，没有统一的标准。导致很多公司开发了各自的IDE，如，JetBrain 公司的<code>Cion</code>, 微软公司的<code>VSCode</code>和IBM公司的<code>eclipse</code>等。VSCode,Cion和Eclipse均是top5的c/c++编辑器。其中，VSCode是后起之秀，由微软2015年发布的快平台编辑器。网上介绍较多，再此不再细说，感兴趣的同志可以自己去百度或谷歌一下。下面将介绍VSCode的C++代码调试。</p>\n<h2 id=\"🚀VSCode\"><a href=\"#🚀VSCode\" class=\"headerlink\" title=\"🚀VSCode\"></a>🚀VSCode</h2><p>VSCode是一款IDE编辑器，注意是<code>编辑器</code>说白了就跟<code>记事本</code>一样，只是它额外具备配置编译环境和调试代码的功能。就跟notepat++很像。项目的编译环境配置文件通常由两个组成<code>task.json</code>和<code>launch.json</code>。</p>\n<ul>\n<li>task.json <code>负责配置生成可执行文件</code></li>\n<li>launch.json <code>负责调试</code></li>\n</ul>\n<p>具体VSCode的使用文件可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcw==\">官方说明文档<i class=\"fa fa-external-link-alt\"></i></span><br>下面分别从单文件调试和项目文件调试两个方面进行测试，具体测试文档可参看<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRLNHkxODdrbg==\">我的哔哩哔哩视频<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"🚲单文件，单步调试\"><a href=\"#🚲单文件，单步调试\" class=\"headerlink\" title=\"🚲单文件，单步调试\"></a>🚲单文件，单步调试</h3><ul>\n<li><p>配置生成可执行文件task.json</p>\n</li>\n<li><p>配置调试执行文件lauch.json</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class=\"line\">    &quot;tasks&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class=\"line\">            &quot;label&quot;: &quot;C&#x2F;C++: cpp.exe build active file&quot;,</span><br><span class=\"line\">            &quot;command&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\cpp.exe&quot;,</span><br><span class=\"line\">            &quot;args&quot;: [</span><br><span class=\"line\">                &quot;-g&quot;,</span><br><span class=\"line\">                &quot;$&#123;file&#125;&quot;,</span><br><span class=\"line\">                &quot;-o&quot;,</span><br><span class=\"line\">                &quot;$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;options&quot;: &#123;</span><br><span class=\"line\">                &quot;cwd&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin&quot;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &quot;problemMatcher&quot;: [</span><br><span class=\"line\">                &quot;$gcc&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;group&quot;: &quot;build&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 使用 IntelliSense 了解相关属性。 </span><br><span class=\"line\">    &#x2F;&#x2F; 悬停以查看现有属性的描述。</span><br><span class=\"line\">    &#x2F;&#x2F; 欲了解更多信息，请访问: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387</span><br><span class=\"line\">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class=\"line\">    &quot;configurations&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;name&quot;: &quot;g++.exe - 生成和调试活动文件&quot;,</span><br><span class=\"line\">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class=\"line\">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class=\"line\">            &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,</span><br><span class=\"line\">            &quot;args&quot;: [],</span><br><span class=\"line\">            &quot;stopAtEntry&quot;: false,</span><br><span class=\"line\">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class=\"line\">            &quot;environment&quot;: [],</span><br><span class=\"line\">            &quot;externalConsole&quot;: false,</span><br><span class=\"line\">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class=\"line\">            &quot;miDebuggerPath&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\gdb.exe&quot;,</span><br><span class=\"line\">            &quot;setupCommands&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class=\"line\">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class=\"line\">                    &quot;ignoreFailures&quot;: true</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;preLaunchTask&quot;: &quot;g++.exe build active file&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"🚍项目文件，单步调试\"><a href=\"#🚍项目文件，单步调试\" class=\"headerlink\" title=\"🚍项目文件，单步调试\"></a>🚍项目文件，单步调试</h3><ul>\n<li>CMake <code>负责配置生成可执行文件</code></li>\n<li>launch.json <code>负责调试</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cmake_minimum_required(VERSION 3.10.0)</span><br><span class=\"line\"># 定义项目名称变量PROJECT_NAME, 默认值为demo</span><br><span class=\"line\">set(PROJECT_NAME demo)</span><br><span class=\"line\"></span><br><span class=\"line\">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">set(CMAKE_CXX_STANDARD_REQUIRED 14)</span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Setup include directory for this project</span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">include_directories($&#123;PROJECT_SOURCE_DIR&#125;&#x2F;include)</span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Locate sources and headers for this project</span><br><span class=\"line\"># NB: headers are included so they will show up in IDEs</span><br><span class=\"line\">#</span><br><span class=\"line\">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;src&#x2F;*.cc)</span><br><span class=\"line\">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;include&#x2F;*.h)</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定生成目标</span><br><span class=\"line\">add_executable($&#123;PROJECT_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 使用 IntelliSense 了解相关属性。 </span><br><span class=\"line\">    &#x2F;&#x2F; 悬停以查看现有属性的描述。</span><br><span class=\"line\">    &#x2F;&#x2F; 欲了解更多信息，请访问: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387</span><br><span class=\"line\">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class=\"line\">    &quot;configurations&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;name&quot;: &quot;(gdb) 启动&quot;,</span><br><span class=\"line\">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class=\"line\">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class=\"line\">            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;\\\\build\\\\demo.exe&quot;,</span><br><span class=\"line\">            &quot;args&quot;: [],</span><br><span class=\"line\">            &quot;stopAtEntry&quot;: false,</span><br><span class=\"line\">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class=\"line\">            &quot;environment&quot;: [],</span><br><span class=\"line\">            &quot;externalConsole&quot;: false,</span><br><span class=\"line\">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class=\"line\">            &quot;miDebuggerPath&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\gdb.exe&quot;,</span><br><span class=\"line\">            &quot;setupCommands&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class=\"line\">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class=\"line\">                    &quot;ignoreFailures&quot;: true</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["编程工具学习与应用"],"tags":["VSCode"]},{"title":"科学上网方法","url":"/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/","content":"<h1 id=\"🚚科学上网方法\"><a href=\"#🚚科学上网方法\" class=\"headerlink\" title=\"🚚科学上网方法\"></a>🚚科学上网方法</h1><h2 id=\"⚓google-bing检索\"><a href=\"#⚓google-bing检索\" class=\"headerlink\" title=\"⚓google/bing检索\"></a>⚓google/bing检索</h2><ul>\n<li><code>谷歌上网助手</code></li>\n<li><code>iGuge插件</code></li>\n</ul>\n<p>安装方法：</p>\n<p><img src=\"/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/a.png\" alt></p>\n<h2 id=\"🚍文献搜索神器\"><a href=\"#🚍文献搜索神器\" class=\"headerlink\" title=\"🚍文献搜索神器\"></a>🚍文献搜索神器</h2><p><a href=\"https://www.researcher-app.com/\"><code>researcher</code></a></p>\n","categories":["软件体验"],"tags":["google"]},{"title":"迭代重建算法的基本思想","url":"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/","content":"<h1 id=\"迭代重建算法的基本思想\"><a href=\"#迭代重建算法的基本思想\" class=\"headerlink\" title=\"迭代重建算法的基本思想\"></a>迭代重建算法的基本思想</h1><h2 id=\"基本思想\"><a href=\"#基本思想\" class=\"headerlink\" title=\"基本思想\"></a>基本思想</h2><p>图像重建除了通过中心切片定理来实现外，还可以通过解线性方程组来得到。对于二维图像就是像素，对于三维图像就是体素。</p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604225353193.png\" alt=\"image-20200604225353193\"></p>\n<p>$\\left{\\begin{array}{c}x_{1}+x_{2}+x_{3}=p_{1} \\ x_{4}+x_{5}+x_{6}=p_{2} \\ x_{7}+x_{8}+x_{9}=p_{3} \\ x_{3}+x_{6}+x_{9}=p_{4} \\ x_{2}+x_{5}+x_{8}=p_{5} \\ x_{1}+x_{4}+x_{7}=p_{6} \\ 2(\\sqrt{2}-1) x_{4}+(2-\\sqrt{2}) x_{7}+2(\\sqrt{2}-1) x_{8}=p_{7} \\ \\sqrt{2} x_{1}+\\sqrt{2} x_{5}+\\sqrt{2} x_{9}=p_{8} \\ 2(\\sqrt{2}-1) x_{2}+(2-\\sqrt{2}) x_{3}+2(\\sqrt{2}-1) x_{6}=p_{9}\\end{array}\\right.$</p>\n<p>这个方程组也可以用矩阵的形式写出<br>$$<br>AX=p<br>$$<br>其中，$X=\\left[x_{1}, x_{2}, \\ldots, x_{9}\\right]^{T}, \\quad P=\\left[p_{1}, p_{2}, \\ldots, p_{9}\\right]^{T}$迭代算法的思想使将$AX=p$变换成，迭代形式<br>$$<br>X^{(i+1)}=GX^{(i)}+b<br>$$<br>通过不同的变换方式变成迭代格式，就长生了不同的的迭代算法。比如：</p>\n<h2 id=\"常用迭代算法\"><a href=\"#常用迭代算法\" class=\"headerlink\" title=\"常用迭代算法\"></a>常用迭代算法</h2><h3 id=\"代数迭代重建技术（ARO，algebraic-reconstruction-technique\"><a href=\"#代数迭代重建技术（ARO，algebraic-reconstruction-technique\" class=\"headerlink\" title=\"代数迭代重建技术（ARO，algebraic reconstruction technique)\"></a>代数迭代重建技术（ARO，algebraic reconstruction technique)</h3><p>ART 算法是个“行运算”算法。它每次考虑一条射线就更新一次图像。ART 算法的表达式是 </p>\n<p>$$<br>X^{下一个}=X^{\\text {当前}}-\\frac{A_{i} X^{\\text {当前}}-p_{i}}{\\left|A_{i}\\right|^{2}} A_{i}^{T}<br>$$<br>$A_iX$ 执行的是沿着第$i$条射线的投影运算，$p_i$ 是在第 $i $个探测像元上测到的投影数据，$\\left|A_{i}\\right|^{2}=\\sum_{j} a_{i j}^{2}$是沿着第 $i$ 条射线上各“贡献”因子的平方和，$cA^{T}<em>{i}$ 是把数值 $c $沿着第$ i$ 条射线做反投影。如果我们把上面的算法改写成下面的形式 .<br>$$<br>X^{\\text {next }}=X^{\\text {current }}-\\left(\\frac{A</em>{i} X^{\\text {current }}}{\\left|A_{i}\\right|}-\\frac{p_{i}}{\\left|A_{i}\\right|}\\right) \\frac{A_{i}^{T}}{\\left|A_{i}\\right|}<br>$$<br>该算法的几何意义就比较明显了:</p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604233955301.png\" alt=\"image-20200604233955301\"></p>\n<h3 id=\"最大期望极大似然算法（ML-EM，Maximum-Likelihood-Expectation-Maximization）\"><a href=\"#最大期望极大似然算法（ML-EM，Maximum-Likelihood-Expectation-Maximization）\" class=\"headerlink\" title=\"最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）\"></a>最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）</h3><p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234408677.png\" alt=\"image-20200604234408677\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234429947.png\" alt=\"image-20200604234429947\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234506653.png\" alt=\"image-20200604234506653\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234525715.png\" alt=\"image-20200604234525715\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234558326.png\" alt=\"image-20200604234558326\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234618809.png\" alt=\"image-20200604234618809\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234633400.png\" alt=\"image-20200604234633400\"></p>\n<p><strong>参考文献：</strong></p>\n<p>[1] 曾更生，医学图像重建</p>\n","categories":["图像重建"],"tags":["迭代重建"]},{"title":"Gean4 Data Read Out Methods","url":"/2018/09/17/G4DataReadOutMethods/","content":"<h2 id=\"Introduction-of-Data-Aquisition-Methods-in-Geant4-Simulation\"><a href=\"#Introduction-of-Data-Aquisition-Methods-in-Geant4-Simulation\" class=\"headerlink\" title=\"Introduction of Data Aquisition Methods in Geant4 Simulation\"></a>Introduction of Data Aquisition Methods in Geant4 Simulation</h2><ul>\n<li>G4ScoringManager</li>\n<li>SteppingAction</li>\n<li>TrackingAction</li>\n<li>SensitiveDetctor + HitCollection</li>\n</ul>\n<p><img src=\"/2018/09/17/G4DataReadOutMethods/Geant4%E6%95%B0%E6%8D%AE%E8%BE%93%E5%87%BA%E6%96%B9%E5%BC%8F.png\" alt=\"Geant4 Data Read Out Method\"></p>\n<p>More detail information about these methods to get data can you refer to <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZW5rdS5iYWlkdS5jb20vdmlldy9mMTNmNDcyNWJlMjM0ODJmYjVkYTRjNjMuaHRtbA==\">this site<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">A: To get the information at tracking time in a given volume A, one can adopt either one or a combination of the following strategies:</span><br><span class=\"line\"></span><br><span class=\"line\">1.  If the geometry is simple enough, and wish to score some commonly used physics quantities (e.g. energy deposition, dose, flux, etc.), just activate G4ScoringManager in your main program, and use the scorer-based UI commands to transform volume A into a scorer.</span><br><span class=\"line\"></span><br><span class=\"line\">    See Option 6 below, and the example examples&#x2F;extended&#x2F;runAndEvent&#x2F;RE03.</span><br><span class=\"line\"></span><br><span class=\"line\">2.  Through the SteppingAction, check that the particle is inside volume A and do whatever needed. Hints can be found in the previous chapter of this FAQ document.</span><br><span class=\"line\"></span><br><span class=\"line\">    Usually, the hits containers and histograms are attributes of a Track, Event or Run and can be managed through either a TrackingAction, EventAction and&#x2F;or RunAction and eventually messaging their pointer to the SteppingAction.</span><br><span class=\"line\"></span><br><span class=\"line\">    A similar approach is illustrated in examples&#x2F;basic&#x2F;B2, B4, extended&#x2F;electromagnetic, optical, and many others…</span><br><span class=\"line\"></span><br><span class=\"line\">3.  In DetectorConstruction, by declaring volume A as a SensitiveDetector. At stepping time, the Geant4 kernel will automatically check that a particle is inside volume A and will handle the control to a specific function G4VSensitiveDetector::ProcessHits(). It is just necessary to instanciate a class inherited from G4VSensitiveDetector, say VolumeA_SD, and do whatever needed by implementing the function VolumeA_SD::ProcessHits(), as described in Option 2 above.</span><br><span class=\"line\"></span><br><span class=\"line\">4.  In addition to Option 3 above, should create a HitsCollection to store the information. A HitsCollection can be created in VolumeA_SD::Initialize(). A Hit can be created or filled in VolumeA_SD::ProcessHits(). Additional operations on HitsCollection can be performed in VolumeA_SD::EndOfEvent().</span><br><span class=\"line\"></span><br><span class=\"line\">    This approach is illustrated in examples&#x2F;basic&#x2F;B2, B4 and extended&#x2F;analysis, extended&#x2F;runAndEvent&#x2F;RE01, etc…</span><br><span class=\"line\"></span><br><span class=\"line\">5.  In DetectorConstruction, volume A can be declared as SensitiveDetector, and one or several pre-defined scorers can be attached to volume A. In this case, neither a SteppingAction nor a spcific VolumeA_SD sensitive detector is needed any longer. It is just necessary to create a dedicated scorer, e.g. MyRunScorer, inherited from G4Run, and handle the HitsCollections within MyRunScorer::RecordEvent(). MyRunScorer itself can be instanciated from RunAction::GenerateRun().</span><br><span class=\"line\"></span><br><span class=\"line\">    This approach is illustrated in examples&#x2F;novice&#x2F;N07, extended&#x2F;runAndEvent&#x2F;RE02.</span><br><span class=\"line\"></span><br><span class=\"line\">6.  A set of build-in scorer-based UI commands allows to perform most possible operations described through the previous Option 5 directly from run-time macros.</span><br><span class=\"line\"></span><br><span class=\"line\">    See example extended&#x2F;runAndEvent&#x2F;RE03.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Detector-Response\"><a href=\"#Detector-Response\" class=\"headerlink\" title=\"Detector Response\"></a>Detector Response</h2><p>对于Geant4模拟数据输出与存储可以参看<code>examples/basic/B4</code>,对于不同的数据输出方式，看该文件夹下的<code>README</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">6- DETECTOR RESPONSE</span><br><span class=\"line\"></span><br><span class=\"line\">  The energy deposit and track lengths of the charged particles are recorded on</span><br><span class=\"line\">  an event by event basis in the Absober and Gap layers.</span><br><span class=\"line\">  </span><br><span class=\"line\">  In order to demonstrate several possible ways of data scoring,</span><br><span class=\"line\">  the example is provided in four variants:</span><br><span class=\"line\">  </span><br><span class=\"line\">  Variant a: User Actions</span><br><span class=\"line\">  </span><br><span class=\"line\">    These 4 quantities are data members of the B4aEventAction class.  </span><br><span class=\"line\">    They are collected step by step in </span><br><span class=\"line\">    B4aSteppingAction::UserSteppingAction(), and passed to the event action</span><br><span class=\"line\">    via two methods: B4aEventAction::AddAbs() and B4aEventAction::AddGap().</span><br><span class=\"line\">  </span><br><span class=\"line\">    In B4aEventAction::EndOfEventAction(), these quantities are printed and </span><br><span class=\"line\">    filled in H1D histograms and ntuple to accumulate statistic and compute </span><br><span class=\"line\">    dispersion.</span><br><span class=\"line\">    </span><br><span class=\"line\">  Variant b: User data object </span><br><span class=\"line\">  </span><br><span class=\"line\">    In order to avoid dependencies between action classes, a user object</span><br><span class=\"line\">    B4bRunData, derived from G4Run, is defined with data members needed </span><br><span class=\"line\">    for the accounted information. </span><br><span class=\"line\">    In order to reduce the number of data members a 2-dimensions array</span><br><span class=\"line\">    is introduced for each quantity.</span><br><span class=\"line\">    Then the quantities are collected step by step in user action classes:</span><br><span class=\"line\">    B4bSteppingAction::UserSteppingAction() and </span><br><span class=\"line\">    B4bEventAction::EndOfEventAction() in a similar way as in variant a. </span><br><span class=\"line\">    </span><br><span class=\"line\">  Variant c: Hits and Sensitive detectors</span><br><span class=\"line\">  </span><br><span class=\"line\">    In this option, the physics quantities are accounted using the hits</span><br><span class=\"line\">    and sensitive detectors framework defined in the Geant4 kernel.  </span><br><span class=\"line\">    The physics quantities are stored in B4cCalorHit via two B4cCalorimeterSD</span><br><span class=\"line\">    objects, one associated with the Absorber volume and another one with Gap</span><br><span class=\"line\">    in B4cDetectorConstruction::ConstructSDandField().</span><br><span class=\"line\">    </span><br><span class=\"line\">    In contrary to the B2 example (Tracker) where a new hit is created</span><br><span class=\"line\">    with each track passing the sensitive volume (in the calorimeter), only one</span><br><span class=\"line\">    hit is created for each calorimeter layer and one more hit to account for</span><br><span class=\"line\">    the total quantities in all layers. In addition to the variants a and b,</span><br><span class=\"line\">    the quantities per each layer are also available in addition to the total </span><br><span class=\"line\">    quantities.</span><br><span class=\"line\">    </span><br><span class=\"line\">  Variant d: Scorer</span><br><span class=\"line\">   </span><br><span class=\"line\">    In this option, the Geant4 scorers which are defined on the top of hits</span><br><span class=\"line\">    and sensitive detectors Geant4 framework are used.  </span><br><span class=\"line\">    In practice this means that the user does not need to define hits and sensitive</span><br><span class=\"line\">    detector classes but rather uses the classes already defined</span><br><span class=\"line\">    in Geant4. In this example, the G4MultiFunctionalDetector with</span><br><span class=\"line\">    G4PSEnergyDeposit and G4PSTrackLength primitive scores are used (see</span><br><span class=\"line\">    B4dDetectorConstruction::ConstructSDandField()).</span><br><span class=\"line\">   </span><br><span class=\"line\">    Also with this approach, the quantities per each layer are available </span><br><span class=\"line\">    in addition to the total quantities.</span><br><span class=\"line\">      </span><br><span class=\"line\"> 7- HISTOGRAMS</span><br><span class=\"line\"></span><br><span class=\"line\">  The analysis tools are used to accumulate statistics and compute the dispersion</span><br><span class=\"line\">  of the energy deposit and track lengths of the charged particles.</span><br><span class=\"line\">  H1D histograms are created in B4[b]RunAction::B4[b]RunAction() for the </span><br><span class=\"line\">  following quantities:</span><br><span class=\"line\">  - Energy deposit in absorber</span><br><span class=\"line\">  - Energy deposit in gap</span><br><span class=\"line\">  - Track length in absorber</span><br><span class=\"line\">  - Track length in gap</span><br><span class=\"line\">  The same values are also saved in an ntuple.</span><br><span class=\"line\"></span><br><span class=\"line\">  The histograms and the ntuple are saved in the output file in a format</span><br><span class=\"line\">  according to a technology selected in B4Analysis.hh, the default in this example</span><br><span class=\"line\">  is ROOT.</span><br><span class=\"line\"></span><br><span class=\"line\">  The accumulated statistic and computed dispersion is printed at the end of </span><br><span class=\"line\">  run, in B4RunAction::EndOfRunAction().</span><br><span class=\"line\">  When running in multi-threading mode, the histograms and the ntuple accumulated </span><br><span class=\"line\">  on threads are merged in a single output file. While merging of histograms is</span><br><span class=\"line\">  performed by default, merging of ntuples is explicitly activated in the B4RunAction </span><br><span class=\"line\">  constructor.</span><br><span class=\"line\"></span><br><span class=\"line\">  The ROOT histograms and ntuple can be plotted with ROOT using the plotHisto.C</span><br><span class=\"line\">  and plotNtuple.C macros.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Geant4-Simulation-Data-ReadOut-by-SensitiveDetctor-HitCollection-Methods\"><a href=\"#Geant4-Simulation-Data-ReadOut-by-SensitiveDetctor-HitCollection-Methods\" class=\"headerlink\" title=\"Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods\"></a>Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods</h2><h3 id=\"RunAction\"><a href=\"#RunAction\" class=\"headerlink\" title=\"RunAction\"></a>RunAction</h3><ul>\n<li>RunAction()</li>\n<li>~RunAction()</li>\n<li>BegingOfRunAction(const G4Run *)</li>\n<li>EndOfRunAction(const G4Run *)</li>\n</ul>\n<p>该方式的数据输出与存储参看<code>examples/basic/B4/B4c</code></p>\n<h4 id=\"RunAction-构造函数\"><a href=\"#RunAction-构造函数\" class=\"headerlink\" title=\"RunAction() 构造函数\"></a>RunAction() 构造函数</h4><p>打开和关闭数据存储文件，在RunAction中；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; set printing event number per each event</span><br><span class=\"line\">G4RunManager::GetRunManager()-&gt;SetPrintProgress(1);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Create analysis manager</span><br><span class=\"line\">&#x2F;&#x2F; The choice of analysis technology is done via selectin of a namespace</span><br><span class=\"line\">&#x2F;&#x2F; in B4Analysis.hh</span><br><span class=\"line\">auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\">G4cout &lt;&lt; &quot;Using &quot; &lt;&lt; analysisManager-&gt;GetType() &lt;&lt; G4endl;</span><br><span class=\"line\"></span><br><span class=\"line\">analysisManager-&gt;SetVerboseLevel(1);</span><br><span class=\"line\">analysisManager-&gt;SetNtupleMerging(true);  </span><br><span class=\"line\">&#x2F;&#x2F; Note: merging ntuples is available only with Root output</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Book ntuples\t   </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;Declare ntuples</span><br><span class=\"line\">&#x2F;&#x2F; Creating 1st ntuple</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">analysisManager-&gt;CreateNtuple(&quot;Det&quot;, &quot;xyz in Det&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleSColumn(&quot;SDName&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;EventID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;ParentID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;TrackID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;StepID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;Edep&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;PosX&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;PosY&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;PosZ&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;GlobalT&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;LocalT&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;ProperT&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;Ekin&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;Velocity&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentX&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentY&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentZ&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleSColumn(&quot;ProC&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">analysisManager-&gt;FinishNtuple();</span><br></pre></td></tr></table></figure>\n<p>主要设置模拟运行参数，运行显示、多线程文件合并等；</p>\n<ul>\n<li><code>注意</code><br><code>B4c</code>中将内容目录也在构造函数中创建，文件的创建在BeginOfRunAction()中。</li>\n</ul>\n<h4 id=\"RunAction-析构函数\"><a href=\"#RunAction-析构函数\" class=\"headerlink\" title=\"~RunAction() 析构函数\"></a>~RunAction() 析构函数</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete G4AnalysisManager::Instance(); </span><br></pre></td></tr></table></figure>\n<h4 id=\"BeginOfRunAction-const-G4Run\"><a href=\"#BeginOfRunAction-const-G4Run\" class=\"headerlink\" title=\"BeginOfRunAction(const G4Run*)\"></a>BeginOfRunAction(const G4Run*)</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; Get analysis manager</span><br><span class=\"line\">auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Open an output file</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">G4String fileName &#x3D; &quot;APNIS&quot;;</span><br><span class=\"line\">analysisManager-&gt;OpenFile(fileName);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>新建储存文件并打开文件</p>\n<h4 id=\"EndOfRunAction-const-G4Run\"><a href=\"#EndOfRunAction-const-G4Run\" class=\"headerlink\" title=\"EndOfRunAction(const G4Run*)\"></a>EndOfRunAction(const G4Run*)</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; save histograms &amp; ntuple</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">analysisManager-&gt;Write();</span><br><span class=\"line\">analysisManager-&gt;CloseFile();</span><br></pre></td></tr></table></figure>\n<p>一个Run结束后的写文件</p>\n<h3 id=\"EventAction\"><a href=\"#EventAction\" class=\"headerlink\" title=\"EventAction\"></a>EventAction</h3><p>采用SD+HitCollection方式存储数据，记录的是一个Event的所有Hit点的数据，那么Geant4中数据的存储就在EventAction中进行；</p>\n<p>当然，如果你采用StepAction方式存储数据，你只需在StepAction中去存储数据就行了；</p>\n<ul>\n<li>EventAction()</li>\n<li>~EventAction()</li>\n<li>BeginOfEventAction(const G4Event*)</li>\n<li>EndOfEventAction(const G4Event*)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">• beginOfEventAction() This method is invoked before converting the primary particles to G4Track</span><br><span class=\"line\">objects. A typical use of this method would be to initialize and&#x2F;or book histograms for a particular event.</span><br><span class=\"line\">• endOfEventAction() This method is invoked at the very end of event processing. It is typically used for</span><br><span class=\"line\">a simple analysis of the processed event. If the user wants to keep the currently processing event until</span><br><span class=\"line\">the end of the current run, the user can invoke fpEventManager-&gt;KeepTheCurrentEvent(); so</span><br><span class=\"line\">that it is kept in G4Run object. This should be quite useful if you simulate quite many events and want to</span><br><span class=\"line\">visualize only the most interest ones after the long execution. Given the memory size of an event and its</span><br><span class=\"line\">contents may be large, it is the user’s responsibility not to keep unnecessary events.</span><br></pre></td></tr></table></figure>\n<h4 id=\"EndOfEventAction-const-G4Event\"><a href=\"#EndOfEventAction-const-G4Event\" class=\"headerlink\" title=\"EndOfEventAction(const G4Event*)\"></a>EndOfEventAction(const G4Event*)</h4><p>在每个Event结束时，将Hit数据存储写到存储文件中。首先获取这个Event有多少个HitCollection,（HitCollection编号HCID在Event开始前获得，在BegingOfEventAction()中定义），然后根据HCID查找对应的HitCollection，根据不同HitCollection的大小提取数据并写入到文件；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4HCofThisEvent * HCE &#x3D; event-&gt;GetHCofThisEvent();&#x2F;&#x2F;获得Event结束时，所有的HitCollection</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;根据HitCollecitonID名称，获取不同的CollectionID</span><br><span class=\"line\">if(HCE)&#123;</span><br><span class=\"line\">PrimaryHC &#x3D; (PLANETOCOSPrimaryHitsCollection*)(HCE-&gt;GetHC(primaryCollID));</span><br><span class=\"line\">FluxHC &#x3D; (PLANETOCOSFluxHitsCollection*)(HCE-&gt;GetHC(fluxdetectorCollID));</span><br><span class=\"line\">&#x2F;&#x2F;FluxHC &#x3D; (PLANETOCOSFluxHitsCollection*)(HCE-&gt;GetHC(1));</span><br><span class=\"line\">&#x2F;&#x2F;G4cout&lt;&lt;&quot;ANALYSE1&quot;&lt;&lt;std::endl;</span><br><span class=\"line\">EdepHC &#x3D; (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(edepCollID));</span><br><span class=\"line\">SoilEdepHC &#x3D; (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(edepSoilCollID));</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;EdepHC &#x3D; (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(2));</span><br><span class=\"line\">PostTrackHC &#x3D; (PLANETOCOSPostTrackHitsCollection*)(HCE-&gt;GetHC(post_trackCollID));</span><br><span class=\"line\">&#x2F;&#x2F;PostTrackHC &#x3D; (PLANETOCOSPostTrackHitsCollection*)(HCE-&gt;GetHC(3));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"BeginOfEventAction-const-G4Event\"><a href=\"#BeginOfEventAction-const-G4Event\" class=\"headerlink\" title=\"BeginOfEventAction(const G4Event*)\"></a>BeginOfEventAction(const G4Event*)</h4><p>在Event开始前的行为，可以写在这个函数中；如下，获得不同HitCollection的编码HCID；注意，不同的HitCollection 对应不同的SD；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"> G4SDManager * SDman &#x3D; G4SDManager::GetSDMpointer();</span><br><span class=\"line\"> if(edepCollID&lt;0||primaryCollID&lt;0||fluxdetectorCollID&lt;0 ||post_trackCollID &lt;0 || edepSoilCollID&lt;0)&#123;</span><br><span class=\"line\"> \tedepCollID &#x3D; SDman-&gt;GetCollectionID(&quot;edepCol&quot;);</span><br><span class=\"line\">edepSoilCollID &#x3D; SDman-&gt;GetCollectionID(&quot;edepSoilCol&quot;);</span><br><span class=\"line\">primaryCollID &#x3D; SDman-&gt;GetCollectionID(&quot;primaryCol&quot;);</span><br><span class=\"line\">  \tfluxdetectorCollID &#x3D; SDman-&gt;GetCollectionID(&quot;detCol&quot;);</span><br><span class=\"line\">post_trackCollID &#x3D; SDman-&gt;GetCollectionID(&quot;post_trackCol&quot;);</span><br><span class=\"line\"> &#125; </span><br></pre></td></tr></table></figure>\n<p>当不考虑不同的SD，对所以SD的detector的响应都一样时采用如下方法读取数据；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">void APNISEventAction::EndOfEventAction(const G4Event* event)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4HCofThisEvent * hce &#x3D; event-&gt;GetHCofThisEvent();</span><br><span class=\"line\">  if (!hce) &#123;</span><br><span class=\"line\">      G4ExceptionDescription msg;</span><br><span class=\"line\">      msg &lt;&lt; &quot;No hits collection of this event found.&quot; &lt;&lt; G4endl; </span><br><span class=\"line\">      G4Exception(&quot;APNISEventAction::EndOfEventAction()&quot;,</span><br><span class=\"line\">                  &quot;APNISCode001&quot;, JustWarning, msg);</span><br><span class=\"line\">      return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F;get hit collection</span><br><span class=\"line\">  if(hce)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      size_t nHCE&#x3D;hce-&gt;GetCapacity();</span><br><span class=\"line\">      for(size_t i&#x3D;0;i&lt;nHCE;i++)&#123;&#x2F;&#x2F;多个SD时用</span><br><span class=\"line\">  \tAPNISTrackHitsCollection *HC &#x3D;0;</span><br><span class=\"line\">      HC &#x3D; (APNISTrackHitsCollection *)(hce-&gt;GetHC(i));</span><br><span class=\"line\">      if(HC) OneHitOrder(HC);&#x2F;&#x2F;写数据\t</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">void APNISEventAction::OneHitOrder(APNISTrackHitsCollection*HC)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">  &#x2F;&#x2F;</span><br><span class=\"line\">  &#x2F;&#x2F; Fill histograms &amp; ntuple</span><br><span class=\"line\">  &#x2F;&#x2F;</span><br><span class=\"line\">  &#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; get analysis manager</span><br><span class=\"line\">  auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F;analyse</span><br><span class=\"line\">  G4int n_hit &#x3D; HC-&gt;entries();</span><br><span class=\"line\">  for(G4int i&#x3D;0;i&lt;n_hit;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      G4String SDName &#x3D;(*HC)[i]-&gt;GetSDName();</span><br><span class=\"line\">      G4int    EventID&#x3D;(*HC)[i]-&gt;GetEventID();&#x2F;&#x2F;</span><br><span class=\"line\">      G4int    ParentID&#x3D;(*HC)[i]-&gt;GetParentID();&#x2F;&#x2F;</span><br><span class=\"line\">      G4int    TrackID&#x3D;(*HC)[i]-&gt;GetTrackID();&#x2F;&#x2F;</span><br><span class=\"line\">      G4int    StepID&#x3D;(*HC)[i]-&gt;GetStepID();&#x2F;&#x2F;       &#x2F;&#x2F; Total steps number up to now</span><br><span class=\"line\">      G4double fEdep&#x3D;(*HC)[i]-&gt;GetEdep();</span><br><span class=\"line\">      G4ThreeVector fPos&#x3D;(*HC)[i]-&gt;GetPos();</span><br><span class=\"line\">      G4double GlobalTime&#x3D;(*HC)[i]-&gt;GetGlobalTime();&#x2F;&#x2F;                   &#x2F;&#x2F;Time since event is created</span><br><span class=\"line\">      G4double LocalTime&#x3D;(*HC)[i]-&gt;GetLocalTime();&#x2F;&#x2F;                  &#x2F;&#x2F; Time since track is created</span><br><span class=\"line\">      G4double ProperTime&#x3D;(*HC)[i]-&gt;GetProperTime();&#x2F;&#x2F;            &#x2F;&#x2F; Time since track is created (in rest frame of particle)</span><br><span class=\"line\">      G4double Ekin&#x3D;(*HC)[i]-&gt;GetEkin();&#x2F;&#x2F;                    </span><br><span class=\"line\">      G4double Velocity&#x3D;(*HC)[i]-&gt;GetVelocity();&#x2F;&#x2F;</span><br><span class=\"line\">      G4ThreeVector MomentumDirection &#x3D; (*HC)[i]-&gt;GetMomentumDirection();      &#x2F;&#x2F; Direction of momentum </span><br><span class=\"line\">      G4String CreatorProcess&#x3D;(*HC)[i]-&gt;GetCreatorProcess();&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#x2F;&#x2F;塞选思路</span><br><span class=\"line\"></span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      &#x2F;&#x2F;存储数据</span><br><span class=\"line\">      &#x2F;&#x2F; fill ntuple</span><br><span class=\"line\">      G4int Count&#x3D;0;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleSColumn(Count,SDName);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,EventID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,ParentID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,TrackID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,StepID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fEdep&#x2F;MeV);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.x()&#x2F;m);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.y()&#x2F;m);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.z()&#x2F;m);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,GlobalTime&#x2F;s);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,LocalTime&#x2F;s);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,ProperTime&#x2F;s);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,Ekin&#x2F;MeV);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,Velocity&#x2F;(m&#x2F;s));Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.x());Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.y());Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.z());Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleSColumn(Count,CreatorProcess);Count++;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#x2F;&#x2F; analysisManager-&gt;FillNtupleIColumn(Count,);Count++;</span><br><span class=\"line\">      &#x2F;&#x2F; analysisManager-&gt;FillNtupleDColumn(Count,);Count++;</span><br><span class=\"line\">      &#x2F;&#x2F; analysisManager-&gt;FillNtupleSColumn(Count,);Count++;</span><br><span class=\"line\"></span><br><span class=\"line\">      analysisManager-&gt;AddNtupleRow();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hit\"><a href=\"#Hit\" class=\"headerlink\" title=\"Hit\"></a>Hit</h3><p>参考Book for applicaiton中的4.4 <span class=\"exturl\" data-url=\"aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvaGl0Lmh0bWw=\">Hits<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>A hit is a snapshot of the physical interaction of a track in the sensitive region of a detector. In it you can store<br>information associated with a G4Step object. This information can be</p>\n<ul>\n<li>the position and time of the step,</li>\n<li>the momentum and energy of the track,</li>\n<li>the energy deposition of the step,</li>\n<li>geometrical information,</li>\n<li>or any combination of the above.</li>\n</ul>\n<p><code>简而言之</code></p>\n<ul>\n<li>G4中的Hit &lt;==&gt; C++中的vector  ，G4Allocator会给Hit分配内存空间；</li>\n<li>G4中的Map &lt;==&gt; C++中的map</li>\n</ul>\n<h4 id=\"Hit-hh头文件结构\"><a href=\"#Hit-hh头文件结构\" class=\"headerlink\" title=\"Hit.hh头文件结构\"></a>Hit.hh头文件结构</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">APNISTrackHit();</span><br><span class=\"line\">APNISTrackHit(const APNISTrackHit &amp;right);</span><br><span class=\"line\">virtual ~APNISTrackHit();</span><br><span class=\"line\">&#x2F;&#x2F;operator</span><br><span class=\"line\">const APNISTrackHit&amp; operator&#x3D;(const APNISTrackHit &amp;right);</span><br><span class=\"line\">G4int operator &#x3D;&#x3D;(const APNISTrackHit &amp;right)const;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void *operator new(size_t);</span><br><span class=\"line\">inline void operator delete(void *aHit);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;获取数据</span><br><span class=\"line\">inline void SetSDName(G4String name)&#123;SDName&#x3D;name;&#125;</span><br><span class=\"line\">inline const G4String&amp; GetSDName() const&#123;return SDName;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetEventID(G4int id)&#123;EventID&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetEventID() const&#123;return EventID;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetParentID(G4int id)&#123;ParentID&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetParentID() const&#123;return ParentID;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetTrackID(G4int id)&#123;TrackID&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetTrackID() const&#123;return TrackID;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetStepID(G4int id)&#123;CurrentStepNumber&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetStepID() const&#123;return CurrentStepNumber;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetEdep(G4double de)&#123; fEdep &#x3D; de; &#125;</span><br><span class=\"line\">inline G4double GetEdep()&#123; return fEdep; &#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>分配HitCollection存储空间，新建内存空间用完后并释放内存空间；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">typedef G4THitsCollection&lt;APNISTrackHit&gt; APNISTrackHitsCollection;</span><br><span class=\"line\"></span><br><span class=\"line\">extern G4ThreadLocal G4Allocator&lt;APNISTrackHit&gt;* APNISTrackHitAllocator;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">inline void* APNISTrackHit::operator new(size_t)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if(!APNISTrackHitAllocator) APNISTrackHitAllocator &#x3D; new G4Allocator&lt;APNISTrackHit&gt;;</span><br><span class=\"line\">  return (void *)APNISTrackHitAllocator-&gt;MallocSingle();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void APNISTrackHit::operator delete(void* aHit)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  APNISTrackHitAllocator-&gt;FreeSingle((APNISTrackHit*)aHit);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Hit-cc\"><a href=\"#Hit-cc\" class=\"headerlink\" title=\"Hit.cc\"></a>Hit.cc</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">APNISTrackHit::APNISTrackHit(const APNISTrackHit &amp;right):G4VHit()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  SDName &#x3D;right.SDName;</span><br><span class=\"line\">  EventID&#x3D;right.EventID;</span><br><span class=\"line\">  ParentID &#x3D;right.ParentID;</span><br><span class=\"line\">  TrackID &#x3D;right.TrackID;</span><br><span class=\"line\">  CurrentStepNumber &#x3D;right.CurrentStepNumber;</span><br><span class=\"line\">  fEdep &#x3D; right.fEdep;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; operator</span><br><span class=\"line\">const APNISTrackHit&amp; APNISTrackHit::operator&#x3D;(const APNISTrackHit &amp;right)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  SDName &#x3D;right.SDName;</span><br><span class=\"line\">  EventID&#x3D;right.EventID;</span><br><span class=\"line\">  ParentID &#x3D;right.ParentID;</span><br><span class=\"line\">  TrackID &#x3D;right.TrackID;</span><br><span class=\"line\">  CurrentStepNumber &#x3D;right.CurrentStepNumber;</span><br><span class=\"line\">  fEdep &#x3D; right.fEdep;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  return *this;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">G4int APNISTrackHit::operator&#x3D;&#x3D;(const APNISTrackHit &amp;right) const</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  return (this&#x3D;&#x3D;&amp;right) ? 1 : 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"SensitiveDetector\"><a href=\"#SensitiveDetector\" class=\"headerlink\" title=\"SensitiveDetector\"></a>SensitiveDetector</h3><p>SD的作用时根据Step和Track信息，构建Hit信息；SD有以下一些函数：</p>\n<ul>\n<li>ProcessHits()</li>\n<li>Initialize()</li>\n<li>EndOfEvent()</li>\n</ul>\n<h4 id=\"ProcessHits-G4Step-aStep-G4TouchableHistory\"><a href=\"#ProcessHits-G4Step-aStep-G4TouchableHistory\" class=\"headerlink\" title=\"ProcessHits(G4Step* aStep, G4TouchableHistory*)\"></a>ProcessHits(G4Step* aStep, G4TouchableHistory*)</h4><p>在ProcessHits()中将数据存入Hit()申明的存储空间中;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ProcessHits() This method is invoked by G4SteppingManager when a step is composed in the</span><br><span class=\"line\">G4LogicalVolume which has the pointer to this sensitive detector. The first argument of this method is</span><br><span class=\"line\">a G4Step object of the current step. The second argument is a G4TouchableHistory object for the</span><br><span class=\"line\">Readout geometry described in the next section. The second argument is NULL if Readout geometry</span><br><span class=\"line\">is not assigned to this sensitive detector. In this method, one or more G4VHit objects should be constructed if</span><br><span class=\"line\">the current step is meaningful for your detector.</span><br><span class=\"line\">Initialize() This method is invoked at the beginning of each event. The argument of this method is an object</span><br><span class=\"line\">of the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,</span><br><span class=\"line\">can be associated with the G4HCofThisEvent object in this method. The hit collections associated with</span><br><span class=\"line\">the G4HCofThisEvent object during this method can be used for during the event processing</span><br><span class=\"line\">digitization.</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"> G4StepPoint* preStepPoint&#x3D;aStep-&gt;GetPreStepPoint();</span><br><span class=\"line\"> G4StepPoint* postStepPoint&#x3D;aStep-&gt;GetPostStepPoint();</span><br><span class=\"line\"> G4Track* aTrack&#x3D;aStep-&gt;GetTrack();</span><br><span class=\"line\"></span><br><span class=\"line\"> &#x2F;&#x2F; G4double edep &#x3D; aStep-&gt;GetTotalEnergyDeposit();</span><br><span class=\"line\"> &#x2F;&#x2F; if(edep&#x3D;&#x3D;0.) return false;</span><br><span class=\"line\"> G4ParticleDefinition* theparticle&#x3D;aStep-&gt;GetTrack()-&gt;GetDefinition();</span><br><span class=\"line\"> G4String PName&#x3D;theparticle-&gt;GetParticleName();</span><br><span class=\"line\"></span><br><span class=\"line\"> G4TouchableHandle touch1 &#x3D; preStepPoint-&gt;GetTouchableHandle();</span><br><span class=\"line\"> G4VPhysicalVolume* volume &#x3D; touch1-&gt;GetVolume();</span><br><span class=\"line\"></span><br><span class=\"line\">if(preStepPoint-&gt;GetStepStatus()&#x3D;&#x3D;fGeomBoundary)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; if(volume-&gt;GetName()&#x3D;&#x3D;&quot;AirDet&quot;)</span><br><span class=\"line\">    &#x2F;&#x2F;   &#123;</span><br><span class=\"line\">    APNISTrackHit* newHit1 &#x3D; new APNISTrackHit();</span><br><span class=\"line\">    &#x2F;&#x2F; G4cout&lt;&lt;&quot;####----In AirDet----&quot;&lt;&lt;SensitiveDetectorName&lt;&lt;G4endl;</span><br><span class=\"line\">    newHit1-&gt;SetSDName(volume-&gt;GetName());</span><br><span class=\"line\">    newHit1-&gt;SetEventID(G4EventManager::GetEventManager()-&gt;GetConstCurrentEvent()-&gt;GetEventID());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetParentID(aTrack-&gt;GetParentID());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetTrackID(aTrack-&gt;GetTrackID());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetStepID(aTrack-&gt;GetCurrentStepNumber());&#x2F;&#x2F;ok</span><br><span class=\"line\"></span><br><span class=\"line\">    newHit1-&gt;SetEdep( aStep-&gt;GetTotalEnergyDeposit() );</span><br><span class=\"line\">    newHit1-&gt;SetPos( aStep-&gt;GetPreStepPoint()-&gt;GetPosition());</span><br><span class=\"line\">    newHit1-&gt;SetGlobalTime(preStepPoint-&gt;GetGlobalTime());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetLocalTime(preStepPoint-&gt;GetLocalTime());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetProperTime(preStepPoint-&gt;GetProperTime());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetEkin(preStepPoint-&gt;GetKineticEnergy());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetVelocity(preStepPoint-&gt;GetVelocity());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetMomentumDirection(preStepPoint-&gt;GetMomentumDirection());&#x2F;&#x2F;ok</span><br><span class=\"line\">    const G4VProcess* pcr&#x3D;aTrack-&gt;GetCreatorProcess();</span><br><span class=\"line\">    if(pcr)newHit1-&gt;SetCreatorProcess(pcr-&gt;GetProcessName());</span><br><span class=\"line\">    else newHit1-&gt;SetCreatorProcess(&quot;##&quot;);&#x2F;&#x2F;ok</span><br><span class=\"line\">    &#x2F;&#x2F;数据存储到HitCollection中</span><br><span class=\"line\">    fTrackHitCollection-&gt;insert( newHit1 );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Initialize-G4HCofThisEvent-HCE\"><a href=\"#Initialize-G4HCofThisEvent-HCE\" class=\"headerlink\" title=\"Initialize(G4HCofThisEvent* HCE)\"></a>Initialize(G4HCofThisEvent* HCE)</h4><p>初始化HitsCollection，将数据存入HitsCollection前都需将空间初始化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Initialize() This method is invoked at the beginning of each event. The argument of this method is an object</span><br><span class=\"line\">of the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,</span><br><span class=\"line\">can be associated with the G4HCofThisEvent object in this method. The hit collections associated with</span><br><span class=\"line\">the G4HCofThisEvent object during this method can be used for during the event processing</span><br><span class=\"line\">digitization.</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">void PLANETOCOSSoilSD::Initialize(G4HCofThisEvent*HCE)</span><br><span class=\"line\">&#123; static int HCID &#x3D; -1;</span><br><span class=\"line\">  </span><br><span class=\"line\">  SoilEdepHitCollection &#x3D; new PLANETOCOSEdepHitsCollection</span><br><span class=\"line\">                                  (SensitiveDetectorName,collectionName[0]);</span><br><span class=\"line\">  </span><br><span class=\"line\">  HCID &#x3D; GetCollectionID(0);</span><br><span class=\"line\">  HCE-&gt;AddHitsCollection(HCID,SoilEdepHitCollection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">void B4cCalorimeterSD::Initialize(G4HCofThisEvent* hce)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x2F;&#x2F; Create hits collection</span><br><span class=\"line\">  fHitsCollection </span><br><span class=\"line\">    &#x3D; new B4cCalorHitsCollection(SensitiveDetectorName, collectionName[0]); </span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; Add this collection in hce</span><br><span class=\"line\">  auto hcID </span><br><span class=\"line\">    &#x3D; G4SDManager::GetSDMpointer()-&gt;GetCollectionID(collectionName[0]);</span><br><span class=\"line\">  hce-&gt;AddHitsCollection( hcID, fHitsCollection ); </span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; Create hits</span><br><span class=\"line\">  &#x2F;&#x2F; fNofCells for cells + one more for total sums </span><br><span class=\"line\">  for (G4int i&#x3D;0; i&lt;fNofCells+1; i++ ) &#123;</span><br><span class=\"line\">    fHitsCollection-&gt;insert(new B4cCalorHit());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">void APNISTrackSD::Initialize(G4HCofThisEvent* HCE)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x2F;&#x2F; static int HCID &#x3D; -1;</span><br><span class=\"line\">  fTrackHitCollection &#x3D; new APNISTrackHitsCollection</span><br><span class=\"line\">                      (SensitiveDetectorName,collectionName[0]); </span><br><span class=\"line\">  &#x2F;&#x2F; if(HCID&lt;0)</span><br><span class=\"line\">  &#x2F;&#x2F; &#123; HCID &#x3D; GetCollectionID(0); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; get the collection name according to the object(name).</span><br><span class=\"line\">  if(HCID&lt;0)&#123;</span><br><span class=\"line\">    HCID &#x3D; G4SDManager::GetSDMpointer()</span><br><span class=\"line\">      -&gt;GetCollectionID(fTrackHitCollection);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  HCE-&gt;AddHitsCollection(HCID,fTrackHitCollection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>到这里，数据文件打开，写入；数据的传递与存储就介绍完了；RunAction中实现对数据文件的打开与关闭；EventAction中实现将数据写入到文件，当然，如果你采用SteppingAction方式也可以将数据写入文件（此文不再介绍）；Hit中实现给需要传递的数据分配内存空间；SensitiveDetector中实现将数据传递给Hit分配的内存空间；如果将这个问题表述为送快递的过程，那么RunAction就是告诉快递员有堆快递需要在什么时候开始送，什么时候完全送达；EventAction就是需要送的快递，Hit就是送一份快递，给快递员分配的货箱大小；SensitiveDetector就是告诉快递员将货物放到货箱里；</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Geant4SD_Hit.png\" alt=\"SensitiveDetector+HitsCollection方式存储数据方法示意图\"></p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"hexo结合next主题搭建博客及其版本更新方法","url":"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/","content":"<h1 id=\"🍳此文要解决的问题\"><a href=\"#🍳此文要解决的问题\" class=\"headerlink\" title=\"🍳此文要解决的问题\"></a>🍳此文要解决的问题</h1><ul>\n<li>原博客本地文件库在linux系统下，现在想迁移到windows下。</li>\n<li>原博客使用的next主题版本落后</li>\n<li>如何使配置文件不依赖next主题配置文件，使next主题文档更新更方便？</li>\n</ul>\n<h1 id=\"🚲方法\"><a href=\"#🚲方法\" class=\"headerlink\" title=\"🚲方法\"></a>🚲方法</h1><h2 id=\"🍗博客搭建工具有哪些？\"><a href=\"#🍗博客搭建工具有哪些？\" class=\"headerlink\" title=\"🍗博客搭建工具有哪些？\"></a>🍗博客搭建工具有哪些？</h2><ol>\n<li>hexo  速度快，中文文档和教程比较多</li>\n<li>jekyll  基于ruby语言</li>\n<li>hugo  基于go语言 部署最快</li>\n<li>pelican 基于python语言 快与安全</li>\n</ol>\n<p><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/comp.jpg\" alt></p>\n<h2 id=\"🧨基本原理\"><a href=\"#🧨基本原理\" class=\"headerlink\" title=\"🧨基本原理\"></a>🧨基本原理</h2><pre class=\"mermaid\" style=\"text-align: center;\">\n            graph LR\n            A[模板] --> B[编译]\nC(内容) --> B\nB --> D[网络发布]\n          </pre>\n\n\n\n\n<p><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/frame.png\" alt></p>\n<h2 id=\"🍔我们用哪个工具？\"><a href=\"#🍔我们用哪个工具？\" class=\"headerlink\" title=\"🍔我们用哪个工具？\"></a>🍔我们用哪个工具？</h2><p><strong>在此，作者选择采用hexo工具。原因如下</strong></p>\n<ol>\n<li>作者以前的博客既是使用hexo搭建的，配置和上手较快。</li>\n<li>作者尝试过使用github服务器自带的jekyll，发现生成速度比较慢，除此之外还需要<code>git</code>命令行操作，记住命令行比较麻烦。</li>\n<li>hexo 开发者是台湾人，故而中文社区比较庞大；</li>\n<li>hexo的模板个人感觉比较jekyll模板功能更加丰富。</li>\n</ol>\n<p>*<em>hexo主题模板有很多，配置文件中文文档最全的当属next主题 *</em></p>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20v\">老版本中文配置文档<i class=\"fa fa-external-link-alt\"></i></span>  <code>不推荐使用</code></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=\">next 主题官网说明文档<i class=\"fa fa-external-link-alt\"></i></span> <code>具有官方维护团队，推荐使用该文档进行学习</code></li>\n</ol>\n<h1 id=\"🚆如何将博客的本地文档迁移到windows下\"><a href=\"#🚆如何将博客的本地文档迁移到windows下\" class=\"headerlink\" title=\"🚆如何将博客的本地文档迁移到windows下\"></a>🚆如何将博客的本地文档迁移到windows下</h1><ol>\n<li>将博客文件夹拷贝到windows</li>\n<li>安装<code>node.js</code></li>\n<li>进入博客文件夹，安装npm<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n<li>安装hexo<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br></pre></td></tr></table></figure></li>\n<li>hexo生成部署即可</li>\n</ol>\n<h1 id=\"👼如何更新next主题\"><a href=\"#👼如何更新next主题\" class=\"headerlink\" title=\"👼如何更新next主题\"></a>👼如何更新next主题</h1><p>1.从github上下载next主题，解压后放置到themes主题下；</p>\n<div class=\"tabs\" id=\"fourth-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#fourth-unique-name-1\">Solution 1</a></li><li class=\"tab\"><a href=\"#fourth-unique-name-2\">Solution 2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"fourth-unique-name-1\"><p>github网页下载并解压</p></div><div class=\"tab-pane\" id=\"fourth-unique-name-2\"><p>在博客根文件夹下，命令行克隆</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure></div></div></div>\n\n<ol start=\"2\">\n<li>修改<code>themes/next/_config.yml</code>配置文件，具体配置方法参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=\">next 主题官网说明文档<i class=\"fa fa-external-link-alt\"></i></span> </li>\n</ol>\n<h1 id=\"😍如何使配置文件不依赖themes-next-config-yml\"><a href=\"#😍如何使配置文件不依赖themes-next-config-yml\" class=\"headerlink\" title=\"😍如何使配置文件不依赖themes/next/_config.yml\"></a>😍如何使配置文件不依赖<code>themes/next/_config.yml</code></h1><p>只需将<code>themes/next/_config.yml</code>中你想修改的内容，拷贝到你的博客根目录下的<code>_config.yml</code>文件中就可以了。</p>\n<p><strong>注意</strong> ：在拷贝到根目录下的<code>_config.yml</code>文件中前，需要添加<code>theme_config:</code>, 拷贝内容为其子内容，注意格式。拷贝内容每行前需要有两个空格，可以通过文档列编辑添加。</p>\n<p>下次更新next版本，只需到next文件夹下，运行命令行<code>get pull</code>即可。</p>\n<h1 id=\"🎈如何自定义配色布局等\"><a href=\"#🎈如何自定义配色布局等\" class=\"headerlink\" title=\"🎈如何自定义配色布局等\"></a>🎈如何自定义配色布局等</h1><h2 id=\"🎩页面布局配置\"><a href=\"#🎩页面布局配置\" class=\"headerlink\" title=\"🎩页面布局配置\"></a>🎩页面布局配置</h2><p>编辑根目录下<code>source\\_data</code>下的配置文档，如<code>styles.styl``variables.styl</code>等即可。</p>\n<h1 id=\"🎃配置成功测试\"><a href=\"#🎃配置成功测试\" class=\"headerlink\" title=\"🎃配置成功测试\"></a>🎃配置成功测试</h1><p>插件测试具体见<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzL3RhZy1wbHVnaW5zLw==\">官方网站说明<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"🧨Label测试\"><a href=\"#🧨Label测试\" class=\"headerlink\" title=\"🧨Label测试\"></a>🧨Label测试</h2><figure class=\"highlight md\"><figcaption><span>label.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% label [class]@Text %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[class] : default | primary | success | info | warning | danger.</span><br><span class=\"line\"><span class=\"code\">          &#x27;@Text&#x27; can be specified with or without space</span></span><br><span class=\"line\"><span class=\"code\">          E.g. &#x27;success @text&#x27; similar to &#x27;success@text&#x27;.</span></span><br><span class=\"line\"><span class=\"code\">          If not specified, default class will be selected.</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125;</span><br></pre></td></tr></table></figure>\n<p>Lorem <span class=\"label default\">ipsum</span> <span class=\"label primary\">dolor sit</span> amet, consectetur <span class=\"label success\">adipiscing elit,</span> sed <span class=\"label info\">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p>\n<p>Ut enim *<span class=\"label warning\">ad</span>* minim veniam, quis <strong><span class=\"label danger\">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n<p>Duis aute irure dolor in reprehenderit in voluptate <del><span class=\"label default\">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<h2 id=\"✨图片组加载配置，3副图两行排列\"><a href=\"#✨图片组加载配置，3副图两行排列\" class=\"headerlink\" title=\"✨图片组加载配置，3副图两行排列\"></a>✨图片组加载配置，3副图两行排列</h2><figure class=\"highlight md\"><figcaption><span>grouppicture.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class=\"line\">&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[group]  : Total number of pictures to add in the group.</span><br><span class=\"line\">[layout] : Default picture under the group to show.</span><br></pre></td></tr></table></figure>\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 100%;\"><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png\" alt></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png\" alt></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png\" alt></div></div></div></div>\n<h2 id=\"🎄mermaid-测试\"><a href=\"#🎄mermaid-测试\" class=\"headerlink\" title=\"🎄mermaid 测试\"></a>🎄mermaid 测试</h2><figure class=\"highlight md\"><figcaption><span>mermaid.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid type %&#125;</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type : type of the mermaid chart, visit https://github.com/knsv/mermaid for more information.</span><br></pre></td></tr></table></figure>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            sequenceDiagram\n            participant Alice\nparticipant Bob\nparticipant John as John<br>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n          </pre>\n\n\n\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph LR\n            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n          </pre>\n\n<h2 id=\"🎉tabs测试\"><a href=\"#🎉tabs测试\" class=\"headerlink\" title=\"🎉tabs测试\"></a>🎉tabs测试</h2><p>使用方法</p>\n<figure class=\"highlight md\"><figcaption><span>tabs.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% tabs Unique name, [index] %&#125;</span><br><span class=\"line\">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class=\"line\">Any content (support inline tags too).</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Unique name   : Unique name of tabs block tag without comma.</span><br><span class=\"line\"><span class=\"code\">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class=\"line\"><span class=\"code\">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class=\"line\"><span class=\"code\">                Only for current url of post/page must be unique!</span></span><br><span class=\"line\"><span class=\"code\">[index]       : Index number of active tab.</span></span><br><span class=\"line\"><span class=\"code\">                If not specified, first tab (1) will be selected.</span></span><br><span class=\"line\"><span class=\"code\">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class=\"line\"><span class=\"code\">                Optional parameter.</span></span><br><span class=\"line\"><span class=\"code\">[Tab caption] : Caption of current tab.</span></span><br><span class=\"line\"><span class=\"code\">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class=\"line\"><span class=\"code\">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class=\"line\"><span class=\"code\">                Optional parameter.</span></span><br><span class=\"line\"><span class=\"code\">[@icon]       : FontAwesome icon name (without &#x27;fa-&#x27; at the begining).</span></span><br><span class=\"line\"><span class=\"code\">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class=\"line\"><span class=\"code\">                Optional parameter.</span></span><br></pre></td></tr></table></figure>\n<div class=\"tabs\" id=\"tags\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tags-1\">Tags 1</a></li><li class=\"tab\"><a href=\"#tags-2\">Tags 2</a></li><li class=\"tab\"><a href=\"#tags-3\">Tags 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tags-1\"><p><strong>This is Tab 1.</strong></p>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<p>4-spaces code block:</p>\n<pre><code>nano /etc</code></pre><p>Tagged code block:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">code tag</span><br><span class=\"line\">code tag</span><br><span class=\"line\">code tag</span><br></pre></td></tr></table></figure>\n\n<div class=\"note default\">\n            <p>Note default tag.</p>\n          </div></div><div class=\"tab-pane\" id=\"tags-2\"><p><strong>This is Tab 2.</strong></p>\n<ul>\n<li>Five</li>\n<li>Six</li>\n<li>Seven</li>\n</ul>\n<div class=\"note primary\">\n            <div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Kt7u5kr_P5o\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n          </div></div><div class=\"tab-pane\" id=\"tags-3\"><p><strong>This is Tab 3.</strong></p>\n<div class=\"tabs\" id=\"sub-tabs\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sub-tabs-1\">Sub Tabs 1</a></li><li class=\"tab\"><a href=\"#sub-tabs-2\">Sub Tabs 2</a></li><li class=\"tab\"><a href=\"#sub-tabs-3\">Sub Tabs 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sub-tabs-1\"><p><strong>This is Sub Tab 1.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class=\"note warning\">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>          </div><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n          </div></div><div class=\"tab-pane\" id=\"sub-tabs-2\"><p><strong>This is Sub Tab 2.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class=\"note danger\">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>\n          </div></div><div class=\"tab-pane\" id=\"sub-tabs-3\"><p><strong>This is Sub Tab 3.</strong></p>\n<div class=\"tabs\" id=\"sub-sub-tabs\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sub-sub-tabs-1\">Sub-Sub Tabs 1</a></li><li class=\"tab\"><a href=\"#sub-sub-tabs-2\">Sub-Sub Tabs 2</a></li><li class=\"tab\"><a href=\"#sub-sub-tabs-3\">Sub-Sub Tabs 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sub-sub-tabs-1\"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n          </div></div><div class=\"tab-pane\" id=\"sub-sub-tabs-2\"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class=\"note warning\">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>\n          </div></div><div class=\"tab-pane\" id=\"sub-sub-tabs-3\"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class=\"note warning\">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class=\"note danger\">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div>\n          </div></div></div></div></div></div></div></div></div></div>\n\n<h2 id=\"🎊Note测试\"><a href=\"#🎊Note测试\" class=\"headerlink\" title=\"🎊Note测试\"></a>🎊Note测试</h2><p>使用方法：</p>\n<figure class=\"highlight md\"><figcaption><span>note.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note [class] [no-icon] %&#125;</span><br><span class=\"line\">Any content (support inline tags too.io).</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[class]   : default | primary | success | info | warning | danger.</span><br><span class=\"line\">[no-icon] : Disable icon in note.</span><br><span class=\"line\"></span><br><span class=\"line\">All parameters are optional.</span><br></pre></td></tr></table></figure>\n<div class=\"note primary\">\n            <h4 id=\"Primary-Header\"><a href=\"#Primary-Header\" class=\"headerlink\" title=\"Primary Header\"></a>Primary Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n\n<div class=\"note info\">\n            <h3 id=\"Info-Header\"><a href=\"#Info-Header\" class=\"headerlink\" title=\"Info Header\"></a>Info Header</h3><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n\n<div class=\"note success\">\n            <h4 id=\"Success-Header\"><a href=\"#Success-Header\" class=\"headerlink\" title=\"Success Header\"></a>Success Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n<div class=\"note warning\">\n            <h4 id=\"Warning-Header\"><a href=\"#Warning-Header\" class=\"headerlink\" title=\"Warning Header\"></a>Warning Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n<div class=\"note danger\">\n            <h4 id=\"Danger-Header\"><a href=\"#Danger-Header\" class=\"headerlink\" title=\"Danger Header\"></a>Danger Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n<p><code>等等</code></p>\n<h2 id=\"🎋button测试\"><a href=\"#🎋button测试\" class=\"headerlink\" title=\"🎋button测试\"></a>🎋button测试</h2><figure class=\"highlight md\"><figcaption><span>button.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class=\"line\">&lt;!-- Tag Alias --&gt;</span><br><span class=\"line\">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">url     : Absolute or relative path to URL.</span><br><span class=\"line\">text    : Button text. Required if no icon specified.</span><br><span class=\"line\">icon    : FontAwesome icon name (without &#x27;fa-&#x27; at the begining). Required if no text specified.</span><br><span class=\"line\">[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class=\"line\"><span class=\"code\">          Optional parameter.</span></span><br><span class=\"line\"><span class=\"code\">[title] : Tooltip at mouseover.</span></span><br><span class=\"line\"><span class=\"code\">          Optional parameter.</span></span><br></pre></td></tr></table></figure>\n<a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-\"></i>Text\n          </a>\n<a class=\"btn\" href=\"#\" title=\"Title\">\n            <i class=\"fa fa-\"></i>Text & Title\n          </a>\n<p><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Text & Large Icon\n          </a>\n<a class=\"btn\" href=\"#\" title=\"Title\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Text & Large Icon & Title\n          </a></p>\nLorem <a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Lorem\n          </a> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident <a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Ipsum\n          </a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<div class=\"note info\">\n            <a class=\"btn\" href=\"#\">            <i class=\"fa fa-home fa-fw\"></i>Text & Icon          </a><a class=\"btn\" href=\"#\" title=\"Title\">            <i class=\"fa fa-home\"></i>          </a><a class=\"btn\" href=\"#\">            <i class=\"fa fa-\"></i>Text          </a><p><a href=\"#\">Link</a></p>\n          </div>\n\n<div class=\"text-center\"><div><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-heading\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-edge\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-times\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"far fa-circle\"></i>\n          </a></div>\n<div><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-italic\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-scribd\"></i>\n          </a></div>\n<div><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-google\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-chrome\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-opera\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-gem fa-rotate-270\"></i>\n          </a></div></div>\n\n<div class=\"text-center\"><a class=\"btn\" href=\"#\" title=\"Previous Chapter (Full Image)\">\n            <i class=\"fa fa-arrow-left fa-fw fa-lg\"></i>Previous Chapter\n          </a> <a class=\"btn\" href=\"#\" title=\"Next Chapter (Label)\">\n            <i class=\"fa fa-arrow-right fa-fw fa-lg\"></i>Next Chapter\n          </a></div>\n\n<div class=\"text-center\"><a class=\"btn\" href=\"https://github.com/theme-next/hexo-theme-next\" title=\"NexT source code\">\n            <i class=\"fab fa-github fa-fw fa-lg\"></i>NexT\n          </a></div>\n\n<h2 id=\"🎏Caniuse测试\"><a href=\"#🎏Caniuse测试\" class=\"headerlink\" title=\"🎏Caniuse测试\"></a>🎏Caniuse测试</h2><figure class=\"highlight md\"><figcaption><span>canius.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% caniuse feature @ periods %&#125;</span><br><span class=\"line\">&lt;!-- Tag Alias --&gt;</span><br><span class=\"line\">&#123;% can feature @ periods %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">feature : Search for the feature you want on https://caniuse.com, then click on the hash sign to the left of the search result heading and you will get the unique name of this feature.</span><br><span class=\"line\">periods : Select the browser versions to display. Supported values: past<span class=\"emphasis\">_1, past_</span>2, past<span class=\"emphasis\">_3, past_</span>4, past<span class=\"emphasis\">_5, current, future_</span>3, future<span class=\"emphasis\">_2, future_</span>1. If this value is empty, the default value &#x27;current&#x27; will be used.</span><br></pre></td></tr></table></figure>\n<iframe data-feature=\"sharedarraybuffer\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=sharedarraybuffer&periods=current&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n<iframe data-feature=\"link-rel-modulepreload\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=link-rel-modulepreload&periods=past_1,past_2,past_3,past_4,past_5&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<h2 id=\"🧧pdf测试\"><a href=\"#🧧pdf测试\" class=\"headerlink\" title=\"🧧pdf测试\"></a>🧧pdf测试</h2><figure class=\"highlight md\"><figcaption><span>pdf.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pdf url [height] %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[url]    : Relative path to PDF file.</span><br><span class=\"line\">[height] : Optional. Height of the PDF display element, e.g. 800px.</span><br></pre></td></tr></table></figure>\n\n\n<div class=\"pdfobject-container\" data-target=\"https://sci-hub.tw/downloads-ii/2020-03-01/f0/licata2020.pdf\" data-height=\"600px\"></div>\n\n\n\n<h2 id=\"🎞video测试\"><a href=\"#🎞video测试\" class=\"headerlink\" title=\"🎞video测试\"></a>🎞video测试</h2><figure class=\"highlight md\"><figcaption><span>video.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% video url %&#125;</span><br></pre></td></tr></table></figure>\n<video src=\"https://assets.mixkit.co/videos/download/mixkit-watering-a-flower-pot-1780.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>","categories":["编程工具学习与应用"],"tags":["hexo","博客搭建","next主题"]},{"title":"辐射探测与成像相关研究组","url":"/2021/02/25/%E8%BE%90%E5%B0%84%E6%8E%A2%E6%B5%8B%E4%B8%8E%E6%88%90%E5%83%8F%E7%9B%B8%E5%85%B3%E7%A0%94%E7%A9%B6%E7%BB%84/","content":"<h1 id=\"辐射探测与成像相关知名研究组\"><a href=\"#辐射探测与成像相关知名研究组\" class=\"headerlink\" title=\"辐射探测与成像相关知名研究组\"></a>辐射探测与成像相关知名研究组</h1><blockquote>\n<p>核工程师和放射学家对开发更先进的电离辐射测量和探测系统以及利用这些系统改进成像技术感兴趣。这包括探测器的设计、制造和分析、基本原子和核参数的测量、探测器系统的方法开发、中子活化分析、辐射成像系统、使用穿透辐射对部件进行无损检测和评估，放射卫生工程与医学物理应用。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"密西根大学-核工程与辐射科学\"><a href=\"#密西根大学-核工程与辐射科学\" class=\"headerlink\" title=\"密西根大学 核工程与辐射科学\"></a>密西根大学 核工程与辐射科学</h2><h3 id=\"辐射成像组\"><a href=\"#辐射成像组\" class=\"headerlink\" title=\"辐射成像组\"></a>辐射成像组</h3><p>由镉、锌和碲组成的透明、半导体立方体，通过识别核材料发出的伽马射线的能量和方向，可以揭示核材料的身份和下落。钟和教授的实验室开发了基于CdZnTe的探测器，用于国家安全和天文学等领域。探测器可以定位脏弹和其他核武器，也可以揭示月球或火星的成分。他的团队正在开发成像技术、数据采集系统和替代性的、更便宜的半导体，可能取代CdZnTe。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jenRsYWIuZW5naW4udW1pY2guZWR1Lw==\">MIT He Zhong 团队<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210224110453854.png\" alt=\"image-20210224110453854\"></p>\n<h3 id=\"探测方法组\"><a href=\"#探测方法组\" class=\"headerlink\" title=\"探测方法组\"></a>探测方法组</h3><p>由大卫·韦赫教授领导的探测方法小组探索半导体辐射探测器材料、处理探测器信号的集成电路以及伽马射线辐射成像。这项研究的主要目标是在广泛的应用中增强辐射检测的可用选项：国土安全、医疗和工业用途以及科学研究。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYWRtZWFzLmVuZ2luLnVtaWNoLmVkdS8=\">David Wehe 团队<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210224110406931.png\" alt=\"image-20210224110406931\"></p>\n<h3 id=\"核不扩散组\"><a href=\"#核不扩散组\" class=\"headerlink\" title=\"核不扩散组\"></a>核不扩散组</h3><p>萨拉·波齐教授的研究小组致力于开发新的工具和技术，以探测和识别可制成核武器的铀和钚等材料。他们的研究包括建立既能测量中子又能测量光子的探测器阵列，开发解释探测器数据的算法，以及使用可测量的特征来评估核材料的成分。这些类型的探测器可用于边境口岸和海港扫描行李和海运集装箱。它们还可以监测核燃料的生产，并测量与裂变物理有关的核数据。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kbm5nLmVuZ2luLnVtaWNoLmVkdS8=\">Sara Pozzi 团队<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"应用核科学组\"><a href=\"#应用核科学组\" class=\"headerlink\" title=\"应用核科学组\"></a>应用核科学组</h3><p>伊戈尔·约万诺维奇教授领导的应用核科学小组利用电离辐射和激光与物质相互作用的物理学来解决核安全、能源和基础科学的新应用。他的小组开发了中子探测器和主动询问方法，以及用于核不扩散应用的各种规模的反中微子探测器。在Gérard Mourou超快光学科学中心，他开发了新的超快光源和方法，用于通过激光光谱进行远程和痕量材料检测，以及用于高场科学和核光子学的强激光科学和技术。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbnNnLmVuZ2luLnVtaWNoLmVkdS8=\">Igor Jovanovic 团队<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"辐射剂量机理组\"><a href=\"#辐射剂量机理组\" class=\"headerlink\" title=\"辐射剂量机理组\"></a>辐射剂量机理组</h3><p>Alex Bielajew教授及其同事建立了电子和光子如何在物质中移动的数学和计算机模型，以精确预测人体中的剂量沉积，并更准确地解释辐射剂量计读数，从而减少了通过放射疗法治疗癌症所需的总辐射剂量。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXJzLmVuZ2luLnVtaWNoLmVkdS9wZW9wbGUvYWxleC1iaWVsYWpldy8=\">Alex Bielajew 团队<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"放射卫生工程组\"><a href=\"#放射卫生工程组\" class=\"headerlink\" title=\"放射卫生工程组\"></a>放射卫生工程组</h3><p>Kimberlee Kearfott教授的实验室正在开发新颖的探测器和剂量计设计，并改进了用于医疗，工业，实验室和核电辐射安全应用的测量方法。 该小组将精力集中在可在不久的将来部署的实用系统和辐射测量方法上。</p>\n<p><a href>Kimberlee Kearfott</a></p>\n<p>正在认证成为医学物理培训资格，密歇根大学具备这种资格</p>\n<h2 id=\"麻省理工大学-核科学与工程\"><a href=\"#麻省理工大学-核科学与工程\" class=\"headerlink\" title=\"麻省理工大学 核科学与工程\"></a>麻省理工大学 核科学与工程</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIubWl0LmVkdS9uc2UvaW5kZXguaHRtbA==\">麻省理工大学核科学与工程<i class=\"fa fa-external-link-alt\"></i></span> 主要研究领域包括：裂变、聚变、核安全、【辐射源、探测与测量】、建模与仿真、极端环境下的材料特性分析</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210224113237602.png\" alt=\"image-20210224113237602\"></p>\n<p>其中，有关【辐射源、探测与测量】相关的研究方向介绍如下：</p>\n<blockquote>\n<p>核科学与工程系的主要目标是提高实现辐射科学与技术的新有益应用所需的核心学科。 这些学科包括辐射的产生和控制以及辐射与物质相互作用的研究和应用。</p>\n<p>我们研究新颖的辐射源，这些辐射源将在医学成像，基于辐射的治疗，违禁品检测以及纳米和介观系统的化学和物理性质研究中找到应用，还使用新的辐射源，例如Oak实验室的散列中子源使推动探索化学和物理学的距离和时间维度成为可能。</p>\n<p>我们还对非电离辐射的精确控制和表征感兴趣。 这些辐射场的完整量子力学描述将允许它们应用于量子系统的相干控制。 实现这种精致的控制将使量子信息处理（QIP）概念的实际实现成为可能。</p>\n</blockquote>\n<p>【建模与仿真】</p>\n<blockquote>\n<p>在多尺度和多物理场建模方面令人振奋的新发展，再加上高性能计算机以及相关算法和仿真方法的迅速发展，使人们有可能以比以往更高的保真度来模拟核系统。 该部门所有主要应用领域均以对高级计算建模和仿真研究的综合关注为基础。 NSE的教师和学生在许多重要领域从事前沿研究，包括反应堆中子学和热力学，等离子体湍流建模以及原子分辨率，核环境中的长期材料模拟。 在这些领域中的每一个领域，研究都与实验计划紧密结合，以进行模型验证以及促进对科学的理解和新机制模型的开发。</p>\n</blockquote>\n<p>【极端环境下材料特性】</p>\n<blockquote>\n<p>对材料性能的限制是提高核能系统安全性和经济性的最大技术障碍之一。确保结构和其他材料在老化的商用轻水堆动力反应堆群中的生存能力，对于目前将这些核电站的寿命延长到60年以上的努力至关重要。下一代快裂变反应堆和未来的聚变装置将需要克服更严峻的材料挑战，包括高原子位移率以及快中子谱中质子/氦的产生。安全处置高放射性废物需要将放射性核素控制在工程屏障内，这些屏障必须能承受数千年的高温、应力和辐射场，还可能承受腐蚀性液体的渗透。</p>\n<p>开发能在这些恶劣工作环境中发挥良好性能的材料是材料科学面临的一个重大挑战，需要对辐射通量、温度和应力等极端条件下的材料响应有基本的了解。化学和物理过程必须在从原子到宏观的多个物理尺度上理解和控制，时间尺度从不到一纳秒到几十年（对于核废料来说，时间更长）。令人兴奋的新的科学工具的集合正在出现，这将使这一点成为可能，包括先进的紧凑适用于大学规模实验室的辐射源；纳米尺度的材料探针和表征；以及具有大规模计算能力的最先进数值模型。</p>\n</blockquote>\n<h2 id=\"田纳西大学核工程部\"><a href=\"#田纳西大学核工程部\" class=\"headerlink\" title=\"田纳西大学核工程部\"></a>田纳西大学核工程部</h2><p> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZS51dGsuZWR1Lw==\">核工程系<i class=\"fa fa-external-link-alt\"></i></span> 成立于1957年，是美国历史最悠久，最负盛名的计划之一。<br>师资力量以卓越的研究和教学能力而享誉国际，并且通过与橡树岭国家实验室，Y-12核安保综合体，UCOR，东田纳西州技术园（ETTP）等的紧密联系来加强我们的高级研究计划。 位于诺克斯维尔五十英里范围内的一百多家核相关公司。<br>田纳西州东部可能是世界上核工业最集中的地区，因此是进行核教育的理想之地。</p>\n<p>与八个大学研究中心（包括核安全研究所，先进材料联合研究所，中子科学联合研究所，可靠性和可维护性中心，闪烁材料研究中心）一起在八个不同的研究领域中探索和提出了思想和概念。 ，以及本地合作者，例如Oak Ridge国家实验室。</p>\n<p>主要研究方向先进建模与仿真、核聚变技术、【核设施控制、可靠性与安全】、核反应堆燃料与材料、辐射探测与测量、放射科学与保健物理</p>\n<p>其中，辐射探测与测量主要研究方向包括：</p>\n<h3 id=\"闪烁体探测器材料与应用工程\"><a href=\"#闪烁体探测器材料与应用工程\" class=\"headerlink\" title=\"闪烁体探测器材料与应用工程\"></a>闪烁体探测器材料与应用工程</h3><p>对闪烁材料的研究范围从新化合物的发现到独特性能的表征，再到在创新的探测和成像系统中引入新材料。研究生们经常种植以前未知成分的晶体，研究辐射与新材料的相互作用，有时与国家实验室的研究人员合作。达到更发达阶段的闪烁材料可用于在核安全和/或医学成像中具有重要应用的新型探测系统。具有精确测量吸收伽马辐射能量能力的特殊闪烁体对于识别放射性物质非法来源至关重要，而具有更快时间响应的闪烁探测器最终可能使癌症和阿尔茨海默病等疾病的诊断更早、更准确</p>\n<h3 id=\"半导体探测器的研发\"><a href=\"#半导体探测器的研发\" class=\"headerlink\" title=\"半导体探测器的研发\"></a>半导体探测器的研发</h3><p>在这个领域中有几个正在进行的项目，它们跨越了许多应用空间。 当前的半导体开发项目包括氮化硼，二硒化锂铟，金刚石和三溴化甲基铵铅，其应用范围从第四代反应堆中的先进多模式传感器到冷中子成像。</p>\n<h3 id=\"用于中子科学设施的中子仪器\"><a href=\"#用于中子科学设施的中子仪器\" class=\"headerlink\" title=\"用于中子科学设施的中子仪器\"></a>用于中子科学设施的中子仪器</h3><p>我们的闪烁体和半导体系统开发的一个重要重点是在全球的中子科学设施中启用新的仪器功能。 其中有数十个正在运行，还有更多正在建设中，包括欧洲散裂源。 一个特别关注的是用于中子成像的高分辨率传感器，朝着1微米空间分辨率的目标努力。 一项用于反射测定法和He-3替代技术的高速率仪器正在进行或已完成其他工作。 我们与ORNL中子科学和Paul Scherrer研究所有着紧密的合作关系。  ORNL是散裂中子源和高通量同位素反应堆之间的许多光束线，是中子科学领域的全球领导者。  Paul Scherrer研究所是高分辨率中子成像领域的全球领导者。</p>\n<h3 id=\"核材料辐射成像系统\"><a href=\"#核材料辐射成像系统\" class=\"headerlink\" title=\"核材料辐射成像系统\"></a>核材料辐射成像系统</h3><p>正在进行的工作或最近完成的工作涉及对伽马，X射线，快中子，慢中子或μ子成像的系统。 许多工作与核材料或核材料组件的成像有关，旨在检测，定位和表征它们。 辐射的被动和主动传感都在研究中，其中主动传感需要询问源，例如X射线线性加速器或氘-中子发生器。 在许多工作中，ORNL都是重要的合作伙伴。 该领域的另一个合作伙伴是Varex Imaging。</p>\n<h3 id=\"辐射探测器数据处理与算法开发\"><a href=\"#辐射探测器数据处理与算法开发\" class=\"headerlink\" title=\"辐射探测器数据处理与算法开发\"></a>辐射探测器数据处理与算法开发</h3><p>小组还研究了从所述材料和系统生成的数据的处理，以及与核材料和放射材料的检测，定位和表征相关的算法开发。</p>\n<h3 id=\"🏡实验设施\"><a href=\"#🏡实验设施\" class=\"headerlink\" title=\"🏡实验设施\"></a>🏡实验设施</h3><h4 id=\"微处理研究设施\"><a href=\"#微处理研究设施\" class=\"headerlink\" title=\"微处理研究设施\"></a>微处理研究设施</h4><p>田纳西大学的微处理研究设施（MPRF）是UT的核心设施，位于先进材料联合研究所（JIAM）内。 MPRF使研究人员能够进行微处理制造过程。服务包括光刻，薄膜沉积，电容耦合反应性离子蚀刻以及基于硅的等离子体增强化学气相沉积工艺。该设备位于具有所有必要设施和辅助处理设备的100级无尘室中。结合其他JIAM设施，MPRF为研究人员提供了进行材料科学和工程学前沿研究的方法。</p>\n<h4 id=\"散射体材料研究中心-SMRC\"><a href=\"#散射体材料研究中心-SMRC\" class=\"headerlink\" title=\"散射体材料研究中心(SMRC)\"></a>散射体材料研究中心<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aWNrbGUudXRrLmVkdS9zbXJjLg==\">(SMRC)<i class=\"fa fa-external-link-alt\"></i></span></strong></h4><p>该中心位于大学科学与工程研究设施的主校区，结合了包括核工程在内的多个部门的资源，用于研究项目，这些研究项目致力于为最先进的辐射传感器和成像系统开发创新材料。 SMRC为核工程，材料科学与工程，能源科学与工程和化学领域的研究生和本科生提供了支持。它具有广泛的晶体生长设备，以及用于研究基本材料特性和新型材料对辐射的响应的众多仪器。 SMRC积极研究各种物理形式的闪烁材料，包括无机单晶，多晶陶瓷和有机塑料。</p>\n<h4 id=\"辐射成像，检测，算法和系统（Rad-IDEAS）实验室\"><a href=\"#辐射成像，检测，算法和系统（Rad-IDEAS）实验室\" class=\"headerlink\" title=\"辐射成像，检测，算法和系统（Rad IDEAS）实验室\"></a>辐射成像，检测，算法和系统（Rad IDEAS）实验室</h4><p>在Rad IDEAS实验室中，我们拥有大量的伽马，中子和阿尔法源。辐射传感器和光学组件；单通道和多通道核电子模块；数据采集电子设备；示波器;高性能的多核工作站，用于数据采集，处理和仿真。该实验室主要用于辐射检测和成像中新的概念验证水平实验，或用于准备在现场进行测量的实验系统。</p>\n<h4 id=\"双重混合检测定位成像（双重混合DLI）系统\"><a href=\"#双重混合检测定位成像（双重混合DLI）系统\" class=\"headerlink\" title=\"双重混合检测定位成像（双重混合DLI）系统\"></a>双重混合检测定位成像（双重混合DLI）系统</h4><p>双混合检测定位成像（DLI）拖车包含内置于一维编码孔径成像阵列中的大量NaI检测器和有机闪烁体。它可用于移动伽马成像和检测，移动或固定背景测量或伽马或中子或研究生实验室练习。</p>\n<h4 id=\"ORNL相关实验设备\"><a href=\"#ORNL相关实验设备\" class=\"headerlink\" title=\"ORNL相关实验设备\"></a>ORNL相关实验设备</h4><p>其他相关设备和设施包括：伴随粒子成像（API）（D-T）中子发生器； Cf-252电离室;核材料识别系统（NMIS），包括实验室和现场版本；便携式中子编码孔径成像系统；其他伽马射线编码孔径成像系统；进入储存铀标准的核保障实验室；和门户监视工具。</p>\n<h4 id=\"Varex影像设备\"><a href=\"#Varex影像设备\" class=\"headerlink\" title=\"Varex影像设备\"></a>Varex影像设备</h4><p>UT在芝加哥奥黑尔（ORD）机场附近的Varex Imaging设施拥有并运营着6/9 MV线性加速器。 该直线加速器可用于与安全，工业或医疗应用中的货物扫描有关的实验。</p>\n<h2 id=\"橡树岭实验室\"><a href=\"#橡树岭实验室\" class=\"headerlink\" title=\"橡树岭实验室\"></a>橡树岭实验室</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JubC5nb3YvZ3JvdXAvYWR2YW5jZWQtcmFkaWF0aW9uLWRldGVjdGlvbi1pbWFnaW5nLWRhdGEtc2NpZW5jZS1hbmQtYXBwbGljYXRpb25z\">辐射探测、成像、数据科学和应用研究组<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>进行研究和开发是为了了解和利用辐射衰减，射线照相/断层扫描，系统建模和检测网络的组合特征，这些特征可用于一系列基础物理学，下一代高级概念系统以及当前的实际应用中</p>\n<h2 id=\"伊利诺伊大学香槟分校-辐射探测与成像研究组\"><a href=\"#伊利诺伊大学香槟分校-辐射探测与成像研究组\" class=\"headerlink\" title=\"伊利诺伊大学香槟分校 辐射探测与成像研究组\"></a>伊利诺伊大学香槟分校 辐射探测与成像研究组</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL3JhZGltZy5ucHJlLmlsbGlub2lzLmVkdS9pbmRleC5odG1s\">伊利诺伊大学香槟分校 辐射探测与成像研究组<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>采用系统的方法来开发先进的放射成像技术，以帮助解决当今我们面临的一些最具挑战性的疾病，例如脑癌，心脏病和神经退行性疾病。我们的工作重点是探索各种技术前沿，以开发能够以更高的效率，空间，能量和定时精度检测入射粒子的辐射传感器。</p>\n<p>1）我们为要求苛刻的SPECT和PET应用开发和应用超高性能伽马射线成像传感器。</p>\n<p>2）我们研究了先进的图像形成技术，例如人工复眼伽马相机和自适应光圈设计，以改善空间分辨率和灵敏度之间的权衡。</p>\n<p>3）我们开发了统计技术，例如改进的统一Cramer-Rao边界（M-UCRB），以设计和优化复杂的放射成像系统，从而可以提供最佳效率来获得有用的成像信息和</p>\n<p>4）我们探索利用广泛的EM辐射（从射频，可见照片，软X射线到高能伽马射线）的成像技术，以及多种物理和化学原理来生成断层图像，以可视化生物样品内部的生理过程，活体动物和患者。</p>\n<h2 id=\"其他国内外其他知名研究机构\"><a href=\"#其他国内外其他知名研究机构\" class=\"headerlink\" title=\"其他国内外其他知名研究机构\"></a>其他国内外其他知名研究机构</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ob21lLmNlcm4v\">欧洲核子中心<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5paGVwLmNhcy5jbi8=\">中科院高能物理研究所<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pbXBjYXMuYWMuY24v\">中科院近代物理研究所<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"主要杂志\"><a href=\"#主要杂志\" class=\"headerlink\" title=\"主要杂志\"></a>主要杂志</h2><p><strong>英文期刊</strong></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL251Y2xlYXItaW5zdHJ1bWVudHMtYW5kLW1ldGhvZHMtaW4tcGh5c2ljcy1yZXNlYXJjaC1zZWN0aW9uLWEtYWNjZWxlcmF0b3JzLXNwZWN0cm9tZXRlcnMtZGV0ZWN0b3JzLWFuZC1hc3NvY2lhdGVkLWVxdWlwbWVudA==\">Nuclear Instruments and Methods in Physics Research Section A : Accelerators, Spectrometers, Detectors and Associated Equipment<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL251Y2xlYXItaW5zdHJ1bWVudHMtYW5kLW1ldGhvZHMtaW4tcGh5c2ljcy1yZXNlYXJjaC1zZWN0aW9uLWItYmVhbS1pbnRlcmFjdGlvbnMtd2l0aC1tYXRlcmlhbHMtYW5kLWF0b21z\">Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL3Byb2dyZXNzLWluLXBhcnRpY2xlLWFuZC1udWNsZWFyLXBoeXNpY3M=\">Progress in Particle and Nuclear Physics<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL251Y2xlYXItYW5kLXBhcnRpY2xlLXBoeXNpY3MtcHJvY2VlZGluZ3M=\">Nuclear and Particle Physics Proceedings<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL2FwcGxpZWQtcmFkaWF0aW9uLWFuZC1pc290b3Blcw==\">Applied Radiation and Isotopes<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL251Y2xlYXItcGh5c2ljcy1h\">Nuclear Physics A<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam91cm5hbHMuZWxzZXZpZXIuY29tL251Y2xlYXItcGh5c2ljcy1i\">Nuclear Physics B<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p><strong>中文期刊</strong></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hZXN0Lm9yZy5jbi9DTi92b2x1bW4vY3VycmVudC5zaHRtbA==\">原子能科学技术<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qLnNpbmFwLmFjLmNuL2hqcy9DTi8wMjUzLTMyMTkvaG9tZS5zaHRtbA==\">核技术<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ucHIuYWMuY24v\">原子核物理评论<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><a href>各大学学报</a></li>\n</ul>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt=\"Screenshot 2021-02-23 120116 (2)\"></p>\n","categories":["综述"],"tags":["辐射探测与成像"]},{"title":"opencv-python哔哩哔哩视频解说代码","url":"/2020/07/28/opencv-python%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E4%BB%A3%E7%A0%81/","content":"<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL211cnRhemFoYXNzYW4vTGVhcm4tT3BlbkNWLWluLTMtaG91cnM=\">https://github.com/murtazahassan/Learn-OpenCV-in-3-hours<i class=\"fa fa-external-link-alt\"></i></span></p>\n<a id=\"more\"></a>\n\n<h1 id=\"文档说明\"><a href=\"#文档说明\" class=\"headerlink\" title=\"文档说明\"></a>文档说明</h1><p>其中，<code>chapter 11~17</code> 待更新</p>\n<ul>\n<li><p>chapter 1  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMS5weQ==\">资源读取：图片、视频、摄像头<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 2  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMi5weQ==\">二值化、滤波模糊、膨胀、腐蚀<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 3  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMy5weQ==\">画图、形状、文字<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 4 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNC5weQ==\">图像的旋转与仿生变换<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 5 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNS5weQ==\">拼图<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 6 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNi5weQ==\">全景图像拼接<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 7 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNy5weQ==\">检测颜色<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 8 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyOC5weQ==\">检测形状<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 9 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyOS5weQ==\">人脸检测<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 10 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTAucHk=\">虚拟油画<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 11 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTEucHk=\">文档识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 12 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTIucHk=\">车牌识别、信用卡号识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 13 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTMucHk=\">答题卡识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 14 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTQucHk=\">目标追踪<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 15 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTUucHk=\">人脸疲劳检测<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 16 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTYucHk=\">dnn 神经网络识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 17 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTcucHk=\">光流估计和背景建模<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n","categories":["openCV"],"tags":["python","openCV"]},{"title":"核医学物理范畴","url":"/2021/02/27/%E6%A0%B8%E5%8C%BB%E5%AD%A6%E7%89%A9%E7%90%86%E8%8C%83%E7%95%B4/","content":"<h1 id=\"核医学物理的范畴\"><a href=\"#核医学物理的范畴\" class=\"headerlink\" title=\"核医学物理的范畴\"></a>核医学物理的范畴</h1><p>医学物理（Medical Physics）是把物理学的原理和方法应用于人类疾病的预防、诊断、 治疗和保健的一门交叉学科，主要研究人类疾病诊/治过程中的物理现象、并用物理方法对其进行表达，涉及热、力、声、光、电、磁、核等各种物理因子。</p>\n<a id=\"more\"></a>\n\n<p>以伦琴发现X射线并用于人体透射、居里夫人发现放射性核素镭并用于肿瘤治疗2项开创性研究为起点，以1974年国际医学物理组织（IOMP）成立为成熟标志，医学物理发展逐步为物理学与医学实践相结合的独立分支学科，涵盖<strong>放射肿瘤物理（ROP）、医学影像物理（MIP）、核医学物理（NMP）、核磁/超声/微波/射频/激光等非电离辐射物理因子的医学应用、保健物理（辐射防护）</strong>等方向。</p>\n<p>医学物理技术贯穿于电离辐射医学应用（即由放射肿瘤学、放射学、核医学三大方向组成的放射诊疗）的各个方面，如图1所示。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/F7iJcxXW5T8VQP6.jpg\" alt=\"img\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n","categories":["核医学物理"],"tags":["综述"]},{"title":"医学影像物理","url":"/2021/02/27/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E7%89%A9%E7%90%86/","content":"<h1 id=\"医学影像物理（MIP）\"><a href=\"#医学影像物理（MIP）\" class=\"headerlink\" title=\"医学影像物理（MIP）\"></a>医学影像物理（MIP）</h1><p>医学影像物理涵盖的范围较广，包括X射线诊断学和临床核医学诊断以及超声成像和核磁共振成像MR(Magnetic Resonance Imaging)等。主要目的是获取生物组织结构信息以及生物功能、代谢和生理状况，为临床治疗提供信息。就核物理和核技术角度而言，主要关注的是X射线诊断和临床核医学诊断。</p>\n<p><strong>以减少生物照射剂量及快速、高效和准确的获取诊断信息为目的，医学影像物理正朝着多模复合成像方向不断更新进步</strong>，且还存在一些可以研究工作值得进一步推进，具体如图3所示。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E5%AD%A6%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B.png\" alt></p>\n<a id=\"more\"></a>\n\n<h2 id=\"X射线诊断技术\"><a href=\"#X射线诊断技术\" class=\"headerlink\" title=\"X射线诊断技术\"></a>X射线诊断技术</h2><p>X射线诊断不同于临床核医学诊断，不需要在生物体内注射放射性核素，而是通过生物体外的X射线源发射X射线对生物组织结构进行精细成像。</p>\n<p><strong>常用的成像手段有CR(Computer Radiography)计算机摄影、DR(Digital Radiography)数字摄影和CT(Computer Tomography)计算机断层成像等。</strong></p>\n<p>1981年日本富士公司首先推出了商业CR设备。DR成像系统也几乎是在同一时期被提出，甚至早于CR。由于DR较昂贵，价格约为CR的3倍，CR得以率先推广。CR采用的存储荧光体（IP板）成像，也称为间接数学化X射线成像技术，类似于胶片成像过程需要洗片。而DR采用平板探测器或荧光板CCD摄像机直接将X射线光子转换成数字信号。成像转换环节少，减少了噪声、图像质量高，曝光剂量较低，甚至可以动态成像（DR采集一幅2kx2k的图像约10ms，5s成像；DR 的拍片速度快于 CR，拍片间隔为 5s，直接出片。CR 拍片间隔1 min 以上，从摄影到胶片显像需3 min。）。目前DR设备正朝着小型化、高分辨方向发展，故而半导体探测器的应用是其必然选择。随着半导体探测器技术的发展，DR设备越来越轻便可为不可移动病人进行检测。目前全国DR厂商130~150家，年新增整机总量达15000台。</p>\n<p>CR和DR均只能获取二维图像。为获取生物组织三维信息，CT得以提出并迅速发展。X射线CT经历了40多年的发展, 从早期的单排往复式CT发展到螺旋CT, 直到目前最先进的多层螺旋CT。现今的亚秒（&lt;0.2s）螺旋CT能达到640排；低剂量条件下的投影域能谱数据分解方法，能够进行单能量成像和物质化学组成鉴别，能够实现高速大容积 CT 的空间分辨率 14lp/cm，重建速度大于30 帧 /s。为克服CT技术对生物软组织成像不佳问题，采用多能X射线以获得更佳组织结构区分能力。图像重建方法由解析重建方法、迭代重建方法发展到基于深度学习的图像重建方法。<strong>低剂量、多能**</strong>CT<strong>**和基于深度学习的智能图像识别算法是目前的研究热点。</strong>目前国内CT设备保有量为2万多台，每百万人口CT设备拥有量约14.9台。国内的联影、东软公司和安科高科技公司等制作的多排螺旋CT设备已经达到国际先进水平并且远销海外，但国内主要市场大半仍被西门子、通用和东芝等的外国公司所垄断。</p>\n<h2 id=\"临床核医学诊断\"><a href=\"#临床核医学诊断\" class=\"headerlink\" title=\"临床核医学诊断\"></a>临床核医学诊断</h2><p>临床核医学诊断以放射性核素(药物)在体内的分布作为成像依据反映人体代谢、组织功能和结构形态。上世纪50 年代初问世的直线型扫描机开创了核医学影像的历史，经历了半个多世纪的发展，<strong>伽玛相机(γ相机)</strong>、单光子发射计算机断层成像<strong>(SPECT，Single-photon Emission Tomography)</strong>和正电子发射计算机断层成像<strong>(PET，Positron Emission Tomography)</strong>等设备相继问世并在各大医院得到普及。</p>\n<p>γ相机采用像素级的γ探测器对生物体内的核素分布进行成像，像素灰度值的大小反映探测到的γ射线的强度。γ相机的类型较多，可分为Anger相机、针孔相机、编码孔相机和康普顿相机等，分别基于电子准直技术和机械准直技术。编码孔相机成像速度比针孔相机成像速度快数十倍。<strong>由于采用机械准直技术的γ相机射线利用率低成像速度慢，目前研究热点集中在两个方面，一方面改进编码孔成像技术，另一方面研发高性能电子准直的康普顿成像技术。</strong></p>\n<p>二维成像的γ相机无法实现人体内三维核素分布的成像。SPECT和PET是核医学的两种CT技术，都是对人体内发射的γ射线进行成像，也统称为发射型计算机断层成像（ECT，Emission Computed Tomography）。只是SPECT和PET注射的核药种类不同。SPECT注射发射单个光子的核药（如，99Tc），而PET基于正电子湮灭原理，注射11C、13N、15O、18F等缺中子核素。由于11C、13N、15O、18F是生物有机组成的主要元素，故而PET可以检测人体的各种生理变化。单光子成像设备（SPECT和γ相机）全国装机总量625台左右。PET设备昂贵，检测费用高昂。一台PET设备价格1000~3000万不等，在享有医保的条件下一次检测费用8000元左右。目前，PET国内医院装机总量300台左右。PET采用符合采样方式，全身检测时间约2分钟。<strong>引起PET成像误差的因素较多：药物活度的快速衰变、高计数率造成的随机符合、人体吸收衰减和散射等。PET衰变、散射和随机符合等的校正方法均值得深入研究。</strong></p>\n<p>随着医学对疾病认识的深入，一个全面的临床诊断通常需要了解以下问题：（1）病变的形态学情况；（2）病变的生理功能情况；（3）病变的组织定征，如心肌组织是坏死还是冬眠；（4）病变组织的定性，如肺部阴影是否是肿瘤；（5）病变的分子生物学特征。要回答以上问题，不是一种显像设备能够解决，各种影像设备均有不足。CT能够对生物组织进行精细成像，但无法反映病人生理、代谢方面的情况。MR具有很高的软组织对比度分辨率，擅长脑、神经、血管等器官组织成像，能提供解剖学信息。PET能够观察病人的代谢和功能情况，然而图像空间分辨率比CT和MR均要差，解剖定位困难。故而，<strong>多模式复合成像系统是发展趋势，如PET-CT、PET-MR、SPECT-CT等。</strong></p>\n<p>核医学影像数字化和多模复合成像系统是必然趋势，主要研究内容包括：①低剂量成像方法；②稀疏采样图像重建算法；③基于深度学习的智能图像识别算法；④多模成像图像融合方法；⑤射线衰减校正和散射校正方法；⑥成像系统/设备/部件的研制等。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n","categories":["核医学"],"tags":["核医学诊断"]},{"title":"辐射场源项反演方法","url":"/2021/02/27/%E8%BE%90%E5%B0%84%E5%9C%BA%E6%BA%90%E9%A1%B9%E5%8F%8D%E6%BC%94%E6%96%B9%E6%B3%95/","content":"<h1 id=\"辐射场源项反演方法\"><a href=\"#辐射场源项反演方法\" class=\"headerlink\" title=\"辐射场源项反演方法\"></a>辐射场源项反演方法</h1><blockquote>\n<p>若能在现场人员进行作业之前，通过软件的方式来对作业过程进行模拟，并给出作业剂量信息，同时进行分析并优化作业方案，这样就可以进一步有效地降低作业人员的受照剂量，而这一切工作的前提是必须建立人员作业区域内的辐射场。因此，利用多学科前沿交叉技术和辐射防护新技术，在已有相关技术研究的基础上，开展辐射场快速计算方法研究，可以为辐射防护最优化提供先进的、更具操作性的技术支持手段，从而较大幅度提升核设施现场辐射防护的安全水平，在核设施运行、检修、退役等辐射领域，有广阔的应用前景</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h2 id=\"辐射场重建的常用方法\"><a href=\"#辐射场重建的常用方法\" class=\"headerlink\" title=\"辐射场重建的常用方法\"></a>辐射场重建的常用方法</h2><p>纵观各个国家在作业剂量模拟与方案优化方面的工作，其中涉及六个方面的关键点，如下图所示。 </p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210227222639564.png\" alt=\"image-20210227222639564\"></p>\n<p>目前对于复杂几何空间中的辐射剂量计算，实际上是对辐射传输方程(Boltzmann 方程)的求解，常用的方法有蒙特卡罗方法、离散纵标法和点核积分方法，如下图所示。 </p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210227222732488.png\" alt=\"image-20210227222732488\"></p>\n<h2 id=\"源项反演的目的及意义\"><a href=\"#源项反演的目的及意义\" class=\"headerlink\" title=\"源项反演的目的及意义\"></a>源项反演的目的及意义</h2><p>在辐射场的计算中，源项的信息作为输入量，是计算的前提，但在实际应用中，源项往往是未知的，尤其是源的活度信息。然而源项的其他信息往往是被现场辐射技术人员所熟知的，比如源的位置、数量及核素种类等，这就使得利用已知条件，结合某些位置处的剂量率的实测值等，对源项活度进行估算成为了可能。同时利用估算出的源的活度信息再计算出感兴趣区域的辐射场，比利用现有辐射场数据进行简单插值计算得到的结果要准确得多。</p>\n<h2 id=\"带权重和约束的源项活度反演计算\"><a href=\"#带权重和约束的源项活度反演计算\" class=\"headerlink\" title=\"带权重和约束的源项活度反演计算\"></a>带权重和约束的源项活度反演计算</h2><p>在核设施现场进行剂量率测量时，某些测量位置由于周围存在的干扰因素较多，其测量结果会有较大的误差，而有些测量位置处存在的干扰因素少，其测量值较为准确。研究可知，在利用这些测量值进行源活度反演计算时，误差较大的测量值会对那些在该位置处剂量率贡献成分较小的源项的活度计算结果影响很大，此时需要引入权重机制，来降低误差较大的测量值对源活度计算的影响，从而提高源活度反演结果的准确性。<br>另一方面，对于含有多个源项的活度反演计算，若其中某些源项的活度值是已知的，只需要对其他未知源项的活度进行计算，这是一个带约束的源活度反演计算问题，在实际计算中也经常遇到。 </p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210227222137063.png\" alt=\"image-20210227222137063\"></p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>李华. γ辐射场快速计算与源项反演方法研究及其初步应用[D]. 清华大学，2017.12</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n","categories":["辐射防护最优化"],"tags":["辐射防护"]},{"title":"肿瘤放射物理","url":"/2021/02/27/%E8%82%BF%E7%98%A4%E6%94%BE%E5%B0%84%E7%89%A9%E7%90%86/","content":"<h1 id=\"肿瘤放射物理（ROP）\"><a href=\"#肿瘤放射物理（ROP）\" class=\"headerlink\" title=\"肿瘤放射物理（ROP）\"></a><strong>肿瘤放射物理（</strong>ROP）</h1><p>以放射物理的基本原理和概念为基础的放射治疗，与手术、化学药物治疗共同组成了目前恶性肿瘤的三大治疗手段。据世界卫生组织（WHO）的统计，肿瘤治疗后45%左右的五年生存率中，22%为手术治疗、18%为放射治疗、5%为药物和其它方法治疗；随着技术发展，放射治疗的应用更加广泛，相关统计表明50%~70%的肿瘤病人需要进行放射治疗。</p>\n<a id=\"more\"></a>\n\n<p>以最大限度提高肿瘤的控制概率（TCP）、减少正常组织/器官的并发症概率（NTCP）为根本目标，肿瘤放射治疗的照射方式在不断进步，<strong>推动放疗技术向精准治疗发展</strong>。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/clip_image002.png\" alt=\"img\"></p>\n<h2 id=\"肿瘤照射方式\"><a href=\"#肿瘤照射方式\" class=\"headerlink\" title=\"肿瘤照射方式\"></a><strong>肿瘤照射方式</strong></h2><p>以加速器技术发展为前提，肿瘤照射方式在传统光子（X/γ射线）、电子放疗的基础上，<strong>发展了粒子放疗（质子、重离子）、硼中子俘获治疗（**</strong>BNCT<strong>**）、闪光放疗等技术</strong>。</p>\n<p>由于质子和重离子穿过物质形成布拉格峰的物理特性以及重离子（主要是C离子）优越的放射生物学特性，相对于光子可以增强靶区剂量并降低正常组织损害，特别适合于眼黑色素瘤等不可切除或不完全切除的局部侵犯性肿瘤、儿科恶性肿瘤等辐射耐受性差的肿瘤。随着对粒子治疗的需求不断增加以及加速器技术的日趋成熟，粒子治疗技术发展迅速；根据粒子治疗合作机构（PTCOG）截止2020年8月的统计：全球在运粒子治疗设施104座（质子92、C离子12），在建41座（质子35、C离子5、质子+C离子1），计划建设28座（质子26、质子+C离子2）。但<strong>粒子放射物理学和生物学的优势是否能转化为患者的治疗获益需要在临床中证实，还需要进一步的技术探索和临床研究</strong>，例如：器官运动造成的剂量波动、穿过不同密度组织的靶程不确定问题、剂量分布的均匀性控制、C离子生物效应、离子治疗在线监测成像等。</p>\n<p>BNCT利用含硼（10B）药物在癌细胞内选择性富集的特点，在中子照射时发生硼俘获反应，释放α粒子和7Li粒子来杀死肿瘤细胞，是具有靶向治疗、低毒高效的一种放疗技术，适合于脑胶质瘤、黑色素瘤等肿瘤。近年来随着加速器强流中子源的技术发展，是BNCT大规模临床应用成为可能；例如，日本政府就规划每百万人口配置0.55套BNCT设备。目前BNCT的临床应用还面临诸多问题，如具有特异亲和力的高效含硼药物研发、高精度的硼剂量测量系统等，需要开展大量的技术研发及细胞和动物实验研究工作。</p>\n<p>极高剂量率的射线照射生物体时，会出现肿瘤组织对射线依然敏感但正常组织敏感性降低的“闪光效应”；闪光放疗基于闪光效应的一种具有治疗前景的放疗方式，具有治疗时间极短（50ms）的优点，可避免治疗过程中的移动误差。闪光放疗在2014年从体外研究阶段转向动物体内研究阶段，并于2019年开展了首例人类皮肤淋巴瘤临床试验。目前，闪光放疗尚处于探索阶段，还需要深入开展放射生物学机制、剂量精确控制等方面的探索研究。</p>\n<h2 id=\"放疗技术\"><a href=\"#放疗技术\" class=\"headerlink\" title=\"放疗技术\"></a><strong>放疗技术</strong></h2><p>随着与计算机和影像学技术的有机结合，放射治疗从常规放疗向精准放疗发展，<strong>在**</strong>2<strong><strong>维放疗的基础上实现了</strong></strong>3<strong><strong>维适形放疗和</strong></strong>4<strong><strong>维动态放疗技术，正在探索自适应放疗技术，并提出了基于生物靶向的</strong></strong>5<strong>**维放疗概念</strong>。</p>\n<p>二维放疗是通过遮挡方式实现不规则形状射野进行均匀剂量照射。三维适形放疗（3D-CRT）以三维解剖影像为基础，通过多叶准直器自动控制和正向三维治疗计划，提高射线剂量体积和靶体积在三维形状上的适形指数；调强适形放疗（IMRT）通过逆向三维治疗计划、细分射束子野并动态调强的方式，使靶体积内各点的剂量分布高度适形。影像引导放疗（IGRT）在三维放疗的基础上引入时间因素，通过图像引导来降低摆位误差、器官运动、解剖结构变化对剂量分布的影响；自适应放疗（ART）则是通过影像信息的动态变化修正治疗计划，实施个体化治疗。生物靶向放疗（BIMRT/BIGRT）通过获取代谢、功能、生理和基因表型等生物影像信息，将肿瘤的放射敏感性差异引入放疗计划，是一种将物理适形和生物适形相结合的5维适形放疗概念。</p>\n<p>综上所示，粒子放疗、硼中子俘获治疗、闪光放疗等在未来具有临床前景，与此同时放疗技术也在向精确治疗发展；<strong>但从一种技术手段发展为常规临床治疗手段还需要深入开展以下方面的工作</strong>：①放疗设备/部件国产化研制；②放射生物学机制的基础探索；③多维影像重建/多模式影像融合技术研究；④照射野参数的正向/逆向确定技术研究；⑤图像引导及自适应修正方法；⑥三维剂量仿真及模型验证技术研究；⑦放疗在线监测成像技术研究等。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n","categories":["核医学"],"tags":["放疗"]},{"title":"迁移学习基本概念","url":"/2021/03/01/%E8%BF%81%E7%A7%BB%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","content":"<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/qrsearch2.png\" alt=\"qrsearch2\"></p>\n<blockquote>\n<p>机器学习是人工智能的一大类重要方法，也是目 前发展最迅速、效果最显著的方法。机器学习解决的是让机器自主地从数据中获取知识，从 而应用于新的问题中。迁移学习作为机器学习的一个重要分支，侧重于将已经学习过的知 识迁移应用于新的问题中。 迁移学习的核心问题是，找到新问题和原问题之间的相似性，才可以顺利地实现知识 的迁移。比如在我们一开始说的天气问题中，那些北半球的天气之所以相似，是因为它们的 地理位置相似；而南北半球的天气之所以有差异，也是因为地理位置有根本不同。</p>\n</blockquote>\n<h2 id=\"❓为什么需要迁移学习\"><a href=\"#❓为什么需要迁移学习\" class=\"headerlink\" title=\"❓为什么需要迁移学习\"></a>❓为什么需要迁移学习</h2><a id=\"more\"></a>\n\n<h3 id=\"❗传统机器学习面临的困境\"><a href=\"#❗传统机器学习面临的困境\" class=\"headerlink\" title=\"❗传统机器学习面临的困境\"></a>❗传统机器学习面临的困境</h3><ol>\n<li>大数据与少标注之间的矛盾。</li>\n</ol>\n<p>机器学习模型的训练和更新，均依赖于数据的标注。然而，尽管我们可以获 取到海量的数据，这些数据往往是很初级的原始形态，很少有数据被加以正确的人工标注。 数据的标注是一个耗时且昂贵的操作，目前为止，尚未有行之有效的方式来解决这一问题。 这给机器学习和深度学习的模型训练和更新带来了挑战。反过来说，特定的领域，因为没有 足够的标定数据用来学习，使得这些领域一直不能很好的发展。</p>\n<ol start=\"2\">\n<li>大数据与弱计算之间的矛盾</li>\n</ol>\n<p>大数据，就需要大设备、强计算能力的设备来进行存储和计算。然而，大数据的大计算 能力，是” 有钱人” 才能玩得起的游戏。比如 Google，Facebook，Microsoft，这些巨无霸 公司有着雄厚的计算能力去利用这些数据训练模型。例如，ResNet 需要很长的时间进行训 练。Google TPU 也都是有钱人的才可以用得起的。 绝大多数普通用户是不可能具有这些强计算能力的。这就引发了大数据和弱计算之间 的矛盾。在这种情况下，普通人想要利用这些海量的大数据去训练模型完成自己的任务，基 本上不太可能。那么如何让普通人也能利用这些数据和模型？</p>\n<ol start=\"3\">\n<li>普适化模型与个性化需求之间的矛盾</li>\n</ol>\n<p>机器学习的目标是构建一个尽可能通用的模型，使得这个模型对于不同用户、不同设 备、不同环境、不同需求，都可以很好地进行满足。这是我们的美好愿景。这就是要尽可能地提高机器学习模型的泛化能力，使之适应不同的数据情形。基于这样的愿望，我们构建了 多种多样的普适化模型，来服务于现实应用。然而，这只能是我们竭尽全力想要做的，目前 却始终无法彻底解决的问题。人们的个性化需求五花八门，短期内根本无法用一个通用的 模型去满足。比如导航模型，可以定位及导航所有的路线。但是不同的人有不同的需求。比 如有的人喜欢走高速，有的人喜欢走偏僻小路，这就是个性化需求。并且，不同的用户，通 常都有不同的隐私需求。这也是构建应用需要着重考虑的。<br>所以目前的情况是，我们对于每一个通用的任务都构建了一个通用的模型。这个模型 可以解决绝大多数的公共问题。但是具体到每个个体、每个需求，都存在其唯一性和特异 性，一个普适化的通用模型根本无法满足。那么，能否将这个通用的模型加以改造和适配， 使其更好地服务于人们的个性化需求？</p>\n<ol start=\"4\">\n<li>特定应用的需求</li>\n</ol>\n<p>机器学习已经被广泛应用于现实生活中。在这些应用中，也存在着一些特定的应用，它 们面临着一些现实存在的问题。比如推荐系统的冷启动问题。一个新的推荐系统，没有足够 的用户数据，如何进行精准的推荐? 一个崭新的图片标注系统，没有足够的标签，如何进行 精准的服务？现实世界中的应用驱动着我们去开发更加便捷更加高效的机器学习方法来加 以解决。</p>\n<h3 id=\"👁‍🗨迁移学习是如何进行解决的呢\"><a href=\"#👁‍🗨迁移学习是如何进行解决的呢\" class=\"headerlink\" title=\"👁‍🗨迁移学习是如何进行解决的呢?\"></a>👁‍🗨迁移学习是如何进行解决的呢?</h3><ol>\n<li>大数据与少标注：迁移数据标注<br>单纯地凭借少量的标注数据，无法准确地训练高可用度的模型。为了解决这个问题，我 们直观的想法是：多增加一些标注数据不就行了？但是不依赖于人工，如何增加标注数据？<br>利用迁移学习的思想，我们可以寻找一些与目标数据相近的有标注的数据，从而利用 这些数据来构建模型，增加我们目标数据的标注。</li>\n<li>大数据与弱计算：模型迁移<br>不可能所有人都有能力利用大数据快速进行模型的训练。利用迁移学习的思想，我们 可以将那些大公司在大数据上训练好的模型，迁移到我们的任务中。针对于我们的任务进 行微调，从而我们也可以拥有在大数据上训练好的模型。更进一步，我们可以将这些模型针 对我们的任务进行自适应更新，从而取得更好的效果。</li>\n<li>普适化模型与个性化需求：自适应学习<br>为了解决个性化需求的挑战，我们利用迁移学习的思想，进行自适应的学习。考虑到不 同用户之间的相似性和差异性，我们对普适化模型进行灵活的调整，以便完成我们的任务。</li>\n<li>特定应用的需求：相似领域知识迁移<br>为了满足特定领域应用的需求，我们可以利用上述介绍过的手段，从数据和模型方法 上进行迁移学习。<br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210301223124770.png\" alt=\"image-20210301223124770\"></li>\n</ol>\n<h2 id=\"✅与已有概念的区别与联系\"><a href=\"#✅与已有概念的区别与联系\" class=\"headerlink\" title=\"✅与已有概念的区别与联系\"></a>✅与已有概念的区别与联系</h2><ol>\n<li><p>迁移学习 VS 传统机器学习：<br>迁移学习属于机器学习的一类，但它在如下几个方面有别于传统的机器学习</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210301230620912.png\" alt=\"image-20210301230620912\"></p>\n</li>\n<li><p>迁移学习 VS 多任务学习：<br>多任务学习指多个相关的任务一起协同学习；迁移学习则强调知识由一个领域迁移到 另一个领域的过程。迁移是思想，多任务是其中的一个具体形式。</p>\n</li>\n<li><p>迁移学习 VS 终身学习：<br>终身学习可以认为是序列化的多任务学习，在已经学习好若干个任务之后，面对新的 任务可以继续学习而不遗忘之前学习的任务。迁移学习则侧重于模型的迁移和共同学习。</p>\n</li>\n<li><p>迁移学习 VS 领域自适应：<br>领域自适应问题是迁移学习的研究内容之一，它侧重于解决特征空间一致、类别空间 一致，仅特征分布不一致的问题。而迁移学习也可以解决上述内容不一致的情况。</p>\n</li>\n<li><p>迁移学习 VS 增量学习：<br>增量学习侧重解决数据不断到来，模型不断更新的问题。迁移学习显然和其有着不同 之处。</p>\n</li>\n<li><p>迁移学习 VS 自我学习：<br>自我学习指的是模型不断地从自身处进行更新，而迁移学习强调知识在不同的领域间 进行迁移。</p>\n</li>\n<li><p>迁移学习 VS 协方差漂移<br>协方差漂移指数据的边缘概率分布发生变化。领域自适应研究问题解决的就是协方差 漂移现象。</p>\n</li>\n</ol>\n<h2 id=\"💌负迁移\"><a href=\"#💌负迁移\" class=\"headerlink\" title=\"💌负迁移\"></a>💌负迁移</h2><p>我们都希望迁移学习能够比较顺利地进行，我们得到的结果也是满足我们要求的，皆 大欢喜。然而，事情却并不总是那么顺利。这就引入了迁移学习中的一个负面现象，也就是 所谓的负迁移。</p>\n<p>用我们熟悉的成语来描述：如果说成功的迁移学习是“举一反三”、“照猫画虎”，那么 负迁移则是“东施效颦”。东施已经模仿西施捂着胸口皱着眉头，为什么她还是那么丑?</p>\n<p>要理解负迁移，首先要理解什么是迁移学习。迁移学习指的是，利用数据和领域之间存 在的相似性关系，把之前学习到的知识，应用于新的未知领域。迁移学习的核心问题是，找 到两个领域的相似性。找到了这个相似性，就可以合理地利用，从而很好地完成迁移学习任 务。比如，之前会骑自行车，要学习骑摩托车，这种相似性指的就是自行车和摩托车之间的 相似性以及骑车体验的相似性。这种相似性在我们人类看来是可以接受的。</p>\n<p>所以，如果这个相似性找的不合理，也就是说，两个领域之间不存在相似性，或者基本 不相似，那么，就会大大损害迁移学习的效果。还是拿骑自行车来说，你要拿骑自行车的经 验来学习开汽车，这显然是不太可能的。因为自行车和汽车之间基本不存在什么相似性。所 以，这个任务基本上完不成。这时候，我们可以说出现了负迁移 (Negative Transfer)。</p>\n<p>所以，为什么东施和西施做了一样的动作，反而变得更丑了？因为东施和西施之间压根 就不存在相似性。</p>\n<p>负迁移指的是，在源域上学习到的知识，对于目标域上的学习产生负面作用。</p>\n<p>产生负迁移的原因主要有：</p>\n<ul>\n<li>数据问题：源域和目标域压根不相似，谈何迁移？</li>\n<li>方法问题：源域和目标域是相似的，但是，迁移学习方法不够好，没找到可迁移的成 分。<br>负迁移给迁移学习的研究和应用带来了负面影响。在实际应用中，找到合理的相似性， 并且选择或开发合理的迁移学习方法，能够避免负迁移现象。</li>\n</ul>\n<h3 id=\"最新研究成果\"><a href=\"#最新研究成果\" class=\"headerlink\" title=\"最新研究成果\"></a>最新研究成果</h3><p>随着研究的深入，已经有新的研究成果在逐渐克服负迁移的影响。杨强教授团队 2015 在 数据挖掘领域顶级会议KDD上发表了传递迁移学习文章Transitive transfer learning ， 提出了传递迁移学习的思想。传统迁移学习就好比是踩着一块石头过河，传递迁移学习就 好比是踩着连续的两块石头。 更进一步，杨强教授团队在 2017 年人工智能领域顶级会议 AAAI 上发表了远领域迁 移学习的文章 Distant domain transfer learning ，可以用人脸来识别飞机！ 这就好比是踩着一连串石头过河。这些研究的意义在于，传统迁移学习只有两个领域足够 相似才可以完成，而当两个领域不相似时，传递迁移学习却可以利用处于这两个领域之间 的若干领域，将知识传递式的完成迁移。这个是很有意义的工作，可以视为解决负迁移的有 效思想和方法。可以预见在未来会有更多的应用前景。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210301231518157.png\" alt=\"image-20210301231518157\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n"},{"title":"小样本学习研究综述","url":"/2021/03/03/%E5%B0%8F%E6%A0%B7%E6%9C%AC%E5%AD%A6%E4%B9%A0%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0/","content":"<p>近年来,在大数据训练模型的趋势下,机器学习和深度学习在许多领域中取得了成功.但是在现实世界中的很多应用场景中,样本量很少或者标注样本很少,而对大量无标签样本进行标注工作将会耗费很大的人力.所以,如何用少量样本进行学习就成为目前人们需要关注的问题.系统地梳理了当前小样本学习的相关工作,具体来说介绍了基于模型微调、基于数据增强和基于迁移学习这 3 大类小样本学习模型与算法的研究进展;将基于数据增强的方法细分为基于无标签数据、基于数据合成和基于特征增强这3 类,将基于迁移学习的方法细分为基于度量学习、基于元学习和基于图神经网络这 3 类</p>\n<!-- more\n-->\n\n<h2 id=\"1-基于模型微调的小样本学习\"><a href=\"#1-基于模型微调的小样本学习\" class=\"headerlink\" title=\"1   基于模型微调的小样本学习\"></a>1   基于模型微调的小样本学习</h2><p>基于模型微调的方法是小样本学习较为传统的方法,该方法通常在大规模数据上预训练模型,在目标小样本数据集上对神经网络模型的全连接层或者顶端几层进行参数微调,得到微调后的模型.若目标数据集和源数据集分布较类似,可采用模型微调的方法. </p>\n<p>为了使微调后的小样本分类模型取得较好的效果,使用何种微调方法需要被考虑.Howard 等人在 2018年提出了一个通用微调语言模型(universal language model fine-tuning,简称ULMFit).与其他模型不同的是,此方法使用了语言模型而非深度神经网络.该模型分为3 个阶段:(1) 语言模型预训练;(2) 语言模型微调;(3) 分类器微调.该模型的创新点在于改变学习速率来微调语言模型,主要体现在两个方面. </p>\n<p>1)    传统方法认为,模型每一层学习速率相同;而ULMFit 中,语言模型的每一层学习速率均不相同.模型底层表示普遍特征,这些特征不需要很大调整,所以学习速率较慢;而高层特征更具有独特性,更能体现出任务和数据的独有特征,于是高层特征需要用更大的学习速率学习.总体看来,模型底层到最高层学习速率不断加快.<br>2)    对于模型中的同一层,当迭代次数变化时,自身学习率也会相应地产生变化.作者提出了斜三角学习率的概念,当迭代次数从 0 开始增加时,学习速率逐渐变大;当迭代次数增长到某个固定值时,此时已经学习到了足够知识,固定值之后的学习率又开始逐步下降.</p>\n<p>基于模型微调的方法较简单,但是在真实场景中,目标数据集和源数据集往往并不类似,采用模型微调的方法会导致模型在目标数据集上过拟合.为解决模型在目标数据集上过拟合的问题,两种解决思路被提出:基于数据增强和基于迁移学习的方法.</p>\n<h2 id=\"2-基于数据增强的小样本学习\"><a href=\"#2-基于数据增强的小样本学习\" class=\"headerlink\" title=\"2   基于数据增强的小样本学习\"></a>2   基于数据增强的小样本学习</h2><p>小样本学习的根本问题在于样本量过少,从而导致样本多样性变低.在数据量有限的情况下,可以通过数据增强(data augmentation)来提高样本多样性.数据增强指借助辅助数据或辅助信息,对原有的小样本数据集进行数据扩充或特征增强.数据扩充是向原有数据集添加新的数据,可以是无标签数据或者合成的带标签数据;特征增强是在原样本的特征空间中添加便于分类的特征,增加特征多样性.基于上述概念,本文将基于数据增强的方法分为基于无标签数据、基于数据合成和基于特征增强的方法三种.</p>\n<ul>\n<li><p>基于无标签数据的方法是指利用无标签数据对小样本数据集进行扩充,常见的方法有半监督学习和直推式学习等.</p>\n</li>\n<li><p>基于数据合成的方法是指为小样本类别合成新的带标签数据来扩充训练数据,常用的算法有生成对抗网络(generative adversarial net)等</p>\n</li>\n<li><p>除了利用辅助数据来增强样本空间之外,还可通过增强样本特征空间来提高样本的多样性,因为小样本学习的一个关键是如何得到一个泛化性好的特征提取器.</p>\n</li>\n</ul>\n<h2 id=\"3-基于迁移学习的小样本学习\"><a href=\"#3-基于迁移学习的小样本学习\" class=\"headerlink\" title=\"3   基于迁移学习的小样本学习\"></a>3   基于迁移学习的小样本学习</h2><p>迁移学习是指利用旧知识来学习新知识,主要目标是将已经学会的知识很快地迁移到一个新的领域中. .迁移学习主要解决的一个问题是小样本问题.基于模型微调的方法在源数据集和目标数据集分布大致相同时有效,分布不相似时会导致过拟合问题.迁移学习则解决了这个问题.迁移学习只需要源领域和目标领域存在一定关联,使得在源领域和数据中学习到的知识和特征能够帮助在目标领域训练分类模型,从而实现知识在不同领域之间的迁移.一般来说,源领域和目标领域之间的关联性越强,那么迁移学习的效果就会越好。</p>\n<p>在迁移学习中,数据集被划分为 3 部分:训练集(training set)、支持集(support set)和查询集(query set).其中,训练集是指源数据集,一般包含大量的标注数据;支持集是指目标领域中的训练样本,包含少量标注数据;查询集是目标领域中的测试样本. </p>\n<p>根据迁移学习的方法不同, 将其分为基于度量学习、基于元学习和基于图神经网络的方法这 3 类.</p>\n<h3 id=\"3-1-度量学习\"><a href=\"#3-1-度量学习\" class=\"headerlink\" title=\"3.1 度量学习\"></a>3.1 度量学习</h3><p>在数学概念中，度量指衡量两个元素之间距离的函数，也叫做距离函数.度量学习也称为相似度学习，是指通过给定的距离函数计算两个样本之间的距离,从而度量它们的相似度。</p>\n<p>在深度学习中，我们通常采用欧氏距离、马氏距离和余弦相似度等。作为距离函数，将度量学习的框架应用到小样本学习上，顾名思义，就是通过计算待分类样本和已知分类样本之间的距离，找到邻近类别来确定待分类样本的分类结果。</p>\n<h3 id=\"3-2-元学习\"><a href=\"#3-2-元学习\" class=\"headerlink\" title=\"3.2 元学习\"></a>3.2 元学习</h3><p>元学习(meta-learning)也叫做学会学习(learning to learn)，是机器学习领域一个前沿的研究框架,针对于解决模型如何学习的问题.元学习的目的是让模型获得一种学习能力,这种学习能力可以让模型自动学习到一些元知识.元知识指在模型训练过程之外可以学习到的知识,比如模型的超参数、神经网络的初始参数、神经网络的结构和优化器等。</p>\n<h3 id=\"3-3-基于图神经网络的方法\"><a href=\"#3-3-基于图神经网络的方法\" class=\"headerlink\" title=\"3.3 基于图神经网络的方法\"></a>3.3 基于图神经网络的方法</h3><p>在计算机科学中,图作为一种数据结构,由点和边构成.图这种数据结构,具有表现力强和展示直观的优点.随着近年来机器学习的兴起,机器学习逐渐被应用到图的分析上.图神经网络是一种基于深度学习的处理图领域信息的模型,由于其较好的性能和可解释性,它最近已成为一种广泛应用的图分析方法. 图神经网络有很多种变体,比较常用的有图卷积神经网络(graph convolutional network)、门控图神经网络(gated graph neural network)和图注意力网络(graph attention network)等. </p>\n<h2 id=\"优缺点对比\"><a href=\"#优缺点对比\" class=\"headerlink\" title=\"优缺点对比\"></a>优缺点对比</h2><p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210303215307264.png\" alt=\"image-20210303215307264\"></p>\n<h2 id=\"参考文献：\"><a href=\"#参考文献：\" class=\"headerlink\" title=\"参考文献：\"></a>参考文献：</h2><p>赵凯琳,靳小龙,王元卓.小样本学习研究综述[J].软件学报,2021,32(02):349-369.</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n"},{"title":"提高文献阅读效率相关的工具","url":"/2021/03/07/%E6%8F%90%E9%AB%98%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB%E6%95%88%E7%8E%87%E7%9B%B8%E5%85%B3%E7%9A%84%E5%B7%A5%E5%85%B7/","content":"<h1 id=\"提高文献阅读效率相关的工具\"><a href=\"#提高文献阅读效率相关的工具\" class=\"headerlink\" title=\"提高文献阅读效率相关的工具\"></a>提高文献阅读效率相关的工具</h1><p>[toc]</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/qrsearch2.png\" alt=\"qrsearch2\"></p>\n<h2 id=\"1-文献管理工具\"><a href=\"#1-文献管理工具\" class=\"headerlink\" title=\"1. 文献管理工具\"></a>1. 文献管理工具</h2><h3 id=\"✏-Citavi\"><a href=\"#✏-Citavi\" class=\"headerlink\" title=\"✏ Citavi\"></a>✏ Citavi</h3><p>官网 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2l0YXZpLmNvbS9lbg==\">https://www.citavi.com/en<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>中文官网 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29mdGhlYWQtY2l0YXZpLmNvbS8=\">https://www.softhead-citavi.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2l0YXZpLmNvbS9lbg==\">Citavi<i class=\"fa fa-external-link-alt\"></i></span> 是瑞士学术软件公司开发、广受研究者欢迎的应用程序,它的功能主要可以分为五大项:收集及储存文献数据,查询及管理文献数据,以及帮助研究者快速地使用正确的论文格式撰写文章，知识组织整理，日常任务规划。我们可以将 Citavi 的设计概念理解为是在模拟一座属于自己的图书馆( Citavi Library),这座图书馆由原先空无一物开始,由我们将数据一笔一笔地或一次多笔地放进图书馆中,这些数据包含图书、期刊论文、影音媒体、法律文件、图片等。当图书馆内的数据多起来时,还可以通过群组将数据归类。检索的功能则可轻松调阅所需数据,方式与查询图书馆馆藏目录一样的便利。到了撰写论文的阶段,通过 Citavi 内建的论文模板和自动形成引用格式的功能可以大幅地减少各项文书工作的时间。</p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://www.softhead-citavi.com/wp-content/uploads/2017/07/c.png\" alt=\"img\"></p>\n<p>citavi可谓是文献管理中的战斗机，功能最为强大，除了跨平台和启动慢外，暂时没有发现有什么 其他缺点。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210307204327760.png\" alt=\"image-20210307204327760\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210307204359013.png\" alt=\"image-20210307204359013\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210307204417703.png\" alt=\"image-20210307204417703\"></p>\n<h3 id=\"🖌-Zotero\"><a href=\"#🖌-Zotero\" class=\"headerlink\" title=\"🖌 Zotero\"></a>🖌 Zotero</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuem90ZXJvLm9yZy8=\">https://www.zotero.org/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuem90ZXJvLm9yZy8=\">Zotero<i class=\"fa fa-external-link-alt\"></i></span>是一个开放源码的工具，可以轻松地收集、组织、引用和分享研究资源，可以使用网络浏览器扩展和电脑上的独立程序。由于此网站是开源的，因此是完全免费的。Zotero是一个很好的参考管理器，特别是对于学生来说，因为它可以在个人设备(笔记本电脑、iPad、手机等)上同时运行网络服务和离线服务。Zotero不仅可以存储和格式化书目信息，还可以组织、标记和搜索这些信息，自动、无缝地从书籍、期刊文章和其他在线资源中提取信息，使得创建参考列表的整个过程变得轻松。</p>\n<p>特点是跨平台，对中文兼容性好</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/screenshot-1.4.png\" alt=\"Screenshot of the Zotero desktop application\"></p>\n<h3 id=\"🖍-Mendeley\"><a href=\"#🖍-Mendeley\" class=\"headerlink\" title=\"🖍 Mendeley\"></a>🖍 Mendeley</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVuZGVsZXkuY29tLz9pbnRlcmFjdGlvbl9yZXF1aXJlZD10cnVl\">https://www.mendeley.com/?interaction_required=true<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVuZGVsZXkuY29tLz9pbnRlcmFjdGlvbl9yZXF1aXJlZD10cnVl\">Mendeley<i class=\"fa fa-external-link-alt\"></i></span>与前面两个的功能差不多，老用户比较多；Mendeley是一个免费的学术文献交流平台，所有人都可以在Mendeley上搜索到世界各地的学术文献，而这些学术文献都是由用户自己上传进Mendeley “图书馆(Library)”进行编辑管理。美国媒体2013年4月9日爆出消息，老牌科技出版巨头Elsevier将收购Mendeley ，收购价格将在6900 万美元到1 亿美元之间 [1] 。</p>\n<p>Elsevier收购Mendeley之后，将能够把自己的线上渠道打通，也能够整合线上内容资源。Elsevier对外承诺，将会保持Mendeley开放的特性。</p>\n<h3 id=\"🖋-EndNote\"><a href=\"#🖋-EndNote\" class=\"headerlink\" title=\"🖋 EndNote\"></a>🖋 EndNote</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZW5kbm90ZS5jb20v\">EndNote<i class=\"fa fa-external-link-alt\"></i></span>与前面几个的功能差不多，可以说是文献管理领域的元老了，以前大部分高校都用的是EndNote；<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9FbmRub3Rl\">Endnote<i class=\"fa fa-external-link-alt\"></i></span>由Thomson Corporation下属的Thomson ResearchSoft 开发。 Thomson ResearchSoft是以学术信息市场化和开发学术软件为宗旨的子公司。Thomson Corporation总部位于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS/nvo7lm70vMTI1NDg2\">美国<i class=\"fa fa-external-link-alt\"></i></span>康涅狄格州的Stanford。</p>\n<h2 id=\"2-翻译工具\"><a href=\"#2-翻译工具\" class=\"headerlink\" title=\"2. 翻译工具\"></a>2. 翻译工具</h2><p>知名在线翻译工具主要有以下几个：</p>\n<ul>\n<li>百度翻译 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYW55aS5iYWlkdS5jb20vP2FsZHR5cGU9MTYwNDcjYXV0by96aA==\">https://fanyi.baidu.com/?aldtype=16047#auto/zh<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>谷歌翻译 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90cmFuc2xhdGUuZ29vZ2xlLmNuLw==\">https://translate.google.cn/<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>DeepL翻译  <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGVlcGwuY29tL3RyYW5zbGF0b3I=\">https://www.deepl.com/translator<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>划词翻译工具推荐 <code>copytranslator和百度翻译电脑版</code>，我个人已经不用<code>知云翻译</code>,你们如果感兴趣可以用。</p>\n<h3 id=\"🔰-CopyTranslator\"><a href=\"#🔰-CopyTranslator\" class=\"headerlink\" title=\"🔰 CopyTranslator\"></a>🔰 CopyTranslator</h3><p>有多种方式的翻译对比，复制立即翻译，但是翻译速度比较慢</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210307212847273.png\" alt=\"image-20210307212847273\"></p>\n<h3 id=\"🚀-百度翻译\"><a href=\"#🚀-百度翻译\" class=\"headerlink\" title=\"🚀 百度翻译\"></a>🚀 百度翻译</h3><p>也是复制翻译，特点是速度快</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210307213811886.png\" alt=\"image-20210307213811886\"></p>\n<h3 id=\"🏡-知云翻译阅读器\"><a href=\"#🏡-知云翻译阅读器\" class=\"headerlink\" title=\"🏡 知云翻译阅读器\"></a>🏡 知云翻译阅读器</h3><p>特点是ipdf阅读器集成划词翻译功能，但是窗口调节不方便，想用adobe pdf阅读器的话，就不要用这个了。</p>\n<h2 id=\"3-笔记工具\"><a href=\"#3-笔记工具\" class=\"headerlink\" title=\"3.  笔记工具\"></a>3.  笔记工具</h2><ul>\n<li>onenote</li>\n<li>印象笔记</li>\n<li>有道云笔记</li>\n<li>或者直接自己用建文件夹，用typora写笔记，放到云盘里</li>\n</ul>\n<h2 id=\"4-云盘推荐\"><a href=\"#4-云盘推荐\" class=\"headerlink\" title=\"4.云盘推荐\"></a>4.云盘推荐</h2><ul>\n<li>onedrive 微软自带，免费5G容量</li>\n<li>坚果云 国内厂商，类似onedrive，比较好用</li>\n<li>阿里云盘</li>\n<li>百度网盘</li>\n<li>华为云盘</li>\n<li>蓝奏云</li>\n<li>dropbox</li>\n<li>google云盘</li>\n<li>office 365云盘</li>\n</ul>\n<p>好了，今天的介绍就到这里，大家可以按自己的喜好挑选自己的顺手的工具，希望大家能提高工作效率呀！！！</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n"},{"title":"综述-便携式gamma相机","url":"/2021/03/20/%E7%BB%BC%E8%BF%B0-%E4%BE%BF%E6%90%BA%E5%BC%8Fgamma%E7%9B%B8%E6%9C%BA/","content":"<h1 id=\"Portable-Gamma-Camera-for-Nuclear-Power-Plants\"><a href=\"#Portable-Gamma-Camera-for-Nuclear-Power-Plants\" class=\"headerlink\" title=\"Portable Gamma Camera for Nuclear Power Plants\"></a>Portable Gamma Camera for Nuclear Power Plants</h1><p><strong>SONG *<em>YuShou1, *</em>LI</strong> <strong>Hui</strong> 1, <strong>HU Liyuan1,</strong> <strong>HOU</strong> <strong>Yingwei1</strong>, LIU Huilan1 </p>\n<p><strong>Abstract:</strong> Gamma camera is a powerful tool to locate radioactive sources and contaminations in nuclear facilities. It is widely used in activities decommission, decontamination, maintenance and emergency response of nuclear power plants (NPPs). In recent decades, especially after the Fukushima nuclear accident a big progress has been made for this technique. A brief review of the principles and characteristics of three predominant imaging approaches are presented. The existing practical applications are summarized and potential application fields are discussed. </p>\n<p><strong>Keyword:</strong> portable gamma camera; nuclear power plants; decommission; emergency response</p>\n<a id=\"more\"></a>\n\n<h2 id=\"1-Introduction\"><a href=\"#1-Introduction\" class=\"headerlink\" title=\"1 Introduction\"></a>1 Introduction</h2><p>The nuclear emergency response has attracted much attention since the most recent nuclear catastrophe in Fukushima in 2011[1,2]. The investigation of the radioactive isotopes is very important for the activities of response and evacuation of the citizens around the power plants. The excellent performance of a gamma camera in radiation detection had attracted much attention. The gamma camera application for nuclear disaster response can be retrospect to the Chernobyl nuclear power plants accident [3-5]. A gamma camera equipped with a pinhole collimator called Gamma-Visor was used in the emergency response. It was developed by the Kurchatov Institute of Russia.</p>\n<p>Before Chernobyl disaster, a series of devices for imaging gamma sources had been used in nuclear medicine and astrophysics research [6, 7]. Anger Camera is a famous gamma camera applied in nuclear medicine. Multichannel collimators are used to form gamma images on a position sensitive detector. However, the industrial products of gamma camera used in medicine and astrophysics are not fit to inspect the radiation of nuclear power plants (NPPs). The containment of an NPP is filled with instruments and there is high level of radiation. It requited that a gamma camera should a small dimensions and light weight and can be controlled remotely. Further, the multichannel collimator is not able to visualize the radiation contaminated objects at a distance. And the multichannel collimator intended for medical application is not able to image the radioactive object at a distance.</p>\n<p>Consequently, several research groups developed portable gamma cameras for NPPs [2, 4, 8, 9], which can be mounted on a tripod or a mobile robot. They can be used to access radiation premise in the NPPs (Nuclear Power Plants) and inspect the radiation distribution during emergency response [10-15] and decommissioning [16-22]. In accidents of nuclear power plants, gamma cameras are supposed to provide the information about the leakage, contamination of radioactive matter to the emergency response. With the developments of nuclear power industry for decades, a lot of commercial and research nuclear plants have reached the end of their operating lifetime and are being shut-down. Before disassembling the reactors, the instruments in the reactor need to be decontaminated. Optimal decontamination strategies need to be used to minimize the staff radiation exposure according to the character of the contamination. The gamma camera is also a powerful tool to investigate the radiation contaminations [16-21, 23].</p>\n<p>This report gives an overview of the different gamma cameras used for the NPPs. The following three sections (section 2 to section 4) describe the three imaging approaches of the existing gamma cameras: the pinhole[4], the coded mask[24, 25] and the Compton scatter[26-28], respectively. The evolution of image processes and radiation sensors is discussed in section 5 and section 6, and a future perspective is placed in section 7. A summary is given in the last section.</p>\n<h2 id=\"2-The-pinhole-gamma-camera\"><a href=\"#2-The-pinhole-gamma-camera\" class=\"headerlink\" title=\"2 The pinhole gamma camera\"></a>2 The pinhole gamma camera</h2><p>The pinhole collimated gamma camera is based on the pinhole imaging principle [3-5, 8, 29-31]. The schematic diagram of the measuring head of pinhole collimated gamma camera is shown in Fig. 1. It consists of pinhole collimator, portable position sensitive detector, lead or tungsten alloy shielding, video camera and collimator stopper (shutter or filter).</p>\n<p>​                 <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320115551843.png\" alt=\"image-20210320115551843\">       </p>\n<p>Fig. 1 The schematic diagram of the gamma camera with the pinhole collimator</p>\n<p>The overturned gamma image of the visualized radioactive object is projected by the two-cone pinhole collimator. The diameter of the mini part of the collimator is less than 10mm. The distance between the pinhole and the scintillator is a constant as designed. Position sensitive scintillator matrix is connected with the image intensifier. The image intensifier composes of fiber tapers and photomultiplier or photodiode. The image intensifier connects with the CCD matrix to convert the radiation signal to digital signal which can be saved to the computer and used to reconstruct the composited image. A feature of this kind of gamma camera is the shutter in front of the collimator. When the shutter is closed, the background is measured, which may be used to eliminate the specific background from the image measured with the shutter open. With the shutter, one may increase the signal-to-noise ratio, meanwhile not increase the shielding.</p>\n<p>In the 1980s, researchers began to use gamma cameras in the field of searching the radiation source at NPPs. The Kurchatov Institute of Russia and the European research team CEA (French Alternative Energies and Atomic Energy Commission) developed their gamma cameras respectively [2, 4, 8, 9].</p>\n<p>The Gamma Visor prototype was designed by the Kurchatov Institute. The industrial products were applied to inspect the near-reactor premises under the complex gamma field conditions of high contaminated nuclear facilities in Russia and Germany. It is shown that the application of the portable gamma-ray imager is the fastest way for search and identification of the most contaminated fragments of equipment. In addition, it is verified that the major contaminated parts of the pipelines are their bends, places of pipes connection, and valves [3-5, 30, 31]. The gamma-ray imager also discovered some fragments with high contamination level which were not known earlier. For example, around the connection of two pipes the radioactive contamination concentrated much more at the weld place rather than the connecting place.</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320115617646.png\" alt=\"image-20210320115617646\"></p>\n<p>Fig. 2 The schematic diagram of gamma camera imaging on films</p>\n<p>At the same time, CEA also developed a pinhole-collimated gamma camera independently. It images gamma radiation and visual-light on films[29]. The schematic diagram is showed in Fig. 2. Two different types of films are presented for gamma ray sources and visible-light objects imaging respectively. The images are formed by exposing twice: once for the gamma rays sources with the shutter closed, and the second time for visual-lights objects with the shutter open. This device obtained a typical image which revealed the contamination inside a valve during a measurement campaign in the EDF power station at Bugey in 1985[29]. The brief design and its simple operation ensure the reliability in industrial applications. The most distinctive characteristic is that the device does not require electronic signal processing system and external power supply. The film allows for a wide dynamic energy range and permits simultaneous exposure of several emulsions with different sensitivities to cover a wide range of dose rates. The apparent disadvantage is its inherent offline measurement. The unit has to be placed blindly and the interesting field of view (FOV) can not be determined without the knowledge of the premises. The device must be set up after each exposure; and the handling operations before and after each exposure (cutting film sheets, placing them in the proper sequence, insertion in the chamber, removal, development, drying, etc.) must be performed with considerable care. The most serious drawback is the long exposure time (up to 24 hours) necessary to obtain a suitable image, which limits the application as a real-time monitor.</p>\n<p>CEA improved the film gamma camera to be an advanced online measuring system later [29]. It developed ALADIN, which adopted a scintillator radiation sensor CsI and an electronic data acquisition system. The angular resolution ranged from 1°to over 4°which depended on the radiation energy, the type of collimators used and the FOV of the device. A novel feature of ALADIN is that the visible-light image and gamma image are both obtained using the same acquisition system. </p>\n<p>In recent years, the Argonne National Laboratory developed a gamma camera using pinhole collimator RadSearch. It employs a sensitive and highly collimated LaBr3 scintillator as the detector head. An optical camera with controllable zoom and focus and a laser range finder are used to localize the objects. The schematic diagram of RadSearch detector head is shown in Fig. 3. The radiation sensor LaBr3 scintillator is shielded by tungsten. The collimator is made up of steel barrel and steel filter insert which has the similar function as the shutter of Gamma Visor.</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320115644300.png\" alt=\"image-20210320115644300\"></p>\n<p>Fig. 3 The schematic diagram of RadSearch detector head</p>\n<p>The detector head is mounted on a pan/tilt mechanism with a range of motion of 360 degree (pan) and 180 degree (tilt). The scan process is based on a rectangular grid scan of an area or object, which is known as the Scan Area or Scan Grid. The Scan Area is divided into rectangular Scan Elements, each of which is either equal to or less than the detector field of view, either 4 degrees with the collimator barrel fitted or 18 degrees with the collimator barrel removed. In normal operation, RadSearch provides a video image of the object or surface with a colored overlay showing the distribution of radioactivity. A gamma-ray spectrum is obtained for each Scan Element. From each measured spectrum a number of different radionuclides can be identified. And the radioactive source distribution can be determined according to the distribution of the counting rates in the scan area. The activity of different radionuclides and their spatial distribution in a waste container can be given by this instrument. Based on such information, one may establish the approach to assay canisters prior to processing [22, 32, 33]. </p>\n<p>The instrument is portable and the combined weight of all the components (including the tripod) is less than 54 kg. Therefore, it can be deployed by a single person in less than 10 min. During the measurement, the device can be controlled remotely. The device can be controlled wireless and modularized. Thus, it can be mounted on a tripod or mobile robot. The remote monitoring station makes up of a notebook computer and small power supply unit. RadSearch is normally operated from a notebook computer, which can be located up to 100 meters away from the detector head with the power supply unit. The device can be deployed readily indoors or in the field by an operator. Software allows both automatic and manual operation; and an operator can specify coordinates to search a specific position or area. A search can be conducted automatically in 4π steradians, using the full capabilities of the pan/tilt mechanism.</p>\n<p>China Academy of Engineering Physics developed a portable radionuclide identification system[34]. This system is a gamma ray spectrometer using a scintillator detector and a pulse height multi-channel analyzer. It can help to inspect the outflow of NPPs securing the radioactive safety. This portable gamma spectrometer consists of alternative LaBr3 or NaI detector (according to user demand) and a panel computer. The communication between the panel computer and the detector can be by Bluetooth and USB. With the Bluetooth type connection, the maximum distance between the detector and the panel computer is 15 meters. It has two types of measurement model, 30 s and 120 s for identifying different radionuclides. The experimental test shows that 30 s is long enough to identify radionuclides successfully. The data for different radionuclide is saved in the panel computer. The artificial neutral network algorithm is adopted to perform the nuclide identification.</p>\n<h2 id=\"3-The-coded-mask-gamma-camera\"><a href=\"#3-The-coded-mask-gamma-camera\" class=\"headerlink\" title=\"3 The coded mask gamma camera\"></a>3 The coded mask gamma camera</h2><p>During the development of these pinhole gamma camera products, researchers found out the fact that the sensitivity of a gamma camera increases and the angle resolution decreases with enlarging the diameter of the pinhole aperture. For example, two pinhole collimators with FOVs of 30°and 50°were provided to form gamma image for CARTOGAM. In Table 1 the FWHM values measured at 660keV (137Cs) and 1.25MeV (60Co) are listed for different camera configurations. According to Table 1, we can see that gamma cameras equipped with 30°pinhole collimator has better spatial resolution than fixed with 50°pinhole collimator. And if a gamma camera equips with the same FOV collimator, the 2 millimeter thick scintillator has better spatial resolution.</p>\n<p><strong>Table 1</strong> <strong>The angular response (FWHM) of CARTOGAM measured for different gamma energies, scintillator thicknesses and collimator types</strong></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>241Am  (59keV)</th>\n<th>137Cs  (660keV)</th>\n<th>60Co  (1.25MeV)</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Thickness</td>\n<td>4mm</td>\n<td>2mm</td>\n<td>4mm</td>\n<td>2mm</td>\n<td>4mm</td>\n</tr>\n<tr>\n<td>30°collimator</td>\n<td>2.0°</td>\n<td>1.9°</td>\n<td>2.3°</td>\n<td>2.8°</td>\n<td>3.2°</td>\n</tr>\n<tr>\n<td>50°collimator</td>\n<td>3.1°</td>\n<td>3.3°</td>\n<td>4.6°</td>\n<td>6.1°</td>\n<td>6.7°</td>\n</tr>\n</tbody></table>\n<p>Using a pinhole to image is very simple in principle but very inefficient in practice. A highly attractive alternative is to substitute the pinhole with a coded mask collimator. The coded mask collimated gamma camera is also composed of a radiation detector and a video camera. The radiation detector consists of a coded mask, a scintillator plate, image intensifiers, and CCD matrix. The principle of the measuring process is as follows. </p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320120136574.png\" alt=\"image-20210320120136574\"></p>\n<p>(a)</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320120152625.png\" alt=\"image-20210320120152625\"></p>\n<p>(b)</p>\n<p>Fig.4 The imaging procedure for a camera with code masks collimator (a) and its structural schematic (b). </p>\n<p>Gamma rays interact with scintillator crystal, fluorescing and forming the radiation image which is modulated by the coded mask. The coded images should be decoded by the computer to get the images which reflect the radiation distribution accurately (Fig.4 (a)). Such coded masks have been designed and used for several decades, mainly for astrophysical applications [6, 7], but in most cases their size is of the magnitude of 1m. So that it can not be used in the premises of NPPs. And the video camera obtains the visual light images. The schematic diagram of gamma-imaging structural using coded mask collimator is shown in Fig.4 (b).</p>\n<p>CEA and the Kurchatov Institute both had their products using coded mask collimators. The ALADIN and CARTOGAM gamma camera developed by the CEA was tested combining with a very compact coded-mask [25, 35-37]. Based on the experience of developing the pinhole gamma camera, Gamma Visor, the Kurchatov Institute used coded mask collimators on gamma cameras for nuclear reactor decontamination and decommissioning missions for the first time in 1999[31, 38-41]. </p>\n<p>The coded aperture mask is used to optimize the trade-off between the sensitivity and the spatial resolution. Three HURA (hexagonal uniformly redundant array) masks had been fabricated and tested, with different numbers of holes and thicknesses (Table 2), and fixed to ALADIN and CARTOGAM. The results of the first tests in laboratory showed a gain of a factor between 5 and 20 in sensitivity (according to the exposure) compared to the pinhole configuration, and a factor between 2 and 2.5 in angular resolution (according to gamma energy)[25]. They also demonstrated the ability of this device to efficiently remove the background noise, thanks to a mask pattern anti-symmetric by 60 degree rotation.</p>\n<p><strong>Table</strong> <strong>2</strong> <strong>Characteristics of the masks</strong></p>\n<table>\n<thead>\n<tr>\n<th>Mask</th>\n<th>Rank 6</th>\n<th>Rank 9</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Thickness</td>\n<td>12mm</td>\n<td>6mm</td>\n</tr>\n<tr>\n<td>Distance  between holes</td>\n<td>1.85mm</td>\n<td>1.26mm</td>\n</tr>\n<tr>\n<td>Number of  holes in central pattern</td>\n<td>64</td>\n<td>136</td>\n</tr>\n<tr>\n<td>Open area</td>\n<td>1.9cm2</td>\n<td>1.9cm2</td>\n</tr>\n</tbody></table>\n<p>Mask/anti-mask procedure was applied to CARTOGAM and it can also base on a ninety degrees rotation of the coded mask (Fig. 5). Two acquisitions were required (one in mask position, the other in anti-mask position) and the raw image is obtained by decoding the subtraction of these two gamma images. A measurement carried out in the NPPs site illustrates the mask/anti-mask procedure is efficient in removing the background radiation.</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320115729316.png\" alt=\"image-20210320115729316\"></p>\n<p>Fig.5. Coded masks. On the left: mask position. On the right: anti-mask position (nighty degrees rotation of the mask)</p>\n<h2 id=\"4-The-Compton-gamma-camera\"><a href=\"#4-The-Compton-gamma-camera\" class=\"headerlink\" title=\"4 The Compton gamma camera\"></a>4 The Compton gamma camera</h2><p>The pinhole and the coded mask cameras are supposed to give 2D radiation source distributions. To acquire the distance between the gamma camera and the radiation source, laser range finder is invoked.  Or measurements more than twice at different positions are performed (see Fig 6). The distance can be calculated by triangulation [42-44]. </p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320122038341.png\" alt=\"image-20210320122038341\"></p>\n<p>Fig. 6 The principle of locating the source position in three dimensions</p>\n<p>In order to obtain the 3D radiation distribution more conveniently and effectively, a Compton camera has been was proposed. Compton camera is a device which can locate the incident direction of gamma rays based on the Compton kinetics by measuring the energy deposition and interaction positions in the scatter and absorber (Fig. 7). </p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320122115160.png\" alt=\"image-20210320122115160\"></p>\n<p>Fig. 7 The schematic diagram of the Compton gamma camera</p>\n<p>The scatter and absorber scintillator are position sensitive. Actually, if the two interaction position of a gamma ray in the radiation sensor can be determined, the incident direction of the gamma ray can be calculated by equation (1). </p>\n<p>​         <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320115830895.png\" alt=\"image-20210320115830895\">    (1)</p>\n<p>In the equation (1), θe is the Compton scatter angle. E1 is the energy deposited in scatter and E2 is the energy deposited in the absorber. me is the energy mass of scattered photoelectron. The direction of each incident photon is on the surface of a cone with its vertex at the first interaction position. The line connecting the scattering point and absorption point is the axis of symmetry. The back-projection cone of each photon passes through the source position. Thus, the source direction can be reconstructed with the overlap of the cones.</p>\n<p>A research team from Japan developed a handheld Compton camera for the catastrophe in the Fukushima Daiichi Nuclear Power Station [1, 2]. This device can be used to detect the depth of the radioactive sources embedded under the contaminated surface[1]. The Compton camera (14cmÍ15cmÍ 16cm, 2.5kg) uses Ce:GAGG (Ce doped Gd3Al2Ga3O12) crystal as the detector [1, 2, 26, 45]. The angular resolution is ~8 degree (FWHM) for a 137Cs source. The handheld Compton camera realizes a 180 degree FOV with sensitivity   1% for 662 keV gamma rays. The performance is satisfied in tests. </p>\n<p>Dan Xu et al. from the University of Michigan also developed a compact Compton camera Polaris-H imaging spectrometer supported by DOE and DHS in 2004 [27, 28, 46, 47]. Polaris-H was designed to obtain the radiation distribution and identify isotopic composition of the sources on nuclear power plants premises. It integrates a 3D-position sensitive pixelated CdZnTe detector (20mmÍ20mmÍ15mm), associated with readout electronics, an embedded computer, a 5h battery, and an optical camera in a portable waterproof enclosure [9, 48-55]. The total mass is about 4 kg, and the system startup time is 2 min. The energy resolution is nearly 1.0% (FWHM) for 137Cs. </p>\n<h2 id=\"5-The-visible-light-image\"><a href=\"#5-The-visible-light-image\" class=\"headerlink\" title=\"5 The visible-light image\"></a>5 The visible-light image</h2><p>In order to investigate the distribution of surface contamination and to locate the radioactive sources, a gamma camera is usually qualified with both radiation and vision imaging. The radiation detector is used to acquire radiation image and the optical camera is used to obtain optical image within the same detection direction and correlative FOV. Both ALADIN and Gamma Visor provide vision image in addition to the radiation image. The independent visible light imaging system of Gamma Visor performs better in the field testing in comparison with ALADIN. With separate imaging systems for radiation and visible light, the dual images usually are composited by the algorithm of maximum likelihood expectation maximization (MLEM) method or wavelet transform. </p>\n<p> <img src=\"../../../AppData/Roaming/Typora/typora-user-images/image-20210320115858234.png\" alt=\"image-20210320115858234\"></p>\n<p>(a)</p>\n<p> <img src=\"../../../AppData/Roaming/Typora/typora-user-images/image-20210320115906581.png\" alt=\"image-20210320115906581\"></p>\n<p>(b)</p>\n<p>Fig. 8 Two principles of combining the FOV of gamma camera with optical camera</p>\n<p>But the prerequisite is to make the detect direction and FOV of optical camera and radiation detector as consistent as possible (Fig.8) [56-58]. Usually the FOV of an optical camera is bigger than a radiation detector. It is feasible that we just make FOV of radiation detector central axis combine with that of optical camera as close as possible (Fig.8 (a)). Therefore, composited image will reflect the radioactive source contamination position in the scene precisely. This method has been most widely applied to gamma camera. It not only used in NPPs, but also used in medicine and astrophysical research.</p>\n<p>There is another way to get the FOV of optical camera agreed with gamma detector by using a mirror to separate visible lights and gamma rays (Fig.8 (b)). It can improve the location accuracy of the radioactive source in the measuring site from the superimposed image. It can also protect the optical camera from the radiation damage and it reduces the influence of the electronics noise caused by the irradiation. However, the device is heavy shielded owing to the gamma detector and the optical camera both locating after the collimator and the shielding material. Using mirror to get the FOV of the optical camera and radiation detector consistent is usually applied to the gamma camera used in medicines for the low environment radiation level and no limited volume size. Actually, if the distance between gamma camera and the radiation source is far away, there is not much difference on the radiation location accuracy adopting measuring method Fig 8.</p>\n<h2 id=\"6-The-radiation-sensor\"><a href=\"#6-The-radiation-sensor\" class=\"headerlink\" title=\"6 The radiation sensor\"></a>6 The radiation sensor</h2><p>The radiation sensor is the critical component of a gamma camera, which in some degree determines the sensitivity and the spatial resolution. </p>\n<p>The inorganic scintillator, such as NaI(Tl), CsI(Tl), CdWO4 and LaBr3 are widely used to detect gamma rays. Comparing with other scintillators, NaI(Tl) scintillator crystal has the highest light response. Cesium having larger Z than sodium, CsI has higher detection efficiency than NaI. That is why the CsI is widely used in a gamma camera, for example, Gamma Visor and ALADIN. In comparison with other inorganic scintillator, the light response of CdWO4 crystal is more stable against temperature change. This is the reason it can be used in high radiation level premises. Its’ signal decay time is longer and the wavelength of the emission spectrum is in the range of 400-500nm, which make it fit for coupling with photodiode. The CdWO4 radiation sensor is used in the detection system of the MR and RTF research reactor decommission mission [16, 18, 21]. The recently appearing LaBr3 with an energy resolution of 2.5% to 3% is an excellent room-temperature working scintillator. It has been applied to RadSearch. The energy resolution of LaBr3 detector is much better than NaI detector.</p>\n<p>However, Gamma Visor, ALADIN and RadSearch are still very heavy and the weight of each of them is more than 30 kg. Semiconductor radiation sensor is becoming a new research hotspot for its portable volume, high energy resolution and fast readout speed. The hybrid detector combining the Medipix/Timepix with semiconductor detector has also appeared. CEA and the Kurchatov Institute developed a new gamma camera GAMPIX using the hybrid detector (Fig. 9)[24, 59, 60]. GAMPIX has achieved technological breakthroughs in terms of sensitivity (energy range from 241Am to 60Co), portability (1 kg) and deployment time (a few minutes) in comparison with the existing industrial gamma camera [24, 25, 35-37, 41, 59-65]. When GAMPIX, ALADIN and CARTOGAM are equipped with a pinhole collimator with 50 degree aperture to image a 137Cs point source, GAMPIX achieves the best image quality, although its intrinsic detection efficiency is lower than that of the 4 mm CsI doped Thallium scintillator (4.5% vs. 13% at 662keV).</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210320115922630.png\" alt=\"image-20210320115922630\"></p>\n<p>Fig. 9 The schematic diagram of the semiconductor combined with Medipix/Timepix gamma camera with the coded mask</p>\n<h2 id=\"7-Future-perspectives\"><a href=\"#7-Future-perspectives\" class=\"headerlink\" title=\"7 Future perspectives\"></a>7 Future perspectives</h2><p>Gamma cameras have multi-applications in NPPs. It can be used to locate the primary source terms and to find discrete radioactive particles, helping to optimize the shielding of the individual working area by identifying the primary contribution to the dose from each isotope. It can also be used to locate isotopes in shipping containers, to locate and track crud in pipes and valves and to track sources through time. It can be applied to identify fuel failure, to verify clean-up work quality and to determine the spatial extent of contamination, too. Further, it can be used to characterize and qualify isotopes, to fill in blank areas of traditional survey maps and to help to respond to an emergency. Different application instances of the gamma camera are stated in the following. As mentioned above, the Gamma Visor was used in the Chernobyl nuclear accident and the advanced coded mask Gamma Visor was used in decommissioning of the Russia MR and RTF research reactors in 2008[17, 20, 21]. The RadSearch was applied to detect the radiation distribution of the NPPs waste container for optimizing the arrangement of the waste container [22, 32, 33]. The handy Compton camera and the Polaris-H are used in accident of the Fukushima Daiichi Nuclear Power Station to investigate the radiation distribution for reactor emergency response [1, 2, 9, 28, 48]. Gamma camera can be mounted on the tripod or mobile robot for remotely controlled measurements. Kinoshita H, Tayama R, Kometani E Y, et al developed a vehicle mounted Gamma Camera associating with plastic scintillator fiber to detect the gamma radiation of the premises of the Fukushima Daiichi Nuclear Power Station[13]. Japanese also developed many nuclear emergency robots, such as SMERT-M, SMERT-K and MARs, on which the gamma camera mounted [10-15]. Besides, the Canadian research team of University of Ontario Institute of Technology developed a semi-autonomous directional and spectroscopic radiation detection mobile platform, the gamma camera mounted on this platform just can detect the direction on which source located without other sensitive information[66]. </p>\n<p>The different characters of the different gamma cameras are shown in Table 3. The main differences between pinhole and coded mask gamma camera are the collimator and the imaging process. Compared with the pinhole collimator, the coded mask camera has achieved a trade-off between sensitivity and spatial resolution[25, 67]. Their common ability is to obtain 2D images of the radiation source distribution. To get the radiation 3D distribution, one may employee a Compton camera [28, 45, 46]. The big detection FOV allows Compton gamma camera to scan a contaminated area more quickly. At the same time, there are some issues supposed to be improved for the structure, data acquisition, and imaging process in the future [26-28, 68]. For example, the angle resolution of the handy Compton camera is ~8 degree, which is poorer than that of (4 degree) the traditional pinhole gamma camera ALADIN.</p>\n<p>Benefitting from the development of semiconductor industry and large scale integrated circuit technology the radiation sensor and electric readout system have been improved dramatically in recent decades. The weight of any one of ALADIN, CARTOGAM and Gamma-Visor is more than 15 kg. However, GAMPIX adopting semiconductor radiation sensor is only 2kg weight and can be arranged with pinhole collimator or coded mask. Further, the high angular resolution will make them more conveniently used in the investigation of contamination distribution. The negative parts are the semiconductor chip can not be manufactured with big size and it degenerates with the radiation dose increase. Because the semiconductor devices on the chip are highly integrated, heat dissipation auxiliary should be equipped, e.g. an air cooling fans is fixed for Polaris-H.</p>\n<p>In addition to improve the working performance of the contents of a gamma camera, some innovations on design also appear in recent years. Shifeng Sun et al. from China developed a panorama coded-aperture gamma camera for radiation detection[69]. The overall dimensions of this device are about 42Í42Í80 cm3; the system is based on six typical coded-aperture gamma camera which arranged in a hexagonal shape with a 10 mm thick copper shield. Every detector module is isolated from its adjacent modules by a 12 mm thick rectangular lead for radiation shielding. Three masks and three anti-masks are placed in front of six detector module at intervals. These masks form a mask layer isolated from the detector modules. And mask layer can rotate 60 degree for mask and anti-mask acquisition and subtraction. It is convenient to get mask and anti-mask switching by once set, because of that the adjacent masks are the anti-mask to current module. This panorama gamma camera has a FOV of 360 degree in the horizontal direction and 60 degree in the vertical direction. Compared with the standard coded mask gamma cameras, this system has higher detection efficiency and suitably applies to more complicated radiation environment. </p>\n<p>Pinhole and coded mask gamma cameras use mechanical collimation which relies on photon absorption with a FOV defined by the aperture size. While Compton gamma camera adopts electronic collimation to define the FOV, which based on the Compton scattering that relates the energy of a scattered photon to it direction. Because photo absorption is dominant in low energies, whereas Compton scattering prevails at higher energies, the effective energy range of a single gamma camera mentioned above is limited to either the low or the high energy ranges. Wonho Lee [43, 70] combined these two collimation models in one gamma camera. The scattering-layer scintillator detectors and the mask make up a coded mask gamma camera. At the same time the scattering-layer scintillator matrix and the absorbing-layer scintillator matrix constitutes a Compton gamma camera. So it can be seen as a hybrid of coded mask gamma camera and Compton gamma camera, simultaneously collecting information from both mechanical and electronic collimation to reconstruct a single composited image. The hybrid system performs better in a wide energy range. To improve the detection efficiency of this hybrid system and improve the image quality, some researchers replaced the convention collimator with scintillating crystals and called it an active collimation [71-73]. The scintillation crystals mask can not only shield the radiation, but also obtain position and energy deposition.</p>\n<p><strong>Table3</strong> <strong>Different characteristics</strong> <strong>of</strong> <strong>multi-type</strong> <strong>gamma cameras</strong></p>\n<table>\n<thead>\n<tr>\n<th>Characters</th>\n<th>Pinhole gamma camera</th>\n<th>Coded mask gamma camera</th>\n<th>Compton gamma camera</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Collimator</td>\n<td>Two conical collimator</td>\n<td>Coded multi aperture  collimator</td>\n<td>Without collimator</td>\n</tr>\n<tr>\n<td>Decoding Image process</td>\n<td>No</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>3D positioning</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Sensitivity</td>\n<td>Low</td>\n<td>Relative high</td>\n<td>High</td>\n</tr>\n<tr>\n<td>Measurement time</td>\n<td>Hours to day</td>\n<td>Several minutes to hours</td>\n<td>Several minutes to hours</td>\n</tr>\n<tr>\n<td>Angular resolution</td>\n<td>High</td>\n<td>High</td>\n<td>Low</td>\n</tr>\n<tr>\n<td>Operation</td>\n<td>Remote</td>\n<td>Remote</td>\n<td>Remote</td>\n</tr>\n</tbody></table>\n<h2 id=\"8-Summary\"><a href=\"#8-Summary\" class=\"headerlink\" title=\"8 Summary\"></a>8 Summary</h2><p>Gamma cameras used in NPPs are compact, modular and have high sensitivity and angular resolution. Efforts have been made to improve these performances. A gamma camera can be equipped with both pinhole collimator and coded mask collimator. A larger diameter of the collimator hole means higher sensitivity but lower angular resolution. One may balance the sensitivity and spatial resolution according to a concrete application. A Compton camera obtains images without a collimator, so that it gets rid of the limitation of sensitivity and angular resolution due to the collimator. However, the angle resolution of a Compton camera is not as good as a pinhole or a coded mask gamma camera. The radiation sensor also influences the detection efficiency, energy resolution and image quality. Scintillator (e.g. CsI(Tl) ) is widely used as the radiation sensor in a portable gamma camera. Semiconductor has superiorities in the compact volume and integration of the sensor and the electronic readout system. The spatial resolution can also be improved for semiconductor detectors for their high energy resolution. Besides the improvements on the performance of components of gamma camera, some innovate design of gamma cameras have also been proposed recent years. </p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p>[1]   Y. IWAMOTO, J. KATAOKA, A. KISHIMOTO.: Novel methods for estimating 3D distributions of radioactive isotopes in materials, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 831 (2016) 295-300.</p>\n<p>[2]   J. KATAOKA, A. KISHIMOTO, T. NISHIYAMA.: Handy Compton camera using 3D position-sensitive scintillators coupled with large-area monolithic MPPC arrays, Nuclear Instruments &amp; Methods in Physics Research, 732 (2013) 403-407.</p>\n<p>[3]   O.P. IVANOV, A.V. CHESNOKOV, V.E. STEPANOV.: Gamma-vision camera real-time system for creating images of gamma-radioactive objects, International Conference on Systems, Man and Cybernetics, 1993. &#39;systems Engineering in the Service of Humans&#39;, Conference Proceedings, 1993, pp. 1-6 vol.3.</p>\n<p>[4]   A.N. SUDARKIN, O.P. IVANOV, V.E. STEPANOV.: Portable gamma-ray imager and its application for the inspection of the near-reactor premises contaminated by radioactive substances, Nuclear Instruments &amp; Methods in Physics Research, 414 (1998) 418-426.</p>\n<p>[5]   A.G. VOLKOVICH, O.P. IVANOV, V.E. STEPANOV.: Application of a gamma viewer for examining reactors, Atomic Energy, 79 (1995) 772-775.</p>\n<p>[6]   E. CAROLI, J.B. STEPHEN, G.D. COCCO.: Coded aperture imaging in X- and gamma-ray astronomy, Space Science Reviews, 45 (1987) 349-403.</p>\n<p>[7]   R.H. DICKE.: Scatter-Hole Cameras for X-Rays and Gamma Rays, Astrophysical Journal, 153 (1968) L101.</p>\n<p>[8]   K.A. HUGHES, J.A. LIGHTFOOT.: RadScan 600-a portable instrument for the remote imaging of gamma contamination: its design and use in aiding decommissioning strategy, Nuclear Science Symposium, 1996. Conference Record, 1996, pp. 930-933 vol.932.</p>\n<p>[9]   C.G. WAHL, W.R. KAYE, W. WANG, F. ZHANG.: The Polaris-H imaging spectrometer, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 784 (2015) 377-381.</p>\n<p>[10]  J. ABOUAF.: Trial by fire: teleoperated robot targets chernobyl, IEEE Computer Graphics and Applications, 18 (1998) 10-14.</p>\n<p>[11]  Y. HOSODA, H. YAMAMOTO, M. HATTORI.: &#39;SWAN&#39;: A robot for nuclear disaster prevention support, Advanced Robotics, 16 (2002) 485-488.</p>\n<p>[12]  Y. ISOZAKI, K. NAKAI.: Development of a work robot with a manipulator and a transport robot for nuclear facility emergency preparedness, Advanced Robotics, 16 (2002) 489-492.</p>\n<p>[13]  H. KINOSHITA, R. TAYAMA, E.Y. KOMETANI.: Development of new technology for Fukushima Daiichi nuclear power station reconstruction, Hitachi Review, 63 (2014) 183.</p>\n<p>[14]  M. OTAKI.: Environmental monitoring robots for nuclear emergencies, Advanced Robotics, 16 (2002) 501-504.</p>\n<p>[15]  Y. YUGUCHI, Y. SATOH.: Development of a robotic system for nuclear facility emergency preparedness—observing and work-assisting robot system, Advanced Robotics, 16 (2002) 481-484.</p>\n<p>[16]  A. CHESNOKOV, O. IVANOV, V. KOLYADIN.: HLRW Management During MR Reactor Decommissioning in NRC “Kurchatov Institute”, ASME 2013 15th International Conference on Environmental Remediation and Radioactive Waste Management, American Society of Mechanical Engineers, 2013, pp. V001T002A008-V001T002A008.</p>\n<p>[17]  A. DANILOVICH, O. IVANOV, A. LEMUS.: Radiological survey of contaminated installations of research reactor before dismantling in high dose conditions with complex for remote measurements of radioactivity. 2012, WM2012 Conference, February, 2012.</p>\n<p>[18]  O. IVANOV, A. DANILOVICH, V. STEPANOV.: Remote Measurements of Radioactivity Distribution With BROKK Robotic System, ASME 2009 12th International Conference on Environmental Remediation and Radioactive Waste Management, American Society of Mechanical Engineers, 2009, pp. 157-159.</p>\n<p>[19]  O. IVANOV, V. STEPANOV, V. VOLKOV.: Application of portable gamma camera during an extraction of the radioactive wastes from temporal storage at territory of RRC Kurchatov institute, ICEM, pp. 4-8.</p>\n<p>[20]  V. STEPANOV, A. DANILOVICH, O. IVANOV.: Experience of application of new remote controlled instruments for scanning of distribution of radioactive contamination in rooms with high dose rate, ASME 2011 14th International Conference on Environmental Remediation and Radioactive Waste Management, American Society of Mechanical Engineers, 2011, pp. 89-93.</p>\n<p>[21]  V. VOLKOV, A. VOLKOVICH, A. DANILOVICH.: RADIATION SURVEY AND PREPARING FOR THE DECOMMISSIONING OF RESEARCH REACTOR MR, RRC “KURCHATOV INSTITUTE”, 2010.</p>\n<p>[22]  M.R. LOOMAN, J.A. MASON, ANTECH.: ANTECH Corporation 9050 Marshall Court, Westminster, Colorado, 80031, USA, DOI.</p>\n<p>[23]  O. IVANOV, V. STEPANOV, A. DANILOVICH.: The remote methods for radwaste and SNF control, Journal of Physics: Conference Series, IOP Publishing, 2017, pp. 012014.</p>\n<p>[24]  F. CARREL, R.A. KHALIL, S. COLAS.: GAMPIX: A new gamma imaging system for radiological safety and Homeland Security Purposes, 6963 (2011) 4739-4744.</p>\n<p>[25]  O. GAL, M. GMAR, O.P. IVANOV.: Development of a portable gamma camera with coded aperture, Nuclear Instruments &amp; Methods in Physics Research, 563 (2006) 233-237.</p>\n<p>[26]  T. NISHIYAMA, J. KATAOKA, A. KISHIMOTO.: Current status and optimization of handy compton camera using 3D position-sensitive scintillators, Nuclear Science Symposium and Medical Imaging Conference, 2013, pp. 1-5.</p>\n<p>[27]  D. XU, Z. HE.: Gamma-ray energy-imaging integrated spectral deconvolution, Nuclear Instruments &amp; Methods in Physics Research, 574 (2007) 98-109.</p>\n<p>[28]  D. XU, Z. HE, F. ZHANG.: 4-pi Compton imaging with single 3D position-sensitive CdZnTe detector, Proceedings of SPIE - The International Society for Optical Engineering, 5540 (2004) 144-155.</p>\n<p>[29]  C.L. GOALLER, G. IMBARD, H. CARCREFF.: The development and improvement of the Aladin gamma camera to localise gamma activity in nuclear installations: final report, DOI (1998).</p>\n<p>[30]  K.E. IVANOV, N.N. PONOMAREV-STEPNOI, B.S. STEPENNOV.: Remote measurement of the radiation dose rate on solid radwaste temporary storage site, Atomic Energy, 105 (2008) 133-137.</p>\n<p>[31]  A.N. SUDARKIN, O.P. IVANOV, V.E. STEPANOV.: High-energy radiation visualizer (HERV): a new system for imaging in X-ray and gamma-ray emission regions, IEEE Transactions on Nuclear Science, 43 (1996) 2427-2433.</p>\n<p>[32]  J.A. MASON, M.R. LOOMAN, A.J. POUNDALL.: Development and Testing of a Novel Gamma Ray Camera for Radiation Surveying, contamination measurement and radiation detection, Proceedings of INMM, DOI (2012).</p>\n<p>[33]  J.A. MASON, M.R. LOOMAN, A.J. POUNDALL.: Testing and Performance Validation of a Sensitive Gamma Ray Camera Designed for Radiation Detection and Decommissioning Measurements in Nuclear Facilities-13044, WM Symposia, 1628 E. Southern Avenue, Suite 9-332, Tempe, AZ 85282 (United States), 2013.</p>\n<p>[34]  L. ZHAO, C. CHENGSHENG.: Prototype Development of a Portable Radionuclide Identification System, Radiation Protection, China, 34 (2014) 381-385.</p>\n<p>[35]  O. GAL, B. DESSUS, F. JEAN.: Operation of the CARTOGAM portable gamma camera in a photon-counting mode, IEEE Transactions on Nuclear Science, 48 (2001) 1198-1204.</p>\n<p>[36]  O. GAL, C. IZAC, F. JEAN.: CARTOGAM – a portable gamma camera for remote localisation of radioactive sources in nuclear facilities ☆, Nuclear Instruments &amp; Methods in Physics Research, 460 (2001) 138-145.</p>\n<p>[37]  O. GAL, F. JEAN, F. LAINE.: The CARTOGAM portable gamma imaging system, IEEE Transactions on Nuclear Science, 47 (2000) 952-956.</p>\n<p>[38]  A.V. STEPANOV, O.P. IVANOV, V.E. STEPANOV.: Simulation of Safe Methods for Performing Decontamination Work, Atomic Energy, 90 (2001) 495-499.</p>\n<p>[39]  A.N. SUDARKIN, O.P. IVANOV, V.E. STEPANOV.: Portable gamma-ray imager and its application for the inspection of the near-reactor premises contaminated by radioactive substances, Nuclear Instruments &amp; Methods in Physics Research, 414 (1998) 418-426.</p>\n<p>[40]  A.G. VOLKOVICH, O.P. IVANOV, V.E. STEPANOV.: Application of a gamma viewer for examining reactors, Atomic Energy, 79 (1995) 772-775.</p>\n<p>[41]  O.P. IVANOV, A.N. SUDARKIN, V.E. STEPANOV.: Portable X-ray and gamma-ray imager with coded mask: performance characteristics and methods of image reconstruction, Nuclear Instruments &amp; Methods in Physics Research, 422 (1999) 729-734.</p>\n<p>[42]  W. LEE, D. WEHE.: 3D position of radiation sources using an automated gamma camera and ML algorithm with energy-dependent response functions, Nuclear Science Symposium Conference Record, 2004, pp. 737-741 Vol.732.</p>\n<p>[43]  W. LEE, D. WEHE.: Hybrid gamma ray imaging—Model and results, Nuclear Inst &amp; Methods in Physics Research A, 579 (2007) 200-204.</p>\n<p>[44]  W. LEE, D.K. WEHE.: 3-D isotropic imaging of environmental sources using a compact gamma camera, IEEE Transactions on Nuclear Science, 51 (2004) 2267-2272.</p>\n<p>[45]  T. TAYA, J. KATAOKA, A. KISHIMOTO.: First demonstration of real-time gamma imaging by using a handheld Compton camera for particle therapy, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 831 (2016) 355-361.</p>\n<p>[46]  Z. HE, W. LI, G.F. KNOLL.: 3-D position sensitive CdZnTe gamma-ray spectrometers, Nuclear Instruments &amp; Methods in Physics Research, 422 (1999) 173-178.</p>\n<p>[47]  L.J. MENG, Z. HE.: Exploring the limiting timing resolution for large volume CZT detectors with waveform analysis, Nuclear Instruments &amp; Methods in Physics Research, 550 (2011) págs. 435-445.</p>\n<p>[48]  C.G. WAHL, W. KAYE, W. WANG.: Polaris-H measurements and performance, Nuclear Science Symposium and Medical Imaging Conference (NSS/MIC), 2014 IEEE, IEEE, 2014, pp. 1-4.</p>\n<p>[49]  Y. DU, Z. HE, G. KNOLL.: Evaluation of a Compton scattering camera using 3-D position sensitive CdZnTe detectors, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 457 (2001) 203-211.</p>\n<p>[50]  Z. HE, G. KNOLL, D. WEHE.: Coplanar grid patterns and their effect on energy resolution of CdZnTe detectors, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 411 (1998) 107-113.</p>\n<p>[51]  Z. HE, G. KNOLL, D. WEHE.: Position-sensitive single carrier CdZnTe detectors, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 388 (1997) 180-185.</p>\n<p>[52]  J.C. KIM, S.E. ANDERSON, W. KAYE.: Charge sharing in common-grid pixelated CdZnTe detectors, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 654 (2011) 233-243.</p>\n<p>[53]  J.C. KIM, W.R. KAYE, W. WANG.: Impact of drift time variation on the Compton image from large-volume CdZnTe crystals, Nuclear instruments and methods in physics research section A: Accelerators, spectrometers, detectors and associated equipment, 683 (2012) 53-62.</p>\n<p>[54]  P. LUKE, M. AMMAN, J. LEE.: Coplanar-grid CdZnTe detector with three-dimensional position sensitivity, Nuclear Instruments and Methods in Physics Research Section A: Accelerators, Spectrometers, Detectors and Associated Equipment, 439 (2000) 611-618.</p>\n<p>[55]  F. ZHANG, Z. HE.: New readout electronics for 3-D position sensitive CdZnTe/HgI $ _2 $ detector arrays, IEEE Transactions on Nuclear Science, 53 (2006) 3021-3027.</p>\n<p>[56]  H.I. KIM, J.A. SU, H.C. YONG.: Development of an all-in-one gamma camera/CCD system for safeguard verification, Journal of the Korean Physical Society, 65 (2014) 2013-2016.</p>\n<p>[57]  J.E. LEES, D.J. BASSFORD, O.E. BLAKE.: A high resolution Small Field Of View (SFOV) gamma camera: a columnar scintillator coated CCD imager for medical applications, Journal of Instrumentation, 6 (2011) 570-582.</p>\n<p>[58]  J.E. LEES, S.L. BUGBY, A.P. BARK.: A hybrid camera for locating sources of gamma radiation in the environment, Journal of Instrumentation, 8 (2013) P10021-P10021.</p>\n<p>[59]  M. GMAR, M. AGELOU, F. CARREL.: GAMPIX: A new generation of gamma camera, Nuclear Instruments &amp; Methods in Physics Research, 652 (2011) 638-640.</p>\n<p>[60]  H. LEMAIRE, K. AMGAROU, R.A. KHALIL.: Implementation of an imaging spectrometer for localization and identification of radioactive sources, International Conference on Advancements in Nuclear Instrumentation Measurement Methods and Their Applications, 2013, pp. 1-5.</p>\n<p>[61]  M. GMAR, O. GAL, C.L. GOALLER.: Development of coded-aperture imaging with a compact gamma camera, Nuclear Science Symposium Conference Record, 2003, pp. 1052-1056 Vol.1052.</p>\n<p>[62]  O.P. IVANOV.: Control and image decoding software for portable gamma-ray imaging system with coded aperture, Nuclear Science Symposium, 1999. Conference Record, 2002, pp. 459-463 vol.451.</p>\n<p>[63]  X. LLOPART, M. CAMPBELL.: First test measurements of a 64k pixel readout chip working in single photon counting mode, Nuclear Instruments &amp; Methods in Physics Research, 509 (2003) 157-163.</p>\n<p>[64]  G.A.D. VREE, A.H. WESTRA, I. MOODY.: Photon-counting gamma camera based on an electron-multiplying CCD, IEEE Transactions on Nuclear Science, 52 (2005) 580-588.</p>\n<p>[65]  M. WOODRING, D. SOUZA, S. TIPNIS.: Advanced radiation imaging of low-intensity gamma-ray sources, Nuclear Instruments &amp; Methods in Physics Research, 422 (1999) 709-712.</p>\n<p>[66]  A. MILLER, R. MACHRAFI, A. MOHANY.: Development of a semi-autonomous directional and spectroscopic radiation detection mobile platform, Radiation Measurements, 72 (2015) 53-59.</p>\n<p>[67]  O. IVANOV, I. SEMIN, V. POTAPOV.: Ultra-Light Gamma-Camera for Security and Emergency Situation, DOI (2014).</p>\n<p>[68]  W. WANG, W.R. KAYE, J. KIM.: Improvement of Compton imaging efficiency by using side-neighbor events, Nuclear Science Symposium Conference Record, 2010, pp. 1101-1103.</p>\n<p>[69]  S. SUN, Z. ZHANG, L. SHUAI.: Development of a panorama coded-aperture gamma camera for radiation detection, Radiation Measurements, 77 (2015) 34-40.</p>\n<p>[70]  T. LEE, W. LEE.: Compact hybrid gamma camera with a coded aperture for investigation of nuclear materials, Nuclear Inst &amp; Methods in Physics Research A, 767 (2014) 5-13.</p>\n<p>[71]  M.F. CUNNINGHAM, E. BLAKEMAN, L. FABRIS.: Active-mask coded-aperture imaging, Nuclear Science Symposium Conference Record, 2007. NSS &#39;07. IEEE, 2007, pp. 1217-1221.</p>\n<p>[72]  L.J. SCHULTZ, M.S. WALLACE, M.C. GALASSI.: Hybrid coded aperture and Compton imaging using an active mask, Nuclear Instruments &amp; Methods in Physics Research, 608 (2009) 267-274.</p>\n<p>[73]  T. LEE, W. LEE.: A cubic gamma camera with an active collimator, Applied Radiation &amp; Isotopes Including Data Instrumentation &amp; Methods for Use in Agriculture Industry &amp; Medicine, 90 (2014) 102.</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n","categories":["辐射成像"],"tags":["gamma相机"]},{"title":"文献阅读和笔记多平台云同步搭建","url":"/2021/03/24/%E7%8C%AE%E9%98%85%E8%AF%BB%E5%92%8C%E7%AC%94%E8%AE%B0%E5%A4%9A%E5%B9%B3%E5%8F%B0%E4%BA%91%E5%90%8C%E6%AD%A5%E6%90%AD%E5%BB%BA/","content":"<h1 id=\"🏡文献阅读和笔记多平台云同步搭建\"><a href=\"#🏡文献阅读和笔记多平台云同步搭建\" class=\"headerlink\" title=\"🏡文献阅读和笔记多平台云同步搭建\"></a>🏡文献阅读和笔记多平台云同步搭建</h1><h2 id=\"1-坚果云平台\"><a href=\"#1-坚果云平台\" class=\"headerlink\" title=\"1.坚果云平台\"></a>1.坚果云平台</h2><p>常用的云平台见往期</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWJlcnktbGVlLmNuLzIwMjEvMDMvMDcvJUU2JThGJTkwJUU5JUFCJTk4JUU2JTk2JTg3JUU3JThDJUFFJUU5JTk4JTg1JUU4JUFGJUJCJUU2JTk1JTg4JUU3JThFJTg3JUU3JTlCJUI4JUU1JTg1JUIzJUU3JTlBJTg0JUU1JUI3JUE1JUU1JTg1JUI3Lw==\">提高文献阅读效率相关的工具<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>坚果云是一款免费的网盘，<code>每个月具有1G的上传流量和3G下载流量</code>，非常适合用于储存文献阅读资料；若需要用它进行照片或视频备份，那么流量和空间肯定不够，需要付费购买空间。</p>\n<p>此外坚果云不同于国内的<code>百度网盘</code>，其文件同步设置跟<code>onedrive</code>有点类似，直接将本地文件夹设置成同步即可，而不打乱本地知识管理布局。</p>\n<p>考虑文献阅读资料相对较少网盘空间占用少以及本地使用便携，文献和笔记资料储存云平台选用<code>坚果云</code>。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"2-zotero\"><a href=\"#2-zotero\" class=\"headerlink\" title=\"2. zotero\"></a>2. zotero</h2><p>常见文献管理工具见往期</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWJlcnktbGVlLmNuLzIwMjEvMDMvMDcvJUU2JThGJTkwJUU5JUFCJTk4JUU2JTk2JTg3JUU3JThDJUFFJUU5JTk4JTg1JUU4JUFGJUJCJUU2JTk1JTg4JUU3JThFJTg3JUU3JTlCJUI4JUU1JTg1JUIzJUU3JTlBJTg0JUU1JUI3JUE1JUU1JTg1JUI3Lw==\">提高文献阅读效率相关的工具<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>zotero 虽然不及citavi功能强大，但其是由<code>开源社区维护、插件丰富和跨平台</code>这三个特点，注定其将站在文献管理软件的金字塔顶端。下面将介绍zotero的跨平台配置；</p>\n<ul>\n<li>zotero 及浏览器connetor安装（简单不做介绍）</li>\n<li>官网注册用户</li>\n<li>使用坚果云平台配置</li>\n</ul>\n<p>坚果云官网说明<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmppYW5ndW95dW4uY29tLz9wPTQxOTA=\">https://help.jianguoyun.com/?p=4190<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>注册完之后，打开软件：编辑——首选项——同步——设置，输入用户名和密码进行登陆。</p>\n<p><img src=\"http://help.jianguoyun.com/wp-content/uploads/2018/03/0.jpg\" alt=\"0\"></p>\n<ul>\n<li><p>zotero附件的同步</p>\n<p>Zotero的存储空间只有100M，使用起肯定是不够用的，土豪可以直接付费升级存储空间。免费扩容的方式是<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbmd1b3l1bi5jb20v\">坚果云<i class=\"fa fa-external-link-alt\"></i></span>的webDAV功能，该功能一个好处是，在iOS移动端的<span class=\"exturl\" data-url=\"aHR0cDovL2xpbmsuemhpaHUuY29tLz90YXJnZXQ9aHR0cO+8hTNBLy93d3cucGFwZXJzaGlwYXBwLmNvbS8=\">papership<i class=\"fa fa-external-link-alt\"></i></span>也可以通过webDAV读取资料库，目前使用的是这种方式。</p>\n<p>想要连接Zotero的话，得开启坚果云的第三方应用管理。具体步骤如下：</p>\n<p>（1）登录网页端坚果云账号，点击右上角的账号名称——账户信息——安全选项——第三方应用管理——添加应用密码。应用名称我写的zotero，之后会自己生成一个应用密码。如下图所示：</p>\n<p><img src=\"http://help.jianguoyun.com/wp-content/uploads/2018/03/2.jpg\" alt=\"2\"></p>\n<p><img src=\"https://r.sinaimg.cn/large/article/eab344d588f33eeed03ba132d740b9f6\" alt=\"img\"></p>\n<p>（2）打开zotero,编辑——首选项——同步——文件同步，使用zotero改成WebDAV，然后复制刚才坚果云内第三方应用管理的服务器地址、账户和密码，密码点击下面zotero对应的”显示“复制即可。全部填入后点击下面”Verify Server“按钮。</p>\n<p><img src=\"http://help.jianguoyun.com/wp-content/uploads/2018/03/3.jpg\" alt=\"3\"></p>\n<p><img src=\"https://r.sinaimg.cn/large/article/456a465b104edd77272ea961c75bbe74\" alt=\"img\"></p>\n<p>在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbmd1b3l1bi5jb20v\">坚果云<i class=\"fa fa-external-link-alt\"></i></span>网页端手动建立一个zotero根目录，或者建立works/zotero目录，与zotero填的地址对应即可，不要在”我的坚果云“文件夹下建立！这是为了避免软件不支持中文。</p>\n<p>如果出现verify失败的情况，在坚果云网页端zotero文件夹下新建一个<code>lastsync.txt</code>文件，再进行验证即可；</p>\n</li>\n</ul>\n<h2 id=\"3-typora-picgo\"><a href=\"#3-typora-picgo\" class=\"headerlink\" title=\"3. typora+picgo\"></a>3. typora+picgo</h2><p>typora是一款所见即所得的markdown编辑器。用它来做笔记同步存在的问题是图片为无法同步，那么可以考虑采用图床。PicGO是搭建图窗的最好工具。</p>\n<p>在此，采用gitee作为图床平台（国内gitee速度比github快）</p>\n<p>（1）. 安装</p>\n<ul>\n<li>PicGo</li>\n<li>picgo-plugin-gitee-uploader插件</li>\n</ul>\n<h3 id=\"首先打开picgo官网，下载安装包\"><a href=\"#首先打开picgo官网，下载安装包\" class=\"headerlink\" title=\"首先打开picgo官网，下载安装包\"></a>首先打开<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dv\">picgo官网<i class=\"fa fa-external-link-alt\"></i></span>，下载安装包</h3><p><img src=\"https://pic2.zhimg.com/80/v2-6a5d78ebb1910843ff4d2872580d21a5_720w.png\" alt=\"img\"></p>\n<p>速度有点慢，没关系，PicGo2.1.2的安装包下面链接自取</p>\n<h3 id=\"安装之后打开主界面\"><a href=\"#安装之后打开主界面\" class=\"headerlink\" title=\"安装之后打开主界面\"></a>安装之后打开主界面</h3><p><img src=\"https://pic3.zhimg.com/80/v2-83da997e41df3d5a366492075e84e8c6_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"选择最底下的插件设置，搜索gitee\"><a href=\"#选择最底下的插件设置，搜索gitee\" class=\"headerlink\" title=\"选择最底下的插件设置，搜索gitee\"></a>选择最底下的插件设置，搜索<strong>gitee</strong></h3><p><img src=\"https://pic2.zhimg.com/80/v2-e571ed50235f2f82661b5b1315419bd5_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"点击右边的gitee-uploader-1-1-2开始安装\"><a href=\"#点击右边的gitee-uploader-1-1-2开始安装\" class=\"headerlink\" title=\"点击右边的gitee-uploader 1.1.2开始安装\"></a>点击右边的gitee-uploader 1.1.2开始安装</h3><blockquote>\n<p>这里注意一下，必须要先安装<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9ub2RlanMub3JnL2VuLw==\">node.js<i class=\"fa fa-external-link-alt\"></i></span>才能安装插件，没装的自己装一下，然后重启就行。</p>\n</blockquote>\n<p>这个地方有两个插件，我试了一遍，两个都能用，大家看心情选择，先说一下右边这个<strong>gitee-uploader 1.1.2</strong>，用不了的同学就选左边那个，我都会讲一遍配置</p>\n<hr>\n<p>（2）. 建立gitee（码云）图床库</p>\n<p>注册码云的方法很简单，网站引导都是中文，不多说了，我们直接建立自己的图床库。</p>\n<h3 id=\"点击右上角的-号，新建仓库\"><a href=\"#点击右上角的-号，新建仓库\" class=\"headerlink\" title=\"点击右上角的+号，新建仓库\"></a>点击右上角的+号，新建仓库</h3><p><img src=\"https://pic3.zhimg.com/80/v2-44a4581b8e0ac9a0bc6747ee9b507a0e_720w.jpg\" alt=\"img\"></p>\n<p>新建仓库的要点如下：</p>\n<ol>\n<li>输入一个仓库名称</li>\n<li>其次将仓库设为公开</li>\n<li>勾选使用Readme文件初始化这个仓库</li>\n</ol>\n<p><strong>这个选项勾上，这样码云会自动给你的仓库建立master分支，这点很重要!!!</strong> 我因为这点折腾了很久，因为使用github做图床picgo好像会自动帮你生成master分支，而picgo里的gitee插件不会帮你自动生成分支。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-11790828fe9ce436ea6d92fbe1c0662f_720w.jpg\" alt=\"img\"></p>\n<p>点击创建进入下一步</p>\n<hr>\n<p>（3）. 配置PicGo</p>\n<p>安装了<strong>gitee-uploader 1.1.2</strong>插件之后，我们开始配置插件</p>\n<h3 id=\"配置插件的要点如下：\"><a href=\"#配置插件的要点如下：\" class=\"headerlink\" title=\"配置插件的要点如下：\"></a>配置插件的要点如下：</h3><p><img src=\"https://pic4.zhimg.com/80/v2-7fd17e45105b65c13c9c7e260a5b6d87_720w.jpg\" alt=\"img\"></p>\n<ul>\n<li>repo：用户名/仓库名称，比如我自己的仓库leonG7/blogImage，找不到的可以直接复制仓库的url</li>\n</ul>\n<p><img src=\"https://pic3.zhimg.com/80/v2-c0bc93a55fc118fb9731371af0c8a702_720w.png\" alt=\"img\"></p>\n<ul>\n<li>branch：分支，这里写上master</li>\n<li>token：填入码云的私人令牌</li>\n<li>path：路径，一般写上img</li>\n<li>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 <code>Upload 图片名 by picGo - 时间</code></li>\n</ul>\n<h3 id=\"这个token怎么获取，下面登录进自己的码云\"><a href=\"#这个token怎么获取，下面登录进自己的码云\" class=\"headerlink\" title=\"这个token怎么获取，下面登录进自己的码云\"></a>这个token怎么获取，下面登录进自己的码云</h3><p>点击头像，进入设置</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-09207edcefff7852c91abcc3df3c5ba0_720w.png\" alt=\"img\"></p>\n<p>找到右边安全设置里面的私人令牌</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-bc612193330f4235b8c887dc95a77f68_720w.jpg\" alt=\"img\"></p>\n<p>点击<code>生成新令牌</code>，把<strong>projects</strong>这一项勾上，其他的不用勾，然后提交</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-9d8ba0adb98d509d3de8c1b615c68353_720w.jpg\" alt=\"img\"></p>\n<p>这里需要验证一下密码，验证密码之后会出来一串数字，这一串数字就是你的token，将这串数字复制到刚才的配置里面去。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-7d9e998d82ae965fe7f1ddd93d59d48a_720w.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，直接复制进去，搞丢了又要重新生成一个。</p>\n</blockquote>\n<h3 id=\"现在保存你刚才的配置，然后将它设置为默认图床，大功告成。\"><a href=\"#现在保存你刚才的配置，然后将它设置为默认图床，大功告成。\" class=\"headerlink\" title=\"现在保存你刚才的配置，然后将它设置为默认图床，大功告成。\"></a>现在保存你刚才的配置，然后将它设置为默认图床，大功告成。</h3><p>还有一个插件<strong>gitee 1.2.2-beta</strong>，功能差不多，<code>刚才那个能用的话就不需要用这个</code>，配置的内容有点差别，简单说一下：</p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-499cfcbda9cbd6c4f5c8e23f30e382cc_720w.jpg\" alt=\"img\"></p>\n<ul>\n<li>url：图床网站，这里写码云的主页 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9naXRlZS5jb20=\">https://gitee.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>owner：所有者，写上你的码云账号名，如果你不知道你的账号名，进入你刚才的仓库，浏览器url里面有</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/80/v2-f782ba2cb965931f00798322d42d3e54_720w.png\" alt=\"img\"></p>\n<ul>\n<li>repo：仓库名称，只要写上仓库名称就行，比如我自己的仓库blogImage</li>\n<li>path：写上路径，一般是img，<strong>这几个项都不用加“ / “符号</strong></li>\n<li>token：刚才你获取的个人令牌，两个插件是通用的，如果你用了另一个再来用这个，它会自动读取另一个插件的部分配置，不用重新申请</li>\n<li>message：不用填</li>\n</ul>\n<hr>\n<p>（4）. 测试</p>\n<p>随便选一张图片上传（picgo也支持剪贴板上传，截图工具推荐win10的<em>Snipaste</em>神器！），试试看</p>\n<h3 id=\"超级快有木有！比github快很多，0-1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容，而如果是github图床上传太慢不说可能还会出现下面这样识别不出来的问题！\"><a href=\"#超级快有木有！比github快很多，0-1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容，而如果是github图床上传太慢不说可能还会出现下面这样识别不出来的问题！\" class=\"headerlink\" title=\"超级快有木有！比github快很多，0.1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容，而如果是github图床上传太慢不说可能还会出现下面这样识别不出来的问题！\"></a>超级快有木有！比github快很多，0.1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容，而如果是github图床上传太慢不说可能还会出现下面这样识别不出来的问题！</h3><p><img src=\"https://pic1.zhimg.com/80/v2-7d18d14d530df892f48202f683947fcc_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！\"><a href=\"#上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！\" class=\"headerlink\" title=\"上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！\"></a>上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！</h3><p>博客写作套件<strong>Typora + PicGo + Snipaste</strong>，Typora写文档，Snipaste一键截图，PicGo一键上传图片返回链接。</p>\n<p>以上windows平台配置主要参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDI1OTQ1NTQ=\">https://zhuanlan.zhihu.com/p/102594554<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>linux PigGO平台的配置稍微要复杂一些，可以参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZjE2OWFlMGU2ZWU=\">https://www.jianshu.com/p/df169ae0e6ee<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>粘贴工具得考虑使用snipaste类似，否则使用不方便；</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><h3 id=\"文献同步\"><a href=\"#文献同步\" class=\"headerlink\" title=\"文献同步\"></a>文献同步</h3><p>linux和mac: 与上述windows端配置类似</p>\n<p>手机端：</p>\n<ul>\n<li><p>Android  安装zoo，登录zotero ，云同步使用webDAV与之前坚果云配置一样</p>\n</li>\n<li><p>IOS 安装PaperShip，登录zotero, 云同步使用webDAV与之前坚果云配置一样</p>\n</li>\n</ul>\n<h3 id=\"笔记同步\"><a href=\"#笔记同步\" class=\"headerlink\" title=\"笔记同步\"></a>笔记同步</h3><p>采用typora+picgo方式，利用坚果云存储文件即可；</p>\n<p>如果需要编辑博客或公众号直接发布即可；</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n","categories":["γ相机"],"tags":["CZT康普顿相机"]},{"title":"CZT半导体康普顿相机","url":"/2021/03/30/CZT%E5%8D%8A%E5%AF%BC%E4%BD%93%E5%BA%B7%E6%99%AE%E9%A1%BF%E7%9B%B8%E6%9C%BA/","content":"<h1 id=\"CZT半导体康普顿相机\"><a href=\"#CZT半导体康普顿相机\" class=\"headerlink\" title=\"CZT半导体康普顿相机\"></a>CZT半导体康普顿相机</h1><h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><p>（1）核设施退役</p>\n<p>在核设施退役过程中，源项调查是首要步骤；详细有效的源项调查对于退役方案的制定至关重要。康普顿相机在伽马源项调查中发挥着不可替代的作用，其能够实现实时放射性伽马源项监测，以有效及时的调整退役方案。故而，康普顿相机研究有其必要性。</p>\n<p>（2）核医学</p>\n<p>目前已被用于 BNCT 硼浓度测量方法主要有七种，其中电感耦合等离子体光谱法、高分辨率 α 放射自显影、带电粒子光谱法、中子俘获照相和核磁共振和磁共振成像均属于离线测量方法，即测量样品中 10B 浓度时所使用的技术；正电子发射断层成像属于在线测量方法，但是只能在治疗之前进行PET 成像以提供 10B 浓度的相关信息，并不能在BNCT治疗过程中进行实时成像；瞬发γ射线光谱仪不仅可以对样品实现离线测量，也可以在BNCT治疗过程中进行在线实时测量，但是瞬发 γ 射线光谱仪测量得到的是积分 10B 浓度，并不能对不均匀样品中不均匀的 10B 浓度进行测量。在 BNCT 中，硼中子俘获反应过程中所产生的 478 keV 瞬发 γ 射线的强度与硼浓度密切相关。因此利用探测器对 478 keV 瞬发 γ 射线进行多角度探测，然后利用基于 SPECT 原理的重建算法对探测所得投影进行断层图像求解，便可重建得到产生 478 keV 瞬发 γ 射线的位置，同时可根据重建图像的强度从而对硼浓度进行判断，这个过程将 SPECT 方法和 PGRA 技术结合起来，组成的系统简称为 PG-SPECT。PG-SPECT 系统由准直器、阵列探测器以及图像重建软件等关键部分组成。</p>\n<p>康普顿相机是一种基于电子准直的探测器，它是利用光子的康普顿散射动力学原理来实现 γ 射线产生位置的定位，具有成像效率高、灵敏度高、单角度便可实现三维成像等优点，基于康普顿相机的 PG-SPECT 系统实现 BNCT 中在线实时硼浓度监测的关键技术。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"基本原理\"><a href=\"#基本原理\" class=\"headerlink\" title=\"基本原理\"></a>基本原理</h2><p>康普顿相机利用入射光子在探测器中的两次或多次的作用的散射动能，根据作用点的位置和能量沉积确定第一次作用点散射角度。那么伽马放射源的位置将位于以第一次作用点为顶点散射角为顶角的锥面上，如图1所示。探测多个光子获得的圆锥面的交点可以确定放射源的位置。这种准直技术摆脱了机器准确器的限制，故而叫做电子准直技术。利用康普顿散射的电子准直技术相对机械准直通常有更大的事件计数；然后，电子准直技术获得的任意事件包含的信息量相对较少，放射源可位于圆锥面的任意为位置。机械准直的角度分辨由准直器的特征决定；电子准直的角度分辨由探测系统位置和能量分辨决定，并且随不同事件而不同。主要的图像重建方法有ML-EM(list-mode MLEM）,ART(FBP)等（ML-EM, Maximum likelihood-expectation maximization; ART，Algebraic reconstruction technique）。传统康普顿相机采用两个位置灵敏探测器，前探测器作为散射材料，后探测器俘获散射光子。根据探测系统记录的位置和能量信息可以获得放射源大致位置。由于需要光子在前探测器中散射并在后探测器中吸收，故而，探测效率极低。而且，探测器系统的几何尺寸也限制了成像立体角。若采用单个3D位置灵敏探测器，由于第一次和第二次散射作用位置距离短，它能够达到比两个位置灵敏探测器系统高1~2倍的探测效率。这是由于一次散射作用位置的立体角更大。</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330213901103.png\" alt=\"image-20210330213901103\"></p>\n<p>图1康普顿散射相机原理</p>\n<p>​            <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330213951720.png\" alt=\"image-20210330213951720\">  (1)</p>\n<p><em>θ</em>e为康普顿散射角；<em>E</em>1为散射探测器中的能量沉积，<em>E</em>2为吸收探测器中的能量沉积；<em>m</em>0为散射的光电子静止质量。</p>\n<h3 id=\"2-1-远场成像\"><a href=\"#2-1-远场成像\" class=\"headerlink\" title=\"2.1   远场成像\"></a>2.1   远场成像</h3><p>当放射源距离探测器很远，且探测器尺寸很小（可忽略）时，圆锥顶点可以认为在探测器的中心，探测器的视场可认为为以探测器中心的半球体上（2π立体角上）。</p>\n<h3 id=\"2-2-近场成像\"><a href=\"#2-2-近场成像\" class=\"headerlink\" title=\"2.2   近场成像\"></a>2.2   近场成像</h3><p>当放射源距离探测器距离近，且探测器尺寸不可忽略时，不同事件的重构的圆锥顶点位置时不同的，那么就特别需要考虑圆锥和原始圆锥的偏离。图2展示了近场成像的偏离的校正。假设C在以探测器中心为原点,半径为r的球面上的一点，通过CA和AB可以计算角度α，通过比较散射角与α可以确定点C可能的位置。</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214007096.png\" alt=\"image-20210330214007096\"></p>\n<p>​                                                                                     图2聚焦距离为r的近场成像</p>\n<p>根据Klein-Nishina模型，可以确定康普顿散射角度为<em>θ</em>的散射概率，如式（2），其中，<em>r</em>0=2.8179×10-15 m为经典电子半径。</p>\n<p>​     <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214044817.png\" alt=\"image-20210330214044817\">                                                                                                                           (2)</p>\n<p>在散射角度θ下的概率密度函数如式（3）</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214103538.png\" alt=\"image-20210330214103538\"></p>\n<p>​                                                                                                                         （3）</p>\n<h2 id=\"详细技术\"><a href=\"#详细技术\" class=\"headerlink\" title=\"详细技术\"></a>详细技术</h2><h3 id=\"3-1作用序列\"><a href=\"#3-1作用序列\" class=\"headerlink\" title=\"3.1作用序列\"></a>3.1作用序列</h3><h4 id=\"3-1-1-两点碰撞\"><a href=\"#3-1-1-两点碰撞\" class=\"headerlink\" title=\"3.1.1 两点碰撞\"></a>3.1.1 两点碰撞</h4><p>对于两点碰撞序列，以前的确定方法是比较两次能量沉积。Geant4的模拟表明，对于15×15×10 mm3的CZT探测器，当入射光子能量大于400keV时，能量沉积大更可能是第一次作用点，反之亦然。</p>\n<p>然而，对于高于400keV的光子利用传统算法却也不一定能够得出正确的作用时序。比如，光子可能在第一次作用时沉积非常少的能量，比如在康普顿边缘及之后。如果散射光子发生光电吸收时，传统算法会给出错误的作用时间序列。所用通常要加入康普顿边缘作为判断条件。如果两次能量沉积中有一个大于康普顿边缘，那么就需要采用另一个作为第一作用点。</p>\n<p>采用Geant4模拟662keV全部能量沉积时，结果表明通过比较方法重构作用序列的准确率约为58%。其中，有20%的事件会在同一像素块中作用超过一次，这些事件被认为是不可重构的数据。研究表明，在同一像素块中作用2次及以上的这些事件的数据，通过比较算法能够用于源位置重构图像校正。</p>\n<p>​                          <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214303553.png\" alt=\"image-20210330214303553\">     </p>\n<p>​                                                                         图3 两点碰撞序列，θ1和θ2为两种可能的散射角</p>\n<p>另一种作用序列重构方法是确定性计算方法，基于Klein-Nishina公式。假设在第一作用点出能量沉积有微小扰动<em>E</em>1+<em>dE</em>，<em>E</em>0是常量，根据散射角度和能量的关系，可以得到式（4）</p>\n<p>​          <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214312376.png\" alt=\"image-20210330214312376\">                                                                                                            （4）</p>\n<p>那么入射光子能量为E0，在第一作用点沉积能量在(<em>E</em>1,<em>E</em>1+<em>dE</em>)之间的概率为Σ(<em>θ</em>1)d<em>θ</em>1,因此，确定性作用序列重构算法的优质因子定义为：</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214625716.png\" alt=\"image-20210330214625716\"></p>\n<p>​                                                                                                   （5）</p>\n<h4 id=\"3-1-2-三点碰撞\"><a href=\"#3-1-2-三点碰撞\" class=\"headerlink\" title=\"3.1.2 三点碰撞\"></a>3.1.2 三点碰撞</h4><p>三像素点作用序列重构比较复杂，目前常用的技术包括，反向追踪方法，确定性方法和χ2方法或最小二乘法。</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214358734.png\" alt=\"image-20210330214358734\"></p>\n<p>​                                                                   图4 三次碰撞，利用能量和位置信息计算第二次散射角</p>\n<p>最小二乘法定义的优质因子：(该方法的理论推导，还需继续弄明白，特别式角度不确定性)</p>\n<p>​       <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214654724.png\" alt=\"image-20210330214654724\">                                                                                                            （6）</p>\n<p>根据误差传递公式：</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214740684.png\" alt=\"image-20210330214740684\"></p>\n<p>​                                                                                                              （7）</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214759136.png\" alt=\"image-20210330214759136\"></p>\n<p>​                                                                                                               （8）</p>\n<p>三像素作用点确定性算法，优质因子的计算：</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214813269.png\" alt=\"image-20210330214813269\"></p>\n<p>​                                                                                                               （9）</p>\n<p>根据Dan Xu的计算结果表明，尽管确定性方法和最小二乘法重构准确率接近，但最小二乘法重构准确率更高。</p>\n<h3 id=\"3-2图像重建\"><a href=\"#3-2图像重建\" class=\"headerlink\" title=\"3.2图像重建\"></a>3.2图像重建</h3><h4 id=\"3-2-1-ART代数重建算法\"><a href=\"#3-2-1-ART代数重建算法\" class=\"headerlink\" title=\"3.2.1 ART代数重建算法\"></a>3.2.1 ART代数重建算法</h4><p>康普顿相机最简单的代数重建算法就是反投影算法，其将反投影圆锥在球面或平板上进行成像，有时候又称为“画椭圆法”。每个事件均会提供源可能在的圆锥面，简单反投影算法就是将这些圆锥面叠加起来即可得到源所在位置。简单反投影算法重构图像常常比较模糊，角分辨大约50度，但是其成像速度快，这对于在要求快速计算图像而不要求高角度分辨的情形下有较大应用空间。</p>\n<p>放射源位于以散射－吸收方向为轴线，散射位置为顶点，散射角为半圆锥角的圆锥面上。假设散射点坐标为P1(x1,y1,z1)吸收点坐标为P2(x2,y2,z2)，如图5所示，散射角为考察在反投影平面上的投影方程，圆锥方程的解析表达式为</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330214954529.png\" alt=\"image-20210330214954529\"></p>\n<p>​                                                                                                                （10）</p>\n<p>式中  为圆锥面上所有点的集合，  为吸收位置指向散射位置的向量，表示圆锥的中心</p>\n<p>轴线方向</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215012474.png\" alt=\"image-20210330215012474\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215219694.png\" alt=\"image-20210330215219694\"></p>\n<p>​                                                                                           图5 简单反投影算法示意图</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215241407.png\" alt=\"image-20210330215241407\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215257209.png\" alt=\"image-20210330215257209\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215309498.png\" alt=\"image-20210330215309498\"></p>\n<p>由于直接反投影环中仅有一小部分反应放射源为位置，由此重建中引入了固有不确定度。该不确定度可以通过使用一定的算法如滤波反投影算法FBP或者反投影滤波算法BPF进行削弱，提升重建精度。 </p>\n<h4 id=\"3-2-2-List-mode-MLEM极大似然期望算法\"><a href=\"#3-2-2-List-mode-MLEM极大似然期望算法\" class=\"headerlink\" title=\"3.2.2 List-mode MLEM极大似然期望算法\"></a>3.2.2 List-mode MLEM极大似然期望算法</h4><p>康普顿相机中最大似然问题描述如下：测量投影数据为Y，bin的累积为给定探测器像素及散射能量，每个bin贡献为Yi，λ为隐式像素化目标，每个像素密度为为λi，则事件集合可以表示为：</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215331083.png\" alt=\"image-20210330215331083\"></p>\n<p>对数似然函数形式为：</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215338404.png\" alt=\"image-20210330215338404\"></p>\n<p>使用迭代EM算法求解λ，最大化过程中为</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215344970.png\" alt=\"image-20210330215344970\"></p>\n<p>期望计算中，</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215350826.png\" alt=\"image-20210330215350826\"></p>\n<p>迭代步骤为：</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215401031.png\" alt=\"image-20210330215401031\"></p>\n<p>$s_j$为光子从像素$j$中发出被探测到的概率，$t_{ij}$为伽马光子从像素$j$发出在bin $i$中收集的概率。</p>\n<h2 id=\"评价指标\"><a href=\"#评价指标\" class=\"headerlink\" title=\"评价指标\"></a>评价指标</h2><h3 id=\"4-1-角度分辨\"><a href=\"#4-1-角度分辨\" class=\"headerlink\" title=\"4.1 角度分辨\"></a>4.1 角度分辨</h3><p>​                 <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215554428.png\" alt=\"image-20210330215554428\">              </p>\n<p>​                                                                                        图6 测量角度分辨率</p>\n<p>测量角度分辨率（Angular Resolution Measurement, ARM）用于描述康普顿相机角分辨，指重建反投影圆锥角于真实方向角的差值$ARM=θ_r-θ_e$;</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215639381.png\" alt=\"image-20210330215639381\"></p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215645980.png\" alt=\"image-20210330215645980\"></p>\n<h3 id=\"4-2-位置分辨\"><a href=\"#4-2-位置分辨\" class=\"headerlink\" title=\"4.2 位置分辨\"></a>4.2 位置分辨</h3><p>点源分辨率(Point Source Resolution,PSR)用于描述重建点源图像的分布展宽。点源重建图像使用表面分布图表示见图7(a)，点源位置表现为一凸起的峰，该峰的半高宽FWHM称为点源分辨率。关于该FWHM的计算，有如下几种方法:</p>\n<ol>\n<li><p>首先统计凸起峰的最高点计数，然后统计髙度由小于其一半到髙于其一半的转折点，使用圆方程拟合，获得的圆直径等于FWHM。</p>\n</li>\n<li><p>对获得的二维峰进行二维高斯拟合，获得其:<em>r</em>与<em>y</em>方向的半高宽，在差别不大时使用某一个或者二者的均值作为FWHM。</p>\n</li>\n<li><p>截取<em>x</em>=0或者<em>y</em>=0平面上的分布，简化为一个一维分布，如图7(b)所示，然后使用高斯分布拟合其中的峰；拟合函数获得的半高宽即为点源分辨率FWHM=2.355σ。</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/image-20210330215716444.png\" alt=\"image-20210330215716444\"></p>\n</li>\n</ol>\n<p>​                                                                                                      图7 点源重建图像</p>\n<h3 id=\"4-3-成像效率\"><a href=\"#4-3-成像效率\" class=\"headerlink\" title=\"4.3 成像效率\"></a>4.3 成像效率</h3><p>单探测器康普顿相机的成像效率定义为入射γ射线在其中发生一次康普顿散射后在另一“体素”中发生光电吸收的概率。</p>\n<h3 id=\"4-4-康普顿相机影响因素\"><a href=\"#4-4-康普顿相机影响因素\" class=\"headerlink\" title=\"4.4 康普顿相机影响因素\"></a>4.4 康普顿相机影响因素</h3><p>反散射角θ由初始能量以及传递给电子的能量决定，由探测器能量分辨率以及康普顿散射中多普勒展宽效应引入的能量不确定度会对θ的不确定度有贡献；同时，反投影圆锥顶点与轴线由探测的两作用点位置确定，故探测器位置分辨率对θ的不确定度也有贡。</p>\n<p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n"},{"title":"python绘图-文本数据读取方法","url":"/2021/04/28/python%E7%BB%98%E5%9B%BE-%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96%E6%96%B9%E6%B3%95/","content":"<h1 id=\"python绘图-文本读取\"><a href=\"#python绘图-文本读取\" class=\"headerlink\" title=\"python绘图-文本读取\"></a>python绘图-文本读取</h1><h2 id=\"写在最前面-pandas\"><a href=\"#写在最前面-pandas\" class=\"headerlink\" title=\"写在最前面-pandas\"></a>写在最前面-pandas</h2><p>python加载数据用于绘图，方法比较多，但建议采用pandas读取<code>excel</code>和<code>csv</code>数据并进行处理和绘图。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5kYXMucHlkYXRhLm9yZy9kb2NzL2dldHRpbmdfc3RhcnRlZC9pbnRyb190dXRvcmlhbHMvaW5kZXguaHRtbA==\">Getting started tutorials — pandas 1.2.4 documentation (pydata.org)<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><code>read_*</code>和<code>to_*</code></p>\n<ul>\n<li>csv</li>\n<li>excel</li>\n<li>sql</li>\n<li>json</li>\n<li>parquet</li>\n<li>...</li>\n</ul>\n<a id=\"more\"></a>\n\n<p>pd.dtypes</p>\n<p>pd.info()</p>\n<p>pd.head()</p>\n<p>pd.tail()</p>\n<blockquote>\n<ul>\n<li>Import the package, aka <code>import pandas as pd</code></li>\n<li>A table of data is stored as a pandas <code>DataFrame</code></li>\n<li>Each column in a <code>DataFrame</code> is a <code>Series</code></li>\n<li>You can do things by applying a method to a <code>DataFrame</code> or <code>Series</code></li>\n<li>Getting data in to pandas from many different file formats or data sources is supported by read_* functions.</li>\n<li>Exporting data out of pandas is provided by different to_*methods.</li>\n<li>The head/tail/info methods and the dtypes attribute are convenient for a first check.</li>\n<li>When selecting subsets of data, square brackets [] are used.</li>\n<li>Inside these brackets, you can use a single column/row label, a list of column/row labels, a slice of labels, a conditional expression or a colon.</li>\n<li>Select specific rows and/or columns using loc when using the row and column names</li>\n<li>Select specific rows and/or columns using iloc when using the positions in the table</li>\n<li>You can assign new values to a selection based on loc/iloc.</li>\n<li>The <code>.plot.*</code> methods are applicable on both Series and DataFrames</li>\n<li>By default, each of the columns is plotted as a different element (line, boxplot,…)</li>\n<li>Any plot created by pandas is a Matplotlib object.</li>\n<li>Create a new column by assigning the output to the DataFrame with a new column name in between the <code>[]</code>.</li>\n<li>Operations are element-wise, no need to loop over rows.</li>\n<li>Use <code>rename</code> with a dictionary or function to rename row labels or column names.</li>\n<li>Aggregation statistics can be calculated on entire columns or rows</li>\n<li><code>groupby</code> provides the power of the <em>split-apply-combine</em> pattern</li>\n<li><code>value_counts</code> is a convenient shortcut to count the number of entries in each category of a variable</li>\n<li>Sorting by one or more columns is supported by <code>sort_values</code></li>\n<li>The <code>pivot</code> function is purely restructuring of the data, <code>pivot_table</code> supports aggregations</li>\n<li>The reverse of <code>pivot</code> (long to wide format) is <code>melt</code> (wide to long format)</li>\n<li>Multiple tables can be concatenated both column-wise and row-wise using the <code>concat</code> function.</li>\n<li>For database-like merging/joining of tables, use the <code>merge</code> function.</li>\n<li>Valid date strings can be converted to datetime objects using <code>to_datetime</code> function or as part of read functions.</li>\n<li>Datetime objects in pandas support calculations, logical operations and convenient date-related properties using the <code>dt</code> accessor.</li>\n<li>A <code>DatetimeIndex</code> contains these date-related properties and supports convenient slicing.</li>\n<li><code>Resample</code> is a powerful method to change the frequency of a time series.</li>\n<li>String methods are available using the <code>str</code> accessor.</li>\n<li>String methods work element-wise and can be used for conditional indexing.</li>\n<li>The <code>replace</code> method is a convenient method to convert values according to a given dictionary.</li>\n</ul>\n</blockquote>\n<h2 id=\"下面是网络上查到的一些数据加载方法\"><a href=\"#下面是网络上查到的一些数据加载方法\" class=\"headerlink\" title=\"下面是网络上查到的一些数据加载方法\"></a>下面是网络上查到的一些数据加载方法</h2><p>excel文本读取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> xlrd <span class=\"comment\"># 需要用1.2.0版本，高版本无法读取xlxs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 将当前路径项目添加到系统搜索路径中</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">sys.path.append(<span class=\"string\">&#x27;..&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>]=[<span class=\"string\">&#x27;SimHei&#x27;</span>] <span class=\"comment\">#用来正常显示中文标签</span></span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>]=<span class=\"literal\">False</span> <span class=\"comment\">#用来正常显示负号</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 或者采用os添加子文件夹</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">filename = <span class=\"string\">&#x27;spectrum.xlsx&#x27;</span></span><br><span class=\"line\">workbook = xlrd.open_workbook(os.path.join(<span class=\"string\">&#x27;.\\spectrum&#x27;</span>,filename))</span><br><span class=\"line\">x_data =[]</span><br><span class=\"line\">y_data1 =[]</span><br><span class=\"line\">y_data2 =[]</span><br><span class=\"line\">y_data3 =[]</span><br><span class=\"line\">y_data4 =[]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> workbook.sheets():</span><br><span class=\"line\">    <span class=\"comment\"># print(&#x27;Sheet:&#x27;,s.name)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(s.nrows):</span><br><span class=\"line\">        <span class=\"comment\"># print(&#x27;the row is:&#x27;,row)</span></span><br><span class=\"line\">        values = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(s.ncols):</span><br><span class=\"line\">            values.append(s.cell(row,col).value)</span><br><span class=\"line\">        print(values)</span><br><span class=\"line\">        x_data.append(values[<span class=\"number\">0</span>])</span><br><span class=\"line\">        y_data1.append(values[<span class=\"number\">1</span>])</span><br><span class=\"line\">        y_data2.append(values[<span class=\"number\">2</span>])</span><br><span class=\"line\">        y_data3.append(values[<span class=\"number\">3</span>])</span><br><span class=\"line\">        y_data4.append(values[<span class=\"number\">4</span>])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>pandas读取excel数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#https://blog.csdn.net/weixin_38546295/article/details/83537558</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">io = <span class=\"string\">r&#x27;C:\\Users\\Administrator\\Desktop\\data.xlsx&#x27;</span></span><br><span class=\"line\">data = pd.read_excel(io, sheet_name = <span class=\"number\">1</span>)</span><br><span class=\"line\">data.head()</span><br></pre></td></tr></table></figure>\n<h3 id=\"txt文本读取\"><a href=\"#txt文本读取\" class=\"headerlink\" title=\"txt文本读取\"></a>txt文本读取</h3><h3 id=\"单列数据读取\"><a href=\"#单列数据读取\" class=\"headerlink\" title=\"单列数据读取\"></a>单列数据读取</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.optimize <span class=\"keyword\">import</span> curve_fit</span><br><span class=\"line\"><span class=\"keyword\">from</span> lmfit <span class=\"keyword\">import</span> Model</span><br><span class=\"line\"></span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>]=[<span class=\"string\">&#x27;SimHei&#x27;</span>] <span class=\"comment\">#用来正常显示中文标签</span></span><br><span class=\"line\">plt.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>]=<span class=\"literal\">False</span> <span class=\"comment\">#用来正常显示负号</span></span><br><span class=\"line\"><span class=\"comment\"># Define function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x, a</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1.</span> - np.exp(a * x)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Read data from text</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">30</span>, <span class=\"number\">30</span>, <span class=\"number\">61</span>)</span><br><span class=\"line\">y1 = np.loadtxt(<span class=\"string\">&#x27;data_s.txt&#x27;</span>)</span><br><span class=\"line\">y2 = np.loadtxt(<span class=\"string\">&#x27;data_f.txt&#x27;</span>)</span><br><span class=\"line\">y3 = np.loadtxt(<span class=\"string\">&#x27;data_ff.txt&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"多列数据读取\"><a href=\"#多列数据读取\" class=\"headerlink\" title=\"多列数据读取\"></a>多列数据读取</h3><p>逗号分割情况</p>\n<p>6.1101,17.592</p>\n<p>5.5277,9.1302<br>8.5186,13.662<br>7.0032,11.854<br>5.8598,6.8233<br>8.3829,11.886<br>7.4764,4.3483<br>8.5781,12<br>6.4862,6.5987<br>5.0546,3.8166<br>5.7107,3.2522<br>14.164,15.505<br>5.734,3.1551<br>8.4084,7.2258<br>5.6407,0.71618<br>5.3794,3.5129<br>6.3654,5.3048<br>5.1301,0.56077<br>6.4296,3.6518<br>7.0708,5.3893<br>6.1891,3.1386<br>20.27,21.767<br>5.4901,4.263<br>6.3261,5.1875<br>5.5649,3.0825<br>18.945,22.638<br>12.828,13.501<br>10.957,7.0467<br>13.176,14.692<br>22.203,24.147<br>5.2524,-1.22<br>6.5894,5.9966<br>9.2482,12.134<br>5.8918,1.8495<br>8.2111,6.5426<br>7.9334,4.5623<br>8.0959,4.1164<br>5.6063,3.3928<br>12.836,10.117<br>6.3534,5.4974<br>5.4069,0.55657<br>6.8825,3.9115<br>11.708,5.3854<br>5.7737,2.4406<br>7.8247,6.7318<br>7.0931,1.0463<br>5.0702,5.1337<br>5.8014,1.844<br>11.7,8.0043<br>5.5416,1.0179<br>7.5402,6.7504<br>5.3077,1.8396<br>7.4239,4.2885<br>7.6031,4.9981<br>6.3328,1.4233<br>6.3589,-1.4211<br>6.2742,2.4756<br>5.6397,4.6042<br>9.3102,3.9624<br>9.4536,5.4141<br>8.8254,5.1694<br>5.1793,-0.74279<br>21.279,17.929<br>14.908,12.054<br>18.959,17.054<br>7.2182,4.8852<br>8.2951,5.7442<br>10.236,7.7754<br>5.4994,1.0173<br>20.341,20.992<br>10.136,6.6799<br>7.3345,4.0259<br>6.0062,1.2784<br>7.2259,3.3411<br>5.0269,-2.6807<br>6.5479,0.29678<br>7.5386,3.8845<br>5.0365,5.7014<br>10.274,6.7526<br>5.1077,2.0576<br>5.7292,0.47953<br>5.1884,0.20421<br>6.3557,0.67861<br>9.7687,7.5435<br>6.5159,5.3436<br>8.5172,4.2415<br>9.1802,6.7981<br>6.002,0.92695<br>5.5204,0.152<br>5.0594,2.8214<br>5.7077,1.8451<br>7.6366,4.2959<br>5.8707,7.2029<br>5.3054,1.9869<br>8.2934,0.14454<br>13.394,9.0551<br>5.4369,0.61705<br>————————————————<br>版权声明：本文为CSDN博主「dazuo01」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhenVvMDEvYXJ0aWNsZS9kZXRhaWxzLzIwODQxOTA5\">https://blog.csdn.net/dazuo01/article/details/20841909<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 从.txt文件中读取数据</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">loadData</span>(<span class=\"params\">flieName</span>):</span></span><br><span class=\"line\">    inFile = <span class=\"built_in\">open</span>(flieName, <span class=\"string\">&#x27;r&#x27;</span>)<span class=\"comment\">#以只读方式打开某fileName文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#定义两个空list，用来存放文件中的数据</span></span><br><span class=\"line\">    X = []</span><br><span class=\"line\">    y = []</span><br><span class=\"line\"> \t<span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> inFile:</span><br><span class=\"line\">        trainingSet = line.split(<span class=\"string\">&#x27;,&#x27;</span>) <span class=\"comment\">#对于每一行，按&#x27;,&#x27;把数据分开，这里是分成两部分</span></span><br><span class=\"line\">        X.append(trainingSet[<span class=\"number\">0</span>]) <span class=\"comment\">#第一部分，即文件中的第一列数据逐一添加到list X 中</span></span><br><span class=\"line\">        y.append(trainingSet[<span class=\"number\">1</span>]) <span class=\"comment\">#第二部分，即文件中的第二列数据逐一添加到list y 中</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (X, y)    <span class=\"comment\"># X,y组成一个元组，这样可以通过函数一次性返回</span></span><br></pre></td></tr></table></figure>\n<p>datat.txt</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">0\t93</span><br><span class=\"line\">30\t96</span><br><span class=\"line\">60\t84</span><br><span class=\"line\">90\t84</span><br><span class=\"line\">120\t48</span><br><span class=\"line\">150\t38</span><br><span class=\"line\">180\t51</span><br><span class=\"line\">210\t57</span><br><span class=\"line\">240\t40</span><br><span class=\"line\">270\t45</span><br><span class=\"line\">300\t50</span><br><span class=\"line\">330\t75</span><br><span class=\"line\">360\t80</span><br><span class=\"line\">390\t60</span><br><span class=\"line\">420\t72</span><br><span class=\"line\">450\t67</span><br><span class=\"line\">480\t71</span><br><span class=\"line\">510\t7</span><br><span class=\"line\">540\t74</span><br><span class=\"line\">570\t63</span><br><span class=\"line\">600\t69</span><br></pre></td></tr></table></figure>\n<ul>\n<li>切片方法：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">x &#x3D; a[:,0] # 取第一列数据</span><br><span class=\"line\">y &#x3D; a[:,1] # 取第二列数据</span><br></pre></td></tr></table></figure>\n<p>另外一种使用 pandas 切片的方法：</p>\n<p><strong>方法1：使用 np.loadtxt( ) 方法读取数据</strong></p>\n<figure class=\"highlight plain\"><figcaption><span>Pandas 读取数据</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"># code:utf-8  \tUbuntu</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">from scipy import interpolate</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">import matplotlib.font_manager as mpt</span><br><span class=\"line\">zhfont&#x3D;mpt.FontProperties(fname&#x3D;&#39;&#x2F;usr&#x2F;share&#x2F;fonts&#x2F;custom&#x2F;msyh.ttf&#39;) #显示中文字体</span><br><span class=\"line\">#导入数据</span><br><span class=\"line\">file &#x3D; &#39;data.txt&#39;</span><br><span class=\"line\">a &#x3D; np.loadtxt(file)</span><br><span class=\"line\"># 数组切片</span><br><span class=\"line\">x &#x3D; a[:,0]  # 取第一列数据</span><br><span class=\"line\">y &#x3D; a[:,1]  # 取第二列数据</span><br><span class=\"line\"># 进行样条插值</span><br><span class=\"line\">tck &#x3D; interpolate.splrep(x,y)</span><br><span class=\"line\">xx &#x3D; np.linspace(min(x),max(x),100)</span><br><span class=\"line\">yy &#x3D; interpolate.splev(xx,tck,der&#x3D;0)</span><br><span class=\"line\">print(xx)</span><br><span class=\"line\"># 画图</span><br><span class=\"line\">plt.plot(x,y,&#39;o&#39;,xx,yy)</span><br><span class=\"line\">plt.legend([&#39;true&#39;,&#39;Cubic-Spline&#39;])</span><br><span class=\"line\">plt.xlabel(&#39;距离(cm)&#39;, fontproperties&#x3D;zhfont) #注意后面的字体属性</span><br><span class=\"line\">plt.ylabel(&#39;%&#39;)</span><br><span class=\"line\">plt.title(&#39;管线仪实测剖面图&#39;, fontproperties&#x3D;zhfont)  </span><br><span class=\"line\"># 保存图片  </span><br><span class=\"line\">plt.savefig(&#39;out.jpg&#39;)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><strong>方法2：使用 Pandas 读取数据</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># code:utf-8  \tWindows 7 Utilmate</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> interpolate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决中文显示问题</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&quot;font.sans-serif&quot;</span>] = [<span class=\"string\">&quot;SimHei&quot;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&quot;axes.unicode_minus&quot;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入数据</span></span><br><span class=\"line\">file = pd.read_csv(<span class=\"string\">&#x27;data.txt&#x27;</span>,sep=<span class=\"string\">&#x27;\\s+&#x27;</span>,</span><br><span class=\"line\">                header = <span class=\"literal\">None</span>, skiprows=[<span class=\"number\">17</span>],</span><br><span class=\"line\">                <span class=\"comment\"># skiprows 跳过第18行</span></span><br><span class=\"line\">                names = [<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;value&#x27;</span>])</span><br><span class=\"line\">                </span><br><span class=\"line\">data = pd.DataFrame(file)</span><br><span class=\"line\"><span class=\"comment\"># 数组切片</span></span><br><span class=\"line\">x = data[<span class=\"string\">&#x27;x&#x27;</span>]  <span class=\"comment\"># 取第一列数据</span></span><br><span class=\"line\">y = data[<span class=\"string\">&#x27;value&#x27;</span>]  <span class=\"comment\"># 取第二列数据</span></span><br><span class=\"line\"><span class=\"comment\"># 进行样条插值</span></span><br><span class=\"line\">tck = interpolate.splrep(x,y)</span><br><span class=\"line\">xx = np.linspace(<span class=\"built_in\">min</span>(x),<span class=\"built_in\">max</span>(x),<span class=\"number\">100</span>)</span><br><span class=\"line\">yy = interpolate.splev(xx,tck,der=<span class=\"number\">0</span>)</span><br><span class=\"line\">print(yy)</span><br><span class=\"line\"><span class=\"comment\"># 画图</span></span><br><span class=\"line\">plt.plot(x,y,<span class=\"string\">&#x27;o&#x27;</span>,xx,yy)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;true&#x27;</span>,<span class=\"string\">&#x27;Cubic-Spline&#x27;</span>])</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;距离(cm)&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;%&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;管线仪实测剖面图&#x27;</span>)  </span><br><span class=\"line\"><span class=\"comment\"># 保存图片  </span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;out2.png&#x27;</span>,dpi=<span class=\"number\">600</span> )</span><br><span class=\"line\"><span class=\"comment\"># 设置需要保存图片的分辨率</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"csv数据读取\"><a href=\"#csv数据读取\" class=\"headerlink\" title=\"csv数据读取\"></a>csv数据读取</h3><figure class=\"highlight dart\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">CSV_FILE_PATH = <span class=\"string\">&#x27;./test.csv&#x27;</span></span><br><span class=\"line\">df = pd.read_csv(CSV_FILE_PATH, skiprows=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.head(<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文献：\"><a href=\"#参考文献：\" class=\"headerlink\" title=\"参考文献：\"></a>参考文献：</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzY1NTk3L2FydGljbGUvZGV0YWlscy85MDY3NjI0OQ==\">https://blog.csdn.net/qq_41365597/article/details/90676249<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhenVvMDEvYXJ0aWNsZS9kZXRhaWxzLzIwODQxOTA5\">https://blog.csdn.net/dazuo01/article/details/20841909<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODU0NjI5NS9hcnRpY2xlL2RldGFpbHMvODM1Mzc1NTg=\">https://blog.csdn.net/weixin_38546295/article/details/83537558<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83YWMzNmZhZmViZWE=\">https://www.jianshu.com/p/7ac36fafebea<i class=\"fa fa-external-link-alt\"></i></span></p>\n"},{"title":"root的TMVA如何与pytorch结合使用","url":"/2021/04/30/root%E7%9A%84TMVA%E5%A6%82%E4%BD%95%E4%B8%8Epytorch%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8/","content":"<h1 id=\"root的TMVA如何与pytorch结合使用\"><a href=\"#root的TMVA如何与pytorch结合使用\" class=\"headerlink\" title=\"root的TMVA如何与pytorch结合使用\"></a>root的TMVA如何与pytorch结合使用</h1><p> <img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Screenshot%202021-02-23%20120116%20(2).png\" alt></p>\n <a id=\"more\"></a>\n\n<h2 id=\"1-什么是TMVA？\"><a href=\"#1-什么是TMVA？\" class=\"headerlink\" title=\"1.什么是TMVA？\"></a>1.什么是TMVA？</h2><p>The Toolkit for Multivariate Data Analysis with ROOT <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb290LmNlcm4vbWFudWFsL3RtdmEv\">TMVA<i class=\"fa fa-external-link-alt\"></i></span>provides a machine learning environment for the processing and evaluation of multivariate classification, both binary and multi-class, and regression techniques targeting applications in high-energy physics. The package includes:</p>\n<ul>\n<li>Neural networks</li>\n<li>Deep networks</li>\n<li>Multilayer perceptron</li>\n<li>Boosted/Bagged decision trees</li>\n<li>Function discriminant analysis (FDA)</li>\n<li>Multidimensional probability density estimation (PDE - range-search approach)</li>\n<li>Multidimensional k-nearest neighbor classifier</li>\n<li>Predictive learning via rule ensembles (RuleFit)</li>\n<li>Projective likelihood estimation (PDE approach)</li>\n<li>Rectangular cut optimisation</li>\n<li>Support Vector Machine (SVM)</li>\n</ul>\n<h2 id=\"2-什么是pytorch\"><a href=\"#2-什么是pytorch\" class=\"headerlink\" title=\"2.什么是pytorch?\"></a>2.什么是pytorch?</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy8=\">PyTorch<i class=\"fa fa-external-link-alt\"></i></span> is a Python-based scientific package supporting automatic differentiation. An open-source machine learning framework that accelerates the path from research prototyping to production deployment.</p>\n<h2 id=\"3-为什么要将TMVA与pytorch集合？\"><a href=\"#3-为什么要将TMVA与pytorch集合？\" class=\"headerlink\" title=\"3.为什么要将TMVA与pytorch集合？\"></a>3.为什么要将TMVA与pytorch集合？</h2><p>TMVA already has a PyKeras interface which we all love, especially with Keras’ simple high-level tensor-flow API. If your work involves some elementary experiments, Keras maybe the goto framework due to its plug and play spirit.</p>\n<p>But things get interesting when one requires low level control and flexibility. That’s when the argument for Keras starts losing water. PyTorch on the other hand is amazing in terms of control, flexibility and raw power that it can provide to the user. Its lower-level approach is better suited for the more mathematically-inclined users.</p>\n<p>PyTorch is widely used among researchers and hence has a large community around it.</p>\n<ul>\n<li>ROOT + PyTorch: Allows to integrate ROOT methods which are good at handling HEP data and PyTorch for Machine Learning.</li>\n<li>Power &amp; Flexibility: Neural Nets are not easy to develop using TMVA, as they require complex configuration strings. Even with PyKeras Interface, designing custom layers is not feasible. PyTorch offers the power and flexibility to achieve complex models with custom layers, optimizers, loss functions and training methodologies.</li>\n<li>Ease of Debugging: PyTorch models make use of dynamic computation graphs and are based on eager execution. This makes it easier to use debugging tools like pdb.</li>\n<li>Performance: PyTorch is extremely fast due to its highly optimized C++ backend.</li>\n</ul>\n<h2 id=\"4-应用实例\"><a href=\"#4-应用实例\" class=\"headerlink\" title=\"4.应用实例\"></a>4.应用实例</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbmlydWRoZGFnYXIubWwvZ3NvYy90bXZhL3B5dG9yY2gvcm9vdC8yMDIwLzA4LzIxL1RNVkEtUHlUb3JjaC1UdXRvcmlhbC5odG1s\">https://anirudhdagar.ml/gsoc/tmva/pytorch/root/2020/08/21/TMVA-PyTorch-Tutorial.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Jvb3QtcHJvamVjdC9yb290L3RyZWUvbWFzdGVyL3R1dG9yaWFscy90bXZh\">https://github.com/root-project/root/tree/master/tutorials/tmva<i class=\"fa fa-external-link-alt\"></i></span></p>\n"},{"title":"💖个人简历💘","url":"/about/index_old.html","content":"<div class=\"pdfobject-container\" data-target=\"resume_lihui.pdf\" data-height=\"600px\"></div>\n\n<h2 id=\"💢关于此网站\"><a href=\"#💢关于此网站\" class=\"headerlink\" title=\"💢关于此网站\"></a>💢关于此网站</h2><ul>\n<li>这是LiHui的个人博客，英文名Hubery Lee，该博客主要用于记录工作和学习所遇到的问题和有趣的事情，俗称碎碎念。</li>\n<li>主要内容为编程工具的配置及使用，项目的问题解决及个人见解。</li>\n<li>主要涉及到的知识有<a href>辐射探测与成像</a><a href>机器视觉</a>、<a href>深度学习</a>等领域及相关软件的使用如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWFudDQud2ViLmNlcm4uY2gvbm9kZS8x\">Geant4<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb290LmNlcm4v\">Root<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuY3Yub3JnLw==\">OpenCV<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy8=\">Pytorch<i class=\"fa fa-external-link-alt\"></i></span>等。</li>\n</ul>\n<h2 id=\"🏡相关项目\"><a href=\"#🏡相关项目\" class=\"headerlink\" title=\"🏡相关项目\"></a>🏡相关项目</h2><ul>\n<li><a href=\"https://hubery-lee.github.io/archives/\">归档资料</a></li>\n<li><a href=\"https://hubery-lee.github.io/tags/\">云图与分类标签</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvR2VhbnQ0LWppYW9jaGVuZw==\">Geant4 入门哔哩哔哩视频教程代码<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMTk5MzEzNTI=\">视频连接<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ob3ctdG8tdXNlLXNwaGlueC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">如何使用sphinx编写技术文档<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW5kYm9va2ZvcmdpdC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">Git使用手册<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"💫关于LiHui\"><a href=\"#💫关于LiHui\" class=\"headerlink\" title=\"💫关于LiHui\"></a>💫关于LiHui</h2><ul>\n<li>LiHui的英文名为Hubery Lee. </li>\n<li>出生年月: 1993年1月   <code>单身</code></li>\n<li>LiHui本硕毕业于哈尔滨工程大学.</li>\n<li>研究领域为核科学与技术，辐射探测与应用.</li>\n<li>爱好音乐、运动和旅游；网易云音乐中毒重度症患者；<code>微博</code>和<code>网易云音乐</code>主页可以通过此博客的侧边栏超链接关注；在此，我也给出我的个人主页链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMjgyMzkyNjU5MC9wcm9maWxlP3JpZ2h0bW9kPTEmd3ZyPTYmbW9kPXBlcnNvbmluZm8maXNfYWxsPTE=\">微博<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTM1NzY5MjU0Mg==\">网易云音乐<i class=\"fa fa-external-link-alt\"></i></span>，欢迎交朋友。</li>\n<li>目前工作单位:  中国辐射防护研究院</li>\n</ul>\n<h2 id=\"💢About-this-website\"><a href=\"#💢About-this-website\" class=\"headerlink\" title=\"💢About this website\"></a>💢About this website</h2><ul>\n<li>This is Hubery-Lee&#39;s personal blog, which records problems and solutions in Hubery&#39;s work and learning.</li>\n<li>The main contents are the configuration and use of programming tools, the problem solving methods and personal opinions to the solution in his simulation projects.</li>\n<li>This site provides links for Hubery&#39;s daily learning and work.</li>\n</ul>\n<h2 id=\"💫About-LiHui\"><a href=\"#💫About-LiHui\" class=\"headerlink\" title=\"💫About LiHui\"></a>💫About LiHui</h2><ul>\n<li><p>LiHui&#39;s English name is Hubery Lee.</p>\n</li>\n<li><p>birthday: January,1993 <code>single</code></p>\n</li>\n<li><p>Achieved bacholar degree and master degree in Harbin Engineering University.</p>\n</li>\n<li><p>Devoted to nuclear science and technology simulation research.</p>\n</li>\n<li><p>Love music, sports and Tourism. Addicted to netease cloud music; You can follow my <code>weibo</code> and <code>netease cloud music</code> from siderbar links of this blog. I also off my weibo and netease cloud music links here. <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMjgyMzkyNjU5MC9wcm9maWxlP3JpZ2h0bW9kPTEmd3ZyPTYmbW9kPXBlcnNvbmluZm8maXNfYWxsPTE=\">weibo<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTM1NzY5MjU0Mg==\">netease cloud music<i class=\"fa fa-external-link-alt\"></i></span>. I am glad to be friends with you.</p>\n</li>\n<li><p>Institute: Institute for Radiation Protection</p>\n</li>\n</ul>\n"},{"title":"categories","url":"/categories/index.html","content":""},{"title":"archives","url":"/archives/index.html","content":""},{"title":"💖本站介绍💖","url":"/introduction/index.html","content":"<h2 id=\"💢关于此网站\"><a href=\"#💢关于此网站\" class=\"headerlink\" title=\"💢关于此网站\"></a>💢关于此网站</h2><ul>\n<li>这是LiHui的个人博客，该博客主要用于记录工作和学习所遇到的问题和有趣的事情，俗称碎碎念。</li>\n<li>主要内容为编程工具的配置及使用，项目的问题解决及个人见解。</li>\n<li>主要涉及到的知识有<a href>辐射探测与成像</a><a href>机器视觉</a>、<a href>深度学习</a>等领域及相关软件的使用如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWFudDQud2ViLmNlcm4uY2gvbm9kZS8x\">Geant4<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb290LmNlcm4v\">Root<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuY3Yub3JnLw==\">OpenCV<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy8=\">Pytorch<i class=\"fa fa-external-link-alt\"></i></span>等。</li>\n</ul>\n<h2 id=\"🔰最新文章\"><a href=\"#🔰最新文章\" class=\"headerlink\" title=\"🔰最新文章\"></a>🔰最新文章</h2><p>点击 <a href=\"https://hubery-lee.github.io/archives/\">查看最新文章</a><br>欢迎订阅公众号</p>\n<p><img src=\"/introduction/index/QRCODE.png\" alt=\"QRCODE\"></p>\n<h2 id=\"🏡相关项目\"><a href=\"#🏡相关项目\" class=\"headerlink\" title=\"🏡相关项目\"></a>🏡相关项目</h2><ul>\n<li><a href=\"https://hubery-lee.github.io/archives/\">归档资料</a></li>\n<li><a href=\"https://hubery-lee.github.io/tags/\">云图与分类标签</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvR2VhbnQ0LWppYW9jaGVuZw==\">Geant4 入门哔哩哔哩视频教程代码<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMTk5MzEzNTI=\">视频连接<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ob3ctdG8tdXNlLXNwaGlueC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">如何使用sphinx编写技术文档<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW5kYm9va2ZvcmdpdC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">Git使用手册<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"💫关于LiHui\"><a href=\"#💫关于LiHui\" class=\"headerlink\" title=\"💫关于LiHui\"></a>💫关于LiHui</h2><ul>\n<li>LiHui的英文名为Hubery Lee. </li>\n<li>出生年月: 1993年1月   <code>单身</code></li>\n<li>LiHui本硕毕业于哈尔滨工程大学.</li>\n<li>研究领域为核科学与技术，辐射探测与应用.</li>\n<li>爱好音乐、运动和旅游；网易云音乐中毒重度症患者；<code>微博</code>和<code>网易云音乐</code>主页可以通过此博客的侧边栏超链接关注；在此，我也给出我的个人主页链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMjgyMzkyNjU5MC9wcm9maWxlP3JpZ2h0bW9kPTEmd3ZyPTYmbW9kPXBlcnNvbmluZm8maXNfYWxsPTE=\">微博<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTM1NzY5MjU0Mg==\">网易云音乐<i class=\"fa fa-external-link-alt\"></i></span>，欢迎交朋友。</li>\n<li>目前工作单位:  中国辐射防护研究院</li>\n</ul>\n<p>详细简历请查看 <a href=\"https://hubery-lee.github.io/about/\">关于</a></p>\n<h1 id=\"💘合作交流💘\"><a href=\"#💘合作交流💘\" class=\"headerlink\" title=\"💘合作交流💘\"></a>💘合作交流💘</h1><p>作者建站的初衷是记录日常工作中遇到的==<strong>新知识、新事物</strong>==以及实践中收获的==<strong>新技巧、新方法</strong>==。作者最快乐的事情是与小伙伴们分享。然而，作者一人的精力有限，内容创作力不足，故而，需要小伙伴们的新想法、改进建议、投稿支持和公众号的共同管理等。💘<strong>高质量的投稿内容有稿酬哦</strong>💘</p>\n<h2 id=\"内容支持\"><a href=\"#内容支持\" class=\"headerlink\" title=\"内容支持\"></a>内容支持</h2><ul>\n<li>核技术，特别是辐射探测与成像相关最新动态</li>\n<li>核医学物理，特别是医学影像物理最新动态</li>\n<li>机器视觉，特别是图像重建、图像处理等相关最新动态</li>\n<li>提效技巧，分享日常科研工作提升工作效率的好方法、好工具和好的实践结果</li>\n<li>致富之路，分享增加收入的门路、效果和心得；比如: <strong>理财、接外包服务等</strong></li>\n<li>逗逼日常，分享一些日常有趣的事情，如新闻动态、段子、恶搞和喜剧等</li>\n</ul>\n<p>虽然作者领域主要是核工程与核技术方向，涉及的技术领域主要包括核工程（机电）、辐射探测（数电）、数字化仿真（编程）、图像重建与图像处理（算法）、机器视觉（人工智能）等技术，但是<strong>作者一心想做斜杆青年，故而，无论小伙伴你是哪个领域的均可以进行内容投稿支持哦。</strong></p>\n<h2 id=\"几大平台\"><a href=\"#几大平台\" class=\"headerlink\" title=\"几大平台\"></a>几大平台</h2><p>目前作者有如下几大平台，包括<code>公众号、知乎、自建主页和B站</code></p>\n<h3 id=\"公众号-辐射探测与成像\"><a href=\"#公众号-辐射探测与成像\" class=\"headerlink\" title=\"公众号 辐射探测与成像\"></a>公众号 <code>辐射探测与成像</code></h3><p><img src=\"/introduction/index/qrsearch.png\" alt=\"qrsearch\"></p>\n<h3 id=\"知乎-忽必烈李\"><a href=\"#知乎-忽必烈李\" class=\"headerlink\" title=\"知乎 忽必烈李\"></a>知乎 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3Blb3BsZS9odWJlcnlsZWVuYg==\">忽必烈李<i class=\"fa fa-external-link-alt\"></i></span></h3><p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/zhihu.png\" alt=\"zhihu\"></p>\n<h3 id=\"自建主页-https-hubery-lee-cn\"><a href=\"#自建主页-https-hubery-lee-cn\" class=\"headerlink\" title=\"自建主页 https://hubery-lee.cn/\"></a>自建主页 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWJlcnktbGVlLmNuLw==\">https://hubery-lee.cn/<i class=\"fa fa-external-link-alt\"></i></span></h3><p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/hubery_lee.png\" alt=\"hubery_lee\"></p>\n<h3 id=\"B站-忽必烈李Hubery-Lee\"><a href=\"#B站-忽必烈李Hubery-Lee\" class=\"headerlink\" title=\"B站 忽必烈李Hubery-Lee\"></a>B站 <a href=\"https://space.bilibili.com/19931352\"><strong>忽必烈李Hubery-Lee</strong></a></h3><p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/bilibili.png\" alt=\"bilibili\"></p>\n<h2 id=\"互动专区\"><a href=\"#互动专区\" class=\"headerlink\" title=\"互动专区\"></a>互动专区</h2><p>交流互动途径各个平台均有留言板，在此不再赘述。</p>\n<p><strong>考虑到想象论坛一样提供话题板进行讨论，同时又避免用户注册的麻烦。作者为微信用户创建了该公众号的圈子以方便小伙伴们留言讨论话题。</strong></p>\n"},{"title":"tags","url":"/tags/index.html","content":""},{"title":"💖个人简历💘","url":"/about/index.html","content":"<p><img src=\"/about/index/resume_lihui11.png\" alt></p>\n<p><img src=\"/about/index/resume_lihui22.png\" alt></p>\n<p><img src=\"/about/index/resume_lihui33.png\" alt></p>\n"},{"url":"/baidu_verify_code-angLTSi9gk.html","content":"365fd0e75f9d4eafd1c4b8dace70b435"}]