[{"title":"Django如何搭建web应用","url":"/2020/07/12/Django%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAweb%E5%BA%94%E7%94%A8/","content":"<h1 id=\"Django如何搭建web应用\"><a href=\"#Django如何搭建web应用\" class=\"headerlink\" title=\"Django如何搭建web应用\"></a>Django如何搭建web应用</h1><h2 id=\"🛒Django的特点\"><a href=\"#🛒Django的特点\" class=\"headerlink\" title=\"🛒Django的特点\"></a>🛒Django的特点</h2><p>Django 最初被设计用于具有快速开发需求的新闻类站点，目的是要实现简单快捷的网站开发。以下内容简要介绍了如何使用 Django 实现一个数据库驱动的 Web 应用。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL292ZXJ2aWV3Lw==\">https://docs.djangoproject.com/zh-hans/3.0/intro/overview/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ul>\n<li><p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2JqZWN0LXJlbGF0aW9uYWxfbWFwcGluZw==\">对象关系映射器<i class=\"fa fa-external-link-alt\"></i></span></strong> </p>\n<p>可以使用强大的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9kYi9tb2RlbHMv\">数据-模型语句<i class=\"fa fa-external-link-alt\"></i></span> 来描述你的数据模型，这解决了数年以来在数据库模式中的难题。</p>\n</li>\n<li><p><strong>享用便捷的 API</strong></p>\n<p>可以使用一套便捷而丰富的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9kYi9xdWVyaWVzLw==\">Python API<i class=\"fa fa-external-link-alt\"></i></span> 访问你的数据。API是动态创建的，不需要代码生成</p>\n</li>\n<li><p><strong>动态管理接口</strong></p>\n<p>当你的模型完成定义，Django 就会自动生成一个专业的生产级 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3JlZi9jb250cmliL2FkbWluLw==\">管理接口<i class=\"fa fa-external-link-alt\"></i></span> ——一个允许认证用户添加、更改和删除对象的 Web 站点。你只需在 admin 站点上注册你的模型即可：</p>\n</li>\n<li><p><strong>规划 URLs</strong></p>\n<p>Django 推崇优美的 URL 设计，所以不要把诸如 <code>.php</code> 和 <code>.asp</code> 之类的冗余的后缀放到 URL 里。</p>\n<p>需要创建一个叫做 URLconf 的 Python 模块。这是网站的目录，它包含了一张 URL 和 Python 回调函数之间的映射表。URLconf 也有利于将 Python 代码与 URL 进行解耦（译注：使各个模块分离，独立）</p>\n</li>\n<li><p><strong>编写视图</strong></p>\n<p>视图函数的执行结果只可能有两种：返回一个包含请求页面元素的 <a href=\"https://docs.djangoproject.com/zh-hans/3.0/ref/request-response/#django.http.HttpResponse\"><code>HttpResponse</code></a> 对象，或者是抛出 <a href=\"https://docs.djangoproject.com/zh-hans/3.0/topics/http/views/#django.http.Http404\"><code>Http404</code></a> 这类异常。至于执行过程中的其它的动作则由你决定。</p>\n</li>\n<li><p><strong>设计模板</strong><br>Django 允许设置搜索模板路径，这样可以最小化模板之间的冗余。在 Django 设置中，你可以通过 DIRS 参数指定一个路径列表用于检索模板。如果第一个路径中不包含任何模板，就继续检查第二个，以此类推。</p>\n</li>\n</ul>\n<h2 id=\"🎈项目框架\"><a href=\"#🎈项目框架\" class=\"headerlink\" title=\"🎈项目框架\"></a>🎈项目框架</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysite&#x2F;</span><br><span class=\"line\">    manage.py</span><br><span class=\"line\">    mysite&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">        settings.py</span><br><span class=\"line\">        urls.py</span><br><span class=\"line\">        asgi.py</span><br><span class=\"line\">        wsgi.py</span><br></pre></td></tr></table></figure>\n<p>这些目录和文件的用处是：</p>\n<ul>\n<li><p>最外层的 <code>mysite/</code> 根目录只是你项目的容器， 根目录名称对Django没有影响，你可以将它重命名为任何你喜欢的名称。</p>\n</li>\n<li><p><code>manage.py</code>: 一个让你用各种方式管理 Django 项目的命令行工具。你可以阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3JlZi9kamFuZ28tYWRtaW4v\">django-admin and manage.py<i class=\"fa fa-external-link-alt\"></i></span> 获取所有 <code>manage.py</code> 的细节。</p>\n</li>\n<li><p>里面一层的 <code>mysite/</code> 目录包含你的项目，它是一个纯 Python 包。它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 <code>mysite.urls</code>).</p>\n</li>\n<li><p><code>mysite/__init__.py</code>：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。如果你是 Python 初学者，阅读官方文档中的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy90dXRvcmlhbC9tb2R1bGVzLmh0bWwjdHV0LXBhY2thZ2Vz\">更多关于包的知识<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n</li>\n<li><p><code>mysite/settings.py</code>：Django 项目的配置文件。如果你想知道这个文件是如何工作的，请查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9zZXR0aW5ncy8=\">Django 配置<i class=\"fa fa-external-link-alt\"></i></span> 了解细节。</p>\n</li>\n<li><p><code>mysite/urls.py</code>：Django 项目的 URL 声明，就像你网站的“目录”。阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL3RvcGljcy9odHRwL3VybHMv\">URL调度器<i class=\"fa fa-external-link-alt\"></i></span> 文档来获取更多关于 URL 的内容。</p>\n</li>\n<li><p><code>mysite/asgi.py</code>：作为你的项目的运行在 ASGI 兼容的Web服务器上的入口。阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2hvd3RvL2RlcGxveW1lbnQvd3NnaS8=\">如何使用 WSGI 进行部署<i class=\"fa fa-external-link-alt\"></i></span> 了解更多细节。</p>\n</li>\n<li><p><code>mysite/wsgi.py</code>：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。阅读 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2hvd3RvL2RlcGxveW1lbnQvd3NnaS8=\">如何使用 WSGI 进行部署<i class=\"fa fa-external-link-alt\"></i></span> 了解更多细节。</p>\n</li>\n</ul>\n<h2 id=\"🍎应用框架\"><a href=\"#🍎应用框架\" class=\"headerlink\" title=\"🍎应用框架\"></a>🍎应用框架</h2><h3 id=\"🍏应用与项目的关系\"><a href=\"#🍏应用与项目的关系\" class=\"headerlink\" title=\"🍏应用与项目的关系\"></a>🍏应用与项目的关系</h3><p><img src=\"/2020/07/12/Django%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAweb%E5%BA%94%E7%94%A8/%E6%A0%B9%E7%9B%AE%E5%BD%95.png\" alt></p>\n<h3 id=\"🔱创建应用的框架\"><a href=\"#🔱创建应用的框架\" class=\"headerlink\" title=\"🔱创建应用的框架\"></a>🔱创建应用的框架</h3><p>创建一个 <code>polls</code> 目录，它的目录结构大致如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">polls&#x2F;</span><br><span class=\"line\">    __init__.py</span><br><span class=\"line\">    admin.py</span><br><span class=\"line\">    apps.py</span><br><span class=\"line\">    migrations&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">    models.py</span><br><span class=\"line\">    tests.py</span><br><span class=\"line\">    views.py</span><br></pre></td></tr></table></figure>\n<p>这个目录结构包括了投票应用的全部内容。</p>\n<h3 id=\"❗应用的调试模块\"><a href=\"#❗应用的调试模块\" class=\"headerlink\" title=\"❗应用的调试模块\"></a>❗应用的调试模块</h3><p><strong><code>为什么要进行调试？</code><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3R1dG9yaWFsMDUv\">参考<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n<ul>\n<li><h4 id=\"测试将节约你的时间\"><a href=\"#测试将节约你的时间\" class=\"headerlink\" title=\"测试将节约你的时间\"></a>测试将节约你的时间</h4><p>当某人写出错误的代码时，自动化测试还能帮助你定位错误代码的位置。</p>\n</li>\n<li><h4 id=\"测试不仅能发现错误，而且能预防错误\"><a href=\"#测试不仅能发现错误，而且能预防错误\" class=\"headerlink\" title=\"测试不仅能发现错误，而且能预防错误\"></a>测试不仅能发现错误，而且能预防错误</h4><p>测试就好像是从内部仔细检查你的代码，当有些地方出错时，这些地方将会变得很显眼——<em>就算你自己没有意识到那里写错了</em>。</p>\n</li>\n<li><h4 id=\"测试使你的代码更有吸引力\"><a href=\"#测试使你的代码更有吸引力\" class=\"headerlink\" title=\"测试使你的代码更有吸引力\"></a>测试使你的代码更有吸引力</h4><p>复杂的应用可能由团队维护。测试的存在保证了协作者不会不小心破坏了了你的代码（也保证你不会不小心弄坏他们的）。</p>\n</li>\n</ul>\n<p><strong>unittest 和django.test   TestCase 类似</strong></p>\n<h2 id=\"❓如何编写可重用程序\"><a href=\"#❓如何编写可重用程序\" class=\"headerlink\" title=\"❓如何编写可重用程序\"></a>❓如何编写可重用程序</h2><h3 id=\"☯可重用很重要\"><a href=\"#☯可重用很重要\" class=\"headerlink\" title=\"☯可重用很重要\"></a>☯可重用很重要</h3><p>可重用性是 Python 的根本。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXBpLnB5dGhvbi5vcmcvcHlwaQ==\">The Python Package Index (PyPI)<i class=\"fa fa-external-link-alt\"></i></span> 有许大量的包，都可被用在你自己的 Python 项目中。同样可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kamFuZ29wYWNrYWdlcy5vcmcv\">Django Packages<i class=\"fa fa-external-link-alt\"></i></span> 中查找已发布的可重用应用，也可将其引入到你的项目中。Django 本身也是一个 Python 包，也就是说你可以将已有的 Python 包或 Django 应用并入你的项目。你只需要编写属于你的那部分即可。</p>\n<h3 id=\"🚀​你的项目和可复用应用¶\"><a href=\"#🚀​你的项目和可复用应用¶\" class=\"headerlink\" title=\"🚀​你的项目和可复用应用¶\"></a>🚀​你的项目和可复用应用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3JldXNhYmxlLWFwcHMvI3lvdXItcHJvamVjdC1hbmQteW91ci1yZXVzYWJsZS1hcHA=\">¶<i class=\"fa fa-external-link-alt\"></i></span></h3><p>通过前面的教程，我们的工程应该看起来像这样:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysite&#x2F;</span><br><span class=\"line\">    manage.py</span><br><span class=\"line\">    mysite&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">        settings.py</span><br><span class=\"line\">        urls.py</span><br><span class=\"line\">        asgi.py</span><br><span class=\"line\">        wsgi.py</span><br><span class=\"line\">    polls&#x2F;</span><br><span class=\"line\">        __init__.py</span><br><span class=\"line\">        admin.py</span><br><span class=\"line\">        apps.py</span><br><span class=\"line\">        migrations&#x2F;</span><br><span class=\"line\">            __init__.py</span><br><span class=\"line\">            0001_initial.py</span><br><span class=\"line\">        models.py</span><br><span class=\"line\">        static&#x2F;</span><br><span class=\"line\">            polls&#x2F;</span><br><span class=\"line\">                images&#x2F;</span><br><span class=\"line\">                    background.gif</span><br><span class=\"line\">                style.css</span><br><span class=\"line\">        templates&#x2F;</span><br><span class=\"line\">            polls&#x2F;</span><br><span class=\"line\">                detail.html</span><br><span class=\"line\">                index.html</span><br><span class=\"line\">                results.html</span><br><span class=\"line\">        tests.py</span><br><span class=\"line\">        urls.py</span><br><span class=\"line\">        views.py</span><br><span class=\"line\">    templates&#x2F;</span><br><span class=\"line\">        admin&#x2F;</span><br><span class=\"line\">            base_site.html</span><br></pre></td></tr></table></figure>\n\n\n<p>目录 <code>polls</code> 现在可以被拷贝至一个新的 Django 工程，且立刻被复用。不过现在还不是发布它的时候。为了这样做，我们需要打包这个应用，便于其他人安装它。</p>\n<h3 id=\"💯打包你的应用\"><a href=\"#💯打包你的应用\" class=\"headerlink\" title=\"💯打包你的应用\"></a>💯打包你的应用</h3><p>目前，打包 Python 程序需要工具，有许多工具可以完成此项工作。在此教程中，我们将使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L3NldHVwdG9vbHMv\">setuptools<i class=\"fa fa-external-link-alt\"></i></span> 来打包我们的程序。</p>\n<p><strong><code>具体</code><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRqYW5nb3Byb2plY3QuY29tL3poLWhhbnMvMy4wL2ludHJvL3JldXNhYmxlLWFwcHMv\">参考链接<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n","categories":["Web应用"],"tags":["web","django","数据库sqlite"]},{"title":"CMakeLists.txt编写基础知识","url":"/2018/11/23/CMakeLists-txt%E7%BC%96%E5%86%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/","content":"<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NDUuaHRtbA==\">cmake 背景知识<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTEuaHRtbA==\">cmake 基础2<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS81MnBocC9wLzU2ODE3NTUuaHRtbA==\">cmake  共享库文件，外部链接<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"应用实例\"><a href=\"#应用实例\" class=\"headerlink\" title=\"应用实例\"></a>应用实例</h1><p><strong>说明</strong><br>采用c++的类来写hello world，然后编写教程。</p>\n<ul>\n<li>bin  二进制文档</li>\n<li>build 链接文档</li>\n<li>doc README、COPYRIGHT等的说明文档</li>\n<li>inc 头文件文档  hello.hh</li>\n<li>src 源文件文档  hello.cc<br>main.cc 为主文件</li>\n</ul>\n<p><strong>附录</strong></p>\n<ul>\n<li>main.cc</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include &quot;hello.hh&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  HelloFunc hi;</span><br><span class=\"line\">  hi.Hello();</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hello.hh</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#ifndef HELLO_hh</span><br><span class=\"line\">#define HELLO_hh 1</span><br><span class=\"line\"></span><br><span class=\"line\">class HelloFunc</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> public:</span><br><span class=\"line\">  HelloFunc();</span><br><span class=\"line\">  virtual ~HelloFunc();  </span><br><span class=\"line\">  </span><br><span class=\"line\">  void Hello();</span><br><span class=\"line\"> private:</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hello.cc</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#include &quot;hello.hh&quot;</span><br><span class=\"line\">#include &quot;iostream&quot;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">HelloFunc::HelloFunc()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">HelloFunc::~HelloFunc()</span><br><span class=\"line\">&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void HelloFunc::Hello()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cout&lt;&lt;&quot;Hello World&quot;&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>-CMakeList.txt 编译文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">##</span><br><span class=\"line\">##  cmake module authored by Hubery Lee(李会)</span><br><span class=\"line\">##  2018年11月22日 </span><br><span class=\"line\">##</span><br><span class=\"line\"></span><br><span class=\"line\">cmake_minimum_required(VERSION 2.6 FATAL_ERROR) #</span><br><span class=\"line\">set(PROJ_NAME hello)</span><br><span class=\"line\">project($&#123;PROJ_NAME&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">#project($&#123;PROJ_NAME&#125; C CXX Fortran)</span><br><span class=\"line\">#enable_language(Fortran) ##允许使用语言类型</span><br><span class=\"line\">#set(CMAKE_BUILD_TYPE release) ##release or debug</span><br><span class=\"line\">#set(CMAKE_CXX_FLAGS &quot;-std&#x3D;c++11 $&#123;CMAKE_CXX_FLAGS&#125;&quot;) ##</span><br><span class=\"line\"></span><br><span class=\"line\">#------------------------------------</span><br><span class=\"line\"># Include directory for this project</span><br><span class=\"line\">#</span><br><span class=\"line\">include_directories($&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc)</span><br><span class=\"line\"></span><br><span class=\"line\">#------------------------------------</span><br><span class=\"line\"># Locate sources and headers for this project</span><br><span class=\"line\">#</span><br><span class=\"line\">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;src&#x2F;*.cc)</span><br><span class=\"line\">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc&#x2F;*.hh)</span><br><span class=\"line\"></span><br><span class=\"line\">#------------------------------------</span><br><span class=\"line\"># Add the executable and link it to the libraries</span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">add_executable($&#123;PROJ_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">#target_link_libraries($&#123;PROJ_NAME&#125; -L$&#123;PROJECT_SOURE_DIR&#125;&#x2F;lib hello.so) ##链接库文件</span><br><span class=\"line\"></span><br><span class=\"line\">#-------------------------------------</span><br><span class=\"line\"># Install the executable or files to &#39;bin&#39; directory</span><br><span class=\"line\"># under CMAKE_INSTALL_PREFIX</span><br><span class=\"line\">#</span><br><span class=\"line\">install(TARGETS $&#123;PROJ_NAME&#125; DESTINATION bin)</span><br></pre></td></tr></table></figure>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><h2 id=\"如何外部编译-？\"><a href=\"#如何外部编译-？\" class=\"headerlink\" title=\"如何外部编译 ？\"></a>如何外部编译 ？</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:$(pwd)&#x2F;lib</span><br><span class=\"line\">cd build</span><br><span class=\"line\">cmake -DCMAKE_INSTALL_PREFIX&#x3D;..&#x2F; ..&#x2F;</span><br><span class=\"line\">make -j4</span><br><span class=\"line\">make install</span><br><span class=\"line\">cd ..&#x2F;bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置二进制文件存放地址\"><a href=\"#设置二进制文件存放地址\" class=\"headerlink\" title=\"设置二进制文件存放地址\"></a>设置二进制文件存放地址</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">SET(EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;&#x2F;bin)</span><br><span class=\"line\">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;&#x2F;lib)</span><br></pre></td></tr></table></figure>\n<h2 id=\"如何生成动态库或静态库？\"><a href=\"#如何生成动态库或静态库？\" class=\"headerlink\" title=\"如何生成动态库或静态库？\"></a>如何生成动态库或静态库？</h2><p> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjExMTc3MC9hcnRpY2xlL2RldGFpbHMvODA1OTU2MzM=\">参考文献<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.add_library(name SHARED source1, source2, ..., sourceN)</span><br><span class=\"line\">2.add_library(name_static STATIC source1, source2, ... , sourceN)</span><br><span class=\"line\">3.set_target_properties(name_static PROPERTIES OUTPUT_NAME &quot;name&quot;)</span><br><span class=\"line\">4.set_target_properties(name_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class=\"line\">5.set_target_properties(name PROPERTIES CLEAN_DIRECT_OUTPUT 1)</span><br><span class=\"line\">6.set_target_properties(name PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class=\"line\">7.install(TARGETS name name_static </span><br><span class=\"line\">          LIBRARY DESTINATION lib</span><br><span class=\"line\">          ARCHIVE DESTINATION lib)</span><br><span class=\"line\">8.install(DIRECTORY $&#123;titile_H&#125; DESTINATION include&#x2F;tH)</span><br></pre></td></tr></table></figure>\n<p>第一条    指令是生成动态库（扩展名为.so），类型关键字是SHARED，并不需要写全libname.so，只需要填写name即可，cmake系统会自动生成libname.so。</p>\n<p>第二条    指令是在支持动态库的基础上为工程添加一个静态库，因为静态库和动态库同名时，构建静态库的指令是无效的，所以把上面的name修改为name_static，就可以构建一个libname_static的静态库；然而我们需要的是名字相同的静态库和动态库，因为target的唯一性，所以就不能通过add_library指令实现，所以用到第三条指令</p>\n<p>第三条    指令是为了能够同时得到libname.so/libname.a两个库文件，但是因为cmake在构建一个新的target时，会尝试清理掉具有相同命名的库文件，所以，在构建libname.a的时候会将libname.so库文件清理掉，因此需要再次使用set_target_properties定义的CLEAN_DIRECT_OUTPUT属性，如第四条和第五条指令所示，至此，我们再次进行构建，就会发现在目录中同时生成libname.so动态库文件和libname.a静态库文件</p>\n<p>第六条    指令是因为按照规则，动态库是应当包含一个版本号的， 为了实现动态库版本号，仍然需要使用SET_TARGET_PROPERTIES指令，其中VERSON指代动态库版本，SOVERSION指代API版本。</p>\n<p>第七条    指令是将动态库和静态库文件安装到系统目录，才能够真正地让其他人开发使用，我们将库文件安装到<prefix>/lib目录下</prefix></p>\n<p>第八条    指令是将头文件安装到<prefix>/include/tH目录中。</prefix></p>\n<h2 id=\"外部引用动态库和静态库\"><a href=\"#外部引用动态库和静态库\" class=\"headerlink\" title=\"外部引用动态库和静态库\"></a>外部引用动态库和静态库</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.INCLUDE_DIRECTORIES(头文件在系统中的位置)</span><br><span class=\"line\">2.ADD_EXECUTABLE(main source&#x2F;main.cpp)</span><br><span class=\"line\">3.TARGET_LINK_LIBRARIES(main libfaceDetection.a)</span><br></pre></td></tr></table></figure>\n<p>因为编译安装将动态库安装到/usr/local/lib，/usr/bin目录下，对于动态库的外部引用有些麻烦；</p>\n<h1 id=\"库文件的编译和封装\"><a href=\"#库文件的编译和封装\" class=\"headerlink\" title=\"库文件的编译和封装\"></a>库文件的编译和封装</h1><ul>\n<li>新建<code>build</code>文件夹，将要编译成库文件的<code>inc</code>和<code>src</code>拷贝到<code>build</code>文件夹下，然后在此编写CMakeLists.txt 文件,在将头文件和源文件安装成库，CMakeLists的编写如下：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Setup the project</span><br><span class=\"line\">cmake_minimum_required(VERSION 2.6 FATAL_ERROR)</span><br><span class=\"line\">set(PROJ_NAME hello)</span><br><span class=\"line\">project($PROJ_NAME)</span><br><span class=\"line\"></span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Setup Geant4 include directories and compile definitions</span><br><span class=\"line\"># Setup include directory for this project</span><br><span class=\"line\">#</span><br><span class=\"line\">include_directories($&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc)</span><br><span class=\"line\"></span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Locate sources and headers for this project</span><br><span class=\"line\"># NB: headers are included so they will show up in IDEs</span><br><span class=\"line\">#</span><br><span class=\"line\">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;src&#x2F;*.cc)</span><br><span class=\"line\">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;inc&#x2F;*.hh)</span><br><span class=\"line\"></span><br><span class=\"line\">#-------------------------------------------</span><br><span class=\"line\"># Create static and dynamic library</span><br><span class=\"line\">#</span><br><span class=\"line\">add_library($&#123;PROJ_NAME&#125; SHARED $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class=\"line\">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1)</span><br><span class=\"line\"></span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Install the executable to &#39;bin&#39; directory under CMAKE_INSTALL_PREFIX</span><br><span class=\"line\">#</span><br><span class=\"line\">#install(TARGETS $&#123;PROJ_NAME&#125;  DESTINATION lib)</span><br><span class=\"line\">#install(FILES $&#123;headers&#125; DESTINATION inc)</span><br><span class=\"line\">SET(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;..&#x2F;..&#x2F;..&#x2F;lib)</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong> </p>\n<ul>\n<li>将可执行二进制文件安装到文件夹时，采用<code>install(TARGETS )</code>方式存在一定问题，生存的二进制文件在<code>usr/bin</code>，同理，头文件安装在<code>usr/local/inc</code>下。</li>\n<li><code>SET(LIBRARY_OUTPUT_PATH )</code>可以设置库文件安装位置。</li>\n<li>在<code>main()</code>的编译链接中，CMakeLists.txt将会存在以下问题，头文件必须包含生成库文件所用的全部头文件，链接生成的所有动态库文件；如，在上述的</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">set_target_properties($&#123;PROJ_NAME&#125; PROPERTIES VERSION 1.2 SOVERSION 1) </span><br></pre></td></tr></table></figure>\n<p>其将，生成三个库文件，分别如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">libhello.so</span><br><span class=\"line\">libhello.so.1</span><br><span class=\"line\">libhello.so.1.2</span><br></pre></td></tr></table></figure>\n<p>在链接库文件时，则需要将三个库文件均包含</p>\n<ul>\n<li>API (Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9hcGkvMTAxNTQ=\">百度百科<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h1 id=\"外部引用库的优势\"><a href=\"#外部引用库的优势\" class=\"headerlink\" title=\"外部引用库的优势\"></a>外部引用库的优势</h1><ul>\n<li>隐藏源码</li>\n<li>不依赖机器的性能和配置差异</li>\n<li>二进制库文件位置明确，脱离源码可移植性高</li>\n</ul>\n","categories":["编程工具学习与应用"],"tags":["cmake"]},{"title":"Emacs yasnippets and markdown configure","url":"/2018/10/11/Emacs-yasnippets-and-markdown-configure/","content":"<p>[toc]</p>\n<h2 id=\"yasnippets-的配置\"><a href=\"#yasnippets-的配置\" class=\"headerlink\" title=\"yasnippets 的配置\"></a>yasnippets 的配置</h2><ul>\n<li>安装</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd ~/.emacs.d/site-lisp</span><br><span class=\"line\">git clone https://github.com/capitaomorte/yasnippet</span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置==init.el==</li>\n</ul>\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"name\">add-to-list</span> &#x27;load-path</span><br><span class=\"line\">              <span class=\"string\">&quot;~/.emacs.d/site-lisp/yasnippet&quot;</span>)</span><br><span class=\"line\">(<span class=\"name\">require</span> &#x27;yasnippet)</span><br><span class=\"line\">(<span class=\"name\">setq</span> yas-snippet-dirs</span><br><span class=\"line\">      &#x27;(<span class=\"string\">&quot;~/.emacs.d/snippets&quot;</span> ;; personal snippets</span><br><span class=\"line\">        ))</span><br><span class=\"line\">(<span class=\"name\">yas-global-mode</span> <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>添加自定义模板</p>\n<p> M-x yas-new-snippet 创建新模板<br> C-c C-c 保存</p>\n</li>\n<li><p>模板内容说明</p>\n<p>contributor: snippet作者名称及电邮<br>snippet的语法变量是以$美元符开始的，根据变量$1 $2 $... 定义顺序光标移动位置，特殊的$0是最后光标停位置，语法${N:default value}。</p>\n</li>\n</ul>\n<h2 id=\"markdown-的配置\"><a href=\"#markdown-的配置\" class=\"headerlink\" title=\"markdown 的配置\"></a>markdown 的配置</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz\">参看这篇文章<i class=\"fa fa-external-link-alt\"></i></span><br>google markdown emacs 配置<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eHRveS5vcmcvYXJjaGl2ZXMvZW1hY3MtbWFya2Rvd24tbW9kZS5odG1s\">https://linuxtoy.org/archives/emacs-markdown-mode.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>重点看下面这个，此为产品原网址。该网站介绍了产品的多种安装方式。<br>google markdown-mode<br>==<span class=\"exturl\" data-url=\"aHR0cDovL2pibGV2aW5zLm9yZy9wcm9qZWN0cy9tYXJrZG93bi1tb2RlLz09\">http://jblevins.org/projects/markdown-mode/==<i class=\"fa fa-external-link-alt\"></i></span>  </p>\n</li>\n<li><p>常用命令</p>\n</li>\n</ul>\n<ul>\n<li><code>C-c C-c m: markdown-command</code> &gt; <code>*markdown-output*</code> buffer.</li>\n<li><code>C-c C-c p: markdown-command</code>&gt; temporary file&gt; browser.</li>\n<li><code>C-c C-c e: markdown-command</code> &gt; <code>basename.html</code>.</li>\n<li><code>C-c C-c v: markdown-command</code> &gt; <code>basename.html</code> &gt; browser.</li>\n<li><code>C-c C-c w: markdown-command</code> &gt; kill ring.</li>\n<li><code>C-c C-c o: markdown-open-command</code>.</li>\n<li><code>C-c C-c l: markdown-live-preview-mode</code> &gt;<code>*eww*</code> buffer.</li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>[1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl3ZWlsaWppZS9hcmNoaXZlLzIwMTIvMTIvMzAvMjg0MDA4MS5odG1s\">https://www.cnblogs.com/liweilijie/archive/2012/12/30/2840081.html<i class=\"fa fa-external-link-alt\"></i></span><br>[2] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzU1MTk4MDc0MC8=\">https://www.douban.com/note/551980740/<i class=\"fa fa-external-link-alt\"></i></span><br>[3] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5tb25rZXkvYXJ0aWNsZS9kZXRhaWxzLzU0OTM0NjYz\">https://blog.csdn.net/csdnmonkey/article/details/54934663<i class=\"fa fa-external-link-alt\"></i></span><br>[4] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYmxldmlucy5vcmcvcHJvamVjdHMvbWFya2Rvd24tbW9kZS8=\">https://jblevins.org/projects/markdown-mode/<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["编程工具学习与应用"],"tags":["Emacs24.3","markdown"]},{"title":"G4 Detector CopyNo and MotherCopyNo access","url":"/2018/10/11/G4-Detector-CopyNo-and-MotherCopyNo-access/","content":"<h2 id=\"How-to-construct-assembly-or-replices\"><a href=\"#How-to-construct-assembly-or-replices\" class=\"headerlink\" title=\"How to construct assembly or replices\"></a>How to construct assembly or replices</h2><p>You can refer to Geant4 Book for Application Developers <span class=\"exturl\" data-url=\"aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvR2VvbWV0cnkvZ2VvbUFzc2VtYmx5Lmh0bWw=\">User Guide<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>There are discriptions in the chapter4 Geometry/Assembly、Navigator、TouchableHandles.</p>\n<h2 id=\"How-to-distinguish-different-detector-array-components\"><a href=\"#How-to-distinguish-different-detector-array-components\" class=\"headerlink\" title=\"How to distinguish different detector array components\"></a>How to distinguish different detector array components</h2><p>Using the ‘step’ to retrieve geometrical information</p>\n<p>During the tracking run, geometrical information can be retrieved through the touchable handle associated to the current step. For example, to identify the exact copy-number of a specific physical volume in the mass geometry, one should do the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Given the pointer to the step object ...</span><br><span class=\"line\">//</span><br><span class=\"line\">G4Step* aStep = ..;</span><br><span class=\"line\"></span><br><span class=\"line\">// ... retrieve the <span class=\"string\">&#x27;pre-step&#x27;</span> point</span><br><span class=\"line\">//</span><br><span class=\"line\">G4StepPoint* preStepPoint = aStep-&gt;GetPreStepPoint();</span><br><span class=\"line\"></span><br><span class=\"line\">// ... retrieve a touchable handle and access to the information</span><br><span class=\"line\">//</span><br><span class=\"line\">G4TouchableHandle theTouchable = preStepPoint-&gt;GetTouchableHandle();</span><br><span class=\"line\">G4int copyNo = theTouchable-&gt;GetCopyNumber();</span><br><span class=\"line\">G4int motherCopyNo = theTouchable-&gt;GetCopyNumber(1);</span><br><span class=\"line\"></span><br><span class=\"line\">To determine the exact position <span class=\"keyword\">in</span> global coordinates <span class=\"keyword\">in</span> the mass geometry and convert to <span class=\"built_in\">local</span> coordinates (<span class=\"built_in\">local</span> to the current volume):</span><br><span class=\"line\"></span><br><span class=\"line\">G4ThreeVector worldPosition = preStepPoint-&gt;GetPosition();</span><br><span class=\"line\">G4ThreeVector localPosition = theTouchable-&gt;GetHistory()-&gt;</span><br><span class=\"line\">              GetTopTransform().TransformPoint(worldPosition);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Attention\"><a href=\"#Attention\" class=\"headerlink\" title=\"Attention\"></a>Attention</h2><p>the motherCopyNo start from 2 to motherNoCopy+1,  copyNo start from 0 to NoCopy-1;</p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"G4Color选项","url":"/2018/09/09/G4Color%E9%80%89%E9%A1%B9/","content":"<h2 id=\"颜色的配置\"><a href=\"#颜色的配置\" class=\"headerlink\" title=\"颜色的配置\"></a>颜色的配置</h2><p>Geant4中的颜色配置由红、绿、蓝、是否透明四个构成；red、green、blue、alpha(opacity/opaque)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour::G4Colour ( G4double  r = 1.0,</span><br><span class=\"line\">\t\t     G4double  g = 1.0,</span><br><span class=\"line\">\t\t     G4double  b = 1.0,</span><br><span class=\"line\">                     G4double  a = 1.0);</span><br><span class=\"line\">                 //0&lt;=red, green, blue &lt;= 1.0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"颜色的实例化应用\"><a href=\"#颜色的实例化应用\" class=\"headerlink\" title=\"颜色的实例化应用\"></a>颜色的实例化应用</h2><p>1.颜色配置实例化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour  white  ();  //white</span><br><span class=\"line\">G4Colour  white  (1.0,1.0,1.0);  //white</span><br><span class=\"line\">G4Colour  gray   (0.5,0.5,0.5);  //gray</span><br><span class=\"line\">G4Colour  black  (0.0,0.0,0.0);\t //black</span><br><span class=\"line\">G4Colour  red    (1.0,0.0,0.0);  //red</span><br><span class=\"line\">G4Colour  green  (0.0,1.0,0.0);  //green</span><br><span class=\"line\">G4Colour  blue   (0.0,0.0,1.0);  //blue</span><br><span class=\"line\">G4Colour  cyan   (0.0,1.0,1.0);\t //cyan</span><br><span class=\"line\">G4Colour  magenta(1.0,0.0,1.0);  //magenta</span><br><span class=\"line\">G4Colour  yellow (1.0,1.0,0.0);  //yellow</span><br></pre></td></tr></table></figure>\n<p>example </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4VisAttributes* Assemble_VisAtt= new G4VisAttributes(G4Colour(0.0,0.0,1.0));//blue</span><br></pre></td></tr></table></figure>\n<p>2.静态公用数据函数实例化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">static const G4Colour&amp; White   ();</span><br><span class=\"line\">static const G4Colour&amp; Gray    ();</span><br><span class=\"line\">static const G4Colour&amp; Grey    ();</span><br><span class=\"line\">static const G4Colour&amp; Black   ();</span><br><span class=\"line\">static const G4Colour&amp; Red     ();</span><br><span class=\"line\">static const G4Colour&amp; Green   ();</span><br><span class=\"line\">static const G4Colour&amp; Blue    ();</span><br><span class=\"line\">static const G4Colour&amp; Cyan    ();</span><br><span class=\"line\">static const G4Colour&amp; Magenta ();</span><br><span class=\"line\">static const G4Colour&amp; Yellow  ();</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour myRed(G4Colour::Red());</span><br></pre></td></tr></table></figure>\n<p>实例化Colour对象后，可以采用如下方式获得函数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4double G4Colour::GetRed   () const;</span><br><span class=\"line\">G4double G4Colour::GetGreen () const;</span><br><span class=\"line\">G4double G4Colour::GetBlue  () const;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Colour-Map的应用\"><a href=\"#Colour-Map的应用\" class=\"headerlink\" title=\"Colour Map的应用\"></a>Colour Map的应用</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4String\t\tG4Colour</span><br><span class=\"line\">---------------------------------------</span><br><span class=\"line\">white\t\t\tG4Colour::White\t()</span><br><span class=\"line\">gray\t\t\tG4Colour::Gray\t()</span><br><span class=\"line\">grey\t\t\tG4Colour::Grey\t()</span><br><span class=\"line\">black\t\t\tG4Colour::Black\t()</span><br><span class=\"line\">red\t\t\tG4Colour::Red\t()</span><br><span class=\"line\">green\t\t\tG4Colour::Green\t()</span><br><span class=\"line\">blue\t\t\tG4Colour::Blue\t()</span><br><span class=\"line\">cyan\t\t\tG4Colour::Cyan\t()</span><br><span class=\"line\">magenta\t\t\tG4Colour::Magenta ()</span><br><span class=\"line\">yellow\t\t\tG4Colour::Yellow ()</span><br></pre></td></tr></table></figure>\n<p>Colours的检索可以采用如下方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">bool G4Colour::GetColour(const G4String&amp; key, G4Colour&amp; result)</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4Colour myColour(G4Colour::Black());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (G4Colour::GetColour(<span class=\"string\">&quot;red&quot;</span>, myColour)) &#123;</span><br><span class=\"line\">// Successfully retrieved colour <span class=\"string\">&quot;red&quot;</span>. myColour is now red</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">// Colour did not exist <span class=\"keyword\">in</span> map. myColour is still black</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Geant4及Root应用"],"tags":["Geant4"]},{"title":"Geant4 and Root Class Index","url":"/2018/09/14/Geant4-and-Root-Class-Index/","content":"<h2 id=\"Geant4-Class-Index\"><a href=\"#Geant4-Class-Index\" class=\"headerlink\" title=\"Geant4 Class Index\"></a>Geant4 Class Index</h2><p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hcGMudW5pdi1wYXJpczcuZnIvfmZyYW5jby9nNGRveHk0LjEwL2h0bWwvYW5ub3RhdGVkLmh0bWw=\">Geant4 Class Index<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"Root-Class-Index\"><a href=\"#Root-Class-Index\" class=\"headerlink\" title=\"Root Class Index\"></a>Root Class Index</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb290LmNlcm4vZG9jL21hc3Rlci9tb2R1bGVzLmh0bWw=\">Root Class Index<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["Geant4及Root应用"],"tags":["geant4","root"]},{"title":"Geant4中如何添加复杂组件","url":"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/","content":"<h1 id=\"Geant4中如何添加复杂组件\"><a href=\"#Geant4中如何添加复杂组件\" class=\"headerlink\" title=\"Geant4中如何添加复杂组件\"></a>Geant4中如何添加复杂组件</h1><h2 id=\"1-bool-运算\"><a href=\"#1-bool-运算\" class=\"headerlink\" title=\"1. bool 运算\"></a>1. bool 运算</h2><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;G4SubtractionSolid.hh&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4SubtractionSolid*\tTsubtraction = <span class=\"keyword\">new</span> G4SubtractionSolid(<span class=\"string\">&quot;PipeWall-Strips&quot;</span>,solidPWall,solidStrips,rotz0,G4ThreeVector());</span><br></pre></td></tr></table></figure>\n<p>用例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//=====================================</span></span><br><span class=\"line\"> <span class=\"comment\">// 圆柱形准直器</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> <span class=\"keyword\">double</span> I_R1=<span class=\"number\">90.0</span>*mm;<span class=\"comment\">//,I_R2=100.0*mm;</span></span><br><span class=\"line\"> <span class=\"comment\">//double O_R1=97.1*mm,O_R2=107.1*mm;</span></span><br><span class=\"line\"> <span class=\"keyword\">double</span> O_R1=<span class=\"number\">140.0</span>*mm;<span class=\"comment\">//,O_R2=135.4*mm;</span></span><br><span class=\"line\"> <span class=\"keyword\">double</span> C_z =<span class=\"number\">150.0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\"> pSPhi= <span class=\"number\">0.</span>*degree;</span><br><span class=\"line\"> pDPhi= <span class=\"number\">360.</span>*degree;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Tubs* solidCol =   </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4Tubs(<span class=\"string\">&quot;Collimator&quot;</span>,     I_R1, O_R1,C_z,pSPhi,pDPhi);     <span class=\"comment\">//its size</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//====================================</span></span><br><span class=\"line\"> <span class=\"comment\">// void in collimator</span></span><br><span class=\"line\"> pSPhi = <span class=\"number\">0.</span>;</span><br><span class=\"line\"> pDPhi = <span class=\"number\">2.0</span>*pi/(<span class=\"number\">90.0</span>*pi);</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Tubs* solidVoidC = <span class=\"keyword\">new</span> G4Tubs(<span class=\"string\">&quot;VCollimator&quot;</span>,I_R1<span class=\"number\">-0.1</span>*mm, O_R1+<span class=\"number\">0.1</span>*mm,C_z+<span class=\"number\">0.1</span>*mm,pSPhi,pDPhi);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// G4SubtractionSolid* subtraction[94];</span></span><br><span class=\"line\"> G4SubtractionSolid* subtraction[<span class=\"number\">141</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">141</span>;i++)&#123;</span><br><span class=\"line\">   G4RotationMatrix* rotz= <span class=\"keyword\">new</span> G4RotationMatrix;</span><br><span class=\"line\">   rotz-&gt;rotateZ(<span class=\"number\">-2</span>*i*<span class=\"number\">2.0</span>*pi/(<span class=\"number\">90.0</span>*pi));</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>)</span><br><span class=\"line\">     subtraction[<span class=\"number\">0</span>]=</span><br><span class=\"line\"> \t<span class=\"keyword\">new</span> G4SubtractionSolid(<span class=\"string\">&quot;Collimator-Void&quot;</span>, solidCol, solidVoidC,rotz,G4ThreeVector(<span class=\"number\">0.0</span>*mm,<span class=\"number\">0.0</span>*mm,<span class=\"number\">10.0</span>*mm));</span><br><span class=\"line\">   <span class=\"keyword\">else</span></span><br><span class=\"line\">     subtraction[i<span class=\"number\">-1</span>]=</span><br><span class=\"line\"> \t<span class=\"keyword\">new</span> G4SubtractionSolid(<span class=\"string\">&quot;Collimator-Void&quot;</span>, subtraction[i<span class=\"number\">-2</span>], solidVoidC,rotz,G4ThreeVector(<span class=\"number\">0.0</span>*mm,<span class=\"number\">0.0</span>*mm,<span class=\"number\">10.0</span>*mm));</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> G4LogicalVolume* logicCol =                         </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4LogicalVolume(subtraction[<span class=\"number\">140</span>],          <span class=\"comment\">//its solid</span></span><br><span class=\"line\">                       col_mat,           <span class=\"comment\">//its material</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;Collimator&quot;</span>);            <span class=\"comment\">//its name</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4PVPlacement* physCol = </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,                     <span class=\"comment\">//no rotation</span></span><br><span class=\"line\">                     G4ThreeVector(<span class=\"number\">0.</span>*mm,<span class=\"number\">0.</span>*mm,<span class=\"number\">160.0</span>*mm),<span class=\"comment\">//65.0*mm),       //at (0,0,0)</span></span><br><span class=\"line\">                     logicCol,              <span class=\"comment\">//its logical volume</span></span><br><span class=\"line\">                     <span class=\"string\">&quot;Collimator&quot;</span>,                 <span class=\"comment\">//its name</span></span><br><span class=\"line\">                     logicWorld,            <span class=\"comment\">//its mother  volume</span></span><br><span class=\"line\">                     <span class=\"literal\">false</span>,                 <span class=\"comment\">//no boolean operation</span></span><br><span class=\"line\">                     <span class=\"number\">0</span>,                     <span class=\"comment\">//copy number</span></span><br><span class=\"line\">                     checkOverlaps);        <span class=\"comment\">//overlaps checking</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>建出来的结果：圆柱形准直器</p>\n<p><img src=\"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/11-37-25.png\" alt></p>\n<h2 id=\"2-Assemble组件\"><a href=\"#2-Assemble组件\" class=\"headerlink\" title=\"2. Assemble组件\"></a>2. Assemble组件</h2><p>闪烁体pixel阵列构建代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//*************************************************     </span></span><br><span class=\"line\"> <span class=\"comment\">// AssembleNBD World</span></span><br><span class=\"line\"> <span class=\"comment\">//*************************************************</span></span><br><span class=\"line\"> G4double sizeXY = <span class=\"number\">100.77</span>*mm+<span class=\"number\">2.</span>*mm;</span><br><span class=\"line\"> G4double sizeZ  = <span class=\"number\">100.14</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Box* solidAssembleNBD =   </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;AssembleNBD&quot;</span>,     <span class=\"number\">0.5</span>*sizeXY, <span class=\"number\">0.5</span>*sizeXY, <span class=\"number\">0.5</span>*sizeZ);     <span class=\"comment\">//its size</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> logicAssembleNBD =                         </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4LogicalVolume(solidAssembleNBD,          <span class=\"comment\">//its solid</span></span><br><span class=\"line\">                       world_mat,           <span class=\"comment\">//its material</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;AssembleNBD&quot;</span>);            <span class=\"comment\">//its name</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//***************</span></span><br><span class=\"line\"> <span class=\"comment\">//test for one NBD</span></span><br><span class=\"line\"></span><br><span class=\"line\"> physAssembleNBD = </span><br><span class=\"line\">   <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,                     <span class=\"comment\">//no rotation</span></span><br><span class=\"line\">                     G4ThreeVector(<span class=\"number\">0.0</span>*cm,<span class=\"number\">0.0</span>*cm,<span class=\"number\">-85.007</span>*cm),       <span class=\"comment\">//at (0,0,0)</span></span><br><span class=\"line\">                     logicAssembleNBD,      <span class=\"comment\">//its logical volume</span></span><br><span class=\"line\">                     <span class=\"string\">&quot;physAssembleNBD&quot;</span>,         <span class=\"comment\">//its name</span></span><br><span class=\"line\">                     expHall_logV,          <span class=\"comment\">//its mother  volume</span></span><br><span class=\"line\">                     <span class=\"literal\">false</span>,                 <span class=\"comment\">//no boolean operation</span></span><br><span class=\"line\">                     <span class=\"number\">0</span>,                     <span class=\"comment\">//copy number</span></span><br><span class=\"line\"> \t\t      checkOverlaps);        <span class=\"comment\">//overlaps checking</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//*************************************************</span></span><br><span class=\"line\"> <span class=\"comment\">// EJ200 scintillator</span></span><br><span class=\"line\"> <span class=\"comment\">//*************************************************</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> <span class=\"comment\">//      ------------- Volumes --------------</span></span><br><span class=\"line\"> <span class=\"comment\">//  10X10X50 mm3 EJ-200/BC408</span></span><br><span class=\"line\"> <span class=\"comment\">//  spacing is 65 um between two EJ-200 with reflector</span></span><br><span class=\"line\"> <span class=\"comment\">//  </span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//  </span></span><br><span class=\"line\"> <span class=\"comment\">// EJ200 reflector box</span></span><br><span class=\"line\"> <span class=\"comment\">//----------------------------------</span></span><br><span class=\"line\"> <span class=\"comment\">// 100.770X100.770X50.070 mm3</span></span><br><span class=\"line\"> <span class=\"comment\">// 10X10+0.07*11; 50 + 0.07</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4double ej200_x=<span class=\"number\">10</span>*mm, ej200_y=<span class=\"number\">10</span>*mm, ej200_z=<span class=\"number\">50</span>*mm; <span class=\"comment\">//full size of ej200</span></span><br><span class=\"line\"> G4double rowNb_ej200=<span class=\"number\">10</span>, colNb_ej200=<span class=\"number\">10</span>; <span class=\"comment\">// 10X10 ej200</span></span><br><span class=\"line\"> G4double gap=<span class=\"number\">0.070</span>*mm; <span class=\"comment\">// gap between two ej200</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4double EJ200_Box_x = ej200_x*rowNb_ej200/<span class=\"number\">2</span>+gap*(rowNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\"> G4double EJ200_Box_y = ej200_y*colNb_ej200/<span class=\"number\">2</span>+gap*(colNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\"> G4double EJ200_Box_z = (ej200_z+gap)/<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//  mother volume of 10 X 10  EJ200  </span></span><br><span class=\"line\"> G4double Assemble_x = EJ200_Box_x; </span><br><span class=\"line\"> G4double Assemble_y = EJ200_Box_y;</span><br><span class=\"line\"> G4double Assemble_z = EJ200_Box_z;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Box* Assemble_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;Assemble_solidV&quot;</span>, </span><br><span class=\"line\"> \t\t\tAssemble_x, Assemble_y, Assemble_z);</span><br><span class=\"line\"> Assemble_logV  = <span class=\"keyword\">new</span> G4LogicalVolume(Assemble_solidV, ESR, <span class=\"string\">&quot;Assemble_logV&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">G4double Assemble_px = <span class=\"number\">0</span>;  <span class=\"comment\">// put it at (0,0, EJ200_Box_z)</span></span><br><span class=\"line\"> G4double Assemble_py = <span class=\"number\">0</span>;</span><br><span class=\"line\"> G4double Assemble_pz = EJ200_Box_z;  </span><br><span class=\"line\"> Assemble_physV = <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,</span><br><span class=\"line\">                            G4ThreeVector(Assemble_px, Assemble_py, Assemble_pz),</span><br><span class=\"line\">                            Assemble_logV,</span><br><span class=\"line\">                            <span class=\"string\">&quot;Assemble_physV&quot;</span>,</span><br><span class=\"line\">                            logicAssembleNBD,</span><br><span class=\"line\">                            <span class=\"literal\">false</span>,</span><br><span class=\"line\">                            <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> <span class=\"comment\">// each EJ-200</span></span><br><span class=\"line\"> <span class=\"comment\">//-------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"> G4double EJ200_x = ej200_x/<span class=\"number\">2</span>;  <span class=\"comment\">// half size</span></span><br><span class=\"line\"> G4double EJ200_y = ej200_y/<span class=\"number\">2</span>;</span><br><span class=\"line\"> G4double EJ200_z = ej200_z/<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> G4Box* EJ200_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;EJ200_solidV&quot;</span>, EJ200_x, EJ200_y, EJ200_z);</span><br><span class=\"line\"> EJ200_logV = <span class=\"keyword\">new</span> G4LogicalVolume(EJ200_solidV, EJ200, <span class=\"string\">&quot;EJ200_logV&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// create Assembly of EJ200 array Box</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> G4AssemblyVolume* assemblyEJ200 = <span class=\"keyword\">new</span> G4AssemblyVolume();</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// Rotation and translation of the logical volume</span></span><br><span class=\"line\"> G4RotationMatrix rotationMatrixEJ200; </span><br><span class=\"line\"> <span class=\"function\">G4ThreeVector <span class=\"title\">positionEJ200</span><span class=\"params\">(<span class=\"number\">0.</span>, <span class=\"number\">0.</span>, <span class=\"number\">0.</span>)</span></span>;</span><br><span class=\"line\"> G4Transform3D transform3DEJ200;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// Fill the assembly by EJ200</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> G4int max_x = rowNb_ej200; </span><br><span class=\"line\"> G4int max_y = colNb_ej200;</span><br><span class=\"line\"> <span class=\"keyword\">for</span>(G4int x_row_num = <span class=\"number\">0</span>; x_row_num &lt; max_x; x_row_num++ )&#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(G4int y_col_num = <span class=\"number\">0</span>; y_col_num &lt; max_y; y_col_num++ )&#123;  </span><br><span class=\"line\">     positionEJ200.setX( -EJ200_Box_x + (x_row_num+<span class=\"number\">1</span>)*gap + (<span class=\"number\">2</span>*x_row_num+<span class=\"number\">1</span>)*EJ200_x );</span><br><span class=\"line\">     positionEJ200.setY( -EJ200_Box_y + (y_col_num+<span class=\"number\">1</span>)*gap + (<span class=\"number\">2</span>*y_col_num+<span class=\"number\">1</span>)*EJ200_y );</span><br><span class=\"line\">     positionEJ200.setZ( <span class=\"number\">0.0</span>*mm );</span><br><span class=\"line\">     transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);</span><br><span class=\"line\">     assemblyEJ200-&gt;AddPlacedVolume(EJ200_logV, transform3DEJ200);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// Place the Assembly</span></span><br><span class=\"line\"> <span class=\"comment\">//</span></span><br><span class=\"line\"> positionEJ200.setX(<span class=\"number\">0.0</span> ); positionEJ200.setY(<span class=\"number\">0.0</span> ); positionEJ200.setZ(<span class=\"number\">-0.5</span>*gap);</span><br><span class=\"line\"> transform3DEJ200 = G4Transform3D(rotationMatrixEJ200, positionEJ200);</span><br><span class=\"line\"> assemblyEJ200-&gt;MakeImprint(Assemble_logV, transform3DEJ200);</span><br></pre></td></tr></table></figure>\n<p>闪烁体探测器芯块阵列：</p>\n<p><img src=\"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/15-21-17.png\" alt></p>\n<h2 id=\"3-Parameterised\"><a href=\"#3-Parameterised\" class=\"headerlink\" title=\"3. Parameterised\"></a>3. Parameterised</h2><p>光导构建代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;G4PVParameterised.hh&quot;</span> <span class=\"comment\">//得包含G4PVParameterised头文件</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide top mother volume</span></span><br><span class=\"line\">  <span class=\"comment\">//-------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// The defination of light guide</span></span><br><span class=\"line\">  <span class=\"comment\">// define mother volume of light guide</span></span><br><span class=\"line\">  <span class=\"comment\">// half size of volume</span></span><br><span class=\"line\">  G4double LightGuide_x = ej200_x*rowNb_ej200/<span class=\"number\">2</span>+gap*(rowNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>; </span><br><span class=\"line\">  G4double LightGuide_y = ej200_y*colNb_ej200/<span class=\"number\">2</span>+gap*(colNb_ej200+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">  G4double LightGuide_z = <span class=\"number\">3</span>*mm/<span class=\"number\">2</span>;</span><br><span class=\"line\">  gap = <span class=\"number\">0.07</span>*mm; <span class=\"comment\">// gap between the boxes which is used to put</span></span><br><span class=\"line\">          \t\t  <span class=\"comment\">// the reflector </span></span><br><span class=\"line\">  G4Box* LightGuide_top_motherV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_top_motherV&quot;</span>,</span><br><span class=\"line\">                                LightGuide_x, LightGuide_y, LightGuide_z);</span><br><span class=\"line\">  LightGuide_top_mother_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_top_motherV,</span><br><span class=\"line\">                                ESR, <span class=\"comment\">// ESR reflector</span></span><br><span class=\"line\">                                <span class=\"string\">&quot;LightGuide_top_mother_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  LightGuide_top_mother_physV = <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,</span><br><span class=\"line\">        G4ThreeVector(<span class=\"number\">0</span>, <span class=\"number\">0</span>, (grease_pz-grease_z)-LightGuide_z),</span><br><span class=\"line\">        LightGuide_top_mother_logV,</span><br><span class=\"line\">        <span class=\"string\">&quot;LightGuide_top_mother_physV&quot;</span>,</span><br><span class=\"line\">        logicAssembleNBD,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide top </span></span><br><span class=\"line\">  <span class=\"comment\">//-------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// top part of light guide</span></span><br><span class=\"line\">  <span class=\"comment\">// it consists of 5X5 boxes with same height</span></span><br><span class=\"line\">  <span class=\"comment\">// TopX =&gt; x of each box in the top part, </span></span><br><span class=\"line\">  <span class=\"comment\">// TopY =&gt; y of each box in the top part,</span></span><br><span class=\"line\">  <span class=\"comment\">// TopHeight =&gt; height of each box, they are same.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// here, the value is the full size of box</span></span><br><span class=\"line\">  G4double TopX[<span class=\"number\">5</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">31.15</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double TopY[<span class=\"number\">5</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">31.15</span>*mm, <span class=\"number\">22.3</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double TopHeight = <span class=\"number\">3.0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4int rowNb = <span class=\"number\">5</span>;</span><br><span class=\"line\">  G4int colNb = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4double TopGap = gap; <span class=\"comment\">// ESR materials</span></span><br><span class=\"line\">  G4double x0, y0; <span class=\"comment\">// coordinate of the left bottom corner</span></span><br><span class=\"line\">  x0 = -LightGuide_x;</span><br><span class=\"line\">  y0 = -LightGuide_y;</span><br><span class=\"line\">  <span class=\"comment\">// left bottom conner of X-Y plane (-A, -A)</span></span><br><span class=\"line\">  <span class=\"comment\">// this box is a seed of other boxes</span></span><br><span class=\"line\">  G4Box* LightGuide_top_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_top_solidV&quot;</span>,</span><br><span class=\"line\">           \t\tTopX[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, TopY[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, TopHeight/<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  LightGuide_top_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_top_solidV,</span><br><span class=\"line\">                                        BC800, <span class=\"comment\">// light guide material</span></span><br><span class=\"line\">                                        <span class=\"string\">&quot;LightGuide_top_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// all the coordinates are relative to the coordinate system of LightGuide_mother_logV </span></span><br><span class=\"line\">  G4double LightGuide_top_px = x0;</span><br><span class=\"line\">  G4double LightGuide_top_py = y0;</span><br><span class=\"line\">  G4double LightGuide_top_pz = <span class=\"number\">0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//G4VPVParameterisation </span></span><br><span class=\"line\">  APNISLGParameterisation *lightGuide_para_top = </span><br><span class=\"line\">  \t\t<span class=\"keyword\">new</span> APNISLGParameterisation(</span><br><span class=\"line\">  \t\t\t\trowNb, colNb, <span class=\"comment\">// number of row and column</span></span><br><span class=\"line\">   \t\t\t\tTopX, TopY,</span><br><span class=\"line\">  \t\t\t\tTopGap, TopHeight,</span><br><span class=\"line\">  \t\t\t\tLightGuide_top_px, LightGuide_top_py, LightGuide_top_pz,</span><br><span class=\"line\">  \t\t\t\tBC800, ESR);</span><br><span class=\"line\"></span><br><span class=\"line\">  LightGuide_top_physV = <span class=\"keyword\">new</span> G4PVParameterised(<span class=\"string\">&quot;LightGuide_top_physV&quot;</span>,</span><br><span class=\"line\">  \t\t\t\tLightGuide_top_logV, LightGuide_top_mother_logV,</span><br><span class=\"line\">  \t\t\t\tkUndefined, rowNb*colNb, lightGuide_para_top);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide bottom mother volume</span></span><br><span class=\"line\">  <span class=\"comment\">//-------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Bottom part of light guide, half size</span></span><br><span class=\"line\">  G4double LightGuide_z_ = <span class=\"number\">18</span>*mm/<span class=\"number\">2</span>;</span><br><span class=\"line\">  G4Box* LightGuide_bottom_motherV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_bottom_motherV&quot;</span>,</span><br><span class=\"line\">                                LightGuide_x, LightGuide_y, LightGuide_z_);</span><br><span class=\"line\">  LightGuide_bottom_mother_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_bottom_motherV,</span><br><span class=\"line\">                                ESR, <span class=\"comment\">// ESR reflector</span></span><br><span class=\"line\">                                <span class=\"string\">&quot;LightGuide_bottom_mother_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  LightGuide_bottom_mother_physV = <span class=\"keyword\">new</span> G4PVPlacement(<span class=\"number\">0</span>,</span><br><span class=\"line\">        G4ThreeVector(<span class=\"number\">0</span>, <span class=\"number\">0</span>, (grease_pz-grease_z)-LightGuide_z*<span class=\"number\">2</span>-LightGuide_z_),</span><br><span class=\"line\">        LightGuide_bottom_mother_logV,</span><br><span class=\"line\">        <span class=\"string\">&quot;LightGuide_bottom_mother_physV&quot;</span>,</span><br><span class=\"line\">        logicAssembleNBD,</span><br><span class=\"line\">        <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">// Light Guide bottom</span></span><br><span class=\"line\">  <span class=\"comment\">//---------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">  G4double BottomX[<span class=\"number\">3</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">75.89</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double BottomY[<span class=\"number\">3</span>] = &#123;<span class=\"number\">12.3</span>*mm, <span class=\"number\">75.89</span>*mm, <span class=\"number\">12.3</span>*mm&#125;;</span><br><span class=\"line\">  G4double BottomHeight = LightGuide_z_*<span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4int rowNb_ = <span class=\"number\">3</span>;</span><br><span class=\"line\">  G4int colNb_ = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4double BottomGap = gap; <span class=\"comment\">// ESR materials</span></span><br><span class=\"line\">  <span class=\"comment\">// left bottom conner of X-Y plane (-A, -A)</span></span><br><span class=\"line\">  <span class=\"comment\">// this box is a seed of other boxes</span></span><br><span class=\"line\">  G4Box* LightGuide_bottom_solidV = <span class=\"keyword\">new</span> G4Box(<span class=\"string\">&quot;LightGuide_bottom_solidV&quot;</span>,</span><br><span class=\"line\">                        BottomX[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, BottomY[<span class=\"number\">0</span>]/<span class=\"number\">2</span>, BottomHeight/<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  LightGuide_bottom_logV = <span class=\"keyword\">new</span> G4LogicalVolume(LightGuide_bottom_solidV,</span><br><span class=\"line\">                                        BC800, <span class=\"comment\">// light guide material</span></span><br><span class=\"line\">                                        <span class=\"string\">&quot;LightGuide_bottom_logV&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// all the coordinates are relative to the coordinate system of LightGuide_mother_logV </span></span><br><span class=\"line\">  G4double LightGuide_bottom_px = x0;</span><br><span class=\"line\">  G4double LightGuide_bottom_py = y0;</span><br><span class=\"line\">  G4double LightGuide_bottom_pz = <span class=\"number\">0</span>*mm;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//G4VPVParameterisation </span></span><br><span class=\"line\">  APNISLGParameterisation *lightGuide_para_bottom =</span><br><span class=\"line\">                <span class=\"keyword\">new</span> APNISLGParameterisation(</span><br><span class=\"line\">                                rowNb_, colNb_, <span class=\"comment\">// number of row and column</span></span><br><span class=\"line\">                                BottomX, BottomY,</span><br><span class=\"line\">                                BottomGap, BottomHeight,</span><br><span class=\"line\">                                LightGuide_bottom_px, LightGuide_bottom_py, LightGuide_bottom_pz,</span><br><span class=\"line\">                                BC800, ESR);</span><br><span class=\"line\">  LightGuide_bottom_physV = <span class=\"keyword\">new</span> G4PVParameterised(<span class=\"string\">&quot;LightGuide_bottom_physV&quot;</span>,</span><br><span class=\"line\">                                LightGuide_bottom_logV, LightGuide_bottom_mother_logV,</span><br><span class=\"line\">                                kUndefined, rowNb_*colNb_, lightGuide_para_bottom);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>光导构建图：</p>\n<p><img src=\"/2020/06/05/Geant4%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%A4%8D%E6%9D%82%E7%BB%84%E4%BB%B6/15-00-25.png\" alt></p>\n","categories":["Geant4"],"tags":["geant4"]},{"title":"Git Remote Repository UserGuide ","url":"/2018/09/13/Git-Remote-Repository-UserGuide/","content":"<h2 id=\"git-remote-repository-Using\"><a href=\"#git-remote-repository-Using\" class=\"headerlink\" title=\"git remote repository Using\"></a>git remote repository Using</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3YxL0dpdC0lRTUlOUYlQkElRTclQTElODAtJUU4JUJGJTlDJUU3JUE4JThCJUU0JUJCJTkzJUU1JUJBJTkzJUU3JTlBJTg0JUU0JUJEJUJGJUU3JTk0JUE4\">reference site<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"查看远程仓库\"><a href=\"#查看远程仓库\" class=\"headerlink\" title=\"查看远程仓库\"></a>查看远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote  <span class=\"comment\">#显示仓库信息</span></span><br><span class=\"line\">$ git remote --version <span class=\"comment\">#显示对应的克隆地址</span></span><br><span class=\"line\">$ git remote -v   <span class=\"comment\">#显示对应的克隆地址</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加远程仓库\"><a href=\"#添加远程仓库\" class=\"headerlink\" title=\"添加远程仓库\"></a>添加远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote add pb git://github.com/paulboone/ticgit.git  <span class=\"comment\">#git remote add [shortname] [url]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"远程仓库抓取数据\"><a href=\"#远程仓库抓取数据\" class=\"headerlink\" title=\"远程仓库抓取数据\"></a>远程仓库抓取数据</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git fetch pb <span class=\"comment\"># git fetch [remote-name]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"推送数据到远程仓库\"><a href=\"#推送数据到远程仓库\" class=\"headerlink\" title=\"推送数据到远程仓库\"></a>推送数据到远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push origin master <span class=\"comment\">#git push [remote-name] [branch-name]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"查看远程仓库信息\"><a href=\"#查看远程仓库信息\" class=\"headerlink\" title=\"查看远程仓库信息\"></a>查看远程仓库信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote show origin  <span class=\"comment\">#git remote show [remote-name] </span></span><br></pre></td></tr></table></figure>\n\n\n","categories":["编程工具学习与应用"],"tags":["git"]},{"title":"Git-VS-SVN","url":"/2018/08/20/Git-VS-SVN/","content":"<h2 id=\"Git和SVN主要差别\"><a href=\"#Git和SVN主要差别\" class=\"headerlink\" title=\"Git和SVN主要差别\"></a>Git和SVN主要差别</h2><p>SVN只有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br>Git每一个终端都是一个仓库，客户端并不只提取最新版本的文件快照，而是把原始的代码仓库完整地镜像下来。每一次的提取操作，实际上都是一次对代码仓库的完整备份。Git不仅仅是个版本控制系统，它也是个内容管理系统（CMS），工作管理系统等。</p>\n<h3 id=\"1-分布式VS集中式版本控制\"><a href=\"#1-分布式VS集中式版本控制\" class=\"headerlink\" title=\"1.分布式VS集中式版本控制\"></a>1.分布式VS集中式版本控制</h3><p>svn采用集中式版本控制</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/20161214020406505.jpg\" class title=\"svn集中式版本控制\">\n\n<p>git采用分布式版本控制</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/20161214020603227.jpg\" class title=\"git分布式版本控制\">\n\n<p>两种版本控制的区别：<br>（1）svn 过渡依赖中央服务器，出现故障影响其他工作;git中央服务器只用于方便交流，有没有中央服务器都行；<br>（2）svn 版本库只保存在中央服务器，本地检测时不会检出版本库；git每个本地电脑均会保存完整的版本库；<br>（3）svn 的commit依赖连接中央服务器的网络；git由于有本地版本库，可以commit不依赖网络，commit可以频繁使用；git 通过push来实现其他电脑的版本库的同步（synchronize）操作；</p>\n<h3 id=\"2-分支功能\"><a href=\"#2-分支功能\" class=\"headerlink\" title=\"2.分支功能\"></a>2.分支功能</h3><p>（1）svn 创建分支就是创建了一个新文件夹并拥有实际的文件，类似于拷贝了一份源文件，相当于在服务器上创建了分支，会影响到连接服务器的所有本地工作副本；git创建分支并没有创建文件夹，创建分支只是多了一个索引文件，并记录这个分支的变化，占用空间小，分支之间可以自由切换互不影响。<br>（2）git具有代码审核功能，各个成员请求将自己的分子合并到主分支均需要管理人员进行审核。<br>git的工作流程如下：</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/gitProcess.png\" class title=\"gitprocess\">\n\n<h3 id=\"3-git的使用\"><a href=\"#3-git的使用\" class=\"headerlink\" title=\"3.git的使用\"></a>3.git的使用</h3><p>（1）安装配置<br>（2）pc上任意获取，运行git clone url，将远程版本库克隆到本地<br>（3）日常场景</p>\n<img src=\"/2018/08/20/Git-VS-SVN/08/20/Git-VS-SVN/20180227165834705.png\" class title=\"日常使用\">\n\n<p>a.创建一个新文件，并添加到版本库中使用命令：<br>创建了一个新文件，需要添加到版本库里（追踪此文件）使用git add filename命令，我想保存一下，使用git commit -m ..... 我想把我改变的推送给其他人（服务器）git push -u origin master(提交代码)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir newDoc</span><br><span class=\"line\">$ git add newDoc</span><br></pre></td></tr></table></figure>\n<p>b.保存一下修改记录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">&quot;提交添加一个新文件到版本库&quot;</span>  <span class=\"comment\">#“”内为chang messages</span></span><br></pre></td></tr></table></figure>\n<p>c.将我的修改推送给其他人或服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure>\n<p>我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + merge。</p>\n<p>d.将别人的代码拉取过来</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<p>我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + git merge。</p>\n<p>e.删除原来的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git rm file <span class=\"comment\">#将会将file文件从暂存区与磁盘删除</span></span><br></pre></td></tr></table></figure>\n<p>原来的有个文件，想删除了，使用git rm file(停止追踪文件并从磁盘上删除),如果我们只想将 停止追踪文件，但是不删除只需要 git rm --cached <file>。然后想把这个改变推送给别人，就应该是用git commit 然后git push 将自己的改变推送到git服务器。</file></p>\n<p>f.git分支功能的使用<br>那么平时我们收到一个新功能的任务，应该是怎样的操作呢？比较正确的操作流程应该是这样，我们先使用git branch 查看一下我们本地到底有多少分支，然后我们先使用git branch <new branch>从develop分支新建一个分支featureN,然后使用git checkout &lt;branch/tag&gt; 切换到新建的featureN分支里。在新的分支里进行新功能开发。</new></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git branch <span class=\"comment\">#查看分支</span></span><br><span class=\"line\">$ git branch <span class=\"comment\">#新建分支featureN 即 &lt;new branch&gt;</span></span><br><span class=\"line\">$ git checkout &lt;branch/tag&gt; <span class=\"comment\">#切换到新建的featureN分支里，在新的分支里进行新功能的开发。</span></span><br></pre></td></tr></table></figure>\n<p>g.恢复到某一时刻<br>我们在进行新功能开发的时候，每实现一个小功能的时候，我们就git commit 进行提交一下，刚提交完，突然发现，这次提交的东西会严重影响其他功能，想撤销这次提交，我们需要使用git reset --hart HEAD 来撤销工作目录中所有未提交文件的修改内容。那么如果我们想撤销指定的一次提交呢？我们需要使用git revert <commit> 进行指定的提交。</commit></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git reset HEAD <span class=\"comment\">#撤回暂存中未提交的内容</span></span><br><span class=\"line\">$ git revert &lt;commit&gt; <span class=\"comment\">#撤回一次指到定的提交</span></span><br></pre></td></tr></table></figure>\n<p>h.分支的合并<br>假设开发完毕后，应该怎么做？对，就是将新功能的分支合并到develop分支里。就是先切换到develop分支里，然后使用git merge 命令进行合并。这时，新功能开发完毕，新建的featureN分支就没用了，我们使用git branch -d <branch>将无用的分支删除。至此，我们新功能开发完毕。</branch></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge </span><br><span class=\"line\">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<p>i.查看工作日志</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<p>Git log 作用很大，功能也很多</p>\n","categories":["编程工具学习与应用"],"tags":["git","svn"]},{"title":"Git简易使用笔记","url":"/2018/09/01/GitUseGuide/","content":"<h2 id=\"创建仓库\"><a href=\"#创建仓库\" class=\"headerlink\" title=\"创建仓库\"></a>创建仓库</h2><p>采用git init 在目录创建新的仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir newrepository  <span class=\"comment\">#</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> newrepository</span><br><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n<p>或者直接采用 git init 仓库名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git init newrepository</span><br></pre></td></tr></table></figure>\n<h2 id=\"软件仓库下载\"><a href=\"#软件仓库下载\" class=\"headerlink\" title=\"软件仓库下载\"></a>软件仓库下载</h2><p>下载仓库 git clone 拷贝到本地</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ get <span class=\"built_in\">clone</span> [url]</span><br></pre></td></tr></table></figure>\n<p>例如，从我的github上下载代码到本地</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ get <span class=\"built_in\">clone</span> https://github.com/Hubery-Lee/LeeEmacs-setting</span><br></pre></td></tr></table></figure>\n<h2 id=\"软件仓库的快照\"><a href=\"#软件仓库的快照\" class=\"headerlink\" title=\"软件仓库的快照\"></a>软件仓库的快照</h2><h3 id=\"git的日常使用\"><a href=\"#git的日常使用\" class=\"headerlink\" title=\"git的日常使用\"></a>git的日常使用</h3><p>git 的日常使用过程</p>\n<img src=\"/2018/09/01/GitUseGuide/09/01/GitUseGuide/1.jpg\" class title=\"日常使用原理\">\n\n<p>git add 命令可将文件添加到缓存()<br>git status 查看添加到缓存的文件状态 -s 简短结果输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ touch README</span><br><span class=\"line\">$ touch hello.php</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">README        hello.php</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">?? README</span><br><span class=\"line\">?? hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add README hello.php </span><br><span class=\"line\"></span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\">$ </span><br><span class=\"line\"></span><br><span class=\"line\">在 README 添加以下内容：<span class=\"comment\"># Runoob Git 测试，然后保存退出。</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;# Runoob Git&quot;</span>&gt;&gt;README </span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">AM README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>执行 git diff 来查看执行 git status 的结果的详细信息。</p>\n<p>git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。</p>\n<pre><code>尚未缓存的改动：git diff\n查看已缓存的改动： git diff --cached\n查看已缓存的与未缓存的所有改动：git diff HEAD\n显示摘要而非整个 diff：git diff --stat</code></pre><p>git status 显示你上次提交更新后的更改或者写入缓存的改动， 而 git diff 一行一行地显示这些改动具体是啥。</p>\n<p>接下来我们来查看下 git diff --cached 的执行效果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">在 hello.php 文件中输入以下内容：</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;菜鸟教程：www.runoob.com&#x27;</span>;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">AM hello.php</span><br><span class=\"line\">$ git diff</span><br><span class=\"line\">diff --git a/hello.php b/hello.php</span><br><span class=\"line\">index e69de29..69b5711 100644</span><br><span class=\"line\">--- a/hello.php</span><br><span class=\"line\">+++ b/hello.php</span><br><span class=\"line\">@@ -0,0 +1,3 @@</span><br><span class=\"line\">+&lt;?php</span><br><span class=\"line\">+<span class=\"built_in\">echo</span> <span class=\"string\">&#x27;菜鸟教程：www.runoob.com&#x27;</span>;</span><br><span class=\"line\">+?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add hello.php </span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">A  README</span><br><span class=\"line\">A  hello.php</span><br><span class=\"line\">$ git diff --cached</span><br><span class=\"line\">diff --git a/README b/README</span><br><span class=\"line\">new file mode 100644</span><br><span class=\"line\">index 0000000..8f87495</span><br><span class=\"line\">--- /dev/null</span><br><span class=\"line\">+++ b/README</span><br><span class=\"line\">@@ -0,0 +1 @@</span><br><span class=\"line\">+<span class=\"comment\"># Runoob Git 测试</span></span><br><span class=\"line\">diff --git a/hello.php b/hello.php</span><br><span class=\"line\">new file mode 100644</span><br><span class=\"line\">index 0000000..69b5711</span><br><span class=\"line\">--- /dev/null</span><br><span class=\"line\">+++ b/hello.php</span><br><span class=\"line\">@@ -0,0 +1,3 @@</span><br><span class=\"line\">+&lt;?php</span><br><span class=\"line\">+<span class=\"built_in\">echo</span> <span class=\"string\">&#x27;菜鸟教程：www.runoob.com&#x27;</span>;</span><br><span class=\"line\">+?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>git commit 将缓存区内容添加到仓库中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"> 配置用户名和邮箱地址</span><br><span class=\"line\">$ git config --global user.name <span class=\"string\">&#x27;runoob&#x27;</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"built_in\">test</span>@runoob.com</span><br></pre></td></tr></table></figure>\n<p>提交缓存到仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">&#x27;第一次版本提交&#x27;</span></span><br><span class=\"line\">[master (root-commit) d32cf1f] 第一次版本提交</span><br><span class=\"line\"> 2 files changed, 4 insertions(+)</span><br><span class=\"line\"> create mode 100644 README</span><br><span class=\"line\"> create mode 100644 hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git status</span><br><span class=\"line\"><span class=\"comment\"># On branch master</span></span><br><span class=\"line\">nothing to commit (working directory clean)</span><br></pre></td></tr></table></figure>\n<p>git reset HEAD 命令用于取消已缓存的内容。<br>同时修改README和hello.php,然后撤销hello.php的缓存</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git status -s</span><br><span class=\"line\"> M README</span><br><span class=\"line\"> M hello.php</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">M  README</span><br><span class=\"line\">M  hello.pp</span><br><span class=\"line\">$ git reset HEAD hello.php </span><br><span class=\"line\">Unstaged changes after reset:</span><br><span class=\"line\">M    hello.php</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">M  README</span><br><span class=\"line\"> M hello.php</span><br><span class=\"line\"></span><br><span class=\"line\">$ git commit -m <span class=\"string\">&#x27;修改&#x27;</span></span><br><span class=\"line\">[master f50cfda] 修改</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\"> M hello.php</span><br></pre></td></tr></table></figure>\n<p>仍然可以再次提交hello.php修改的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git commit -am <span class=\"string\">&#x27;修改 hello.php 文件&#x27;</span></span><br><span class=\"line\">[master 760f74d] 修改 hello.php 文件</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>\n<p>简而言之，执行 git reset HEAD 以取消之前 git add 添加，但不希望包含在下一提交快照中的缓存。</p>\n<p>git rm<br>如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git rm &lt;file&gt;</span><br><span class=\"line\">$ git rm -f  &lt;file&gt;</span><br><span class=\"line\">$ git rm -r &lt;file&gt;</span><br><span class=\"line\">$ git rm --cached &lt;file&gt;</span><br><span class=\"line\">类似有git mv 移动和重命名</span><br><span class=\"line\">$ git mv README  README.md</span><br></pre></td></tr></table></figure>\n<p>要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作</p>\n<h3 id=\"git中tag和branch的使用\"><a href=\"#git中tag和branch的使用\" class=\"headerlink\" title=\"git中tag和branch的使用\"></a>git中tag和branch的使用</h3><img src=\"/2018/09/01/GitUseGuide/09/01/GitUseGuide/2.png\" class title=\"tag和branch\">\n\n<p>创建分支、列出分支、切换分支、删除分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git branch testing <span class=\"comment\">#创建testing分支</span></span><br><span class=\"line\">$ git branch   <span class=\"comment\">#列出分支</span></span><br><span class=\"line\">* master</span><br><span class=\"line\">  testing</span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout testing</span><br><span class=\"line\">Switched to branch <span class=\"string\">&#x27;testing&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout master</span><br><span class=\"line\">Switched to branch <span class=\"string\">&#x27;master&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout -b newtest  <span class=\"comment\">#创建newtest分支并切换到该分支</span></span><br><span class=\"line\">Switched to a new branch <span class=\"string\">&#x27;newtest&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git branch -d testing  <span class=\"comment\">#删除testing分支</span></span><br><span class=\"line\">Deleted branch testing (was 85fc7e7).</span><br><span class=\"line\"></span><br><span class=\"line\">$ git branch  </span><br><span class=\"line\">* master</span><br><span class=\"line\">  newtest</span><br><span class=\"line\"></span><br><span class=\"line\">$ git merge newtest     <span class=\"comment\">#将newtest分支合并到master分支</span></span><br><span class=\"line\">Updating 2e082b7..556f0a0</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> test2.txt | 1 -</span><br><span class=\"line\"> 1 file changed, 1 deletion(-)</span><br><span class=\"line\"> delete mode 100644 test2.txt</span><br></pre></td></tr></table></figure>\n<p>当同时记录到master的修改和branch分支的修改时，会出现合并分支冲突<br>手动修改冲突部分<br>采用git add 告诉git文件冲突已经解决；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge change_site</span><br><span class=\"line\">Auto-merging test.txt</span><br><span class=\"line\">CONFLICT (content): Merge conflict <span class=\"keyword\">in</span> test.txt</span><br><span class=\"line\">Automatic merge failed; fix conflicts and <span class=\"keyword\">then</span> commit the result.</span><br><span class=\"line\">$ cat test.txt </span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class=\"string\">HEAD</span></span><br><span class=\"line\"><span class=\"string\">runoob.com</span></span><br><span class=\"line\"><span class=\"string\">新增加一行</span></span><br><span class=\"line\"><span class=\"string\">=======</span></span><br><span class=\"line\"><span class=\"string\">www.runoob.com</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; change_site</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">$ vim test.txt </span></span><br><span class=\"line\"><span class=\"string\">$ cat test.txt </span></span><br><span class=\"line\"><span class=\"string\">www.runoob.com</span></span><br><span class=\"line\"><span class=\"string\">新增加一行</span></span><br><span class=\"line\"><span class=\"string\">$ git diff</span></span><br><span class=\"line\"><span class=\"string\">diff --cc test.txt</span></span><br><span class=\"line\"><span class=\"string\">index f84c2a4,bccb7c2..0000000</span></span><br><span class=\"line\"><span class=\"string\">--- a/test.txt</span></span><br><span class=\"line\"><span class=\"string\">+++ b/test.txt</span></span><br><span class=\"line\"><span class=\"string\">@@@ -1,2 -1,1 +1,2 @@@</span></span><br><span class=\"line\"><span class=\"string\">- runoob.com</span></span><br><span class=\"line\"><span class=\"string\">+ www.runoob.com</span></span><br><span class=\"line\"><span class=\"string\"> +新增加一行</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">$ git status -s</span></span><br><span class=\"line\"><span class=\"string\">UU test.txt</span></span><br><span class=\"line\"><span class=\"string\">$ git add test.txt </span></span><br><span class=\"line\"><span class=\"string\">$ git status -s</span></span><br><span class=\"line\"><span class=\"string\">M  test.txt</span></span><br><span class=\"line\"><span class=\"string\">$ git commit</span></span><br><span class=\"line\"><span class=\"string\">[master 88afe0e] Merge branch &#x27;change_site&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br></pre></td></tr></table></figure>\n<p>查看提交历史</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span>  <span class=\"comment\">#详细提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline  <span class=\"comment\">#简洁提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --graph  <span class=\"comment\">#--graph开启了拓扑图选项</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --reverse --oneline <span class=\"comment\">#用 &#x27;--reverse&#x27;参数来逆向显示所有日志。</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --author=Linus --oneline -5 <span class=\"comment\">#--author查找指定用户提交的记录</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges<span class=\"comment\">#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>标签<br>写一句标签注解，就像你给提交写注解一样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git tag -a v1.0 </span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --decorate --graph  <span class=\"comment\">#执行 git log --decorate 时，可以看到标签</span></span><br><span class=\"line\">$ git tag -a v0.9 85fc7e7       <span class=\"comment\">#给提交代码85fc7e7追加标签</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --decorate --graph</span><br><span class=\"line\">*   88afe0e (HEAD, tag: v1.0, master) Merge branch <span class=\"string\">&#x27;change_site&#x27;</span></span><br><span class=\"line\">|\\  </span><br><span class=\"line\">| * d7e7346 (change_site) changed the site</span><br><span class=\"line\">* | 14b4dca 新增加一行</span><br><span class=\"line\">|/  </span><br><span class=\"line\">* 556f0a0 removed test2.txt</span><br><span class=\"line\">* 2e082b7 add test2.txt</span><br><span class=\"line\">* 048598f add test.txt</span><br><span class=\"line\">* 85fc7e7 (tag: v0.9) <span class=\"built_in\">test</span> comment from runoob.com</span><br><span class=\"line\"></span><br><span class=\"line\">$ git tag  <span class=\"comment\">#查看所有标签</span></span><br><span class=\"line\">v0.9</span><br><span class=\"line\">v1.0</span><br><span class=\"line\"></span><br><span class=\"line\">$ git tag -a &lt;tagname&gt; -m <span class=\"string\">&quot;runoob.com标签&quot;</span>  <span class=\"comment\">#指定标签信息命令</span></span><br><span class=\"line\">$ git tag -s &lt;tagname&gt; -m <span class=\"string\">&quot;runoob.com标签&quot;</span>  <span class=\"comment\">#PGP签名标签命令</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"远程软件仓库的提取\"><a href=\"#远程软件仓库的提取\" class=\"headerlink\" title=\"远程软件仓库的提取\"></a>远程软件仓库的提取</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git remote   <span class=\"comment\">#查看远程仓库</span></span><br><span class=\"line\">origin</span><br><span class=\"line\">$ git remote -v  <span class=\"comment\">#-v 参数，可以看到每个别名的实际链接地址。</span></span><br><span class=\"line\">origin    git@github.com:tianqixin/runoob-git-test.git (fetch)</span><br><span class=\"line\">origin    git@github.com:tianqixin/runoob-git-test.git (push)</span><br><span class=\"line\"></span><br><span class=\"line\">$ git fetch [<span class=\"built_in\">alias</span>] <span class=\"comment\">#从远程仓库下载分支和数据</span></span><br><span class=\"line\">$ git fetch origin  <span class=\"comment\">#从远程仓库下载origin分支和数据</span></span><br><span class=\"line\">remote: Counting objects: 3, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (2/2), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">From github.com:tianqixin/runoob-git-test</span><br><span class=\"line\">   0205aab..febd8ed  master     -&gt; origin/master</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"远程软件仓库的上传\"><a href=\"#远程软件仓库的上传\" class=\"headerlink\" title=\"远程软件仓库的上传\"></a>远程软件仓库的上传</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git merge [<span class=\"built_in\">alias</span>]/[branch] <span class=\"comment\">#以将服务器上的任何更新合并到你的当前分支</span></span><br><span class=\"line\">$ git merge origin/master  <span class=\"comment\">#从远端仓库提取数据并尝试合并到当前分支</span></span><br><span class=\"line\">Updating 0205aab..febd8ed</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> README.md | 1 +</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"></span><br><span class=\"line\">$ git push [<span class=\"built_in\">alias</span>] [branch] <span class=\"comment\">#推送你的新分支与数据到某个远端仓库</span></span><br><span class=\"line\">$ git push origin master    <span class=\"comment\"># 推送到 Github</span></span><br><span class=\"line\"></span><br><span class=\"line\">git remote rm  [<span class=\"built_in\">alias</span>]</span><br><span class=\"line\">git remote mv [aliasA] [aliasB]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"获取软件仓库更改历史\"><a href=\"#获取软件仓库更改历史\" class=\"headerlink\" title=\"获取软件仓库更改历史\"></a>获取软件仓库更改历史</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ git status</span><br><span class=\"line\">$ git status -s</span><br><span class=\"line\">$ git diff </span><br><span class=\"line\">$ git diff --cached</span><br><span class=\"line\">$ git <span class=\"built_in\">log</span>  <span class=\"comment\">#详细提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline  <span class=\"comment\">#简洁提交历史</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --graph  <span class=\"comment\">#--graph开启了拓扑图选项</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --reverse --oneline <span class=\"comment\">#用 &#x27;--reverse&#x27;参数来逆向显示所有日志。</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --author=Linus --oneline -5 <span class=\"comment\">#--author查找指定用户提交的记录</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges<span class=\"comment\">#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\">$ git tag</span><br><span class=\"line\">$ git remote</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"回滚到软件仓库的历史版本\"><a href=\"#回滚到软件仓库的历史版本\" class=\"headerlink\" title=\"回滚到软件仓库的历史版本\"></a>回滚到软件仓库的历史版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git reset </span><br><span class=\"line\">$ git reset HEAD [file]</span><br><span class=\"line\">$ git reset --hard &lt;target_commit_id&gt;</span><br><span class=\"line\">$ git reset --soft origin/<span class=\"built_in\">source</span> 命令（<span class=\"built_in\">source</span> 分支）</span><br></pre></td></tr></table></figure>\n\n\n\n\n","categories":["编程工具学习与应用"],"tags":["git"]},{"title":"Hexo Next theme Setting","url":"/2018/09/14/Hexo-Next-theme-Setting/","content":"<p><span class=\"exturl\" data-url=\"aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20=\">referrence site1<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dfbmd6ZXFpL2FydGljbGUvZGV0YWlscy83Mzg2MzU0Mw==\">referrence site2<i class=\"fa fa-external-link-alt\"></i></span>  文章版权声明、文章加密访问、字数、时长、访问量 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xZmYyZmNiZGQxNTU=\">another site<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNDU0NTM3L2FydGljbGUvZGV0YWlscy83OTQ4Mjg5Ng==\">referrence site3<i class=\"fa fa-external-link-alt\"></i></span> 侧边栏社交小图标设置、设置网站图标、评论功能插件配置<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hbm1hbmRvbmcxMjMvYXJ0aWNsZS9kZXRhaWxzLzgwNzM5MTI2\">referrence site3<i class=\"fa fa-external-link-alt\"></i></span> 添加评论功能<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMyNDU0NTM3L2FydGljbGUvZGV0YWlscy83OTQ4Mjg3OQ==\">another site<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhbnVhZ2UvYXJ0aWNsZS9kZXRhaWxzLzc4OTkxNzk4\">Somebody&#39;s blog Note<i class=\"fa fa-external-link-alt\"></i></span> 站外分享 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hc2RmdjE5MjkuZ2l0aHViLmlvL2NhdGVnb3JpZXMvR2l0QmxvZy8=\">another site<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMwMjQyNjA5L2FydGljbGUvZGV0YWlscy81NDc5OTAxOQ==\">referrence sit4<i class=\"fa fa-external-link-alt\"></i></span> 修改主题配色</p>\n<p>对于文章版权声明功能，可以直接去next主题下的<code>_config.yml</code>中开启，个人认为抱着开源开放特性，这个功能并不是很重要；</p>\n<h2 id=\"设置版权信息\"><a href=\"#设置版权信息\" class=\"headerlink\" title=\"设置版权信息\"></a>设置版权信息</h2><p>1.在next主题下的next/_config.yml中设置copyright;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Declare license on posts</span></span><br><span class=\"line\">post_copyright:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  license: CC BY-NC-SA 3.0</span><br><span class=\"line\">  license_url: <span class=\"comment\">#https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure>\n<p>在hexo站点配置文件_config.yml中设置url;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class=\"line\">url: http://lihui-snippets.cn/ <span class=\"comment\">#https://github.com/Hubery-Lee</span></span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults: http://lihui-snippets.cn</span><br></pre></td></tr></table></figure>\n<h2 id=\"文章加密访问\"><a href=\"#文章加密访问\" class=\"headerlink\" title=\"文章加密访问\"></a>文章加密访问</h2><h3 id=\"该加密方法密码暴露在网页调试代码中\"><a href=\"#该加密方法密码暴露在网页调试代码中\" class=\"headerlink\" title=\"该加密方法密码暴露在网页调试代码中\"></a>该加密方法密码暴露在网页调试代码中</h3><ol>\n<li>配置加密功能，打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置<img src=\"/2018/09/14/Hexo-Next-theme-Setting/.%5CHexo-Next-theme-Setting%5Cpassword.png\" alt>插入这样一段代码：<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">        if(&#x27;</span><span class=\"template-variable\">&#123;&#123; <span class=\"name\">page.password</span> &#125;&#125;</span><span class=\"xml\">&#x27;)&#123;</span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">            if (prompt(&#x27;请输入文章密码&#x27;) !== &#x27;</span><span class=\"template-variable\">&#123;&#123; <span class=\"name\">page.password</span> &#125;&#125;</span><span class=\"xml\">&#x27;)&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                alert(<span class=\"string\">&#x27;密码错误！&#x27;</span>);</span></span><br><span class=\"line\">                history.back();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n在scaffolds文件夹post.md文件中，加入<code>password:</code>,新建博客将有如下的形式文件头；<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">description:</span><br><span class=\"line\">password: </span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li>设置给文章设置访问密码，经过以上的配置，<code>hexo new &quot;newblog&quot;</code>在<code>password: #密码</code>设置密码；也可以在以往的文章设置加密访问，只需在文章头中加入<code>password: #密码</code>即可；<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">description: gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">password: pass</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n如，要访问这篇The use of gnome-screenshot command文章就需要输入密码pass;</li>\n</ol>\n<h3 id=\"该加密方法加密效果更好\"><a href=\"#该加密方法加密效果更好\" class=\"headerlink\" title=\"该加密方法加密效果更好\"></a>该加密方法加密效果更好</h3><p>以上方法给文章加密，可以通过浏览器调试界面看到网页密码，故而考虑另外的文章加密方式，可以参考留言版中的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01pa2VDb2Rlci9oZXhvLWJsb2ctZW5jcnlwdC9ibG9iL21hc3Rlci9SZWFkTWUubWQ=\">hexo-blog-encrypt<i class=\"fa fa-external-link-alt\"></i></span>地址尝试另一种加密方式；注意，对next主题，安装<code>hexo-blog-encrypt2.0.*</code>;对加密文章的头文件写法如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">abstract: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">password: pass</span><br><span class=\"line\">message: Please input password to <span class=\"built_in\">read</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>其中，<code>abstract</code>后面写的是摘要，即是非加密文章头的<code>description</code>功能一样；<code>message</code>是加密文章所特有，指的是设置提示输入密码；<code>password</code>后面是设置的密码；<br>Bug在打开文章页面后，不再显示摘要，解决办法是再加一遍<code>description</code>,故而，完全正确的加密文章抬头应该这么写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">abstract: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">password: pass</span><br><span class=\"line\">message: Please input password to <span class=\"built_in\">read</span></span><br><span class=\"line\">description: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>经过测试，直接用<code>description</code>替代<code>abstract</code>也能达到这样的效果,并不存在Bug；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: The use of gnome-screenshot <span class=\"built_in\">command</span></span><br><span class=\"line\">date: 2018-09-11 16:12:50</span><br><span class=\"line\">tags: [linux tool]</span><br><span class=\"line\">categories: linux tool</span><br><span class=\"line\">description: gnome-screenshot <span class=\"built_in\">command</span>;encrypt this article</span><br><span class=\"line\">password: pass</span><br><span class=\"line\">message: Please input password to <span class=\"built_in\">read</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p><code>Bug: 第二种加密方式，没法自动生成文章目录栏；</code></p>\n<h2 id=\"访问量设置\"><a href=\"#访问量设置\" class=\"headerlink\" title=\"访问量设置\"></a>访问量设置</h2><p>采用busuanzi 和leancloud设置，在themes的文件夹下<code>_config.yml</code>中打开busuanzi配置，如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class=\"line\"><span class=\"comment\"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  <span class=\"comment\"># count values only if the other configs are false</span></span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># custom uv span for the whole site</span></span><br><span class=\"line\">  site_uv: <span class=\"literal\">true</span></span><br><span class=\"line\">  site_uv_header: &lt;i class=<span class=\"string\">&quot;fa fa-user&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  <span class=\"comment\"># custom pv span for the whole site</span></span><br><span class=\"line\">  site_pv: <span class=\"literal\">true</span></span><br><span class=\"line\">  site_pv_header: &lt;i class=<span class=\"string\">&quot;fa fa-eye&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  <span class=\"comment\"># custom pv span for one page only</span></span><br><span class=\"line\">  page_pv: <span class=\"literal\">false</span></span><br><span class=\"line\">  page_pv_header: &lt;i class=<span class=\"string\">&quot;fa fa-file-eye&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n<p>其中，<code>site_uv</code>指的是user visitors,<code>site_pv</code>指的是passager visitors; <code>&lt;i class=&quot;fa fa-file-eye&quot;&gt;&lt;/i&gt;</code>设置的是显示图标</p>\n<p>对于文章的阅读量也可采用leancloud的应用来设置，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show number of visitors to each article.</span></span><br><span class=\"line\"><span class=\"comment\"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class=\"line\">leancloud_visitors:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  app_id:  <span class=\"comment\">#&lt;app_id&gt;</span></span><br><span class=\"line\">  app_key:   <span class=\"comment\">#&lt;app_key&gt;</span></span><br></pre></td></tr></table></figure>\n<p>相对于busuanzi统计计数方法，leancloud方法能通过leancloud账户管理，并且leancloud统计的阅读量能够在首页显示；busuanzi统计数据无法在首页显示；leancloud应用的配置可以参考这篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVpd2VuLmNvbS5jbi9zdWJqZWN0L3lzc3N3ZnR4Lmh0bWw=\">参考文章链接<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"评论功能设置\"><a href=\"#评论功能设置\" class=\"headerlink\" title=\"评论功能设置\"></a>评论功能设置</h2><p>评论功能采用leancloud valine应用，国内其他的友言、畅言和以及来必力都不能匿名评论，国外的gitalk,gitment以github用户授权评论，Hypercomments，Disqus等都被国内墙的厉害；只有国内leancloud应用具有匿名评论功能；在next主题下的<code>_config.yml</code>配置如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Valine.</span></span><br><span class=\"line\"><span class=\"comment\"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class=\"line\"><span class=\"comment\"># more info please open https://valine.js.org</span></span><br><span class=\"line\">valine:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  appid:  ooozwlclX00aJabPvk1WTj7J-gzGzoHsz <span class=\"comment\"># your leancloud application appid</span></span><br><span class=\"line\">  appkey:  CnXrRUVdUdMXgEvGbdolWGYX <span class=\"comment\"># your leancloud application appkey</span></span><br><span class=\"line\">  notify: <span class=\"literal\">false</span> <span class=\"comment\"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class=\"line\">  verify: <span class=\"literal\">false</span> <span class=\"comment\"># Verification code</span></span><br><span class=\"line\">  placeholder: Just go go <span class=\"comment\"># comment box placeholder</span></span><br><span class=\"line\">  avatar: mm <span class=\"comment\"># gravatar style</span></span><br><span class=\"line\">  guest_info: nick,mail,link <span class=\"comment\"># custom comment header</span></span><br><span class=\"line\">  pageSize: 10 <span class=\"comment\"># pagination size</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"站外分享功能\"><a href=\"#站外分享功能\" class=\"headerlink\" title=\"站外分享功能\"></a>站外分享功能</h2><p>具体的配置，可以参考文章开头列出的参考链接；在此，我只是用next主题模版，不作具体深入配置，工作中心放在作笔记上；在<code>_config.yml</code>中，打开百度分享选项即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Baidu Share</span></span><br><span class=\"line\"><span class=\"comment\"># Available value:</span></span><br><span class=\"line\"><span class=\"comment\">#    button | slide</span></span><br><span class=\"line\"><span class=\"comment\"># Warning: Baidu Share does not support https.</span></span><br><span class=\"line\">baidushare:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: slide</span><br></pre></td></tr></table></figure>\n<h2 id=\"侧边栏社交小图标设置\"><a href=\"#侧边栏社交小图标设置\" class=\"headerlink\" title=\"侧边栏社交小图标设置\"></a>侧边栏社交小图标设置</h2><p>next主题的网站小图标采用FrontAwesome插件<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZnJvbT1pbw==\">frontawesome icon site<i class=\"fa fa-external-link-alt\"></i></span>;在实际应用中，在frontawesome网站搜索图标，在next主题的配置文件中用名字直接应用就行了，举例如下；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Social Links.</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: permalink || icon`</span></span><br><span class=\"line\"><span class=\"comment\"># Key is the link label showing to end users.</span></span><br><span class=\"line\"><span class=\"comment\"># Value before `||` delimeter is the target permalink.</span></span><br><span class=\"line\"><span class=\"comment\"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span></span><br><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/Hubery-Lee || github</span><br><span class=\"line\">  Runoob: https://www.runoob.com || cube</span><br><span class=\"line\">  <span class=\"comment\">#Google: https://plus.google.com/yourname || google</span></span><br><span class=\"line\">  <span class=\"comment\">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class=\"line\">  <span class=\"comment\">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class=\"line\">  <span class=\"comment\">#VK Group: https://vk.com/yourname || vk</span></span><br><span class=\"line\">  <span class=\"comment\">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class=\"line\">  <span class=\"comment\">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class=\"line\">  <span class=\"comment\">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class=\"line\">  <span class=\"comment\">#Skype: skype:yourname?call|chat || skype</span></span><br><span class=\"line\"></span><br><span class=\"line\">social_icons:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  icons_only: <span class=\"literal\">false</span></span><br><span class=\"line\">  transition: <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>以上脚本中的<code>github,cube</code>即是在frontawesome上搜索到的图标名称；同样，links的图标也是这么配置的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Blog rolls</span></span><br><span class=\"line\">links_icon: globe</span><br><span class=\"line\">links_title: Index</span><br><span class=\"line\"><span class=\"comment\">#links_layout: block</span></span><br><span class=\"line\">links_layout: inline</span><br><span class=\"line\"></span><br><span class=\"line\">links:</span><br><span class=\"line\">  Geant4: http://geant4.web.cern.ch/</span><br><span class=\"line\">  Root: https://root.cern.ch/</span><br></pre></td></tr></table></figure>\n<p>其中，<code>globe</code>即是frontawesome搜索到的图标名称；</p>\n<h2 id=\"设置网站图标\"><a href=\"#设置网站图标\" class=\"headerlink\" title=\"设置网站图标\"></a>设置网站图标</h2><p>若要对网站图标进行修改，只需将你要改的图标拷贝到<code>themes/next/source/images/</code>文件夹下，并修改<code>themes/next/_config.yml</code>文件中的，favicon后面对应的图片文件名即可；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># For example, you put your favicons into `hexo-site/source/images` directory.</span></span><br><span class=\"line\"><span class=\"comment\"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span></span><br><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/favicon-16x16-next.png</span><br><span class=\"line\">  medium: /images/favicon-32x32-next.png</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br><span class=\"line\">  <span class=\"comment\">#android_manifest: /images/manifest.json</span></span><br><span class=\"line\">  <span class=\"comment\">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"主题配色修改\"><a href=\"#主题配色修改\" class=\"headerlink\" title=\"主题配色修改\"></a>主题配色修改</h2><p>修改<code>themes/next/source/css/_variables/base.styl</code>文件；具体配色，暂时没有调整；另外<code>next/_config.yml</code>中有5种可直接用的配色方案，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\"><span class=\"comment\"># Available value:</span></span><br><span class=\"line\"><span class=\"comment\">#    normal | night | night eighties | night blue | night bright</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class=\"line\">highlight_theme: night eighties</span><br></pre></td></tr></table></figure>\n<h2 id=\"头部顶栏背景颜色或图片设置\"><a href=\"#头部顶栏背景颜色或图片设置\" class=\"headerlink\" title=\"头部顶栏背景颜色或图片设置\"></a>头部顶栏背景颜色或图片设置</h2><p>1.在themes/next/source/css/_schemes/Mist/_header.styl中以下代码中修改颜色（我采用Next-Mist主题）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.header &#123; background: <span class=\"variable\">$blue</span>-bright; &#125;</span><br></pre></td></tr></table></figure>\n<p>2.也可改为背景图片，背景图片的添加如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.header &#123; background: url(<span class=\"string\">&#x27;../image/background.jpg&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure>\n<p>将你要作为背景的图片<code>background.jpg</code>放到<code>Hexo/source/images/</code>文件夹下；当然你也可以采用图片网址链接，如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.header &#123; background: url(<span class=\"string\">&#x27;http://xx.xx.xx.com/hexo/image/header-backgroud.jpg&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"页脚设置\"><a href=\"#页脚设置\" class=\"headerlink\" title=\"页脚设置\"></a>页脚设置</h2><p>在next/_config.yml中，修改<code>footer:</code>下面的配置，如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">footer:   </span><br><span class=\"line\">  <span class=\"comment\">##这一段为页脚设置，footer英文意思即为页脚意思</span></span><br><span class=\"line\">  <span class=\"comment\"># Specify the date when the site was setup.</span></span><br><span class=\"line\">  <span class=\"comment\"># If not defined, current year will be used.</span></span><br><span class=\"line\">  <span class=\"comment\">#since: 2015</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Icon between year and copyright info.</span></span><br><span class=\"line\">  icon: user</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class=\"line\">  copyright:</span><br><span class=\"line\">  <span class=\"comment\"># -------------------------------------------------------------</span></span><br><span class=\"line\">  <span class=\"comment\"># Hexo link (Powered by Hexo).</span></span><br><span class=\"line\">  powered: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  theme:</span><br><span class=\"line\">    <span class=\"comment\"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class=\"line\">    <span class=\"built_in\">enable</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class=\"line\">    version: <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># -------------------------------------------------------------</span></span><br><span class=\"line\">  <span class=\"comment\"># Any custom text can be defined here.</span></span><br><span class=\"line\">  <span class=\"comment\">#custom_text: Hosted by &lt;a target=&quot;_blank&quot; href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"How to Use Hit to Get Primary Information in Geant4","url":"/2018/09/23/How-to-Use-Hit-to-Get-Primary-Information-in-Geant4/","content":"<h2 id=\"Code-Structure-of-Geant4\"><a href=\"#Code-Structure-of-Geant4\" class=\"headerlink\" title=\"Code Structure of Geant4\"></a>Code Structure of Geant4</h2><p>The structure shows as the following pictrue.<br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Geant4CodeStructure.png\" alt=\"Class categories in Geant4\"></p>\n<ul>\n<li>Run and Event<br>These are categories related to the generation of events, interfaces to event generators, and any secondary particles produced. Their roles are principally to provide particles to be tracked to the Tracking Management.</li>\n<li>Tracking and Track<br>These are categories related to propagating a particle by analyzing the factors limiting the step and applying the relevant physics processes. The important aspect of the design was that a generalized GEANT4 physics process (or interaction) could perform actions, along a tracking step, either localized in space, or in time, or distributed in space and time (and all the possible combinations that could be built from these cases).</li>\n<li>Geometry and Magnetic Field<br>These categories manage the geometrical definition of a detector (solid modeling) and the computation of distances to solids (also in a magnetic field). The GEANT4 geometry solid modeler is based on the ISO STEP<br>standard and it is fully compliant with it. A key feature of the GEANT4 geometry is that the volume definitions<br>are independent of the solid representation. By this abstract interface for the G4 solids, the tracking component works identically for various representations. The treatment of the propagation in the presence of fields has been provided within specified accuracy. An OO design allows to exchange different numerical algorithms and/or different fields (not only B-field), without affecting any other component of the toolkit.</li>\n<li>Particle Definition and Matter<br>These two categories manage the the definition of materials and particles.</li>\n<li>Physics<br>This category manages all physics processes participating in the interactions of particles in matter. The abstract interface of physics processes allows multiple implementations of physics models per interaction or per channel. Models can be selected by energy range, particle type, material, etc. Data encapsulation and polymorphism make it possible to give transparent access to the cross sections (independently of the choice of reading from an ascii file, or of interpolating from a tabulated set, or of computing analytically from a formula). Electromagnetic and hadronic physics were handled in a uniform way in such a design, opening up the physics to the users.</li>\n<li>Hits and Digitization<br>These two categories manage the creation of hits and their use for the digitization phase. The basic design and<br>implementation of the Hits and Digi had been realized, and also several prototypes, test cases and scenarios<br>had been developed before the alpha-release. Volumes (not necessarily the ones used by the tracking) are<br>aggregated in sensitive detectors, while hits collections represent the logical read out of the detector. Different ways of creating and managing hits collections had been delivered and tested, notably for both single hits and calorimetry hits types. In all cases, hits collections had been successfully stored into and retrieved from an Object Data Base Management System.</li>\n<li>Visualization<br>This manages the visualization of solids, trajectories and hits, and interacts with underlying graphical libraries(the Visualization class category). The basic and most frequently used graphics functionality had been implemented already by the alpha-release. The OO design of the visualization component allowed us to develop<br>several drivers independently, such as for OpenGL, Qt and OpenInventor (for X11 and Windows), DAWN, Postscript (via DAWN) and VRML.</li>\n<li>Interfaces<br>This category handles the production of the graphical user interface (GUI) and the interactions with external<br>software (OODBMS, reconstruction etc.).</li>\n</ul>\n<p><code>MORE DETAIL INFORMATION ABOUT THIS，YOU CAN REFER TO GEANT4 BOOK FOR APPLICATION CHAPTER 3</code></p>\n<h2 id=\"Collect-information-from-PrimaryGeneratorAction\"><a href=\"#Collect-information-from-PrimaryGeneratorAction\" class=\"headerlink\" title=\"Collect information from PrimaryGeneratorAction\"></a>Collect information from PrimaryGeneratorAction</h2><p>Data record in step or event, and stored in hitscollection. data write in EventAction; general understanding of geant4 and its application as follows. Geant is the abbreviation of Geometry and Tracking.<br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Geant4Application.png\" alt=\"General UnderStanding of Geant4\"></p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"How to Use Root to Draw 3D Histogram","url":"/2018/09/23/How-to-Use-Root-to-Draw-3D-Histogram/","content":"<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>Root/tutoriors/gl/glvox2.C</p>\n<h2 id=\"Results-Shows\"><a href=\"#Results-Shows\" class=\"headerlink\" title=\"Results Shows\"></a>Results Shows</h2><p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/_glvox2.png\" alt=\"example1\"><br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/c2.png\" alt=\"example2\"><br><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/level41.png\" alt=\"example3\"></p>\n","categories":["Geant4及Root应用"],"tags":["root"]},{"title":"Add menubar and search function to hexo blog","url":"/2018/09/09/How-to-add-menubar-and-search-function-to-blog-with-hexo/","content":"<h2 id=\"Add-Menubar\"><a href=\"#Add-Menubar\" class=\"headerlink\" title=\"Add Menubar\"></a>Add Menubar</h2><p>In the theme folder, we can find the following scripts in the _config.yml file.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Menu Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: /link/ || icon`</span></span><br><span class=\"line\"><span class=\"comment\"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class=\"line\"><span class=\"comment\"># Value before `||` delimeter is the target link.</span></span><br><span class=\"line\"><span class=\"comment\"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || heartbeat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable/Disable menu icons.</span></span><br><span class=\"line\">menu_icons:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>The default menubars are home and archives. I want to add tags, categories and about to menubar. The problems appear when I only note off the options in the above scripts.</p>\n<p>After investigation about this problem, I find the ansower in this site  <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMTgvMDUyMS8xMy8xNDcxNTYzN183NTU2ODU5MTguc2h0bWw=\">http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml<i class=\"fa fa-external-link-alt\"></i></span> <code>method one to cite website</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMTgvMDUyMS8xMy8xNDcxNTYzN183NTU2ODU5MTguc2h0bWw=\">this site<i class=\"fa fa-external-link-alt\"></i></span>  <code>method two to cite website</code></p>\n<p>Actually, we should add folder with commond <code>hexo new page  menubar_name</code>, then corresponding folders will appear in the source folder which is the site configure source folder. Then add configure information in the correspongding index.md.<br>Take tags for example.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>We will see follow information in index.md.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2018-09-09 13:34:49</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>Then we add <code>type: &quot;tags&quot;</code> to the index.md</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2018-09-09 13:34:49</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>Similar methods are used to add categories and about to menubar.</p>\n<h2 id=\"Add-local-search-function-to-menubar\"><a href=\"#Add-local-search-function-to-menubar\" class=\"headerlink\" title=\"Add local search function to menubar\"></a>Add local search function to menubar</h2><ol>\n<li>install <code>hexo-generator-search</code>, hexo-theme-next search function depend on this package.</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>active the local search configure in theme configure file <code>_config.yml</code>.</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Local search</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span> <span class=\"comment\">#false modified by hubery lee @2018/9/9</span></span><br><span class=\"line\">  <span class=\"comment\"># if auto, trigger search by changing input</span></span><br><span class=\"line\">  <span class=\"comment\"># if manual, trigger search by pressing enter key or search button</span></span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  <span class=\"comment\"># show top n results per article, show all results by setting to -1</span></span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"LeeEmacs-setting","url":"/2018/09/01/LeeEmacs-setting/","content":"<h2 id=\"模块功能yasnippet\"><a href=\"#模块功能yasnippet\" class=\"headerlink\" title=\"模块功能yasnippet\"></a>模块功能yasnippet</h2><ol>\n<li>下载yasnippet安葬包，加压到~/.emacs.d/plugins目录下</li>\n<li>在～/.emacs文件中配置yasnippet</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">;; add yasnippet plugin </span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path</span></span><br><span class=\"line\"><span class=\"string\">              &quot;~/.emacs.d/plugins/yasnippet&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>yasnippet)</span><br><span class=\"line\">(yas-global-mode 1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">;;代码折叠</span><br><span class=\"line\">(load-library <span class=\"string\">&quot;hideshow&quot;</span>)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;java-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;perl-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;php-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;emacs-lisp-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c++-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;matlab-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;fortran-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;f90-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;markdown-mode-hook &#x27;</span>hs-minor-mode)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;org-mode-hook &#x27;</span>hs-minor-mode)</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件头个人信息设置——header2-el\"><a href=\"#文件头个人信息设置——header2-el\" class=\"headerlink\" title=\"文件头个人信息设置——header2.el\"></a>文件头个人信息设置——header2.el</h2><ol>\n<li>wiki 下载header2.el</li>\n<li>将header2.el 放到~/.emacs.d/plugins文件夹下；</li>\n<li>在～/.emacs文件中配置个人信息</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">;;====================info of user====================</span><br><span class=\"line\">;;********************header**************************</span><br><span class=\"line\">;;(load-file <span class=\"string\">&quot;~/.emacs.d/header2.el&quot;</span>)</span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path &quot;~/.emacs.d/plugins&quot; )</span></span><br><span class=\"line\"><span class=\"string\">;; 设置文件头中的姓名</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>header2)</span><br><span class=\"line\">(setq user-full-name <span class=\"string\">&quot;Li Hui&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">;; 设置邮箱</span><br><span class=\"line\">(setq user-email-address <span class=\"string\">&quot;h*****@126.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">;; 设置每次保存时要更新的项目</span><br><span class=\"line\">(<span class=\"built_in\">autoload</span> <span class=\"string\">&#x27;auto-update-file-header &quot;header2&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(add-hook &#x27;</span>write-file-hooks <span class=\"string\">&#x27;auto-update-file-header)</span></span><br><span class=\"line\"><span class=\"string\">(autoload &#x27;</span>auto-make-header <span class=\"string\">&quot;header2&quot;</span>)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;emacs-lisp-mode-hook &#x27;</span>auto-make-header)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c-mode-common-hook   &#x27;</span>auto-make-header) </span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;c++-mode-common-hook   &#x27;</span>auto-make-header)</span><br><span class=\"line\">(add-hook <span class=\"string\">&#x27;text-mode-hook   &#x27;</span>auto-make-header)</span><br><span class=\"line\"></span><br><span class=\"line\">;;(add-hook <span class=\"string\">&#x27;make-header-hook &#x27;</span>header-shell nil t) </span><br></pre></td></tr></table></figure>\n<h2 id=\"自动补全-auto-complete\"><a href=\"#自动补全-auto-complete\" class=\"headerlink\" title=\"自动补全 auto-complete\"></a>自动补全 auto-complete</h2><p>经过尝试，直接解压到~/.emacs.d/plugins文件夹然后make 和make install 然后在.emacs文件配置导入auto-complete插件，但并不能实现自动补全功能。但也没有报错；我认为可能是由于可能式auto-complete没有开启的缘故；</p>\n<ol>\n<li>检测auto-complete有没有安装成功的方法</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">安装完后，重启emacs然后输入ac，若出现可选的自动补全选项，那么说明已经安装成功了；</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>auto-complete的安装方法——第二种安装成功<br>（1）传统方法是采用解压到~/.emacs.d/plugins,然后make和make install，再在.emacs中进行配置</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path &quot;/home/hubery_lee/.emacs.d/plugins/auto-complete&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>auto-complete-config)</span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;ac-dictionary-directories &quot;/home/hubery_lee/.emacs.d/plugins/auto-complete/ac-dict&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(ac-config-default)</span></span><br></pre></td></tr></table></figure>\n<p>（2）通过MELPA或MELPA Stable的package.el安装auto-complete.el；<br>参考github这个开放者介绍的方法进行安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F1dG8tY29tcGxldGUvYXV0by1jb21wbGV0ZS9ibG9iL21hc3Rlci9kb2MvbWFudWFsLm1k\">https://github.com/auto-complete/auto-complete/blob/master/doc/manual.md<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>首先，添加melpa或melpa-stable的package库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">(require <span class=\"string\">&#x27;package)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;; If you want to use latest version</span></span><br><span class=\"line\"><span class=\"string\">(add-to-list &#x27;</span>package-archives <span class=\"string\">&#x27;(&quot;melpa&quot; . &quot;https://melpa.org/packages/&quot;))</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;; If you want to use last tagged version</span></span><br><span class=\"line\"><span class=\"string\">(add-to-list &#x27;</span>package-archives <span class=\"string\">&#x27;(&quot;melpa-stable&quot; . &quot;https://stable.melpa.org/packages/&quot;))</span></span><br><span class=\"line\"><span class=\"string\">(package-initialize)</span></span><br></pre></td></tr></table></figure>\n<p>然后,利用package功能安装auto-complete</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">在emacs的minibuffer里选取以下一种命令安装auto-complete</span><br><span class=\"line\">    M-x package-list-packages and select auto-complete</span><br><span class=\"line\">    M-x package-refresh-contents and M-x package-install auto-complete</span><br></pre></td></tr></table></figure>\n<p>最后，根据显示的安装路径，在.emacs中进行配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">;; add auto-complete plugin</span><br><span class=\"line\"></span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;load-path </span></span><br><span class=\"line\"><span class=\"string\">\t&quot;/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(require &#x27;</span>auto-complete-config)</span><br><span class=\"line\">(add-to-list <span class=\"string\">&#x27;ac-dictionary-directories &quot;/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245/ac-dict&quot;)</span></span><br><span class=\"line\"><span class=\"string\">(ac-config-default)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义小功能\"><a href=\"#自定义小功能\" class=\"headerlink\" title=\"自定义小功能\"></a>自定义小功能</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">;;显示匹配的括号</span><br><span class=\"line\">(show-paren-mode t) </span><br><span class=\"line\"></span><br><span class=\"line\">;;光标显示为一竖线</span><br><span class=\"line\">(setq-default cursor-type <span class=\"string\">&#x27;bar)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;;setting frame title </span></span><br><span class=\"line\"><span class=\"string\">(setq frame-title-format &quot;%b - LiHui@CIRP&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">;;鼠标指针避光标</span></span><br><span class=\"line\"><span class=\"string\">(mouse-avoidance-mode &#x27;</span>animate)</span><br><span class=\"line\"></span><br><span class=\"line\">;;不生成临时文件</span><br><span class=\"line\">(setq-default make-backup-files nil)</span><br><span class=\"line\">;;允许emacs和外部其他程序的粘贴</span><br><span class=\"line\">(setq x-select-enable-clipboard t)</span><br><span class=\"line\">;;使用鼠标中键可以粘贴</span><br><span class=\"line\">(setq mouse-yank-at-point t)</span><br><span class=\"line\">;; 自动的在文件末增加一新行</span><br><span class=\"line\">;;(setq require-final-newline t)</span><br><span class=\"line\">;; 当光标在行尾上下移动的时候，始终保持在行尾。</span><br><span class=\"line\"></span><br><span class=\"line\">;;color</span><br><span class=\"line\">;;(add-to-list <span class=\"string\">&#x27;load-path &quot;~/.emacs.d/plugins&quot;)</span></span><br><span class=\"line\"><span class=\"string\">;;(require &#x27;</span>color-theme)</span><br><span class=\"line\">;;(color-theme-subtle-hacker)</span><br><span class=\"line\">;;(color-theme-xemacs)</span><br><span class=\"line\">;;(color-theme-wheat)</span><br><span class=\"line\">;;(color-theme-calm-forest)</span><br><span class=\"line\">;;(color-theme-matrix)</span><br><span class=\"line\">;;(color-theme-robin-hood)</span><br><span class=\"line\">;;(color-theme-euphoria)</span><br><span class=\"line\">;;(color-theme-arjen)</span><br><span class=\"line\">;;(color-theme-jsc-dark)</span><br><span class=\"line\"></span><br><span class=\"line\">;;hide tool bar</span><br><span class=\"line\">(tool-bar-mode 0)</span><br><span class=\"line\"></span><br><span class=\"line\">;; show line number</span><br><span class=\"line\">(global-linum-mode <span class=\"string\">&#x27;linum-mode)  </span></span><br></pre></td></tr></table></figure>\n","categories":["编程工具学习与应用"],"tags":["Emacs24.3"]},{"title":"PET_SPECT成像与CT成像的区别","url":"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"<h1 id=\"PET-SPECT成像与CT成像的区别\"><a href=\"#PET-SPECT成像与CT成像的区别\" class=\"headerlink\" title=\"PET/SPECT成像与CT成像的区别\"></a>PET/SPECT成像与CT成像的区别</h1><h2 id=\"成像原理的区别\"><a href=\"#成像原理的区别\" class=\"headerlink\" title=\"成像原理的区别\"></a>成像原理的区别</h2><p>PET和SPECT是属于发射成像，CT属于透射成像。</p>\n<p>所谓发射型成像就是把放射源放在病人身体的内部，放射线从病人身体内部射出，最后被探测器接收。 具有短半衰期的放射性的原子可以由回旋加速器或核反应堆生产出来。这些放射性元素再用来制造放射性药物。 通常放射性药物是通过手臂静脉血管注射而进入体内的。放射性药物进入人体后会跟踪病理过程。放射性药物也可以通过病人的呼吸道或消化道进入人体。放射性药物实际上是个分子载体，它依附于特定的生理组织或病理过程。放射性物质在药物的带领下在人体内做有目的的分布。发射型断层成像的目的就是要得到一个放射<br>性物质在人体内部的分布图。 </p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603105809886.png\" alt=\"image-20200603105809886\"></p>\n<p>PET和SPECT的主要区别是采用的核药不同，PET全程叫正电子发射成像，通常采用的是能够发射正电子的核药，如==C-11，N-13，O-15和 F-18==，在放射性衰退时会释放出正电子 (即带一个正电荷的电子)。正电子在自然界中生存的时间十分短暂，因为在自然界中正电子很快就会遇到一个 (带负电的) 电子。当正电子与电子发生作用时，它们的质量会湮灭 (即完全消失)，它们的质量完全转换为能量而产生出两个能量为 511 keV 的伽玛光子。这两个光子沿着相隔 180º 角的方向传播。也就是说，它们在一条直线上朝相反的方向射出。有一种特殊的伽玛照相机可专门用来检测这一对光子。这种特殊的伽玛照相机运用的是同时检测技术。当两个探测器同时各接收到一个能量为 511 keV 的伽玛光子时，说明在连接这两个探测器的线段上曾经有过一个正电子。</p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603110137644.png\" alt=\"image-20200603110137644\"></p>\n<p>而SPECT全称叫单光子发射断层成像，采用发射单个光子的核药，如$^{99}Tc、^{131}I、^{113}In、^{67}Ga、^{201}Tl、^{113}Xn$;</p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111107360.png\" alt=\"image-20200603111107360\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111146266.png\" alt=\"image-20200603111146266\"></p>\n<h2 id=\"图像重建方法上的不同点\"><a href=\"#图像重建方法上的不同点\" class=\"headerlink\" title=\"图像重建方法上的不同点\"></a>图像重建方法上的不同点</h2><p>发射成像需要对成像介质进行射线衰减修正；</p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111313807.png\" alt=\"image-20200603111313807\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111400117.png\" alt=\"image-20200603111400117\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111438883.png\" alt=\"image-20200603111438883\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111455329.png\" alt=\"image-20200603111455329\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111535455.png\" alt=\"image-20200603111535455\"></p>\n<p><img src=\"/2020/06/03/PET-SPECT%E6%88%90%E5%83%8F%E4%B8%8ECT%E6%88%90%E5%83%8F%E7%9A%84%E5%8C%BA%E5%88%AB/image-20200603111656132.png\" alt=\"image-20200603111656132\"></p>\n<p>比较复杂。</p>\n<p><strong>参考文献：</strong></p>\n","categories":["医学图像重建"],"tags":["PET","SPECT","CT"]},{"title":"Show RunTime and Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode","url":"/2018/10/16/Show%20RunTime%20and%20Solve%20Problem%20that%20Data%20ReadOut%20Are%20Disordered%20in%20Geant4%20Multi-thread%20Mode/","content":"<h1 id=\"How-to-show-runtime\"><a href=\"#How-to-show-runtime\" class=\"headerlink\" title=\"How to show runtime\"></a>How to show runtime</h1><h2 id=\"Using-G4Timer-in-RunAction\"><a href=\"#Using-G4Timer-in-RunAction\" class=\"headerlink\" title=\"Using G4Timer in RunAction\"></a>Using G4Timer in RunAction</h2><p>time count start at the begin of run and stop at the end of run. </p>\n<h2 id=\"Detail-Consturciton\"><a href=\"#Detail-Consturciton\" class=\"headerlink\" title=\"Detail Consturciton\"></a>Detail Consturciton</h2><p>declare a pionter to G4Timer in construct function.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fTimer = new G4Timer;</span><br></pre></td></tr></table></figure>\n<p>free memory of G4Timer in distruct function</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete fTimer;</span><br></pre></td></tr></table></figure>\n<p>time count start in BeginOfRunAction()</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fTimer -&gt;Start()</span><br></pre></td></tr></table></figure>\n<p>time count stop in EndOfRunAction()</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">fTimer -&gt;Stop();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Result-Shows\"><a href=\"#Result-Shows\" class=\"headerlink\" title=\"Result Shows\"></a>Result Shows</h2><p>Time used will be showed in the end of run.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">number of event &#x3D; ... User&#x3D;...s Real&#x3D;...s Sys&#x3D;...s</span><br></pre></td></tr></table></figure>\n<h1 id=\"Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode\"><a href=\"#Solve-Problem-that-Data-ReadOut-Are-Disordered-in-Geant4-Multi-thread-Mode\" class=\"headerlink\" title=\"Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode\"></a>Solve Problem that Data ReadOut Are Disordered in Geant4 Multi-thread Mode</h1><h2 id=\"problem-discription\"><a href=\"#problem-discription\" class=\"headerlink\" title=\"problem discription\"></a>problem discription</h2><p> I encountered a problem in Geant4 multi-thread run mode. The data readout from two different sensitive detector with hits  are corrected in single thread mode but disordered  in multi-thread run mode. I don&#39;t know how this problem should happen. I think there must be something wrong in the Merge() function. Memory storage may be disordered in the multi-thread mode.</p>\n<h2 id=\"problem-solving\"><a href=\"#problem-solving\" class=\"headerlink\" title=\"problem solving\"></a>problem solving</h2><p>Do not use Geant4 Data Merge() in root mode</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//analysisManager-&gt;SetNtupleMerging(<span class=\"literal\">true</span>);</span><br><span class=\"line\">//or</span><br><span class=\"line\">analysisManager-&gt;SetNtupleMerging(<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>","categories":["Geant4及Root应用"],"tags":["Geant"]},{"title":"The use of gnome-screenshot command","url":"/2018/09/11/The-use-of-gnomescreenshot-command/","content":"<h2 id=\"gnome-screenshot-command\"><a href=\"#gnome-screenshot-command\" class=\"headerlink\" title=\"gnome-screenshot command\"></a>gnome-screenshot command</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gnome-screenshot  <span class=\"comment\">#截取整个屏幕</span></span><br><span class=\"line\">$ gnome-screenshot -w <span class=\"comment\">#截取当前活动窗口</span></span><br><span class=\"line\">$ gnome-screenshot -a <span class=\"comment\">#选择截图区域</span></span><br><span class=\"line\">$ gnome-screenshot -d=5 <span class=\"comment\">#延迟5妙截图</span></span><br><span class=\"line\">$ gnome-screenshot -i <span class=\"comment\">#交互模式使用截屏工具</span></span><br></pre></td></tr></table></figure>\n<p>当然，遇到不会用gnome-screenshot命令时，最好的方法是问linux系统自带的manual</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ man gnome-screenshot</span><br></pre></td></tr></table></figure>","categories":["linux tool"],"tags":["linux tool"]},{"title":"archlinux安装与使用体验","url":"/2020/04/28/archlinux%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/","content":"<h1 id=\"archlinux之manjaro之使用体验\"><a href=\"#archlinux之manjaro之使用体验\" class=\"headerlink\" title=\"archlinux之manjaro之使用体验\"></a>archlinux之manjaro之使用体验</h1><h2 id=\"1-动机\"><a href=\"#1-动机\" class=\"headerlink\" title=\"1.动机\"></a>1.动机</h2><p>早上在微信群里看到有人发了一个manjaro系统上跑程序的图。我瞬间惊叹于其操作系统图像界面的炫酷。然后尝试去查证和安装manjaro。在查阅相关资料后，发现网上很多人在推荐manjaro、mint和deepin。今天分别对manjaro和deepin进行了安装和使用尝试。</p>\n<h2 id=\"2-​现今Linux系统那么多，该怎么选呢？\"><a href=\"#2-​现今Linux系统那么多，该怎么选呢？\" class=\"headerlink\" title=\"2.​现今Linux系统那么多，该怎么选呢？\"></a>2.​现今Linux系统那么多，该怎么选呢？</h2><p>将linux系统推广到广为人知的功臣主要是Canoical和redhat。Canoical维护的Ubuntu具有安装简易和图像界面炫酷等特点，这些使得Ubuntu迅速占据个人PC装机量。Redhat系列的linux系统极其稳定，使得其被企业广泛使用。</p>\n<p>Ubuntu基于Debian，属于Debian家族。具体的Debian的介绍可看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9EZWJpYW4vNzQ4NjY3P2ZyPWFsYWRkaW4=\">百科<i class=\"fa fa-external-link-alt\"></i></span>，Debian是由自由操作系统合作组织的作品，所建基础工具均来着开源社区。特点是系统小运行速度快。在debian上虚拟的windows运行速度比windows原生系统还要快。</p>\n<p>Redhat是一家开源解决方案供应商，主要服务于企业。而企业对操作系统的要求主要是稳定，维护方便，不会因为经常更新软件而出现奔溃或问题，故而redhat 的linux系统一般不会像个人linux PC系统那样频繁的更新。redhat系统一般软件版本不新，版本更新一般以5年为周期，且付费。但redhat发展了其上游系统Fedora和下游系统Centos。 Fedora的特点是redhat系统的创新尝试。新技术新集成先在fedora上尝试，没有问题后再将其应用到redhat系统上。而Centos是免费的redhat系统，其特点是开源稳定免费，但其技术版本要落后于redhat系统。</p>\n<p>再看一下<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXN0cm93YXRjaC5jb20vZHdyZXMucGhwP3Jlc291cmNlPXBvcHVsYXJpdHk=\">全球linux下载热点排行版<i class=\"fa fa-external-link-alt\"></i></span>    </p>\n<p>排名前三的MXlinux、manjaro和mint的特点是，图像界面炫丽，安装软件方便。比较适合个人用户工作和体验。各种软件库滚动更新快，追求新颖性，缺点是稳定性较差和图像界面内存占用较多。比较适合个人用户使用和学习。</p>\n<p>manjaro 基于archlinux。archlinux的特点是优雅、极简和注重代码正确。通过安装系统和软件，可以使用户学习linux的原理和系统的操作。</p>\n<table>\n<thead>\n<tr>\n<th>家族</th>\n<th>Debian</th>\n<th>redhat</th>\n<th>archlinux</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>特点</td>\n<td>软件多开源、系统小、运行速度快</td>\n<td>稳定</td>\n<td>优雅、简洁</td>\n</tr>\n<tr>\n<td>用户对象</td>\n<td>个人PC、单片机，企业等</td>\n<td>企业</td>\n<td>个人</td>\n</tr>\n<tr>\n<td>用户追求</td>\n<td>使用简易，图形炫酷</td>\n<td>系统稳定不影响企业经营</td>\n<td>学习和优雅的使用体验</td>\n</tr>\n</tbody></table>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>由Hubery-Lee编写，喜欢请收藏给一个赞吧捐赠</p>\n<h2 id=\"Copyright-copyright-2019-Hubery-Lee\"><a href=\"#Copyright-copyright-2019-Hubery-Lee\" class=\"headerlink\" title=\"Copyright :copyright:2019 Hubery-Lee\"></a>Copyright :copyright:2019 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWU=\">Hubery-Lee<i class=\"fa fa-external-link-alt\"></i></span></h2>","categories":["软件使用体验"],"tags":["linux"]},{"title":"geant4DetectorConstruction","url":"/2018/09/11/geant4DetectorConstruction/","content":"<h2 id=\"geant-detector-construction\"><a href=\"#geant-detector-construction\" class=\"headerlink\" title=\"geant detector construction\"></a>geant detector construction</h2><ol>\n<li>几何旋转符合<code>左手法则</code>及RotationMatrix的使用<br>经过验证geant4中的rotate符合<code>左手法则</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4RotationMatrix *rot=new G4RotationMatrix;</span><br><span class=\"line\">rot-&gt;rotateX(90*degree);</span><br><span class=\"line\">rot-&gt;rotateY(90*degree);</span><br><span class=\"line\">rot-&gt;rotateZ(90*degree);</span><br></pre></td></tr></table></figure>\n<p>注意，再次对rot重复赋值无效，如对上述代码再作如下操作<code>rot-&gt;rotateX(180*degree)</code>,该操作将无效，不会改变之前的rot；<br>那么，要对rot再次赋值该怎么办呢？如下：只需在再次赋值前加<code>rot =new G4RotationMatrix</code>即可；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  G4RotationMatrix* rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(G4int x_col_num = 0; x_col_num &lt;=NBD_colNb; x_col_num++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x_col_num==0)&#123;  // the center colume</span><br><span class=\"line\">      NBDx = NBDx0;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(G4int y_row_num = 0; y_row_num &lt;=NBD_rowNb; y_row_num++ )&#123;</span><br><span class=\"line\">\t// NBDx = NBDx0;</span><br><span class=\"line\">\tNBDy = NBDy0+R*sin(y_row_num*theta);</span><br><span class=\"line\">\tNBDz = NBDz0+R*(1-cos(y_row_num*theta));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(y_row_num==0)&#123;</span><br><span class=\"line\">\t  // center position</span><br><span class=\"line\">\t  rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\">\t  rotationMatrix_X-&gt;rotateX(y_row_num*theta);</span><br><span class=\"line\"></span><br><span class=\"line\">\t  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class=\"line\">\t\t\t    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)</span><br><span class=\"line\">\t\t\t    logicAssembleNBD,                    //its logical volume</span><br><span class=\"line\">\t\t\t    <span class=\"string\">&quot;AssembleNBD&quot;</span>,         //its name</span><br><span class=\"line\">\t\t\t    expHall_logV,          //its mother  volume</span><br><span class=\"line\">\t\t\t    <span class=\"literal\">false</span>,                 //no boolean operation</span><br><span class=\"line\">\t\t\t    0,                     //copy number</span><br><span class=\"line\">\t\t\t    <span class=\"literal\">true</span>);                    //overlaps checking    </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t  //+y++</span><br><span class=\"line\">\t  rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\">\t  rotationMatrix_X-&gt;rotateX(-y_row_num*theta);</span><br><span class=\"line\"></span><br><span class=\"line\">\t  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class=\"line\">\t\t\t    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)</span><br><span class=\"line\">\t\t\t    logicAssembleNBD,                    //its logical volume</span><br><span class=\"line\">\t\t\t    <span class=\"string\">&quot;AssembleNBD&quot;</span>,         //its name</span><br><span class=\"line\">\t\t\t    expHall_logV,          //its mother  volume</span><br><span class=\"line\">\t\t\t    <span class=\"literal\">false</span>,                 //no boolean operation</span><br><span class=\"line\">\t\t\t    0,                     //copy number</span><br><span class=\"line\">\t\t\t    <span class=\"literal\">true</span>);               // overlaps checking </span><br><span class=\"line\">\t  //-y++</span><br><span class=\"line\">\t  rotationMatrix_X = new G4RotationMatrix;</span><br><span class=\"line\">\t  rotationMatrix_X-&gt;rotateX(y_row_num*theta);</span><br><span class=\"line\">\t  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class=\"line\">\t\t\t    G4ThreeVector(NBDx,-NBDy,NBDz),       //at (0,0,0)</span><br><span class=\"line\">\t\t\t    logicAssembleNBD,                    //its logical volume</span><br><span class=\"line\">\t\t\t    <span class=\"string\">&quot;AssembleNBD&quot;</span>,         //its name</span><br><span class=\"line\">\t\t\t    expHall_logV,          //its mother  volume</span><br><span class=\"line\">\t\t\t    <span class=\"literal\">false</span>,                 //no boolean operation</span><br><span class=\"line\">\t\t\t    0,                     //copy number</span><br><span class=\"line\">\t\t\t    <span class=\"literal\">true</span>);               // overlaps checking    </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>G4VParameterisation()的使用</li>\n</ol>\n<ul>\n<li><code>ComputeTransformation</code> defines where one of the copies is placed</li>\n<li><code>ComputeDimensions</code> defines the size of one copy, and a constructor that initializes any member variables that are required.</li>\n</ul>\n<p>G4VParameterisation的具体应用可参看Basics/B2/B2b</p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"hexo简易使用笔记","url":"/2018/09/01/hexo%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;postName&quot;</span> <span class=\"comment\">#新建文章</span></span><br><span class=\"line\">hexo new page <span class=\"string\">&quot;pageName&quot;</span> <span class=\"comment\">#新建页面</span></span><br><span class=\"line\">hexo generate <span class=\"comment\">#生成静态页面至public目录</span></span><br><span class=\"line\">hexo server <span class=\"comment\">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\">#部署到GitHub</span></span><br><span class=\"line\">hexo <span class=\"built_in\">help</span>  <span class=\"comment\"># 查看帮助</span></span><br><span class=\"line\">hexo version  <span class=\"comment\">#查看Hexo的版本</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"缩写\"><a href=\"#缩写\" class=\"headerlink\" title=\"缩写\"></a>缩写</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n == hexo new</span><br><span class=\"line\">hexo g == hexo generate</span><br><span class=\"line\">hexo s == hexo server</span><br><span class=\"line\">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>\n<h2 id=\"组合命令\"><a href=\"#组合命令\" class=\"headerlink\" title=\"组合命令\"></a>组合命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g <span class=\"comment\">#生成并本地预览</span></span><br><span class=\"line\">hexo d -g <span class=\"comment\">#生成并上传</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"hexo发布博客预览\"><a href=\"#hexo发布博客预览\" class=\"headerlink\" title=\"hexo发布博客预览\"></a>hexo发布博客预览</h2><p>本地预览</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g <span class=\"comment\">#生成并本地预览</span></span><br></pre></td></tr></table></figure>\n<p>然后，在浏览器中打开 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>发布到github绑定的个人博客网页上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g <span class=\"comment\">#生成并上传</span></span><br></pre></td></tr></table></figure>\n<p>比如，我发布博客后，就直接可以采用个人网络域名访问 <span class=\"exturl\" data-url=\"aHR0cDovL2xpaHVpLXNuaXBwZXRzLmNuLw==\">http://lihui-snippets.cn/<i class=\"fa fa-external-link-alt\"></i></span> </p>\n<p>具体github+hexo如何搭建个人博客教程可以百度以下；我觉得这篇博客写的比较好 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl1eGlhbmFuL3AvYnVpbGQtYmxvZy13ZWJzaXRlLWJ5LWhleG8tZ2l0aHViLmh0bWwjJUU0JUJEJUJGJUU3JTk0JUE4aGV4byVFNSU4NiU5OSVFNSU4RCU5QSVFNSVBRSVBMg==\">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"icon download site","url":"/2018/09/14/icon-download-site/","content":"<h2 id=\"icon-download-site\"><a href=\"#icon-download-site\" class=\"headerlink\" title=\"icon download site\"></a>icon download site</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnM/ZnJvbT1pbw==\">icon download site<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["素材"],"tags":["hexo"]},{"title":"opencv-python哔哩哔哩视频解说代码","url":"/2020/07/28/opencv-python%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E4%BB%A3%E7%A0%81/","content":"<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL211cnRhemFoYXNzYW4vTGVhcm4tT3BlbkNWLWluLTMtaG91cnM=\">https://github.com/murtazahassan/Learn-OpenCV-in-3-hours<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"文档说明\"><a href=\"#文档说明\" class=\"headerlink\" title=\"文档说明\"></a>文档说明</h1><p>其中，<code>chapter 11~17</code> 待更新</p>\n<ul>\n<li><p>chapter 1  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMS5weQ==\">资源读取：图片、视频、摄像头<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 2  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMi5weQ==\">二值化、滤波模糊、膨胀、腐蚀<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 3  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMy5weQ==\">画图、形状、文字<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 4 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNC5weQ==\">图像的旋转与仿生变换<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 5 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNS5weQ==\">拼图<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 6 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNi5weQ==\">全景图像拼接<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 7 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyNy5weQ==\">检测颜色<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 8 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyOC5weQ==\">检测形状<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 9 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyOS5weQ==\">人脸检测<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 10 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTAucHk=\">虚拟油画<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 11 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTEucHk=\">文档识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 12 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTIucHk=\">车牌识别、信用卡号识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 13 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTMucHk=\">答题卡识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 14 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTQucHk=\">目标追踪<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 15 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTUucHk=\">人脸疲劳检测<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 16 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTYucHk=\">dnn 神经网络识别<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>chapter 17 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvb3BlbmN2LXB5dGhvbi9jaGFwdGVyMTcucHk=\">光流估计和背景建模<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ul>\n","categories":["openCV"],"tags":["openCV","python"]},{"title":"二维图像重建的一般流程","url":"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/","content":"<h1 id=\"二维图像重建的一般流程\"><a href=\"#二维图像重建的一般流程\" class=\"headerlink\" title=\"二维图像重建的一般流程\"></a>二维图像重建的一般流程</h1><p>[toc]</p>\n<h2 id=\"❓什么是图像重建？\"><a href=\"#❓什么是图像重建？\" class=\"headerlink\" title=\"❓什么是图像重建？\"></a>❓什么是图像重建？</h2><p>断层成像顾名思义就是要得到一个物体内部的截面图像。比如你想知道西瓜里面是什么样的，最简单的办法就是把西瓜切开 (图1.1)。显然对病人来说，这是万不可行之举。我们真想有个办法，不用动刀，就可把病人内部看得清清楚楚。</p>\n<p>另一个例子。你想到一个美丽的街心公园去参观。可惜，公园正在维修，游人不得入内。你只好在公园的外围走走，拍几张照片。公园<br>内有两棵参天大树，极为壮观。你在公园的东面和南面对公园拍了照 ，颇为满意。回到家后，你用你的得意照片，居然画出了公园地图，并确定了那两棵树的位置 (图1.2右)。其实，要确定那两棵树的位置并不难。你只要把那两张照片按原本的方位放好。从照片上的每棵树画出一条垂线。</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601090416943.png\" alt=\"image-20200601090416943\"><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601090501929.png\" alt=\"image-20200601090501929\"></p>\n<h2 id=\"💫图像重建的算法思想是什么？\"><a href=\"#💫图像重建的算法思想是什么？\" class=\"headerlink\" title=\"💫图像重建的算法思想是什么？\"></a>💫图像重建的算法思想是什么？</h2><p>断层成像是个数学问题。让我们一起做个有趣的数学习题吧。这里有个 2x2 的矩阵。 矩阵中的元素的数值暂时保密。我给你一些暗示： 第一行的和是 5。第二行的和是 4。第一列的和是 7。第二列的和是 2 (图1.3)。你可以算出这个 2x2 矩阵吗?</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601090809554.png\" alt=\"image-20200601090809554\"></p>\n<p>这个问题可以用解方程组的方法解决。设那些矩阵元素为未知数，列一个线性方程组：<br>$$<br>\\begin{equation}<br>\\begin{aligned}<br>x_1+x_2=5;\\<br>x_3+x_4=4;\\<br>x_1+x_3=7;\\<br>x_2+x_4=2;\\<br>\\end{aligned}<br>\\end{equation}<br>$$</p>\n<p>解这个方程组便得到;</p>\n<p>$$<br>\\begin{equation}x_1=3,x_2=2,x_3=4,x_4=0\\end{equation}<br>$$<br>通过探测物体的投影数据，重建出物体的实际内部构造。这就是图像重建的一般思想。</p>\n<h2 id=\"✔图像重建算法的数学基础有哪些？\"><a href=\"#✔图像重建算法的数学基础有哪些？\" class=\"headerlink\" title=\"✔图像重建算法的数学基础有哪些？\"></a>✔图像重建算法的数学基础有哪些？</h2><h3 id=\"🍕中心切片定理\"><a href=\"#🍕中心切片定理\" class=\"headerlink\" title=\"🍕中心切片定理\"></a>🍕中心切片定理</h3><p>中心切片定理是断层成像的理论基础。这个定理还有其它的称谓，如投影切片定理和傅里叶中心切片定理。二维图像的中心切片定理指出：二维函数 f(x, y) 的投影 p(s) 之傅里叶变换 P(ω) 等于函数 f(x, y) 的傅里叶变换 F(ωx, ωy) 沿与探测器平行的方向过原点的片段。</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601104859436.png\" alt=\"image-20200601104859436\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601105629394.png\" alt></p>\n<h3 id=\"🚩为什么要引入滤波？\"><a href=\"#🚩为什么要引入滤波？\" class=\"headerlink\" title=\"🚩为什么要引入滤波？\"></a>🚩为什么要引入滤波？</h3><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601105835965.png\" alt><br><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601105911448.png\" alt></p>\n<p>第二个方案通常被称作处理FBP (Filtered Backprojection 先滤波后反投影) 算法。第二个方案比第一个方案知名度高得多。在断层成像领域里，函数|ω| 被称作斜坡滤波器。</p>\n<h3 id=\"❤有哪些滤波重建方法？\"><a href=\"#❤有哪些滤波重建方法？\" class=\"headerlink\" title=\"❤有哪些滤波重建方法？\"></a>❤有哪些滤波重建方法？</h3><p>==<strong>滤波的思想</strong>==：在中心切片定理中，旋转中心被切片涂抹的更浓密，这将导致图像像素比较均匀（低频区域；高频区域是指图像对比度比较大的图像边缘区域），进而重构的图像中心区域比较模糊。那么滤波器的思想是将中心切片函数乘以一个与旋转中心距离相关的权重因子，使得切片在图像上涂抹的比较均匀。这样重构出来的图像才不会出现旋转中心模糊的现象。下面介绍一下有哪些图像重建及滤波方法。</p>\n<h4 id=\"🛴方法1\"><a href=\"#🛴方法1\" class=\"headerlink\" title=\"🛴方法1\"></a>🛴方法1</h4><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111126392.png\" alt></p>\n<h4 id=\"🛵方法2\"><a href=\"#🛵方法2\" class=\"headerlink\" title=\"🛵方法2\"></a>🛵方法2</h4><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/ image-20200601111254399.png\" alt=\"image-20200601111254399\" style=\"zoom:80%;\">\n\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111254399.png\" alt></p>\n<h4 id=\"🏍方法3\"><a href=\"#🏍方法3\" class=\"headerlink\" title=\"🏍方法3\"></a>🏍方法3</h4><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111406287.png\" alt><br><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111430225.png\" alt></p>\n<h4 id=\"🧭算法一览表\"><a href=\"#🧭算法一览表\" class=\"headerlink\" title=\"🧭算法一览表\"></a>🧭算法一览表</h4><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200601111533233.png\" alt></p>\n<h2 id=\"👼扇形束投影算法如何转换到平行束投影算法\"><a href=\"#👼扇形束投影算法如何转换到平行束投影算法\" class=\"headerlink\" title=\"👼扇形束投影算法如何转换到平行束投影算法\"></a>👼扇形束投影算法如何转换到平行束投影算法</h2><p>==<strong>基本思想</strong>==：根据利用点扩散函数的移动不变性，可将扇形束投影重组成平行束投影；然而，在进行重组时将需要进行插值运算，这将导入不必要的误差。故而需要根据重组变换原理，采用变量替换原理，将适用于平行束投影算法中的变量替换成扇形束中的转换关系。</p>\n<h3 id=\"🍚点扩散函数的移动不变性\"><a href=\"#🍚点扩散函数的移动不变性\" class=\"headerlink\" title=\"🍚点扩散函数的移动不变性\"></a>🍚点扩散函数的移动不变性</h3><p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602082326836.png\" alt=\"image-20200602082326836\"></p>\n<p>对于平行光束成像，我们用极为重要的中心切片定理推导出了一些图像重建的算法。可是，对与扇形束成像，我们并没有相应的中心切片定理。我们只好想个别的办法来推导扇形束的图像重建算法。这个办法就是把扇形束的成像问题转化成平行光束的成像问题，把平行光束图像重建的算法修正一下然后应用于解决扇形束的成像问题中。 </p>\n<p>假定探测器是匀速地绕物体转动，而且数据采样的角度区间也是均匀的。在这个假设下，平行光束的投影/反投影的点扩散函数 (PSF) 是移动不变的。换句话说，如果你把一个点源放在 x-y 平面上。放到哪里到无所谓，只要放在探测器的视野内就好。</p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602083037903.png\" alt=\"image-20200602083037903\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602083341855.png\" alt=\"image-20200602083341855\"></p>\n<h3 id=\"🍳扇形束射线如何用平行束来描述\"><a href=\"#🍳扇形束射线如何用平行束来描述\" class=\"headerlink\" title=\"🍳扇形束射线如何用平行束来描述\"></a>🍳扇形束射线如何用平行束来描述</h3><p>一个直截了当的方法是把所有的扇形束射线放在一起进行分组，把互相平行的射线分在一组，这样就把扇形束的成像问题简化为平行光束的成像问题。正如图3.4所示，每一条扇形束的射线都刚好对应一条平行光束的射线。这两条线是完全重合的。也就是说，每一个扇形束的数据 g(γ, β) 都刚好对应一个平行光束的数据 p(s, θ)，它们的坐标满足下列关系:<br>$$<br>\\theta = \\gamma +\\beta \\<br>s=Dsin\\gamma<br>$$<br>其中 $$D$$ 为焦距，也就是从扇形的焦点到旋转中心的距离。当上面这两个关系成立时，这两个成像系统所测的数据是相同的:<br>$$<br>p(s,\\theta)=g(\\gamma,\\beta)<br>$$<br><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602083414444.png\" alt=\"image-20200602083414444\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602084149649.png\" alt=\"image-20200602084149649\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602084308687.png\" alt=\"image-20200602084308687\"></p>\n<p><img src=\"/2020/06/02/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/image-20200602084333949.png\" alt=\"image-20200602084333949\"></p>\n<p><strong>参考文献：</strong></p>\n<p>[1] 曾更生，医学图像重建</p>\n","categories":["图像重建"],"tags":["二维CT图像重建"]},{"title":"作者github项目导航","url":"/2020/04/30/%E4%BD%9C%E8%80%85github%E9%A1%B9%E7%9B%AE%E5%AF%BC%E8%88%AA/","content":"<h1 id=\"个人笔记\"><a href=\"#个人笔记\" class=\"headerlink\" title=\"个人笔记\"></a>个人笔记</h1><ol>\n<li>日常学习笔记<a href=\"https://hubery-lee.github.io/Notes/\">Notes</a></li>\n</ol>\n<h1 id=\"Bilibili视频资料\"><a href=\"#Bilibili视频资料\" class=\"headerlink\" title=\"Bilibili视频资料\"></a>Bilibili视频资料</h1><ol>\n<li>Geant4教程<a href=\"https://hubery-lee.github.io/Geant4-jiaocheng/\">Geant4-jiaocheng</a></li>\n</ol>\n","categories":["作者github项目导航"],"tags":["作者github项目导航"]},{"title":"利用VSCode调试Geant4项目和Qt项目","url":"/2020/05/19/%E5%88%A9%E7%94%A8VSCode%E8%B0%83%E8%AF%95Geant4%E9%A1%B9%E7%9B%AE%E5%92%8CQt%E9%A1%B9%E7%9B%AE/","content":"<h1 id=\"🌌利用VSCode调试Geant4项目和Qt项目\"><a href=\"#🌌利用VSCode调试Geant4项目和Qt项目\" class=\"headerlink\" title=\"🌌利用VSCode调试Geant4项目和Qt项目\"></a>🌌利用VSCode调试Geant4项目和Qt项目</h1><p>==<strong>注意</strong>==</p>\n<ul>\n<li><p>VSCode只是一个具有用户交互界面、可设置断点调试的集成开发环境，并具有编辑器的一些特色功能，如：代码补全、格式自动化和语法自动检查等。直白的理解，他是一个具有很多集成功能的高端编辑器，属于前端，代码的编译链接执行需要交给其他一些软件，如CMake等。</p>\n</li>\n<li><p>Geant4和Qt均是基于c++语言，调试程序需要用gdb。那么，调试geant4和Qt程序与调试C++程序一样没有什么区别。</p>\n</li>\n</ul>\n<h2 id=\"🧭c-如何开启调试模式\"><a href=\"#🧭c-如何开启调试模式\" class=\"headerlink\" title=\"🧭c++如何开启调试模式\"></a>🧭c++如何开启调试模式</h2><p>C++单文件编译</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">g++ main.cpp -o a.out</span><br></pre></td></tr></table></figure>\n<p>C++单文件gdb调试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">g++ -g main.cpp -o a.out</span><br><span class=\"line\">gdb a.out</span><br></pre></td></tr></table></figure>\n<h2 id=\"🚀geant4-和qt等项目文件如何用调试\"><a href=\"#🚀geant4-和qt等项目文件如何用调试\" class=\"headerlink\" title=\"🚀geant4 和qt等项目文件如何用调试\"></a>🚀geant4 和qt等项目文件如何用调试</h2><p>C++项目的链接通常采用可采用CMake，需要编写<code>CMakeLists.txt</code><br>如需打开调试模式，只需奖<code>CMAKE_BUILD_TYPE</code> 设置成<code>&quot;Debug&quot;</code>模式即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br></pre></td></tr></table></figure>\n","categories":["编程工具学习与应用"],"tags":["vscode"]},{"title":"hexo中插入图片测试","url":"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/","content":"<h2 id=\"hexo-站点配置\"><a href=\"#hexo-站点配置\" class=\"headerlink\" title=\"hexo 站点配置\"></a>hexo 站点配置</h2><p>设置_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-asset-image --save</span><br><span class=\"line\">$ npm install https://github.com/CodeFalling/hexo-asset-image -- save  <span class=\"comment\">#该方法安装测试成功</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"图片引用\"><a href=\"#图片引用\" class=\"headerlink\" title=\"图片引用\"></a>图片引用</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;newblog&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">会有newblog.md和newblog文件夹，将需要引用的图片放到文件夹内</span><br></pre></td></tr></table></figure>\n<p>在newblog.md中图片的引用</p>\n<p>1.标签引用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ &#123;% asset_path slug %&#125;</span><br><span class=\"line\">$ &#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">$ &#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\n<img src=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" class title=\"第二种方法\">\n\n\n<a href=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" title=\"第三种方法\">第三种方法</a>\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path gitProcess.png %&#125;</span><br><span class=\"line\">&#123;% asset_img gitProcess.png 第二种方法 %&#125;</span><br><span class=\"line\">&#123;% asset_link  https://image.baidu.com/search/detail?ct=503316480&amp;z=&amp;tn=baiduimagedetail&amp;ipn=d&amp;word=%E7%8C%AB%E5%A4%B4%E9%B9%B0&amp;step_word=&amp;ie=utf-8&amp;<span class=\"keyword\">in</span>=&amp;cl=2&amp;lm=-1&amp;st=-1&amp;cs=2028628767,61876418&amp;os=4058183028,3413382511&amp;pn=0&amp;rn=1&amp;di=196345561830&amp;ln=1940&amp;fr=&amp;fmq=1535807535286_R&amp;fm=&amp;ic=0&amp;s=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=&amp;height=&amp;face=undefined&amp;is=0,0&amp;istype=2&amp;ist=&amp;jit=&amp;bdtype=0&amp;pi=0&amp;gsm=0&amp;objurl=http%3A%2F%2Fimg5q.duitang.com%2Fuploads%2Fblog%2F201502%2F08%2F20150208122643_s2BMS.jpeg&amp;rpstart=0&amp;rpnum=0&amp;adpicid=0&amp;ctd=1535807540714^3_1354X569%1 owl %&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>2.利用markdown</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">![图片说明](XXX/图片.jpg)  <span class=\"comment\">#XXX为文件夹名</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" alt=\"图片测试1\"><br><img src=\"/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/gitProcess.png\" alt=\"图片测试2\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">![图片测试1](图片测试/gitProcess.png)</span><br><span class=\"line\">![图片测试2](gitProcess.png)</span><br></pre></td></tr></table></figure>\n\n\n","categories":["编程工具学习与应用"],"tags":["hexo"]},{"title":"多人协同在线编辑文档软件使用体验","url":"/2020/04/28/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E5%90%8C%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E6%96%87%E6%A1%A3%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/","content":"<h1 id=\"多人协同在线编辑文档软件使用体验\"><a href=\"#多人协同在线编辑文档软件使用体验\" class=\"headerlink\" title=\"多人协同在线编辑文档软件使用体验\"></a>多人协同在线编辑文档软件使用体验</h1><h2 id=\"什么是协同在线编辑文档？\"><a href=\"#什么是协同在线编辑文档？\" class=\"headerlink\" title=\"什么是协同在线编辑文档？\"></a>什么是协同在线编辑文档？</h2><ul>\n<li><p>协同 ——多人一起完成一件事情</p>\n</li>\n<li><p>在线——online，在网络上实时做一件事</p>\n</li>\n<li><p>编辑文档——编写文档，如，word，ppt，excel，支持pdf图片等的导出。</p>\n<h2 id=\"🚩目前市场上存在的产品\"><a href=\"#🚩目前市场上存在的产品\" class=\"headerlink\" title=\"🚩目前市场上存在的产品\"></a>🚩目前市场上存在的产品</h2></li>\n<li><p><strong>onlyoffice</strong></p>\n<ul>\n<li><p>其是一款开源的协作文档、项目及邮件管理软件。</p>\n</li>\n<li><p>图像界面跟接近office，比较方便使用</p>\n</li>\n<li><p>开源特性，数据可以放到自己的服务器上</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/onlyoffice.png\" alt=\"word\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/onlyoffice_ppt.png\" alt=\"ppt\"></p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/onlyoffice_excel.png\" alt=\"excel\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>石墨文档</strong></p>\n<ul>\n<li><p>国产知名文本协作编辑软件，优点是用户交互界面做的比较好，不过是水墨风格，偏性冷淡风。</p>\n</li>\n<li><p>数据不可以发到用户服务器上，没有TIM方便，无办公社交功能。</p>\n</li>\n<li><p>无自己的核心功能，但使用简便性类似于Google Doc</p>\n</li>\n<li><p>无待办事项等功能</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/%E7%9F%B3%E5%A2%A8%E6%96%87%E6%A1%A3.jpg\" alt></p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>一起写</strong></p>\n</li>\n<li><p><strong>腾讯文档协作TIM</strong></p>\n<ul>\n<li>结合了社交与文档协同编辑功能</li>\n<li>有待办事项和日程安排功能</li>\n</ul>\n</li>\n<li><p><strong>google doc</strong></p>\n<ul>\n<li><p>批注功能更友好，方便。</p>\n</li>\n<li><p>有待办事项和日程安排功能</p>\n</li>\n<li><p>缺点，国内用不了他的平板和手机等功能</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/googleDOC.jpg\" alt></p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"以下三个均是国内外office主要开发者开发，均有电脑，平板和手机用户端。\"></a></p>\n<ul>\n<li><p>office 365</p>\n</li>\n<li><p>office online</p>\n</li>\n<li><p>wps</p>\n</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>推荐使用TIM，腾讯出品结合了社交功能外，大公司维护比较好，不会轻易倒闭。</p>\n<p>推荐使用onlyoffice，开源自定制特性较好。</p>\n","categories":["软件使用体验"],"tags":["协同办公"]},{"title":"如何利用python发送邮件进行表白和问安","url":"/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%BF%9B%E8%A1%8C%E8%A1%A8%E7%99%BD%E5%92%8C%E9%97%AE%E5%AE%89/","content":"<h1 id=\"如何利用python发送邮件\"><a href=\"#如何利用python发送邮件\" class=\"headerlink\" title=\"如何利用python发送邮件\"></a>如何利用python发送邮件</h1><h3 id=\"1-python-相关依赖库\"><a href=\"#1-python-相关依赖库\" class=\"headerlink\" title=\"1. python 相关依赖库\"></a>1. python 相关依赖库</h3><p>说明 ：本文档针对的式利用python 3.7 发送邮件，python发送邮件的相关包比较多，除了SMTP还有POP3和IMAP两种邮件协议。本文档针对的式利用stmp服务器发送邮件</p>\n<p><strong>相关依赖库</strong></p>\n<ul>\n<li>stmplib</li>\n<li>EmailMessage</li>\n</ul>\n<h3 id=\"2-测试利用smtp发送邮件\"><a href=\"#2-测试利用smtp发送邮件\" class=\"headerlink\" title=\"2. 测试利用smtp发送邮件\"></a>2. 测试利用smtp发送邮件</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;xxx@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;xxx&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)</span><br><span class=\"line\">    </span><br><span class=\"line\">    subject = <span class=\"string\">&#x27;grab dinner this weekend?&#x27;</span></span><br><span class=\"line\">    body = <span class=\"string\">&#x27;how about dinner at 7pm this saturday?&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    msg = <span class=\"string\">f&#x27;Subject:<span class=\"subst\">&#123;subject&#125;</span>\\n\\n<span class=\"subst\">&#123;body&#125;</span>&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.sendmail(EMAIL_ADDRESSS,<span class=\"string\">&#x27;xxx@126.com&#x27;</span>,msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-email-message使用\"><a href=\"#3-email-message使用\" class=\"headerlink\" title=\"3. email.message使用\"></a>3. email.message使用</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;XXX@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;grab dinner this weekend?&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;how about dinner at 7pm this saturday?&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-发送给多个用户\"><a href=\"#4-发送给多个用户\" class=\"headerlink\" title=\"4.发送给多个用户\"></a>4.发送给多个用户</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">multi_recipients = [<span class=\"string\">&#x27;Fxxx@gmail.com&#x27;</span>,<span class=\"string\">&#x27;Mxxx@gmail.com&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;grab dinner this weekend?&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;,&#x27;</span>.join(multi_recipients)</span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;how about dinner at 7pm this saturday?&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-Add-image-attachment\"><a href=\"#5-Add-image-attachment\" class=\"headerlink\" title=\"5.Add image attachment\"></a>5.Add image attachment</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;Check out Bronx as puppy!&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;Image attched ...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;P1.png&#x27;</span>,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    file_data = f.read()</span><br><span class=\"line\">    <span class=\"comment\">#file_path = os.getcwd()</span></span><br><span class=\"line\">    <span class=\"comment\">#print(file_path)</span></span><br><span class=\"line\">    file_type = imghdr.what(f.name)</span><br><span class=\"line\">    <span class=\"comment\">#print(file_type)</span></span><br><span class=\"line\">    <span class=\"comment\">#file_name =f.name</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg.add_attachment(file_data, maintype=<span class=\"string\">&#x27;image&#x27;</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class=\"line\"><span class=\"comment\">#msg.add_attachment(file_data, maintype=&#x27;image&#x27;,subtype= filetype, filename = file_name))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"6-Add-images-attachments\"><a href=\"#6-Add-images-attachments\" class=\"headerlink\" title=\"6. Add images attachments\"></a>6. Add images attachments</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;Check out Bronx as puppy!&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;Image attched ...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">files =[<span class=\"string\">&#x27;P1.png&#x27;</span>,<span class=\"string\">&#x27;P2.png&#x27;</span>,<span class=\"string\">&#x27;girl.jpeg&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        file_data = f.read()</span><br><span class=\"line\"><span class=\"comment\">#         file_path = os.getcwd()</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_path)</span></span><br><span class=\"line\"><span class=\"comment\">#         file_type = imghdr.what(f.name)</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_type)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    msg.add_attachment(file_data, maintype=<span class=\"string\">&#x27;image&#x27;</span>,subtype=imghdr.what(f.name, file_data))</span><br><span class=\"line\"><span class=\"comment\">#     msg.add_attachment(file_data, maintype=&#x27;image&#x27;,subtype=imghdr.what(None, file_data))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"7-Add-pdf-attachment\"><a href=\"#7-Add-pdf-attachment\" class=\"headerlink\" title=\"7. Add pdf attachment\"></a>7. Add pdf attachment</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;XXX&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;Check out Bronx as puppy!&#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;Image attched ...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">files =[<span class=\"string\">&#x27;EEE.pdf&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        file_data = f.read()</span><br><span class=\"line\"><span class=\"comment\">#         file_path = os.getcwd()</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_path)</span></span><br><span class=\"line\"><span class=\"comment\">#         file_type = imghdr.what(f.name)</span></span><br><span class=\"line\"><span class=\"comment\">#         print(file_type)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    msg.add_attachment(file_data, maintype=<span class=\"string\">&#x27;application&#x27;</span>,subtype=<span class=\"string\">&#x27;octet-stream&#x27;</span>,filename = f.name)</span><br><span class=\"line\"><span class=\"comment\">#     msg.add_attachment(file_data, maintype=&#x27;image&#x27;,subtype=imghdr.what(None, file_data))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-Using-plain-text-to-send-html-email\"><a href=\"#8-Using-plain-text-to-send-html-email\" class=\"headerlink\" title=\"8.Using plain text to send html  email\"></a>8.Using plain text to send html  email</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">import</span> imghdr</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.message <span class=\"keyword\">import</span> EmailMessage</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HTML = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;head&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div align=&quot;center&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h2&gt;😘 Daily&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;br/&gt;</span></span><br><span class=\"line\"><span class=\"string\">#        &lt;img style=&quot;padding: 0.60em; background: white; box-shadow: 1px #1px 10px #999;&quot; #src=&quot;cid:one&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">EMAIL_ADDRESSS =  <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">EMAIL_PASSWORD = <span class=\"string\">&quot;lihui123&quot;</span>   <span class=\"comment\">#邮箱smtp授权码</span></span><br><span class=\"line\"></span><br><span class=\"line\">msg = EmailMessage()</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;Subject&#x27;</span>] = <span class=\"string\">&#x27;This is a html email using plain &#x27;</span></span><br><span class=\"line\">msg[<span class=\"string\">&#x27;From&#x27;</span>] = EMAIL_ADDRESSS</span><br><span class=\"line\">msg[<span class=\"string\">&#x27;To&#x27;</span>] = <span class=\"string\">&#x27;hrbeulh@126.com&#x27;</span></span><br><span class=\"line\">msg.set_content(<span class=\"string\">&#x27;This is a plain test email&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">msg.add_alternative(HTML,subtype=<span class=\"string\">&#x27;html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> smtplib.SMTP(<span class=\"string\">&#x27;smtp.126.com&#x27;</span>,<span class=\"number\">25</span>) <span class=\"keyword\">as</span> smtp:</span><br><span class=\"line\">    </span><br><span class=\"line\">    smtp.login(EMAIL_ADDRESSS,EMAIL_PASSWORD)    </span><br><span class=\"line\">    smtp.send_message(msg)</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li>python3.7 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2VtYWlsLmV4YW1wbGVzLmh0bWw=\">doc/library/email.examples<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1KUkNKNlJ0RTN4VQ==\">Corey Schafer youtube视频<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h2 id=\"如何给html邮件文件中添加图片\"><a href=\"#如何给html邮件文件中添加图片\" class=\"headerlink\" title=\"如何给html邮件文件中添加图片\"></a>如何给html邮件文件中添加图片</h2><h3 id=\"1-相关依赖库\"><a href=\"#1-相关依赖库\" class=\"headerlink\" title=\"1. 相关依赖库\"></a>1. 相关依赖库</h3><p>目前采用的式python2发邮件的库，python3发送邮件方式相对要简化了一些，但是还没有弄懂，感兴趣的同学可以探索以下</p>\n<p><strong>相关库文件</strong></p>\n<ul>\n<li>smtplib</li>\n<li>asyncio</li>\n<li>MIMEImage</li>\n<li>MIMEMultipart</li>\n<li>MIMEText</li>\n<li>Header</li>\n<li>pyppeteer</li>\n</ul>\n<h3 id=\"2-代码思路\"><a href=\"#2-代码思路\" class=\"headerlink\" title=\"2. 代码思路\"></a>2. 代码思路</h3><pre class=\"mermaid\">graph TD\nA[import libraries]-->B[获取待发送信息材料]\nB-->C[html信息]\nB--pyppeteer-->D[打开网页并截图工具截取图片]\nD--asyncio-->C\nC--smtp-->E[发送信息]</pre>\n\n<p><strong>注释：</strong> Mermaid(美人鱼)图的编写可参考简书此文  <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9iNDIxY2M3MjNkYTU=\">1<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3.代码实现\"></a>3.代码实现</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">import</span> asyncio</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> pyppeteer <span class=\"keyword\">import</span> launch</span><br><span class=\"line\"></span><br><span class=\"line\">FALL_IN_LOVE = (<span class=\"number\">2019</span>, <span class=\"number\">8</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">MAIL_HOST = <span class=\"string\">&quot;smtp.126.com&quot;</span></span><br><span class=\"line\">MAIL_USER = <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">MAIL_PASS = <span class=\"string\">&quot;lihui123&quot;</span></span><br><span class=\"line\">MAIL_SENDER = <span class=\"string\">&quot;hrbeulh@126.com&quot;</span></span><br><span class=\"line\">MAIL_RECEIVER = [<span class=\"string\">&quot;1306504695@qq.com&quot;</span>,<span class=\"string\">&quot;hrbeulh@126.com&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">MAIL_ENCODING = <span class=\"string\">&quot;utf8&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_loving_days</span>():</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    获取恋爱天数</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    today = datetime.datetime.today()</span><br><span class=\"line\">    anniversary = datetime.datetime(*FALL_IN_LOVE)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (today - anniversary).days</span><br><span class=\"line\"></span><br><span class=\"line\">HTML = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;head&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div align=&quot;center&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;h2&gt;😘 男朋友的日常问候&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;p&gt;傻宝宝，今天已经是我们相恋的第 &#123;loving_days&#125; 天了喔 💓。&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;br/&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;img style=&quot;padding: 0.60em; background: white; box-shadow: 1px 1px 10px #999;&quot; src=&quot;cid:one&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">IMAGE_NAME = <span class=\"string\">&quot;one.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#open website and screenshot</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fetch</span>():</span></span><br><span class=\"line\">    browser = <span class=\"keyword\">await</span> launch(</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;args&quot;</span>: [<span class=\"string\">&quot;--no-sandbox&quot;</span>, <span class=\"string\">&quot;--disable-setuid-sandbox&quot;</span>]&#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    page = <span class=\"keyword\">await</span> browser.newPage()</span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.goto(<span class=\"string\">&quot;http://wufazhuce.com/&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.screenshot(</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;path&quot;</span>: IMAGE_NAME,</span><br><span class=\"line\">            <span class=\"string\">&quot;clip&quot;</span>: &#123;<span class=\"string\">&quot;x&quot;</span>: <span class=\"number\">60</span>, <span class=\"string\">&quot;y&quot;</span>: <span class=\"number\">120</span>, <span class=\"string\">&quot;height&quot;</span>: <span class=\"number\">570</span>, <span class=\"string\">&quot;width&quot;</span>: <span class=\"number\">700</span>&#125;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">await</span> browser.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_email</span>():</span></span><br><span class=\"line\">    html_content = HTML.replace(<span class=\"string\">&quot;&#123;loving_days&#125;&quot;</span>, <span class=\"built_in\">str</span>(get_loving_days()))</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = MIMEMultipart(<span class=\"string\">&quot;alternative&quot;</span>)</span><br><span class=\"line\">    msg[<span class=\"string\">&quot;Subject&quot;</span>] = Header(<span class=\"string\">&quot;😘 男朋友的日常问候&quot;</span>, MAIL_ENCODING )</span><br><span class=\"line\">    msg[<span class=\"string\">&quot;From&quot;</span>] = Header(<span class=\"string\">&quot;暖宝宝&quot;</span>, MAIL_ENCODING)</span><br><span class=\"line\">    msg[<span class=\"string\">&quot;To&quot;</span>] = Header(<span class=\"string\">&quot;小仙女&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(IMAGE_NAME, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        img = MIMEImage(f.read())</span><br><span class=\"line\">        img.add_header(<span class=\"string\">&quot;Content-ID&quot;</span>, <span class=\"string\">&quot;one&quot;</span>)</span><br><span class=\"line\">        msg.attach(img)</span><br><span class=\"line\">    msg.attach(MIMEText(html_content, <span class=\"string\">&quot;html&quot;</span>, MAIL_ENCODING))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        smtp_obj = smtplib.SMTP_SSL(MAIL_HOST)</span><br><span class=\"line\">        smtp_obj.login(MAIL_USER, MAIL_PASS)</span><br><span class=\"line\">        smtp_obj.sendmail(MAIL_SENDER, MAIL_RECEIVER, msg.as_string())</span><br><span class=\"line\">        smtp_obj.quit()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(e)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        asyncio.get_event_loop().run_until_complete(fetch())</span><br><span class=\"line\">    send_email()</span><br></pre></td></tr></table></figure>\n<h2 id=\"python3-如何将中文转换成urlencode\"><a href=\"#python3-如何将中文转换成urlencode\" class=\"headerlink\" title=\"python3 如何将中文转换成urlencode\"></a>python3 如何将中文转换成urlencode</h2><h3 id=\"1-相关依赖库-1\"><a href=\"#1-相关依赖库-1\" class=\"headerlink\" title=\"1.相关依赖库\"></a>1.相关依赖库</h3><ul>\n<li>quote, unquote</li>\n</ul>\n<h3 id=\"2-代码实现\"><a href=\"#2-代码实现\" class=\"headerlink\" title=\"2.代码实现\"></a>2.代码实现</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> unquote,quote</span><br><span class=\"line\"> </span><br><span class=\"line\">url1 = <span class=\"string\">&quot;https://www.qichacha.com/search?key=河南正商河洛置业有限公司&quot;</span></span><br><span class=\"line\">url2 = <span class=\"string\">&quot;https://www.qichacha.com/search?key=%E6%B2%B3%E5%8D%97%E6%AD%A3%E5%95%86%E6%B2%B3%E6%B4%9B%E7%BD%AE%E4%B8%9A%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 解码</span></span><br><span class=\"line\">url = unquote(url2)</span><br><span class=\"line\">print(url)</span><br><span class=\"line\"><span class=\"comment\">#编码</span></span><br><span class=\"line\">url = quote(<span class=\"string\">&quot;河南正商河洛置业有限公司&quot;</span>)</span><br><span class=\"line\">print(url)</span><br></pre></td></tr></table></figure>","categories":["python代码应用"],"tags":["python邮件表白"]},{"title":"如何利用python爬取网页图片-你懂的","url":"/2020/04/28/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87-%E4%BD%A0%E6%87%82%E7%9A%84/","content":"<h1 id=\"如何利用python爬取网页图片\"><a href=\"#如何利用python爬取网页图片\" class=\"headerlink\" title=\"如何利用python爬取网页图片\"></a>如何利用python爬取网页图片</h1><h2 id=\"1-相关依赖库\"><a href=\"#1-相关依赖库\" class=\"headerlink\" title=\"1.相关依赖库\"></a>1.相关依赖库</h2><ul>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3J1bW15LmNvbS9zb2Z0d2FyZS9CZWF1dGlmdWxTb3VwLw==\">BeautifulSoup<i class=\"fa fa-external-link-alt\"></i></span>   可以从HTML或XML文件中提取数据的Python库</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly8yLnB5dGhvbi1yZXF1ZXN0cy5vcmcvL2VuL21hc3Rlci8=\">requests<i class=\"fa fa-external-link-alt\"></i></span>  <strong>Requests</strong> is an elegant and simple HTTP library for Python, built for human beings. </p>\n</li>\n</ul>\n<h2 id=\"2-代码实现\"><a href=\"#2-代码实现\" class=\"headerlink\" title=\"2.代码实现\"></a>2.代码实现</h2><p>代码编写调试过程，可以参考简书📕 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=\">小董不太懂<i class=\"fa fa-external-link-alt\"></i></span>的教程，其代码编写思路如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">st&#x3D;&gt;start: 开始</span><br><span class=\"line\">e&#x3D;&gt;end: 保存或处理爬去的信息</span><br><span class=\"line\">op1&#x3D;&gt;operation: 利用获取爬取的网页网址的html</span><br><span class=\"line\">op2&#x3D;&gt;operation: 利用BeautifulSoup将html信息转换成xml信息</span><br><span class=\"line\">op3&#x3D;&gt;operation: 利用BeautifulSoup挑选xml中想要的信息</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;op1-&gt;op2-&gt;op3-&gt;e</span><br></pre></td></tr></table></figure>\n<p>下面贴出代码全文</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> md5</span><br><span class=\"line\"><span class=\"keyword\">from</span> requests.exceptions <span class=\"keyword\">import</span> RequestException</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&#x27;If-None-Match&#x27;</span>: <span class=\"string\">&#x27;W/&quot;5cc2cd8f-2c58&quot;&#x27;</span>,</span><br><span class=\"line\">           <span class=\"string\">&quot;Referer&quot;</span>: <span class=\"string\">&quot;http://www.mzitu.com/all/&quot;</span>,</span><br><span class=\"line\">           <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.204 SafarMozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#请求头的这个Referer一定要加，妹子网有反爬，反正粘贴复制就行，多加几个信息无所谓</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_page</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        response = requests.get(url, headers=headers)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            <span class=\"comment\">#print(response.text)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> response.text</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> RequestException:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;获取索引页失败&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse_page</span>(<span class=\"params\">html</span>):</span></span><br><span class=\"line\">    soup = BeautifulSoup(html, <span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">    items = soup.select(<span class=\"string\">&#x27;#pins li&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">        href = link.a[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">        <span class=\"comment\">#print(href)</span></span><br><span class=\"line\">        get_detail_page(href)</span><br><span class=\"line\">    <span class=\"comment\"># print(items)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_detail_page</span>(<span class=\"params\">href</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">        detail_url = href + <span class=\"string\">&#x27;/&#x27;</span> + <span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> requests.get(detail_url, headers=headers).status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            <span class=\"comment\">#print(detail_url)</span></span><br><span class=\"line\">            parse_detail_page(detail_url)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;已至末尾页&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse_detail_page</span>(<span class=\"params\">detail_url</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        response = requests.get(detail_url, headers=headers)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;获取详情页成功&#x27;</span>)</span><br><span class=\"line\">            detail_html = response.text</span><br><span class=\"line\">            <span class=\"comment\"># print(detail_html)</span></span><br><span class=\"line\">            get_image(detail_html)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> RequestException:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;获取详情页失败&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_image</span>(<span class=\"params\">detail_html</span>):</span></span><br><span class=\"line\">    soup = BeautifulSoup(detail_html, <span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">    items= soup.select(<span class=\"string\">&#x27;.main-image&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># print(items)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">        <span class=\"comment\">#return item.img[&#x27;src&#x27;]</span></span><br><span class=\"line\">    \timage = item.img[<span class=\"string\">&#x27;src&#x27;</span>]</span><br><span class=\"line\">        save_image(image)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_image</span>(<span class=\"params\">image</span>):</span></span><br><span class=\"line\">   response = requests.get(image,headers=headers)</span><br><span class=\"line\">   <span class=\"keyword\">if</span> response.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">       data = response.content</span><br><span class=\"line\">       file_path = <span class=\"string\">&#x27;&#123;0&#125;/&#123;1&#125;.&#123;2&#125;&#x27;</span>.<span class=\"built_in\">format</span>(os.getcwd(), md5(data).hexdigest(), <span class=\"string\">&#x27;jpg&#x27;</span>)</span><br><span class=\"line\">       print(file_path)</span><br><span class=\"line\">       <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(file_path):</span><br><span class=\"line\">           <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">               f.write(data)</span><br><span class=\"line\">               f.close()</span><br><span class=\"line\">               print(<span class=\"string\">&#x27;保存成功&#x27;</span>)</span><br><span class=\"line\">   <span class=\"keyword\">else</span>:</span><br><span class=\"line\">       print(<span class=\"string\">&#x27;保存失败&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://www.mzitu.com/tag/youhuo/&#x27;</span></span><br><span class=\"line\">    html = get_page(url)</span><br><span class=\"line\">    parse_page(html)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>[^1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zNzIwMmJlYzhmOTc=\">https://www.jianshu.com/p/37202bec8f97<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["python代码应用"],"tags":["python爬妹子图"]},{"title":"如何搭建感知器并使用其进行分类","url":"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/","content":"<h1 id=\"😋如何搭建感知器并使用其进行分类\"><a href=\"#😋如何搭建感知器并使用其进行分类\" class=\"headerlink\" title=\"😋如何搭建感知器并使用其进行分类\"></a>😋如何搭建感知器并使用其进行分类</h1><p>[toc]</p>\n<h2 id=\"💨python-编程基础，需要掌握几个库\"><a href=\"#💨python-编程基础，需要掌握几个库\" class=\"headerlink\" title=\"💨python 编程基础，需要掌握几个库\"></a>💨python 编程基础，需要掌握几个库</h2><ul>\n<li>numpy</li>\n<li>pandas</li>\n<li>matplotlib</li>\n</ul>\n<h2 id=\"💖什么是感知器？\"><a href=\"#💖什么是感知器？\" class=\"headerlink\" title=\"💖什么是感知器？\"></a>💖什么是感知器？</h2><h3 id=\"🎈神经元与机器学习感知机\"><a href=\"#🎈神经元与机器学习感知机\" class=\"headerlink\" title=\"🎈神经元与机器学习感知机\"></a>🎈神经元与机器学习感知机</h3><p>信号在神经元中的传播过程如下：信号通过神经粒质与神经元树突结合，通过神经细胞的认知处理（分类等），由神经末梢输出信号。</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602160802363.png\" alt=\"image-20200602160802363\"><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602161216932.png\" alt=\"image-20200602161216932\"></p>\n<p>感知器类似于生物神经系统中的神经元。特征数据$x_1,x_2,...x_m$，作为输入信号，权重因子$\\omega_1,\\omega_2,...\\omega_m$,作信号接收单元，激活函数用于根据$\\omega x$输入信号产生输出分类结果。其中，$x_0=1,\\omega_0=y_0$</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602160731313.png\" alt=\"image-20200602160731313\"></p>\n<p>感知机的基本数学原理，既是逻辑回归/线性回归，直白一点就是大学物理实验中的实验数据处理，数据拟合和类似最小二乘法的误差分析；</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/1.png\" alt></p>\n<p>为了使拟合或分类效果最好，需要求一组$\\omega$,要求方差最小即下式最小：$\\widehat y$为预测数据，${(i)}$为第i个样本，下标为特征</p>\n<p>$$<br>\\begin{equation}<br>J(\\boldsymbol{w})=\\frac{1}{2} \\sum_{i}\\left(y^{(i)}-\\widehat y^{(i)}\\right)^{2}<br>\\end{equation}<br>$$</p>\n<p>线性回归或逻辑回归得目的是根据已有数据发现规律或现象，建立相应得模型，最终目的是利用模型进行预测；机器学习算法就是一种事物规律建模技术。训练机器学习算法，并用其对新的数据进行预测或分类。</p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602220300807.png\" alt=\"image-20200602220300807\"></p>\n<p><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602220058431.png\" alt=\"image-20200602220058431\"></p>\n<p>机器学习算法的核心既是获得较合理的$\\omega$, 要想获得$\\omega$就需要利用数据集对算法进行训练。样本数据输入，预测值$\\widehat y$与实际值之间会有偏差。要求训练样本足够多的情况下，偏差变小，逐渐收敛。那么，每个训练样本进行训练时，均需对权重因子进行更新。</p>\n<p>$$<br>w_{j}:=w_{j}+\\Delta w_{j}\\<br>$$</p>\n<h3 id=\"🚲最简单的感知机\"><a href=\"#🚲最简单的感知机\" class=\"headerlink\" title=\"🚲最简单的感知机\"></a>🚲最简单的感知机</h3><p>权重更新方法如下<br>$$<br>\\begin{equation}\\Delta w_{j}=\\eta\\left(y^{(i)}-\\hat{y}^{(i)}\\right) x_{j}^{(i)}\\end{equation}<br>$$<br>其中，$\\eta$成为学习率<br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/2.png\" alt></p>\n<h3 id=\"🛴自适应线性神经元与学习的收敛性\"><a href=\"#🛴自适应线性神经元与学习的收敛性\" class=\"headerlink\" title=\"🛴自适应线性神经元与学习的收敛性\"></a>🛴自适应线性神经元与学习的收敛性</h3><p>其采用线性激活函数$\\phi(z)=z$，那么；<br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/3.png\" alt><br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/image-20200602223450727.png\" alt=\"image-20200602223450727\"></p>\n<p>权重更新采用梯度下降法：<br><img src=\"/2020/06/02/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E6%84%9F%E7%9F%A5%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB/4.png\" alt></p>\n<h2 id=\"🍜如何搭建感知机并进行分类？\"><a href=\"#🍜如何搭建感知机并进行分类？\" class=\"headerlink\" title=\"🍜如何搭建感知机并进行分类？\"></a>🍜如何搭建感知机并进行分类？</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.colors <span class=\"keyword\">import</span> ListedColormap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # Implementing a perceptron learning algorithm in Python</span></span><br><span class=\"line\"><span class=\"comment\"># ## An object-oriented perceptron API</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Perceptron</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Perceptron classifier.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ------------</span></span><br><span class=\"line\"><span class=\"string\">    eta : float</span></span><br><span class=\"line\"><span class=\"string\">      Learning rate (between 0.0 and 1.0)</span></span><br><span class=\"line\"><span class=\"string\">    n_iter : int</span></span><br><span class=\"line\"><span class=\"string\">      Passes over the training dataset.</span></span><br><span class=\"line\"><span class=\"string\">    random_state : int</span></span><br><span class=\"line\"><span class=\"string\">      Random number generator seed for random weight</span></span><br><span class=\"line\"><span class=\"string\">      initialization.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Attributes</span></span><br><span class=\"line\"><span class=\"string\">    -----------</span></span><br><span class=\"line\"><span class=\"string\">    w_ : 1d-array</span></span><br><span class=\"line\"><span class=\"string\">      Weights after fitting.</span></span><br><span class=\"line\"><span class=\"string\">    errors_ : list</span></span><br><span class=\"line\"><span class=\"string\">      Number of misclassifications (updates) in each epoch.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, eta=<span class=\"number\">0.01</span>, n_iter=<span class=\"number\">50</span>, random_state=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">        self.eta = eta</span><br><span class=\"line\">        self.n_iter = n_iter</span><br><span class=\"line\">        self.random_state = random_state</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Fit training data.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        ----------</span></span><br><span class=\"line\"><span class=\"string\">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class=\"line\"><span class=\"string\">          Training vectors, where n_samples is the number of samples and</span></span><br><span class=\"line\"><span class=\"string\">          n_features is the number of features.</span></span><br><span class=\"line\"><span class=\"string\">        y : array-like, shape = [n_samples]</span></span><br><span class=\"line\"><span class=\"string\">          Target values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Returns</span></span><br><span class=\"line\"><span class=\"string\">        -------</span></span><br><span class=\"line\"><span class=\"string\">        self : object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        rgen = np.random.RandomState(self.random_state)</span><br><span class=\"line\">        self.w_ = rgen.normal(loc=<span class=\"number\">0.0</span>, scale=<span class=\"number\">0.01</span>, size=<span class=\"number\">1</span> + X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        self.errors_ = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iter):</span><br><span class=\"line\">            errors = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> xi, target <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X, y):</span><br><span class=\"line\">                update = self.eta * (target - self.predict(xi))</span><br><span class=\"line\">                self.w_[<span class=\"number\">1</span>:] += update * xi</span><br><span class=\"line\">                self.w_[<span class=\"number\">0</span>] += update</span><br><span class=\"line\">                errors += <span class=\"built_in\">int</span>(update != <span class=\"number\">0.0</span>)</span><br><span class=\"line\">            self.errors_.append(errors)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">net_input</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Calculate net input&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.dot(X, self.w_[<span class=\"number\">1</span>:]) + self.w_[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Return class label after unit step&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.where(self.net_input(X) &gt;= <span class=\"number\">0.0</span>, <span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ## Training a perceptron model on the Iris dataset</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### Reading-in the Iris data</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;https://archive.ics.uci.edu/ml/&#x27;</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;machine-learning-databases/iris/iris.data&#x27;</span>, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">df.tail()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># ### Note:</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># You can find a copy of the Iris dataset (and all other datasets used in this book) in the code bundle of this book, which you can use if you are working offline or the UCI server at https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data is temporarily unavailable. For instance, to load the Iris dataset from a local directory, you can replace the line </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\">#     df = pd.read_csv(&#x27;https://archive.ics.uci.edu/ml/&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#         &#x27;machine-learning-databases/iris/iris.data&#x27;, header=None)</span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># by</span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\">#     df = pd.read_csv(&#x27;your/local/path/to/iris.data&#x27;, header=None)</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;iris.data&#x27;</span>, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">df.tail()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### Plotting the Iris data</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># select setosa and versicolor</span></span><br><span class=\"line\">y = df.iloc[<span class=\"number\">0</span>:<span class=\"number\">100</span>, <span class=\"number\">4</span>].values</span><br><span class=\"line\">y = np.where(y == <span class=\"string\">&#x27;Iris-setosa&#x27;</span>, -<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># extract sepal length and petal length</span></span><br><span class=\"line\">X = df.iloc[<span class=\"number\">0</span>:<span class=\"number\">100</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>]].values</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot data</span></span><br><span class=\"line\">plt.scatter(X[:<span class=\"number\">50</span>, <span class=\"number\">0</span>], X[:<span class=\"number\">50</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">            color=<span class=\"string\">&#x27;red&#x27;</span>, marker=<span class=\"string\">&#x27;o&#x27;</span>, label=<span class=\"string\">&#x27;setosa&#x27;</span>)</span><br><span class=\"line\">plt.scatter(X[<span class=\"number\">50</span>:<span class=\"number\">100</span>, <span class=\"number\">0</span>], X[<span class=\"number\">50</span>:<span class=\"number\">100</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">            color=<span class=\"string\">&#x27;blue&#x27;</span>, marker=<span class=\"string\">&#x27;x&#x27;</span>, label=<span class=\"string\">&#x27;versicolor&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_06.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### Training the perceptron model</span></span><br><span class=\"line\">ppn = Perceptron(eta=<span class=\"number\">0.1</span>, n_iter=<span class=\"number\">10</span>)</span><br><span class=\"line\">ppn.fit(X, y)</span><br><span class=\"line\">plt.plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ppn.errors_) + <span class=\"number\">1</span>), ppn.errors_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Number of updates&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_07.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ### A function for plotting decision regions</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">plot_decision_regions</span>(<span class=\"params\">X, y, classifier, resolution=<span class=\"number\">0.02</span></span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># setup marker generator and color map</span></span><br><span class=\"line\">    markers = (<span class=\"string\">&#x27;s&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>, <span class=\"string\">&#x27;^&#x27;</span>, <span class=\"string\">&#x27;v&#x27;</span>)</span><br><span class=\"line\">    colors = (<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;lightgreen&#x27;</span>, <span class=\"string\">&#x27;gray&#x27;</span>, <span class=\"string\">&#x27;cyan&#x27;</span>)</span><br><span class=\"line\">    cmap = ListedColormap(colors[:<span class=\"built_in\">len</span>(np.unique(y))])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># plot the decision surface</span></span><br><span class=\"line\">    x1_min, x1_max = X[:, <span class=\"number\">0</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span>, X[:, <span class=\"number\">0</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">    x2_min, x2_max = X[:, <span class=\"number\">1</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span>, X[:, <span class=\"number\">1</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),</span><br><span class=\"line\">                           np.arange(x2_min, x2_max, resolution))</span><br><span class=\"line\">    Z = classifier.predict(np.array([xx1.ravel(), xx2.ravel()]).T)</span><br><span class=\"line\">    Z = Z.reshape(xx1.shape)</span><br><span class=\"line\">    plt.contourf(xx1, xx2, Z, alpha=<span class=\"number\">0.3</span>, cmap=cmap)</span><br><span class=\"line\">    plt.xlim(xx1.<span class=\"built_in\">min</span>(), xx1.<span class=\"built_in\">max</span>())</span><br><span class=\"line\">    plt.ylim(xx2.<span class=\"built_in\">min</span>(), xx2.<span class=\"built_in\">max</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># plot class samples</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, cl <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(np.unique(y)):</span><br><span class=\"line\">        plt.scatter(x=X[y == cl, <span class=\"number\">0</span>], </span><br><span class=\"line\">                    y=X[y == cl, <span class=\"number\">1</span>],</span><br><span class=\"line\">                    alpha=<span class=\"number\">0.8</span>, </span><br><span class=\"line\">                    c=colors[idx],</span><br><span class=\"line\">                    marker=markers[idx], </span><br><span class=\"line\">                    label=cl, </span><br><span class=\"line\">                    edgecolor=<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">plot_decision_regions(X, y, classifier=ppn)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [cm]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_08.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#################################################################</span></span><br><span class=\"line\"><span class=\"comment\">## Adaptive linear neurons and the convergence of learning</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># ## Minimizing cost functions with gradient descent</span></span><br><span class=\"line\"><span class=\"comment\"># ## Implementing an adaptive linear neuron in Python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdalineGD</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;ADAptive LInear NEuron classifier.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ------------</span></span><br><span class=\"line\"><span class=\"string\">    eta : float</span></span><br><span class=\"line\"><span class=\"string\">      Learning rate (between 0.0 and 1.0)</span></span><br><span class=\"line\"><span class=\"string\">    n_iter : int</span></span><br><span class=\"line\"><span class=\"string\">      Passes over the training dataset.</span></span><br><span class=\"line\"><span class=\"string\">    random_state : int</span></span><br><span class=\"line\"><span class=\"string\">      Random number generator seed for random weight</span></span><br><span class=\"line\"><span class=\"string\">      initialization.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Attributes</span></span><br><span class=\"line\"><span class=\"string\">    -----------</span></span><br><span class=\"line\"><span class=\"string\">    w_ : 1d-array</span></span><br><span class=\"line\"><span class=\"string\">      Weights after fitting.</span></span><br><span class=\"line\"><span class=\"string\">    cost_ : list</span></span><br><span class=\"line\"><span class=\"string\">      Sum-of-squares cost function value in each epoch.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, eta=<span class=\"number\">0.01</span>, n_iter=<span class=\"number\">50</span>, random_state=<span class=\"number\">1</span></span>):</span></span><br><span class=\"line\">        self.eta = eta</span><br><span class=\"line\">        self.n_iter = n_iter</span><br><span class=\"line\">        self.random_state = random_state</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot; Fit training data.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        ----------</span></span><br><span class=\"line\"><span class=\"string\">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class=\"line\"><span class=\"string\">          Training vectors, where n_samples is the number of samples and</span></span><br><span class=\"line\"><span class=\"string\">          n_features is the number of features.</span></span><br><span class=\"line\"><span class=\"string\">        y : array-like, shape = [n_samples]</span></span><br><span class=\"line\"><span class=\"string\">          Target values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Returns</span></span><br><span class=\"line\"><span class=\"string\">        -------</span></span><br><span class=\"line\"><span class=\"string\">        self : object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        rgen = np.random.RandomState(self.random_state)</span><br><span class=\"line\">        self.w_ = rgen.normal(loc=<span class=\"number\">0.0</span>, scale=<span class=\"number\">0.01</span>, size=<span class=\"number\">1</span> + X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        self.cost_ = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iter):</span><br><span class=\"line\">            net_input = self.net_input(X)</span><br><span class=\"line\">            <span class=\"comment\"># Please note that the &quot;activation&quot; method has no effect</span></span><br><span class=\"line\">            <span class=\"comment\"># in the code since it is simply an identity function. We</span></span><br><span class=\"line\">            <span class=\"comment\"># could write `output = self.net_input(X)` directly instead.</span></span><br><span class=\"line\">            <span class=\"comment\"># The purpose of the activation is more conceptual, i.e.,  </span></span><br><span class=\"line\">            <span class=\"comment\"># in the case of logistic regression (as we will see later), </span></span><br><span class=\"line\">            <span class=\"comment\"># we could change it to</span></span><br><span class=\"line\">            <span class=\"comment\"># a sigmoid function to implement a logistic regression classifier.</span></span><br><span class=\"line\">            output = self.activation(net_input)</span><br><span class=\"line\">            errors = (y - output)</span><br><span class=\"line\">            self.w_[<span class=\"number\">1</span>:] += self.eta * X.T.dot(errors)</span><br><span class=\"line\">            self.w_[<span class=\"number\">0</span>] += self.eta * errors.<span class=\"built_in\">sum</span>()</span><br><span class=\"line\">            cost = (errors**<span class=\"number\">2</span>).<span class=\"built_in\">sum</span>() / <span class=\"number\">2.0</span></span><br><span class=\"line\">            self.cost_.append(cost)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">net_input</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Calculate net input&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.dot(X, self.w_[<span class=\"number\">1</span>:]) + self.w_[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">activation</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Compute linear activation&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> X</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Return class label after unit step&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.where(self.activation(self.net_input(X)) &gt;= <span class=\"number\">0.0</span>, <span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax = plt.subplots(nrows=<span class=\"number\">1</span>, ncols=<span class=\"number\">2</span>, figsize=(<span class=\"number\">10</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ada1 = AdalineGD(n_iter=<span class=\"number\">10</span>, eta=<span class=\"number\">0.01</span>).fit(X, y)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada1.cost_) + <span class=\"number\">1</span>), np.log10(ada1.cost_), marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;log(Sum-squared-error)&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Adaline - Learning rate 0.01&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ada2 = AdalineGD(n_iter=<span class=\"number\">10</span>, eta=<span class=\"number\">0.0001</span>).fit(X, y)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada2.cost_) + <span class=\"number\">1</span>), ada2.cost_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_ylabel(<span class=\"string\">&#x27;Sum-squared-error&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Adaline - Learning rate 0.0001&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_11.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ## Improving gradient descent through feature scaling</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># standardize features</span></span><br><span class=\"line\">X_std = np.copy(X)</span><br><span class=\"line\">X_std[:, <span class=\"number\">0</span>] = (X[:, <span class=\"number\">0</span>] - X[:, <span class=\"number\">0</span>].mean()) / X[:, <span class=\"number\">0</span>].std()</span><br><span class=\"line\">X_std[:, <span class=\"number\">1</span>] = (X[:, <span class=\"number\">1</span>] - X[:, <span class=\"number\">1</span>].mean()) / X[:, <span class=\"number\">1</span>].std()</span><br><span class=\"line\"></span><br><span class=\"line\">ada = AdalineGD(n_iter=<span class=\"number\">15</span>, eta=<span class=\"number\">0.01</span>)</span><br><span class=\"line\">ada.fit(X_std, y)</span><br><span class=\"line\"></span><br><span class=\"line\">plot_decision_regions(X_std, y, classifier=ada)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Adaline - Gradient Descent&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_14_1.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada.cost_) + <span class=\"number\">1</span>), ada.cost_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Sum-squared-error&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_14_2.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ## Large scale machine learning and stochastic gradient descent</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdalineSGD</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;ADAptive LInear NEuron classifier.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Parameters</span></span><br><span class=\"line\"><span class=\"string\">    ------------</span></span><br><span class=\"line\"><span class=\"string\">    eta : float</span></span><br><span class=\"line\"><span class=\"string\">      Learning rate (between 0.0 and 1.0)</span></span><br><span class=\"line\"><span class=\"string\">    n_iter : int</span></span><br><span class=\"line\"><span class=\"string\">      Passes over the training dataset.</span></span><br><span class=\"line\"><span class=\"string\">    shuffle : bool (default: True)</span></span><br><span class=\"line\"><span class=\"string\">      Shuffles training data every epoch if True to prevent cycles.</span></span><br><span class=\"line\"><span class=\"string\">    random_state : int</span></span><br><span class=\"line\"><span class=\"string\">      Random number generator seed for random weight</span></span><br><span class=\"line\"><span class=\"string\">      initialization.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Attributes</span></span><br><span class=\"line\"><span class=\"string\">    -----------</span></span><br><span class=\"line\"><span class=\"string\">    w_ : 1d-array</span></span><br><span class=\"line\"><span class=\"string\">      Weights after fitting.</span></span><br><span class=\"line\"><span class=\"string\">    cost_ : list</span></span><br><span class=\"line\"><span class=\"string\">      Sum-of-squares cost function value averaged over all</span></span><br><span class=\"line\"><span class=\"string\">      training samples in each epoch.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, eta=<span class=\"number\">0.01</span>, n_iter=<span class=\"number\">10</span>, shuffle=<span class=\"literal\">True</span>, random_state=<span class=\"literal\">None</span></span>):</span></span><br><span class=\"line\">        self.eta = eta</span><br><span class=\"line\">        self.n_iter = n_iter</span><br><span class=\"line\">        self.w_initialized = <span class=\"literal\">False</span></span><br><span class=\"line\">        self.shuffle = shuffle</span><br><span class=\"line\">        self.random_state = random_state</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot; Fit training data.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        ----------</span></span><br><span class=\"line\"><span class=\"string\">        X : &#123;array-like&#125;, shape = [n_samples, n_features]</span></span><br><span class=\"line\"><span class=\"string\">          Training vectors, where n_samples is the number of samples and</span></span><br><span class=\"line\"><span class=\"string\">          n_features is the number of features.</span></span><br><span class=\"line\"><span class=\"string\">        y : array-like, shape = [n_samples]</span></span><br><span class=\"line\"><span class=\"string\">          Target values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Returns</span></span><br><span class=\"line\"><span class=\"string\">        -------</span></span><br><span class=\"line\"><span class=\"string\">        self : object</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        self._initialize_weights(X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        self.cost_ = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iter):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.shuffle:</span><br><span class=\"line\">                X, y = self._shuffle(X, y)</span><br><span class=\"line\">            cost = []</span><br><span class=\"line\">            <span class=\"keyword\">for</span> xi, target <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X, y):</span><br><span class=\"line\">                cost.append(self._update_weights(xi, target))</span><br><span class=\"line\">            avg_cost = <span class=\"built_in\">sum</span>(cost) / <span class=\"built_in\">len</span>(y)</span><br><span class=\"line\">            self.cost_.append(avg_cost)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">partial_fit</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Fit training data without reinitializing the weights&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.w_initialized:</span><br><span class=\"line\">            self._initialize_weights(X.shape[<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">if</span> y.ravel().shape[<span class=\"number\">0</span>] &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> xi, target <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X, y):</span><br><span class=\"line\">                self._update_weights(xi, target)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self._update_weights(X, y)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_shuffle</span>(<span class=\"params\">self, X, y</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Shuffle training data&quot;&quot;&quot;</span></span><br><span class=\"line\">        r = self.rgen.permutation(<span class=\"built_in\">len</span>(y))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> X[r], y[r]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_initialize_weights</span>(<span class=\"params\">self, m</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Initialize weights to small random numbers&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.rgen = np.random.RandomState(self.random_state)</span><br><span class=\"line\">        self.w_ = self.rgen.normal(loc=<span class=\"number\">0.0</span>, scale=<span class=\"number\">0.01</span>, size=<span class=\"number\">1</span> + m)</span><br><span class=\"line\">        self.w_initialized = <span class=\"literal\">True</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_update_weights</span>(<span class=\"params\">self, xi, target</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Apply Adaline learning rule to update the weights&quot;&quot;&quot;</span></span><br><span class=\"line\">        output = self.activation(self.net_input(xi))</span><br><span class=\"line\">        error = (target - output)</span><br><span class=\"line\">        self.w_[<span class=\"number\">1</span>:] += self.eta * xi.dot(error)</span><br><span class=\"line\">        self.w_[<span class=\"number\">0</span>] += self.eta * error</span><br><span class=\"line\">        cost = <span class=\"number\">0.5</span> * error**<span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cost</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">net_input</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Calculate net input&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.dot(X, self.w_[<span class=\"number\">1</span>:]) + self.w_[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">activation</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Compute linear activation&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> X</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">predict</span>(<span class=\"params\">self, X</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Return class label after unit step&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.where(self.activation(self.net_input(X)) &gt;= <span class=\"number\">0.0</span>, <span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ada = AdalineSGD(n_iter=<span class=\"number\">15</span>, eta=<span class=\"number\">0.01</span>, random_state=<span class=\"number\">1</span>)</span><br><span class=\"line\">ada.fit(X_std, y)</span><br><span class=\"line\"></span><br><span class=\"line\">plot_decision_regions(X_std, y, classifier=ada)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Adaline - Stochastic Gradient Descent&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;petal length [standardized]&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_15_1.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(ada.cost_) + <span class=\"number\">1</span>), ada.cost_, marker=<span class=\"string\">&#x27;o&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Epochs&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Average Cost&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;images/02_15_2.png&#x27;, dpi=300)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">ada.partial_fit(X_std[<span class=\"number\">0</span>, :], y[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # Summary</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --- </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># Readers may ignore the following cell</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n","categories":["机器学习"],"tags":["感知器","神经元"]},{"title":"数据拟合","url":"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/","content":"<h1 id=\"数据拟合\"><a href=\"#数据拟合\" class=\"headerlink\" title=\"数据拟合\"></a>数据拟合</h1><p>[toc]</p>\n<h2 id=\"1-问题描述\"><a href=\"#1-问题描述\" class=\"headerlink\" title=\"1.问题描述\"></a>1.问题描述</h2><p>手里有三组数据，用来分析探测器散射体材料厚度与探测器效率之间的关系。需要对三组数据进行画散点图，并进行拟合。拟合函数采用如下形式<br>$$<br>\\eta = 1- exp(-\\mu x)<br>$$<br>准备采用三种方法进行数据拟合，数据分析软件root、matlab和python.</p>\n<h2 id=\"2-三种数据分析软件的数据拟合实现\"><a href=\"#2-三种数据分析软件的数据拟合实现\" class=\"headerlink\" title=\"2.三种数据分析软件的数据拟合实现\"></a>2.三种数据分析软件的数据拟合实现</h2><h3 id=\"2-1-matlab的数据拟合实现\"><a href=\"#2-1-matlab的数据拟合实现\" class=\"headerlink\" title=\"2.1 matlab的数据拟合实现\"></a>2.1 matlab的数据拟合实现</h3><figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%% 读入数据x,y</span></span><br><span class=\"line\">x=<span class=\"number\">5</span>:<span class=\"number\">5</span>:<span class=\"number\">100</span>;</span><br><span class=\"line\">y1=textread(&#x27;dataout1.txt&#x27;); //textread读入数据</span><br><span class=\"line\">y2=textread(<span class=\"string\">&#x27;dataout2.txt&#x27;</span>);</span><br><span class=\"line\">y3=textread(<span class=\"string\">&#x27;dataout3.txt&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% 自定义函数形式数据拟合</span></span><br><span class=\"line\">myfittype = fittype(<span class=\"string\">&#x27;1. - exp(a*x)&#x27;</span>,...</span><br><span class=\"line\">    <span class=\"string\">&#x27;dependent&#x27;</span>,&#123;<span class=\"string\">&#x27;y&#x27;</span>&#125;,<span class=\"string\">&#x27;independent&#x27;</span>,&#123;<span class=\"string\">&#x27;x&#x27;</span>&#125;,...</span><br><span class=\"line\">    <span class=\"string\">&#x27;coefficients&#x27;</span>,&#123;<span class=\"string\">&#x27;a&#x27;</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">myfit1 = fit(x&#x27;,y1,myfittype);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(myfit1,<span class=\"string\">&#x27;r-&#x27;</span>,x,y1,<span class=\"string\">&#x27;r*&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">myfit2 = fit(x&#x27;,y2,myfittype);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(myfit2,<span class=\"string\">&#x27;b-&#x27;</span>,x,y2,<span class=\"string\">&#x27;bo&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">myfit3 = fit(x&#x27;,y3,myfittype);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(myfit3,<span class=\"string\">&#x27;g-&#x27;</span>,x,y3,<span class=\"string\">&#x27;gx&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/fittedData.png\" alt=\"fittedData\"></p>\n<h3 id=\"2-2-root中的数据拟合实现\"><a href=\"#2-2-root中的数据拟合实现\" class=\"headerlink\" title=\"2.2 root中的数据拟合实现\"></a>2.2 root中的数据拟合实现</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//参考 root tutorial/graphs/zdemo.C  /fit/FittingDemo.C</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;iostream&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;fstream&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;vector&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;cstring&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;string.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> NMAX=<span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> xx[NMAX],yy[NMAX];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ReadData</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\"> </span><br><span class=\"line\">  ReadData(<span class=\"built_in\">string</span> fname)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    filename=fname;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  ~ReadData()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetData</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">  <span class=\"built_in\">string</span> filename;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReadData::GetData</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"function\">ifstream <span class=\"title\">input</span><span class=\"params\">(filename)</span></span>;</span><br><span class=\"line\">  <span class=\"keyword\">double</span> a,b;</span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">double</span>&gt; x,y;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(!input.eof())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">      a=i*<span class=\"number\">5</span>;</span><br><span class=\"line\">      input&gt;&gt;b;</span><br><span class=\"line\">      x.push_back(a);</span><br><span class=\"line\">      y.push_back(<span class=\"number\">1.0</span>-(b/<span class=\"number\">1.e6</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  input.close();</span><br><span class=\"line\">  i=i<span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;i&amp;&amp;j&lt;NMAX;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      xx[j]=x[j],yy[j]=y[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">plot</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">ReadData <span class=\"title\">a1</span><span class=\"params\">(<span class=\"string\">&quot;./EJ200-100/data.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">  a1.GetData();</span><br><span class=\"line\"></span><br><span class=\"line\">  TGraph *g1 =<span class=\"keyword\">new</span> TGraph(NMAX,xx,yy);</span><br><span class=\"line\">  g1-&gt;SetLineColor(<span class=\"number\">38</span>);</span><br><span class=\"line\">  g1-&gt;SetMarkerColor(kBlue);</span><br><span class=\"line\">  g1-&gt;SetMarkerStyle(<span class=\"number\">21</span>);</span><br><span class=\"line\">  g1-&gt;SetMarkerSize(<span class=\"number\">1.1</span>);</span><br><span class=\"line\">  g1-&gt;Draw(<span class=\"string\">&quot;AP&quot;</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">ReadData <span class=\"title\">a2</span><span class=\"params\">(<span class=\"string\">&quot;./EJ200-140/data.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">  a2.GetData();</span><br><span class=\"line\"></span><br><span class=\"line\">  TGraph *gr2 = <span class=\"keyword\">new</span> TGraph(NMAX,xx,yy);</span><br><span class=\"line\">  gr2-&gt;SetLineColor(<span class=\"number\">38</span>);</span><br><span class=\"line\">  gr2-&gt;SetMarkerColor(kRed);</span><br><span class=\"line\">  gr2-&gt;SetMarkerStyle(<span class=\"number\">29</span>);</span><br><span class=\"line\">  gr2-&gt;SetMarkerSize(<span class=\"number\">1.5</span>);</span><br><span class=\"line\">  gr2-&gt;Draw(<span class=\"string\">&quot;P&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\">ReadData <span class=\"title\">a3</span><span class=\"params\">(<span class=\"string\">&quot;./EJ200-180/data.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">  a3.GetData();</span><br><span class=\"line\"></span><br><span class=\"line\">  TGraph *gr3 = <span class=\"keyword\">new</span> TGraph(NMAX,xx,yy);</span><br><span class=\"line\"></span><br><span class=\"line\">  gr3-&gt;SetLineColor(<span class=\"number\">38</span>);</span><br><span class=\"line\">  gr3-&gt;SetMarkerColor(<span class=\"number\">6</span>);</span><br><span class=\"line\">  gr3-&gt;SetMarkerStyle(<span class=\"number\">8</span>);</span><br><span class=\"line\">  gr3-&gt;SetMarkerSize(<span class=\"number\">1.1</span>);</span><br><span class=\"line\">  gr3-&gt;Draw(<span class=\"string\">&quot;P&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//////////////////</span></span><br><span class=\"line\">  <span class=\"comment\">////</span></span><br><span class=\"line\">  <span class=\"comment\">//      elta = 1-exp(a*x) //拟合函数形式</span></span><br><span class=\"line\"></span><br><span class=\"line\">  TF1 *fun =<span class=\"keyword\">new</span> TF1(<span class=\"string\">&quot;#elta = 1-exp(A*x)&quot;</span>,<span class=\"string\">&quot;1.-exp([0]*x)&quot;</span>,<span class=\"number\">0</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">  fun-&gt;SetLineColor(kBlue);fun-&gt;SetLineStyle(<span class=\"number\">2</span>);</span><br><span class=\"line\">  g1-&gt;Fit(fun);</span><br><span class=\"line\"></span><br><span class=\"line\">  fun-&gt;SetLineColor(kRed);fun-&gt;SetLineStyle(<span class=\"number\">2</span>);</span><br><span class=\"line\">  gr2-&gt;Fit(fun);</span><br><span class=\"line\"></span><br><span class=\"line\">  fun-&gt;SetLineColor(<span class=\"number\">6</span>);fun-&gt;SetLineStyle(<span class=\"number\">2</span>);</span><br><span class=\"line\">  gr3-&gt;Fit(fun);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//////////////////</span></span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"comment\">//  legend</span></span><br><span class=\"line\">  TLegend *lg=<span class=\"keyword\">new</span> TLegend(<span class=\"number\">0.6</span>,<span class=\"number\">0.65</span>,<span class=\"number\">0.88</span>,<span class=\"number\">0.85</span>);</span><br><span class=\"line\">  lg-&gt;SetTextFont(<span class=\"number\">62</span>);</span><br><span class=\"line\">  lg-&gt;SetTextAlign(<span class=\"number\">12</span>);</span><br><span class=\"line\">  lg-&gt;SetTextSize(<span class=\"number\">0.04</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(g1,<span class=\"string\">&quot;100keV&quot;</span>,<span class=\"string\">&quot;p&quot;</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(gr2,<span class=\"string\">&quot;140keV&quot;</span>,<span class=\"string\">&quot;p&quot;</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(gr3,<span class=\"string\">&quot;180keV&quot;</span>,<span class=\"string\">&quot;p&quot;</span>);</span><br><span class=\"line\">  lg-&gt;AddEntry(fun,<span class=\"string\">&quot; #eta = 1-exp(#mu *x)&quot;</span>,<span class=\"string\">&quot;l&quot;</span>);</span><br><span class=\"line\">  lg-&gt;Draw();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/c1.png\" alt=\"c1\"></p>\n<h3 id=\"2-3-python中的数据拟合实现\"><a href=\"#2-3-python中的数据拟合实现\" class=\"headerlink\" title=\"2.3 python中的数据拟合实现\"></a>2.3 python中的数据拟合实现</h3><p>python 中做数据分析常用的几个包<code>matplotlib,numpy,scipy,pandas</code></p>\n<ul>\n<li>scipy中的curve_fit函数</li>\n<li>lmfit中的fit函数</li>\n</ul>\n<p>下面从这两种包来拟合这两组数据。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2020/6/6 17:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Hubery-Lee  </span></span><br><span class=\"line\"><span class=\"comment\"># @Email   : hrbeulh@126.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##   case 1: curve_fit</span></span><br><span class=\"line\"><span class=\"comment\">##   case 2: lmfit</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"><span class=\"comment\"># Header</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.optimize <span class=\"keyword\">import</span> curve_fit</span><br><span class=\"line\"><span class=\"keyword\">from</span> lmfit <span class=\"keyword\">import</span> Model</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x, a</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1.</span> - np.exp(a * x)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Read data from text</span></span><br><span class=\"line\">x = np.linspace(<span class=\"number\">5</span>, <span class=\"number\">100</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">y1 = np.loadtxt(<span class=\"string\">&#x27;dataout1.txt&#x27;</span>)</span><br><span class=\"line\">y2 = np.loadtxt(<span class=\"string\">&#x27;dataout2.txt&#x27;</span>)</span><br><span class=\"line\">y3 = np.loadtxt(<span class=\"string\">&#x27;dataout3.txt&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#  plot data</span></span><br><span class=\"line\">plt.plot(x, y1, <span class=\"string\">&#x27;bo&#x27;</span>, label=<span class=\"string\">&#x27;100 keV&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y2, <span class=\"string\">&#x27;r*&#x27;</span>, label=<span class=\"string\">&#x27;140 keV&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y3, <span class=\"string\">&#x27;gx&#x27;</span>, label=<span class=\"string\">&#x27;180 keV&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## case 1:</span></span><br><span class=\"line\"><span class=\"comment\">## https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.curve_fit.html</span></span><br><span class=\"line\"><span class=\"comment\"># Fit for the parameters a of the function func:</span></span><br><span class=\"line\">popt1, pcov1 = curve_fit(func, x, y1)</span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class=\"line\">plt.plot(x, func(x, *popt1), <span class=\"string\">&#x27;b-&#x27;</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;100 keV fit: a=%5.3f&#x27;</span> % <span class=\"built_in\">tuple</span>(popt1))</span><br><span class=\"line\"></span><br><span class=\"line\">popt2, pcov2 = curve_fit(func, x, y2)</span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class=\"line\">plt.plot(x, func(x, *popt2), <span class=\"string\">&#x27;r-&#x27;</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;140 keV fit: a=%5.3f&#x27;</span> % <span class=\"built_in\">tuple</span>(popt2))</span><br><span class=\"line\"></span><br><span class=\"line\">popt3, pcov3 = curve_fit(func, x, y3)</span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.55423706, 1.35190947, 0.47450618])</span></span><br><span class=\"line\">plt.plot(x, func(x, *popt3), <span class=\"string\">&#x27;g-&#x27;</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;180 keV fit: a=%5.3f&#x27;</span> % <span class=\"built_in\">tuple</span>(popt3))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # In the case of parameters a need be constrainted</span></span><br><span class=\"line\"><span class=\"comment\"># # Constrain the optimization to the region of</span></span><br><span class=\"line\"><span class=\"comment\"># # 0 &lt;= a &lt;= 3, 0 &lt;= b &lt;= 1 and 0 &lt;= c &lt;= 0.5</span></span><br><span class=\"line\"><span class=\"comment\"># popt, pcov = curve_fit(func, xdata, ydata, bounds=(0, [3., 1., 0.5]))</span></span><br><span class=\"line\"><span class=\"comment\"># popt  # output: array([ 2.43708906, 1. , 0.35015434])</span></span><br><span class=\"line\"><span class=\"comment\"># plt.plot(xdata, func(xdata, *popt), &#x27;g--&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#          label=&#x27;fit: a=%5.3f, b=%5.3f, c=%5.3f&#x27; % tuple(popt))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## case 2:</span></span><br><span class=\"line\"><span class=\"comment\">## https://lmfit.github.io/lmfit-py/model.html</span></span><br><span class=\"line\"><span class=\"comment\"># Fitting</span></span><br><span class=\"line\">gmodel = Model(func)</span><br><span class=\"line\">result = gmodel.fit(y1, x=x, a=-<span class=\"number\">0.02</span>)  <span class=\"comment\"># Fit from initial values (5,5,1)</span></span><br><span class=\"line\">print(result.fit_report())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Plot</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(x, y1, &#x27;bo&#x27;, label=&#x27;raw data&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(x, result.init_fit, &#x27;b--&#x27;, label=&#x27;init_fit&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#plt.plot(x, result.best_fit, &#x27;k--&#x27;, label=&#x27;best_fit&#x27;)</span></span><br><span class=\"line\">plt.plot(x, result.best_fit, <span class=\"string\">&#x27;k--&#x27;</span>, label=<span class=\"string\">&#x27;100 keV lmfit&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># draw option</span></span><br><span class=\"line\"><span class=\"comment\"># Labels</span></span><br><span class=\"line\">plt.title(<span class=\"string\">r&#x27;Fitting Function $\\eta = 1.0-exp(a*x)$&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;x/mm&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">r&#x27;$\\eta$&#x27;</span>)  <span class=\"comment\"># 公式的添加 latex风格 https://matplotlib.org/tutorials/text/mathtext.html</span></span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">leg = plt.legend()  <span class=\"comment\"># remove the frame of Legend, personal choice</span></span><br><span class=\"line\">leg.get_frame().set_linewidth(<span class=\"number\">0.0</span>)  <span class=\"comment\"># remove the frame of Legend, personal choice</span></span><br><span class=\"line\"><span class=\"comment\"># leg.get_frame().set_edgecolor(&#x27;b&#x27;)  # change the color of Legend frame</span></span><br><span class=\"line\"><span class=\"comment\"># plt.show()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Export figurey</span></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;fit1.eps&#x27;, format=&#x27;eps&#x27;, dpi=1000)</span></span><br><span class=\"line\"><span class=\"comment\"># plt.savefig(&#x27;fit1.pdf&#x27;, format=&#x27;pdf&#x27;, dpi=1000, figsize=(8, 6), facecolor=&#x27;w&#x27;, edgecolor=&#x27;k&#x27;)</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&#x27;myfit.jpg&#x27;</span>, <span class=\"built_in\">format</span>=<span class=\"string\">&#x27;jpg&#x27;</span>, dpi=<span class=\"number\">1000</span>, figsize=(<span class=\"number\">8</span>, <span class=\"number\">6</span>), facecolor=<span class=\"string\">&#x27;w&#x27;</span>, edgecolor=<span class=\"string\">&#x27;k&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/06/07/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/myfit.jpg\" alt=\"myfit\"></p>\n","categories":["数据拟合"],"tags":["root","python","matlab"]},{"title":"用VSCode的IDE调试CPP","url":"/2020/05/05/%E7%94%A8VSCode%E7%9A%84IDE%E8%B0%83%E8%AF%95CPP/","content":"<h1 id=\"💘VSCODE-IDE在C-C-项目编程中的使用\"><a href=\"#💘VSCODE-IDE在C-C-项目编程中的使用\" class=\"headerlink\" title=\"💘VSCODE IDE在C/C++项目编程中的使用\"></a>💘VSCODE IDE在C/C++项目编程中的使用</h1><h2 id=\"🌴IDE的作用\"><a href=\"#🌴IDE的作用\" class=\"headerlink\" title=\"🌴IDE的作用\"></a>🌴IDE的作用</h2><p>IDE的作用就是有用户交互界面的代码调试编辑器（也称集成开发环境，Integrated Development Environment）</p>\n<h3 id=\"💨c-c-编程主要基于两类编译器\"><a href=\"#💨c-c-编程主要基于两类编译器\" class=\"headerlink\" title=\"💨c/c++编程主要基于两类编译器\"></a>💨c/c++编程主要基于两类编译器</h3><ul>\n<li>gcc, <code>开源、更新较快</code></li>\n<li>visual studio,<code>微软全家桶</code></li>\n</ul>\n<p>所有linux系统的均是用gcc，linux系统对c/c++的支持更好。linux系统的核心代码基本是用c/c++编写的。</p>\n<p>windows系统上c/c++编程一般用<code>visual studio</code>,当然，为了用到与linux上一样的开源gcc编译器，可以在windows上安装<code>mingw</code>或者<code>cywin</code>两种中的任意一款编译器。</p>\n<h3 id=\"🛴gcc编译器的没有图形Debug界面\"><a href=\"#🛴gcc编译器的没有图形Debug界面\" class=\"headerlink\" title=\"🛴gcc编译器的没有图形Debug界面\"></a>🛴gcc编译器的没有图形Debug界面</h3><p>visual studio自带的调试界面，编程比较方便。gcc的调试需要用<code>gdb</code>,而gdb存在的缺陷是其没有采用命令行调试，需要记住的命令太多，但缺少图像界面，大大降低了编程人员的生成效率。</p>\n<p>由于gdb自身没有合适的IDE,项目配置通常用<code>makefile</code>。makefile继承linux系统下万物用命令行解决的风格。为了避免编写令人难懂的makefile文件，程序员开发了用于生成makefile的<code>cmake</code>工具 .</p>\n<p>gcc等属于开源社区的软件，特点是版本多，没有统一的标准。导致很多公司开发了各自的IDE，如，JetBrain 公司的<code>Cion</code>, 微软公司的<code>VSCode</code>和IBM公司的<code>eclipse</code>等。VSCode,Cion和Eclipse均是top5的c/c++编辑器。其中，VSCode是后起之秀，由微软2015年发布的快平台编辑器。网上介绍较多，再此不再细说，感兴趣的同志可以自己去百度或谷歌一下。下面将介绍VSCode的C++代码调试。</p>\n<h2 id=\"🚀VSCode\"><a href=\"#🚀VSCode\" class=\"headerlink\" title=\"🚀VSCode\"></a>🚀VSCode</h2><p>VSCode是一款IDE编辑器，注意是<code>编辑器</code>说白了就跟<code>记事本</code>一样，只是它额外具备配置编译环境和调试代码的功能。就跟notepat++很像。项目的编译环境配置文件通常由两个组成<code>task.json</code>和<code>launch.json</code>。</p>\n<ul>\n<li>task.json <code>负责配置生成可执行文件</code></li>\n<li>launch.json <code>负责调试</code></li>\n</ul>\n<p>具体VSCode的使用文件可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcw==\">官方说明文档<i class=\"fa fa-external-link-alt\"></i></span><br>下面分别从单文件调试和项目文件调试两个方面进行测试，具体测试文档可参看<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRLNHkxODdrbg==\">我的哔哩哔哩视频<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"🚲单文件，单步调试\"><a href=\"#🚲单文件，单步调试\" class=\"headerlink\" title=\"🚲单文件，单步调试\"></a>🚲单文件，单步调试</h3><ul>\n<li><p>配置生成可执行文件task.json</p>\n</li>\n<li><p>配置调试执行文件lauch.json</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class=\"line\">    &quot;tasks&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class=\"line\">            &quot;label&quot;: &quot;C&#x2F;C++: cpp.exe build active file&quot;,</span><br><span class=\"line\">            &quot;command&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\cpp.exe&quot;,</span><br><span class=\"line\">            &quot;args&quot;: [</span><br><span class=\"line\">                &quot;-g&quot;,</span><br><span class=\"line\">                &quot;$&#123;file&#125;&quot;,</span><br><span class=\"line\">                &quot;-o&quot;,</span><br><span class=\"line\">                &quot;$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;options&quot;: &#123;</span><br><span class=\"line\">                &quot;cwd&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin&quot;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &quot;problemMatcher&quot;: [</span><br><span class=\"line\">                &quot;$gcc&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;group&quot;: &quot;build&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 使用 IntelliSense 了解相关属性。 </span><br><span class=\"line\">    &#x2F;&#x2F; 悬停以查看现有属性的描述。</span><br><span class=\"line\">    &#x2F;&#x2F; 欲了解更多信息，请访问: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387</span><br><span class=\"line\">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class=\"line\">    &quot;configurations&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;name&quot;: &quot;g++.exe - 生成和调试活动文件&quot;,</span><br><span class=\"line\">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class=\"line\">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class=\"line\">            &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,</span><br><span class=\"line\">            &quot;args&quot;: [],</span><br><span class=\"line\">            &quot;stopAtEntry&quot;: false,</span><br><span class=\"line\">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class=\"line\">            &quot;environment&quot;: [],</span><br><span class=\"line\">            &quot;externalConsole&quot;: false,</span><br><span class=\"line\">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class=\"line\">            &quot;miDebuggerPath&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\gdb.exe&quot;,</span><br><span class=\"line\">            &quot;setupCommands&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class=\"line\">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class=\"line\">                    &quot;ignoreFailures&quot;: true</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;preLaunchTask&quot;: &quot;g++.exe build active file&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"🚍项目文件，单步调试\"><a href=\"#🚍项目文件，单步调试\" class=\"headerlink\" title=\"🚍项目文件，单步调试\"></a>🚍项目文件，单步调试</h3><ul>\n<li>CMake <code>负责配置生成可执行文件</code></li>\n<li>launch.json <code>负责调试</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cmake_minimum_required(VERSION 3.10.0)</span><br><span class=\"line\"># 定义项目名称变量PROJECT_NAME, 默认值为demo</span><br><span class=\"line\">set(PROJECT_NAME demo)</span><br><span class=\"line\"></span><br><span class=\"line\">set(CMAKE_BUILD_TYPE &quot;Debug&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">set(CMAKE_CXX_STANDARD_REQUIRED 14)</span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Setup include directory for this project</span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">include_directories($&#123;PROJECT_SOURCE_DIR&#125;&#x2F;include)</span><br><span class=\"line\">#----------------------------------------------------------------------------</span><br><span class=\"line\"># Locate sources and headers for this project</span><br><span class=\"line\"># NB: headers are included so they will show up in IDEs</span><br><span class=\"line\">#</span><br><span class=\"line\">file(GLOB sources $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;src&#x2F;*.cc)</span><br><span class=\"line\">file(GLOB headers $&#123;PROJECT_SOURCE_DIR&#125;&#x2F;include&#x2F;*.h)</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定生成目标</span><br><span class=\"line\">add_executable($&#123;PROJECT_NAME&#125; main.cc $&#123;sources&#125; $&#123;headers&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 使用 IntelliSense 了解相关属性。 </span><br><span class=\"line\">    &#x2F;&#x2F; 悬停以查看现有属性的描述。</span><br><span class=\"line\">    &#x2F;&#x2F; 欲了解更多信息，请访问: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387</span><br><span class=\"line\">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class=\"line\">    &quot;configurations&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;name&quot;: &quot;(gdb) 启动&quot;,</span><br><span class=\"line\">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class=\"line\">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class=\"line\">            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;\\\\build\\\\demo.exe&quot;,</span><br><span class=\"line\">            &quot;args&quot;: [],</span><br><span class=\"line\">            &quot;stopAtEntry&quot;: false,</span><br><span class=\"line\">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class=\"line\">            &quot;environment&quot;: [],</span><br><span class=\"line\">            &quot;externalConsole&quot;: false,</span><br><span class=\"line\">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class=\"line\">            &quot;miDebuggerPath&quot;: &quot;D:\\\\Qt\\\\Tools\\\\mingw730_64\\\\bin\\\\gdb.exe&quot;,</span><br><span class=\"line\">            &quot;setupCommands&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;description&quot;: &quot;为 gdb 启用整齐打印&quot;,</span><br><span class=\"line\">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class=\"line\">                    &quot;ignoreFailures&quot;: true</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["编程工具学习与应用"],"tags":["VSCode"]},{"title":"科学上网方法","url":"/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/","content":"<h1 id=\"🚚科学上网方法\"><a href=\"#🚚科学上网方法\" class=\"headerlink\" title=\"🚚科学上网方法\"></a>🚚科学上网方法</h1><h2 id=\"⚓google-bing检索\"><a href=\"#⚓google-bing检索\" class=\"headerlink\" title=\"⚓google/bing检索\"></a>⚓google/bing检索</h2><ul>\n<li><code>谷歌上网助手</code></li>\n<li><code>iGuge插件</code></li>\n</ul>\n<p>安装方法：</p>\n<p><img src=\"/2020/05/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E6%B3%95/a.png\" alt></p>\n<h2 id=\"🚍文献搜索神器\"><a href=\"#🚍文献搜索神器\" class=\"headerlink\" title=\"🚍文献搜索神器\"></a>🚍文献搜索神器</h2><p><a href=\"https://www.researcher-app.com/\"><code>researcher</code></a></p>\n","categories":["软件体验"],"tags":["google"]},{"title":"迭代重建算法的基本思想","url":"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/","content":"<h1 id=\"迭代重建算法的基本思想\"><a href=\"#迭代重建算法的基本思想\" class=\"headerlink\" title=\"迭代重建算法的基本思想\"></a>迭代重建算法的基本思想</h1><h2 id=\"基本思想\"><a href=\"#基本思想\" class=\"headerlink\" title=\"基本思想\"></a>基本思想</h2><p>图像重建除了通过中心切片定理来实现外，还可以通过解线性方程组来得到。对于二维图像就是像素，对于三维图像就是体素。</p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604225353193.png\" alt=\"image-20200604225353193\"></p>\n<p>$\\left{\\begin{array}{c}x_{1}+x_{2}+x_{3}=p_{1} \\ x_{4}+x_{5}+x_{6}=p_{2} \\ x_{7}+x_{8}+x_{9}=p_{3} \\ x_{3}+x_{6}+x_{9}=p_{4} \\ x_{2}+x_{5}+x_{8}=p_{5} \\ x_{1}+x_{4}+x_{7}=p_{6} \\ 2(\\sqrt{2}-1) x_{4}+(2-\\sqrt{2}) x_{7}+2(\\sqrt{2}-1) x_{8}=p_{7} \\ \\sqrt{2} x_{1}+\\sqrt{2} x_{5}+\\sqrt{2} x_{9}=p_{8} \\ 2(\\sqrt{2}-1) x_{2}+(2-\\sqrt{2}) x_{3}+2(\\sqrt{2}-1) x_{6}=p_{9}\\end{array}\\right.$</p>\n<p>这个方程组也可以用矩阵的形式写出<br>$$<br>AX=p<br>$$<br>其中，$X=\\left[x_{1}, x_{2}, \\ldots, x_{9}\\right]^{T}, \\quad P=\\left[p_{1}, p_{2}, \\ldots, p_{9}\\right]^{T}$迭代算法的思想使将$AX=p$变换成，迭代形式<br>$$<br>X^{(i+1)}=GX^{(i)}+b<br>$$<br>通过不同的变换方式变成迭代格式，就长生了不同的的迭代算法。比如：</p>\n<h2 id=\"常用迭代算法\"><a href=\"#常用迭代算法\" class=\"headerlink\" title=\"常用迭代算法\"></a>常用迭代算法</h2><h3 id=\"代数迭代重建技术（ARO，algebraic-reconstruction-technique\"><a href=\"#代数迭代重建技术（ARO，algebraic-reconstruction-technique\" class=\"headerlink\" title=\"代数迭代重建技术（ARO，algebraic reconstruction technique)\"></a>代数迭代重建技术（ARO，algebraic reconstruction technique)</h3><p>ART 算法是个“行运算”算法。它每次考虑一条射线就更新一次图像。ART 算法的表达式是 </p>\n<p>$$<br>X^{下一个}=X^{\\text {当前}}-\\frac{A_{i} X^{\\text {当前}}-p_{i}}{\\left|A_{i}\\right|^{2}} A_{i}^{T}<br>$$<br>$A_iX$ 执行的是沿着第$i$条射线的投影运算，$p_i$ 是在第 $i $个探测像元上测到的投影数据，$\\left|A_{i}\\right|^{2}=\\sum_{j} a_{i j}^{2}$是沿着第 $i$ 条射线上各“贡献”因子的平方和，$cA^{T}<em>{i}$ 是把数值 $c $沿着第$ i$ 条射线做反投影。如果我们把上面的算法改写成下面的形式 .<br>$$<br>X^{\\text {next }}=X^{\\text {current }}-\\left(\\frac{A</em>{i} X^{\\text {current }}}{\\left|A_{i}\\right|}-\\frac{p_{i}}{\\left|A_{i}\\right|}\\right) \\frac{A_{i}^{T}}{\\left|A_{i}\\right|}<br>$$<br>该算法的几何意义就比较明显了:</p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604233955301.png\" alt=\"image-20200604233955301\"></p>\n<h3 id=\"最大期望极大似然算法（ML-EM，Maximum-Likelihood-Expectation-Maximization）\"><a href=\"#最大期望极大似然算法（ML-EM，Maximum-Likelihood-Expectation-Maximization）\" class=\"headerlink\" title=\"最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）\"></a>最大期望极大似然算法（ML-EM，Maximum-Likelihood Expectation-Maximization）</h3><p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234408677.png\" alt=\"image-20200604234408677\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234429947.png\" alt=\"image-20200604234429947\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234506653.png\" alt=\"image-20200604234506653\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234525715.png\" alt=\"image-20200604234525715\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234558326.png\" alt=\"image-20200604234558326\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234618809.png\" alt=\"image-20200604234618809\"></p>\n<p><img src=\"/2020/06/05/%E8%BF%AD%E4%BB%A3%E9%87%8D%E5%BB%BA%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3/image-20200604234633400.png\" alt=\"image-20200604234633400\"></p>\n<p><strong>参考文献：</strong></p>\n<p>[1] 曾更生，医学图像重建</p>\n","categories":["图像重建"],"tags":["迭代重建"]},{"title":"Gean4 Data Read Out Methods","url":"/2018/09/17/G4DataReadOutMethods/","content":"<h2 id=\"Introduction-of-Data-Aquisition-Methods-in-Geant4-Simulation\"><a href=\"#Introduction-of-Data-Aquisition-Methods-in-Geant4-Simulation\" class=\"headerlink\" title=\"Introduction of Data Aquisition Methods in Geant4 Simulation\"></a>Introduction of Data Aquisition Methods in Geant4 Simulation</h2><ul>\n<li>G4ScoringManager</li>\n<li>SteppingAction</li>\n<li>TrackingAction</li>\n<li>SensitiveDetctor + HitCollection</li>\n</ul>\n<p><img src=\"/2018/09/17/G4DataReadOutMethods/Geant4%E6%95%B0%E6%8D%AE%E8%BE%93%E5%87%BA%E6%96%B9%E5%BC%8F.png\" alt=\"Geant4 Data Read Out Method\"></p>\n<p>More detail information about these methods to get data can you refer to <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZW5rdS5iYWlkdS5jb20vdmlldy9mMTNmNDcyNWJlMjM0ODJmYjVkYTRjNjMuaHRtbA==\">this site<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">A: To get the information at tracking time in a given volume A, one can adopt either one or a combination of the following strategies:</span><br><span class=\"line\"></span><br><span class=\"line\">1.  If the geometry is simple enough, and wish to score some commonly used physics quantities (e.g. energy deposition, dose, flux, etc.), just activate G4ScoringManager in your main program, and use the scorer-based UI commands to transform volume A into a scorer.</span><br><span class=\"line\"></span><br><span class=\"line\">    See Option 6 below, and the example examples&#x2F;extended&#x2F;runAndEvent&#x2F;RE03.</span><br><span class=\"line\"></span><br><span class=\"line\">2.  Through the SteppingAction, check that the particle is inside volume A and do whatever needed. Hints can be found in the previous chapter of this FAQ document.</span><br><span class=\"line\"></span><br><span class=\"line\">    Usually, the hits containers and histograms are attributes of a Track, Event or Run and can be managed through either a TrackingAction, EventAction and&#x2F;or RunAction and eventually messaging their pointer to the SteppingAction.</span><br><span class=\"line\"></span><br><span class=\"line\">    A similar approach is illustrated in examples&#x2F;basic&#x2F;B2, B4, extended&#x2F;electromagnetic, optical, and many others…</span><br><span class=\"line\"></span><br><span class=\"line\">3.  In DetectorConstruction, by declaring volume A as a SensitiveDetector. At stepping time, the Geant4 kernel will automatically check that a particle is inside volume A and will handle the control to a specific function G4VSensitiveDetector::ProcessHits(). It is just necessary to instanciate a class inherited from G4VSensitiveDetector, say VolumeA_SD, and do whatever needed by implementing the function VolumeA_SD::ProcessHits(), as described in Option 2 above.</span><br><span class=\"line\"></span><br><span class=\"line\">4.  In addition to Option 3 above, should create a HitsCollection to store the information. A HitsCollection can be created in VolumeA_SD::Initialize(). A Hit can be created or filled in VolumeA_SD::ProcessHits(). Additional operations on HitsCollection can be performed in VolumeA_SD::EndOfEvent().</span><br><span class=\"line\"></span><br><span class=\"line\">    This approach is illustrated in examples&#x2F;basic&#x2F;B2, B4 and extended&#x2F;analysis, extended&#x2F;runAndEvent&#x2F;RE01, etc…</span><br><span class=\"line\"></span><br><span class=\"line\">5.  In DetectorConstruction, volume A can be declared as SensitiveDetector, and one or several pre-defined scorers can be attached to volume A. In this case, neither a SteppingAction nor a spcific VolumeA_SD sensitive detector is needed any longer. It is just necessary to create a dedicated scorer, e.g. MyRunScorer, inherited from G4Run, and handle the HitsCollections within MyRunScorer::RecordEvent(). MyRunScorer itself can be instanciated from RunAction::GenerateRun().</span><br><span class=\"line\"></span><br><span class=\"line\">    This approach is illustrated in examples&#x2F;novice&#x2F;N07, extended&#x2F;runAndEvent&#x2F;RE02.</span><br><span class=\"line\"></span><br><span class=\"line\">6.  A set of build-in scorer-based UI commands allows to perform most possible operations described through the previous Option 5 directly from run-time macros.</span><br><span class=\"line\"></span><br><span class=\"line\">    See example extended&#x2F;runAndEvent&#x2F;RE03.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Detector-Response\"><a href=\"#Detector-Response\" class=\"headerlink\" title=\"Detector Response\"></a>Detector Response</h2><p>对于Geant4模拟数据输出与存储可以参看<code>examples/basic/B4</code>,对于不同的数据输出方式，看该文件夹下的<code>README</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">6- DETECTOR RESPONSE</span><br><span class=\"line\"></span><br><span class=\"line\">  The energy deposit and track lengths of the charged particles are recorded on</span><br><span class=\"line\">  an event by event basis in the Absober and Gap layers.</span><br><span class=\"line\">  </span><br><span class=\"line\">  In order to demonstrate several possible ways of data scoring,</span><br><span class=\"line\">  the example is provided in four variants:</span><br><span class=\"line\">  </span><br><span class=\"line\">  Variant a: User Actions</span><br><span class=\"line\">  </span><br><span class=\"line\">    These 4 quantities are data members of the B4aEventAction class.  </span><br><span class=\"line\">    They are collected step by step in </span><br><span class=\"line\">    B4aSteppingAction::UserSteppingAction(), and passed to the event action</span><br><span class=\"line\">    via two methods: B4aEventAction::AddAbs() and B4aEventAction::AddGap().</span><br><span class=\"line\">  </span><br><span class=\"line\">    In B4aEventAction::EndOfEventAction(), these quantities are printed and </span><br><span class=\"line\">    filled in H1D histograms and ntuple to accumulate statistic and compute </span><br><span class=\"line\">    dispersion.</span><br><span class=\"line\">    </span><br><span class=\"line\">  Variant b: User data object </span><br><span class=\"line\">  </span><br><span class=\"line\">    In order to avoid dependencies between action classes, a user object</span><br><span class=\"line\">    B4bRunData, derived from G4Run, is defined with data members needed </span><br><span class=\"line\">    for the accounted information. </span><br><span class=\"line\">    In order to reduce the number of data members a 2-dimensions array</span><br><span class=\"line\">    is introduced for each quantity.</span><br><span class=\"line\">    Then the quantities are collected step by step in user action classes:</span><br><span class=\"line\">    B4bSteppingAction::UserSteppingAction() and </span><br><span class=\"line\">    B4bEventAction::EndOfEventAction() in a similar way as in variant a. </span><br><span class=\"line\">    </span><br><span class=\"line\">  Variant c: Hits and Sensitive detectors</span><br><span class=\"line\">  </span><br><span class=\"line\">    In this option, the physics quantities are accounted using the hits</span><br><span class=\"line\">    and sensitive detectors framework defined in the Geant4 kernel.  </span><br><span class=\"line\">    The physics quantities are stored in B4cCalorHit via two B4cCalorimeterSD</span><br><span class=\"line\">    objects, one associated with the Absorber volume and another one with Gap</span><br><span class=\"line\">    in B4cDetectorConstruction::ConstructSDandField().</span><br><span class=\"line\">    </span><br><span class=\"line\">    In contrary to the B2 example (Tracker) where a new hit is created</span><br><span class=\"line\">    with each track passing the sensitive volume (in the calorimeter), only one</span><br><span class=\"line\">    hit is created for each calorimeter layer and one more hit to account for</span><br><span class=\"line\">    the total quantities in all layers. In addition to the variants a and b,</span><br><span class=\"line\">    the quantities per each layer are also available in addition to the total </span><br><span class=\"line\">    quantities.</span><br><span class=\"line\">    </span><br><span class=\"line\">  Variant d: Scorer</span><br><span class=\"line\">   </span><br><span class=\"line\">    In this option, the Geant4 scorers which are defined on the top of hits</span><br><span class=\"line\">    and sensitive detectors Geant4 framework are used.  </span><br><span class=\"line\">    In practice this means that the user does not need to define hits and sensitive</span><br><span class=\"line\">    detector classes but rather uses the classes already defined</span><br><span class=\"line\">    in Geant4. In this example, the G4MultiFunctionalDetector with</span><br><span class=\"line\">    G4PSEnergyDeposit and G4PSTrackLength primitive scores are used (see</span><br><span class=\"line\">    B4dDetectorConstruction::ConstructSDandField()).</span><br><span class=\"line\">   </span><br><span class=\"line\">    Also with this approach, the quantities per each layer are available </span><br><span class=\"line\">    in addition to the total quantities.</span><br><span class=\"line\">      </span><br><span class=\"line\"> 7- HISTOGRAMS</span><br><span class=\"line\"></span><br><span class=\"line\">  The analysis tools are used to accumulate statistics and compute the dispersion</span><br><span class=\"line\">  of the energy deposit and track lengths of the charged particles.</span><br><span class=\"line\">  H1D histograms are created in B4[b]RunAction::B4[b]RunAction() for the </span><br><span class=\"line\">  following quantities:</span><br><span class=\"line\">  - Energy deposit in absorber</span><br><span class=\"line\">  - Energy deposit in gap</span><br><span class=\"line\">  - Track length in absorber</span><br><span class=\"line\">  - Track length in gap</span><br><span class=\"line\">  The same values are also saved in an ntuple.</span><br><span class=\"line\"></span><br><span class=\"line\">  The histograms and the ntuple are saved in the output file in a format</span><br><span class=\"line\">  according to a technology selected in B4Analysis.hh, the default in this example</span><br><span class=\"line\">  is ROOT.</span><br><span class=\"line\"></span><br><span class=\"line\">  The accumulated statistic and computed dispersion is printed at the end of </span><br><span class=\"line\">  run, in B4RunAction::EndOfRunAction().</span><br><span class=\"line\">  When running in multi-threading mode, the histograms and the ntuple accumulated </span><br><span class=\"line\">  on threads are merged in a single output file. While merging of histograms is</span><br><span class=\"line\">  performed by default, merging of ntuples is explicitly activated in the B4RunAction </span><br><span class=\"line\">  constructor.</span><br><span class=\"line\"></span><br><span class=\"line\">  The ROOT histograms and ntuple can be plotted with ROOT using the plotHisto.C</span><br><span class=\"line\">  and plotNtuple.C macros.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Geant4-Simulation-Data-ReadOut-by-SensitiveDetctor-HitCollection-Methods\"><a href=\"#Geant4-Simulation-Data-ReadOut-by-SensitiveDetctor-HitCollection-Methods\" class=\"headerlink\" title=\"Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods\"></a>Geant4 Simulation Data ReadOut by SensitiveDetctor + HitCollection Methods</h2><h3 id=\"RunAction\"><a href=\"#RunAction\" class=\"headerlink\" title=\"RunAction\"></a>RunAction</h3><ul>\n<li>RunAction()</li>\n<li>~RunAction()</li>\n<li>BegingOfRunAction(const G4Run *)</li>\n<li>EndOfRunAction(const G4Run *)</li>\n</ul>\n<p>该方式的数据输出与存储参看<code>examples/basic/B4/B4c</code></p>\n<h4 id=\"RunAction-构造函数\"><a href=\"#RunAction-构造函数\" class=\"headerlink\" title=\"RunAction() 构造函数\"></a>RunAction() 构造函数</h4><p>打开和关闭数据存储文件，在RunAction中；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; set printing event number per each event</span><br><span class=\"line\">G4RunManager::GetRunManager()-&gt;SetPrintProgress(1);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Create analysis manager</span><br><span class=\"line\">&#x2F;&#x2F; The choice of analysis technology is done via selectin of a namespace</span><br><span class=\"line\">&#x2F;&#x2F; in B4Analysis.hh</span><br><span class=\"line\">auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\">G4cout &lt;&lt; &quot;Using &quot; &lt;&lt; analysisManager-&gt;GetType() &lt;&lt; G4endl;</span><br><span class=\"line\"></span><br><span class=\"line\">analysisManager-&gt;SetVerboseLevel(1);</span><br><span class=\"line\">analysisManager-&gt;SetNtupleMerging(true);  </span><br><span class=\"line\">&#x2F;&#x2F; Note: merging ntuples is available only with Root output</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Book ntuples\t   </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;Declare ntuples</span><br><span class=\"line\">&#x2F;&#x2F; Creating 1st ntuple</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">analysisManager-&gt;CreateNtuple(&quot;Det&quot;, &quot;xyz in Det&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleSColumn(&quot;SDName&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;EventID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;ParentID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;TrackID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleIColumn(&quot;StepID&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;Edep&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;PosX&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;PosY&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;PosZ&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;GlobalT&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;LocalT&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;ProperT&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;Ekin&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;Velocity&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentX&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentY&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleDColumn(&quot;MomentZ&quot;);</span><br><span class=\"line\">analysisManager-&gt;CreateNtupleSColumn(&quot;ProC&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">analysisManager-&gt;FinishNtuple();</span><br></pre></td></tr></table></figure>\n<p>主要设置模拟运行参数，运行显示、多线程文件合并等；</p>\n<ul>\n<li><code>注意</code><br><code>B4c</code>中将内容目录也在构造函数中创建，文件的创建在BeginOfRunAction()中。</li>\n</ul>\n<h4 id=\"RunAction-析构函数\"><a href=\"#RunAction-析构函数\" class=\"headerlink\" title=\"~RunAction() 析构函数\"></a>~RunAction() 析构函数</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete G4AnalysisManager::Instance(); </span><br></pre></td></tr></table></figure>\n<h4 id=\"BeginOfRunAction-const-G4Run\"><a href=\"#BeginOfRunAction-const-G4Run\" class=\"headerlink\" title=\"BeginOfRunAction(const G4Run*)\"></a>BeginOfRunAction(const G4Run*)</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; Get analysis manager</span><br><span class=\"line\">auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; Open an output file</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">G4String fileName &#x3D; &quot;APNIS&quot;;</span><br><span class=\"line\">analysisManager-&gt;OpenFile(fileName);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>新建储存文件并打开文件</p>\n<h4 id=\"EndOfRunAction-const-G4Run\"><a href=\"#EndOfRunAction-const-G4Run\" class=\"headerlink\" title=\"EndOfRunAction(const G4Run*)\"></a>EndOfRunAction(const G4Run*)</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; save histograms &amp; ntuple</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">analysisManager-&gt;Write();</span><br><span class=\"line\">analysisManager-&gt;CloseFile();</span><br></pre></td></tr></table></figure>\n<p>一个Run结束后的写文件</p>\n<h3 id=\"EventAction\"><a href=\"#EventAction\" class=\"headerlink\" title=\"EventAction\"></a>EventAction</h3><p>采用SD+HitCollection方式存储数据，记录的是一个Event的所有Hit点的数据，那么Geant4中数据的存储就在EventAction中进行；</p>\n<p>当然，如果你采用StepAction方式存储数据，你只需在StepAction中去存储数据就行了；</p>\n<ul>\n<li>EventAction()</li>\n<li>~EventAction()</li>\n<li>BeginOfEventAction(const G4Event*)</li>\n<li>EndOfEventAction(const G4Event*)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">• beginOfEventAction() This method is invoked before converting the primary particles to G4Track</span><br><span class=\"line\">objects. A typical use of this method would be to initialize and&#x2F;or book histograms for a particular event.</span><br><span class=\"line\">• endOfEventAction() This method is invoked at the very end of event processing. It is typically used for</span><br><span class=\"line\">a simple analysis of the processed event. If the user wants to keep the currently processing event until</span><br><span class=\"line\">the end of the current run, the user can invoke fpEventManager-&gt;KeepTheCurrentEvent(); so</span><br><span class=\"line\">that it is kept in G4Run object. This should be quite useful if you simulate quite many events and want to</span><br><span class=\"line\">visualize only the most interest ones after the long execution. Given the memory size of an event and its</span><br><span class=\"line\">contents may be large, it is the user’s responsibility not to keep unnecessary events.</span><br></pre></td></tr></table></figure>\n<h4 id=\"EndOfEventAction-const-G4Event\"><a href=\"#EndOfEventAction-const-G4Event\" class=\"headerlink\" title=\"EndOfEventAction(const G4Event*)\"></a>EndOfEventAction(const G4Event*)</h4><p>在每个Event结束时，将Hit数据存储写到存储文件中。首先获取这个Event有多少个HitCollection,（HitCollection编号HCID在Event开始前获得，在BegingOfEventAction()中定义），然后根据HCID查找对应的HitCollection，根据不同HitCollection的大小提取数据并写入到文件；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">G4HCofThisEvent * HCE &#x3D; event-&gt;GetHCofThisEvent();&#x2F;&#x2F;获得Event结束时，所有的HitCollection</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;根据HitCollecitonID名称，获取不同的CollectionID</span><br><span class=\"line\">if(HCE)&#123;</span><br><span class=\"line\">PrimaryHC &#x3D; (PLANETOCOSPrimaryHitsCollection*)(HCE-&gt;GetHC(primaryCollID));</span><br><span class=\"line\">FluxHC &#x3D; (PLANETOCOSFluxHitsCollection*)(HCE-&gt;GetHC(fluxdetectorCollID));</span><br><span class=\"line\">&#x2F;&#x2F;FluxHC &#x3D; (PLANETOCOSFluxHitsCollection*)(HCE-&gt;GetHC(1));</span><br><span class=\"line\">&#x2F;&#x2F;G4cout&lt;&lt;&quot;ANALYSE1&quot;&lt;&lt;std::endl;</span><br><span class=\"line\">EdepHC &#x3D; (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(edepCollID));</span><br><span class=\"line\">SoilEdepHC &#x3D; (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(edepSoilCollID));</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;EdepHC &#x3D; (PLANETOCOSEdepHitsCollection*)(HCE-&gt;GetHC(2));</span><br><span class=\"line\">PostTrackHC &#x3D; (PLANETOCOSPostTrackHitsCollection*)(HCE-&gt;GetHC(post_trackCollID));</span><br><span class=\"line\">&#x2F;&#x2F;PostTrackHC &#x3D; (PLANETOCOSPostTrackHitsCollection*)(HCE-&gt;GetHC(3));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"BeginOfEventAction-const-G4Event\"><a href=\"#BeginOfEventAction-const-G4Event\" class=\"headerlink\" title=\"BeginOfEventAction(const G4Event*)\"></a>BeginOfEventAction(const G4Event*)</h4><p>在Event开始前的行为，可以写在这个函数中；如下，获得不同HitCollection的编码HCID；注意，不同的HitCollection 对应不同的SD；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"> G4SDManager * SDman &#x3D; G4SDManager::GetSDMpointer();</span><br><span class=\"line\"> if(edepCollID&lt;0||primaryCollID&lt;0||fluxdetectorCollID&lt;0 ||post_trackCollID &lt;0 || edepSoilCollID&lt;0)&#123;</span><br><span class=\"line\"> \tedepCollID &#x3D; SDman-&gt;GetCollectionID(&quot;edepCol&quot;);</span><br><span class=\"line\">edepSoilCollID &#x3D; SDman-&gt;GetCollectionID(&quot;edepSoilCol&quot;);</span><br><span class=\"line\">primaryCollID &#x3D; SDman-&gt;GetCollectionID(&quot;primaryCol&quot;);</span><br><span class=\"line\">  \tfluxdetectorCollID &#x3D; SDman-&gt;GetCollectionID(&quot;detCol&quot;);</span><br><span class=\"line\">post_trackCollID &#x3D; SDman-&gt;GetCollectionID(&quot;post_trackCol&quot;);</span><br><span class=\"line\"> &#125; </span><br></pre></td></tr></table></figure>\n<p>当不考虑不同的SD，对所以SD的detector的响应都一样时采用如下方法读取数据；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">void APNISEventAction::EndOfEventAction(const G4Event* event)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  G4HCofThisEvent * hce &#x3D; event-&gt;GetHCofThisEvent();</span><br><span class=\"line\">  if (!hce) &#123;</span><br><span class=\"line\">      G4ExceptionDescription msg;</span><br><span class=\"line\">      msg &lt;&lt; &quot;No hits collection of this event found.&quot; &lt;&lt; G4endl; </span><br><span class=\"line\">      G4Exception(&quot;APNISEventAction::EndOfEventAction()&quot;,</span><br><span class=\"line\">                  &quot;APNISCode001&quot;, JustWarning, msg);</span><br><span class=\"line\">      return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F;get hit collection</span><br><span class=\"line\">  if(hce)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      size_t nHCE&#x3D;hce-&gt;GetCapacity();</span><br><span class=\"line\">      for(size_t i&#x3D;0;i&lt;nHCE;i++)&#123;&#x2F;&#x2F;多个SD时用</span><br><span class=\"line\">  \tAPNISTrackHitsCollection *HC &#x3D;0;</span><br><span class=\"line\">      HC &#x3D; (APNISTrackHitsCollection *)(hce-&gt;GetHC(i));</span><br><span class=\"line\">      if(HC) OneHitOrder(HC);&#x2F;&#x2F;写数据\t</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">void APNISEventAction::OneHitOrder(APNISTrackHitsCollection*HC)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">  &#x2F;&#x2F;</span><br><span class=\"line\">  &#x2F;&#x2F; Fill histograms &amp; ntuple</span><br><span class=\"line\">  &#x2F;&#x2F;</span><br><span class=\"line\">  &#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; get analysis manager</span><br><span class=\"line\">  auto analysisManager &#x3D; G4AnalysisManager::Instance();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F;analyse</span><br><span class=\"line\">  G4int n_hit &#x3D; HC-&gt;entries();</span><br><span class=\"line\">  for(G4int i&#x3D;0;i&lt;n_hit;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      G4String SDName &#x3D;(*HC)[i]-&gt;GetSDName();</span><br><span class=\"line\">      G4int    EventID&#x3D;(*HC)[i]-&gt;GetEventID();&#x2F;&#x2F;</span><br><span class=\"line\">      G4int    ParentID&#x3D;(*HC)[i]-&gt;GetParentID();&#x2F;&#x2F;</span><br><span class=\"line\">      G4int    TrackID&#x3D;(*HC)[i]-&gt;GetTrackID();&#x2F;&#x2F;</span><br><span class=\"line\">      G4int    StepID&#x3D;(*HC)[i]-&gt;GetStepID();&#x2F;&#x2F;       &#x2F;&#x2F; Total steps number up to now</span><br><span class=\"line\">      G4double fEdep&#x3D;(*HC)[i]-&gt;GetEdep();</span><br><span class=\"line\">      G4ThreeVector fPos&#x3D;(*HC)[i]-&gt;GetPos();</span><br><span class=\"line\">      G4double GlobalTime&#x3D;(*HC)[i]-&gt;GetGlobalTime();&#x2F;&#x2F;                   &#x2F;&#x2F;Time since event is created</span><br><span class=\"line\">      G4double LocalTime&#x3D;(*HC)[i]-&gt;GetLocalTime();&#x2F;&#x2F;                  &#x2F;&#x2F; Time since track is created</span><br><span class=\"line\">      G4double ProperTime&#x3D;(*HC)[i]-&gt;GetProperTime();&#x2F;&#x2F;            &#x2F;&#x2F; Time since track is created (in rest frame of particle)</span><br><span class=\"line\">      G4double Ekin&#x3D;(*HC)[i]-&gt;GetEkin();&#x2F;&#x2F;                    </span><br><span class=\"line\">      G4double Velocity&#x3D;(*HC)[i]-&gt;GetVelocity();&#x2F;&#x2F;</span><br><span class=\"line\">      G4ThreeVector MomentumDirection &#x3D; (*HC)[i]-&gt;GetMomentumDirection();      &#x2F;&#x2F; Direction of momentum </span><br><span class=\"line\">      G4String CreatorProcess&#x3D;(*HC)[i]-&gt;GetCreatorProcess();&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#x2F;&#x2F;塞选思路</span><br><span class=\"line\"></span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      &#x2F;&#x2F;存储数据</span><br><span class=\"line\">      &#x2F;&#x2F; fill ntuple</span><br><span class=\"line\">      G4int Count&#x3D;0;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleSColumn(Count,SDName);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,EventID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,ParentID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,TrackID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleIColumn(Count,StepID);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fEdep&#x2F;MeV);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.x()&#x2F;m);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.y()&#x2F;m);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,fPos.z()&#x2F;m);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,GlobalTime&#x2F;s);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,LocalTime&#x2F;s);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,ProperTime&#x2F;s);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,Ekin&#x2F;MeV);Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,Velocity&#x2F;(m&#x2F;s));Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.x());Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.y());Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleDColumn(Count,MomentumDirection.z());Count++;</span><br><span class=\"line\">      analysisManager-&gt;FillNtupleSColumn(Count,CreatorProcess);Count++;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#x2F;&#x2F; analysisManager-&gt;FillNtupleIColumn(Count,);Count++;</span><br><span class=\"line\">      &#x2F;&#x2F; analysisManager-&gt;FillNtupleDColumn(Count,);Count++;</span><br><span class=\"line\">      &#x2F;&#x2F; analysisManager-&gt;FillNtupleSColumn(Count,);Count++;</span><br><span class=\"line\"></span><br><span class=\"line\">      analysisManager-&gt;AddNtupleRow();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hit\"><a href=\"#Hit\" class=\"headerlink\" title=\"Hit\"></a>Hit</h3><p>参考Book for applicaiton中的4.4 <span class=\"exturl\" data-url=\"aHR0cDovL2dlYW50NC11c2VyZG9jLndlYi5jZXJuLmNoL2dlYW50NC11c2VyZG9jL1VzZXJzR3VpZGVzL0ZvckFwcGxpY2F0aW9uRGV2ZWxvcGVyL2h0bWwvRGV0ZWN0b3IvaGl0Lmh0bWw=\">Hits<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>A hit is a snapshot of the physical interaction of a track in the sensitive region of a detector. In it you can store<br>information associated with a G4Step object. This information can be</p>\n<ul>\n<li>the position and time of the step,</li>\n<li>the momentum and energy of the track,</li>\n<li>the energy deposition of the step,</li>\n<li>geometrical information,</li>\n<li>or any combination of the above.</li>\n</ul>\n<p><code>简而言之</code></p>\n<ul>\n<li>G4中的Hit &lt;==&gt; C++中的vector  ，G4Allocator会给Hit分配内存空间；</li>\n<li>G4中的Map &lt;==&gt; C++中的map</li>\n</ul>\n<h4 id=\"Hit-hh头文件结构\"><a href=\"#Hit-hh头文件结构\" class=\"headerlink\" title=\"Hit.hh头文件结构\"></a>Hit.hh头文件结构</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">APNISTrackHit();</span><br><span class=\"line\">APNISTrackHit(const APNISTrackHit &amp;right);</span><br><span class=\"line\">virtual ~APNISTrackHit();</span><br><span class=\"line\">&#x2F;&#x2F;operator</span><br><span class=\"line\">const APNISTrackHit&amp; operator&#x3D;(const APNISTrackHit &amp;right);</span><br><span class=\"line\">G4int operator &#x3D;&#x3D;(const APNISTrackHit &amp;right)const;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void *operator new(size_t);</span><br><span class=\"line\">inline void operator delete(void *aHit);</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;获取数据</span><br><span class=\"line\">inline void SetSDName(G4String name)&#123;SDName&#x3D;name;&#125;</span><br><span class=\"line\">inline const G4String&amp; GetSDName() const&#123;return SDName;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetEventID(G4int id)&#123;EventID&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetEventID() const&#123;return EventID;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetParentID(G4int id)&#123;ParentID&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetParentID() const&#123;return ParentID;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetTrackID(G4int id)&#123;TrackID&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetTrackID() const&#123;return TrackID;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetStepID(G4int id)&#123;CurrentStepNumber&#x3D;id;&#125;&#x2F;&#x2F;ok</span><br><span class=\"line\">inline G4int GetStepID() const&#123;return CurrentStepNumber;&#125;&#x2F;&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void SetEdep(G4double de)&#123; fEdep &#x3D; de; &#125;</span><br><span class=\"line\">inline G4double GetEdep()&#123; return fEdep; &#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>分配HitCollection存储空间，新建内存空间用完后并释放内存空间；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">typedef G4THitsCollection&lt;APNISTrackHit&gt; APNISTrackHitsCollection;</span><br><span class=\"line\"></span><br><span class=\"line\">extern G4ThreadLocal G4Allocator&lt;APNISTrackHit&gt;* APNISTrackHitAllocator;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">inline void* APNISTrackHit::operator new(size_t)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if(!APNISTrackHitAllocator) APNISTrackHitAllocator &#x3D; new G4Allocator&lt;APNISTrackHit&gt;;</span><br><span class=\"line\">  return (void *)APNISTrackHitAllocator-&gt;MallocSingle();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inline void APNISTrackHit::operator delete(void* aHit)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  APNISTrackHitAllocator-&gt;FreeSingle((APNISTrackHit*)aHit);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Hit-cc\"><a href=\"#Hit-cc\" class=\"headerlink\" title=\"Hit.cc\"></a>Hit.cc</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">APNISTrackHit::APNISTrackHit(const APNISTrackHit &amp;right):G4VHit()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  SDName &#x3D;right.SDName;</span><br><span class=\"line\">  EventID&#x3D;right.EventID;</span><br><span class=\"line\">  ParentID &#x3D;right.ParentID;</span><br><span class=\"line\">  TrackID &#x3D;right.TrackID;</span><br><span class=\"line\">  CurrentStepNumber &#x3D;right.CurrentStepNumber;</span><br><span class=\"line\">  fEdep &#x3D; right.fEdep;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; operator</span><br><span class=\"line\">const APNISTrackHit&amp; APNISTrackHit::operator&#x3D;(const APNISTrackHit &amp;right)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  SDName &#x3D;right.SDName;</span><br><span class=\"line\">  EventID&#x3D;right.EventID;</span><br><span class=\"line\">  ParentID &#x3D;right.ParentID;</span><br><span class=\"line\">  TrackID &#x3D;right.TrackID;</span><br><span class=\"line\">  CurrentStepNumber &#x3D;right.CurrentStepNumber;</span><br><span class=\"line\">  fEdep &#x3D; right.fEdep;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  return *this;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;</span><br><span class=\"line\">G4int APNISTrackHit::operator&#x3D;&#x3D;(const APNISTrackHit &amp;right) const</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  return (this&#x3D;&#x3D;&amp;right) ? 1 : 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"SensitiveDetector\"><a href=\"#SensitiveDetector\" class=\"headerlink\" title=\"SensitiveDetector\"></a>SensitiveDetector</h3><p>SD的作用时根据Step和Track信息，构建Hit信息；SD有以下一些函数：</p>\n<ul>\n<li>ProcessHits()</li>\n<li>Initialize()</li>\n<li>EndOfEvent()</li>\n</ul>\n<h4 id=\"ProcessHits-G4Step-aStep-G4TouchableHistory\"><a href=\"#ProcessHits-G4Step-aStep-G4TouchableHistory\" class=\"headerlink\" title=\"ProcessHits(G4Step* aStep, G4TouchableHistory*)\"></a>ProcessHits(G4Step* aStep, G4TouchableHistory*)</h4><p>在ProcessHits()中将数据存入Hit()申明的存储空间中;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ProcessHits() This method is invoked by G4SteppingManager when a step is composed in the</span><br><span class=\"line\">G4LogicalVolume which has the pointer to this sensitive detector. The first argument of this method is</span><br><span class=\"line\">a G4Step object of the current step. The second argument is a G4TouchableHistory object for the</span><br><span class=\"line\">Readout geometry described in the next section. The second argument is NULL if Readout geometry</span><br><span class=\"line\">is not assigned to this sensitive detector. In this method, one or more G4VHit objects should be constructed if</span><br><span class=\"line\">the current step is meaningful for your detector.</span><br><span class=\"line\">Initialize() This method is invoked at the beginning of each event. The argument of this method is an object</span><br><span class=\"line\">of the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,</span><br><span class=\"line\">can be associated with the G4HCofThisEvent object in this method. The hit collections associated with</span><br><span class=\"line\">the G4HCofThisEvent object during this method can be used for during the event processing</span><br><span class=\"line\">digitization.</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"> G4StepPoint* preStepPoint&#x3D;aStep-&gt;GetPreStepPoint();</span><br><span class=\"line\"> G4StepPoint* postStepPoint&#x3D;aStep-&gt;GetPostStepPoint();</span><br><span class=\"line\"> G4Track* aTrack&#x3D;aStep-&gt;GetTrack();</span><br><span class=\"line\"></span><br><span class=\"line\"> &#x2F;&#x2F; G4double edep &#x3D; aStep-&gt;GetTotalEnergyDeposit();</span><br><span class=\"line\"> &#x2F;&#x2F; if(edep&#x3D;&#x3D;0.) return false;</span><br><span class=\"line\"> G4ParticleDefinition* theparticle&#x3D;aStep-&gt;GetTrack()-&gt;GetDefinition();</span><br><span class=\"line\"> G4String PName&#x3D;theparticle-&gt;GetParticleName();</span><br><span class=\"line\"></span><br><span class=\"line\"> G4TouchableHandle touch1 &#x3D; preStepPoint-&gt;GetTouchableHandle();</span><br><span class=\"line\"> G4VPhysicalVolume* volume &#x3D; touch1-&gt;GetVolume();</span><br><span class=\"line\"></span><br><span class=\"line\">if(preStepPoint-&gt;GetStepStatus()&#x3D;&#x3D;fGeomBoundary)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; if(volume-&gt;GetName()&#x3D;&#x3D;&quot;AirDet&quot;)</span><br><span class=\"line\">    &#x2F;&#x2F;   &#123;</span><br><span class=\"line\">    APNISTrackHit* newHit1 &#x3D; new APNISTrackHit();</span><br><span class=\"line\">    &#x2F;&#x2F; G4cout&lt;&lt;&quot;####----In AirDet----&quot;&lt;&lt;SensitiveDetectorName&lt;&lt;G4endl;</span><br><span class=\"line\">    newHit1-&gt;SetSDName(volume-&gt;GetName());</span><br><span class=\"line\">    newHit1-&gt;SetEventID(G4EventManager::GetEventManager()-&gt;GetConstCurrentEvent()-&gt;GetEventID());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetParentID(aTrack-&gt;GetParentID());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetTrackID(aTrack-&gt;GetTrackID());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetStepID(aTrack-&gt;GetCurrentStepNumber());&#x2F;&#x2F;ok</span><br><span class=\"line\"></span><br><span class=\"line\">    newHit1-&gt;SetEdep( aStep-&gt;GetTotalEnergyDeposit() );</span><br><span class=\"line\">    newHit1-&gt;SetPos( aStep-&gt;GetPreStepPoint()-&gt;GetPosition());</span><br><span class=\"line\">    newHit1-&gt;SetGlobalTime(preStepPoint-&gt;GetGlobalTime());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetLocalTime(preStepPoint-&gt;GetLocalTime());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetProperTime(preStepPoint-&gt;GetProperTime());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetEkin(preStepPoint-&gt;GetKineticEnergy());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetVelocity(preStepPoint-&gt;GetVelocity());&#x2F;&#x2F;ok</span><br><span class=\"line\">    newHit1-&gt;SetMomentumDirection(preStepPoint-&gt;GetMomentumDirection());&#x2F;&#x2F;ok</span><br><span class=\"line\">    const G4VProcess* pcr&#x3D;aTrack-&gt;GetCreatorProcess();</span><br><span class=\"line\">    if(pcr)newHit1-&gt;SetCreatorProcess(pcr-&gt;GetProcessName());</span><br><span class=\"line\">    else newHit1-&gt;SetCreatorProcess(&quot;##&quot;);&#x2F;&#x2F;ok</span><br><span class=\"line\">    &#x2F;&#x2F;数据存储到HitCollection中</span><br><span class=\"line\">    fTrackHitCollection-&gt;insert( newHit1 );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Initialize-G4HCofThisEvent-HCE\"><a href=\"#Initialize-G4HCofThisEvent-HCE\" class=\"headerlink\" title=\"Initialize(G4HCofThisEvent* HCE)\"></a>Initialize(G4HCofThisEvent* HCE)</h4><p>初始化HitsCollection，将数据存入HitsCollection前都需将空间初始化</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Initialize() This method is invoked at the beginning of each event. The argument of this method is an object</span><br><span class=\"line\">of the G4HCofThisEvent class. Hit collections, where hits produced in this particular event are stored,</span><br><span class=\"line\">can be associated with the G4HCofThisEvent object in this method. The hit collections associated with</span><br><span class=\"line\">the G4HCofThisEvent object during this method can be used for during the event processing</span><br><span class=\"line\">digitization.</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">void PLANETOCOSSoilSD::Initialize(G4HCofThisEvent*HCE)</span><br><span class=\"line\">&#123; static int HCID &#x3D; -1;</span><br><span class=\"line\">  </span><br><span class=\"line\">  SoilEdepHitCollection &#x3D; new PLANETOCOSEdepHitsCollection</span><br><span class=\"line\">                                  (SensitiveDetectorName,collectionName[0]);</span><br><span class=\"line\">  </span><br><span class=\"line\">  HCID &#x3D; GetCollectionID(0);</span><br><span class=\"line\">  HCE-&gt;AddHitsCollection(HCID,SoilEdepHitCollection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">void B4cCalorimeterSD::Initialize(G4HCofThisEvent* hce)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x2F;&#x2F; Create hits collection</span><br><span class=\"line\">  fHitsCollection </span><br><span class=\"line\">    &#x3D; new B4cCalorHitsCollection(SensitiveDetectorName, collectionName[0]); </span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; Add this collection in hce</span><br><span class=\"line\">  auto hcID </span><br><span class=\"line\">    &#x3D; G4SDManager::GetSDMpointer()-&gt;GetCollectionID(collectionName[0]);</span><br><span class=\"line\">  hce-&gt;AddHitsCollection( hcID, fHitsCollection ); </span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; Create hits</span><br><span class=\"line\">  &#x2F;&#x2F; fNofCells for cells + one more for total sums </span><br><span class=\"line\">  for (G4int i&#x3D;0; i&lt;fNofCells+1; i++ ) &#123;</span><br><span class=\"line\">    fHitsCollection-&gt;insert(new B4cCalorHit());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">void APNISTrackSD::Initialize(G4HCofThisEvent* HCE)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x2F;&#x2F; static int HCID &#x3D; -1;</span><br><span class=\"line\">  fTrackHitCollection &#x3D; new APNISTrackHitsCollection</span><br><span class=\"line\">                      (SensitiveDetectorName,collectionName[0]); </span><br><span class=\"line\">  &#x2F;&#x2F; if(HCID&lt;0)</span><br><span class=\"line\">  &#x2F;&#x2F; &#123; HCID &#x3D; GetCollectionID(0); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#x2F;&#x2F; get the collection name according to the object(name).</span><br><span class=\"line\">  if(HCID&lt;0)&#123;</span><br><span class=\"line\">    HCID &#x3D; G4SDManager::GetSDMpointer()</span><br><span class=\"line\">      -&gt;GetCollectionID(fTrackHitCollection);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  HCE-&gt;AddHitsCollection(HCID,fTrackHitCollection);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>到这里，数据文件打开，写入；数据的传递与存储就介绍完了；RunAction中实现对数据文件的打开与关闭；EventAction中实现将数据写入到文件，当然，如果你采用SteppingAction方式也可以将数据写入文件（此文不再介绍）；Hit中实现给需要传递的数据分配内存空间；SensitiveDetector中实现将数据传递给Hit分配的内存空间；如果将这个问题表述为送快递的过程，那么RunAction就是告诉快递员有堆快递需要在什么时候开始送，什么时候完全送达；EventAction就是需要送的快递，Hit就是送一份快递，给快递员分配的货箱大小；SensitiveDetector就是告诉快递员将货物放到货箱里；</p>\n<p><img src=\"https://gitee.com/hubery_lee123/image-source/raw/master/Geant4SD_Hit.png\" alt=\"SensitiveDetector+HitsCollection方式存储数据方法示意图\"></p>\n","categories":["Geant4及Root应用"],"tags":["geant4"]},{"title":"hexo结合next主题搭建博客及其版本更新方法","url":"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/","content":"<h1 id=\"🍳此文要解决的问题\"><a href=\"#🍳此文要解决的问题\" class=\"headerlink\" title=\"🍳此文要解决的问题\"></a>🍳此文要解决的问题</h1><ul>\n<li>原博客本地文件库在linux系统下，现在想迁移到windows下。</li>\n<li>原博客使用的next主题版本落后</li>\n<li>如何使配置文件不依赖next主题配置文件，使next主题文档更新更方便？</li>\n</ul>\n<h1 id=\"🚲方法\"><a href=\"#🚲方法\" class=\"headerlink\" title=\"🚲方法\"></a>🚲方法</h1><h2 id=\"🍗博客搭建工具有哪些？\"><a href=\"#🍗博客搭建工具有哪些？\" class=\"headerlink\" title=\"🍗博客搭建工具有哪些？\"></a>🍗博客搭建工具有哪些？</h2><ol>\n<li>hexo  速度快，中文文档和教程比较多</li>\n<li>jekyll  基于ruby语言</li>\n<li>hugo  基于go语言 部署最快</li>\n<li>pelican 基于python语言 快与安全</li>\n</ol>\n<p><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/comp.jpg\" alt></p>\n<h2 id=\"🧨基本原理\"><a href=\"#🧨基本原理\" class=\"headerlink\" title=\"🧨基本原理\"></a>🧨基本原理</h2><pre class=\"mermaid\" style=\"text-align: center;\">\n            graph LR\n            A[模板] --> B[编译]\nC(内容) --> B\nB --> D[网络发布]\n          </pre>\n\n\n\n\n<p><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/frame.png\" alt></p>\n<h2 id=\"🍔我们用哪个工具？\"><a href=\"#🍔我们用哪个工具？\" class=\"headerlink\" title=\"🍔我们用哪个工具？\"></a>🍔我们用哪个工具？</h2><p><strong>在此，作者选择采用hexo工具。原因如下</strong></p>\n<ol>\n<li>作者以前的博客既是使用hexo搭建的，配置和上手较快。</li>\n<li>作者尝试过使用github服务器自带的jekyll，发现生成速度比较慢，除此之外还需要<code>git</code>命令行操作，记住命令行比较麻烦。</li>\n<li>hexo 开发者是台湾人，故而中文社区比较庞大；</li>\n<li>hexo的模板个人感觉比较jekyll模板功能更加丰富。</li>\n</ol>\n<p>*<em>hexo主题模板有很多，配置文件中文文档最全的当属next主题 *</em></p>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20v\">老版本中文配置文档<i class=\"fa fa-external-link-alt\"></i></span>  <code>不推荐使用</code></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=\">next 主题官网说明文档<i class=\"fa fa-external-link-alt\"></i></span> <code>具有官方维护团队，推荐使用该文档进行学习</code></li>\n</ol>\n<h1 id=\"🚆如何将博客的本地文档迁移到windows下\"><a href=\"#🚆如何将博客的本地文档迁移到windows下\" class=\"headerlink\" title=\"🚆如何将博客的本地文档迁移到windows下\"></a>🚆如何将博客的本地文档迁移到windows下</h1><ol>\n<li>将博客文件夹拷贝到windows</li>\n<li>安装<code>node.js</code></li>\n<li>进入博客文件夹，安装npm<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></li>\n<li>安装hexo<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br></pre></td></tr></table></figure></li>\n<li>hexo生成部署即可</li>\n</ol>\n<h1 id=\"👼如何更新next主题\"><a href=\"#👼如何更新next主题\" class=\"headerlink\" title=\"👼如何更新next主题\"></a>👼如何更新next主题</h1><p>1.从github上下载next主题，解压后放置到themes主题下；</p>\n<div class=\"tabs\" id=\"fourth-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#fourth-unique-name-1\">Solution 1</a></li><li class=\"tab\"><a href=\"#fourth-unique-name-2\">Solution 2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"fourth-unique-name-1\"><p>github网页下载并解压</p></div><div class=\"tab-pane\" id=\"fourth-unique-name-2\"><p>在博客根文件夹下，命令行克隆</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure></div></div></div>\n\n<ol start=\"2\">\n<li>修改<code>themes/next/_config.yml</code>配置文件，具体配置方法参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=\">next 主题官网说明文档<i class=\"fa fa-external-link-alt\"></i></span> </li>\n</ol>\n<h1 id=\"😍如何使配置文件不依赖themes-next-config-yml\"><a href=\"#😍如何使配置文件不依赖themes-next-config-yml\" class=\"headerlink\" title=\"😍如何使配置文件不依赖themes/next/_config.yml\"></a>😍如何使配置文件不依赖<code>themes/next/_config.yml</code></h1><p>只需将<code>themes/next/_config.yml</code>中你想修改的内容，拷贝到你的博客根目录下的<code>_config.yml</code>文件中就可以了。</p>\n<p><strong>注意</strong> ：在拷贝到根目录下的<code>_config.yml</code>文件中前，需要添加<code>theme_config:</code>, 拷贝内容为其子内容，注意格式。拷贝内容每行前需要有两个空格，可以通过文档列编辑添加。</p>\n<p>下次更新next版本，只需到next文件夹下，运行命令行<code>get pull</code>即可。</p>\n<h1 id=\"🎈如何自定义配色布局等\"><a href=\"#🎈如何自定义配色布局等\" class=\"headerlink\" title=\"🎈如何自定义配色布局等\"></a>🎈如何自定义配色布局等</h1><h2 id=\"🎩页面布局配置\"><a href=\"#🎩页面布局配置\" class=\"headerlink\" title=\"🎩页面布局配置\"></a>🎩页面布局配置</h2><p>编辑根目录下<code>source\\_data</code>下的配置文档，如<code>styles.styl``variables.styl</code>等即可。</p>\n<h1 id=\"🎃配置成功测试\"><a href=\"#🎃配置成功测试\" class=\"headerlink\" title=\"🎃配置成功测试\"></a>🎃配置成功测试</h1><p>插件测试具体见<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzL3RhZy1wbHVnaW5zLw==\">官方网站说明<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"🧨Label测试\"><a href=\"#🧨Label测试\" class=\"headerlink\" title=\"🧨Label测试\"></a>🧨Label测试</h2><figure class=\"highlight md\"><figcaption><span>label.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% label [class]@Text %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[class] : default | primary | success | info | warning | danger.</span><br><span class=\"line\"><span class=\"code\">          &#x27;@Text&#x27; can be specified with or without space</span></span><br><span class=\"line\"><span class=\"code\">          E.g. &#x27;success @text&#x27; similar to &#x27;success@text&#x27;.</span></span><br><span class=\"line\"><span class=\"code\">          If not specified, default class will be selected.</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; &#123;% label success@adipiscing elit, %&#125; sed &#123;% label info@do eiusmod %&#125;</span><br></pre></td></tr></table></figure>\n<p>Lorem <span class=\"label default\">ipsum</span> <span class=\"label primary\">dolor sit</span> amet, consectetur <span class=\"label success\">adipiscing elit,</span> sed <span class=\"label info\">do eiusmod</span> tempor incididunt ut labore et dolore magna aliqua.</p>\n<p>Ut enim *<span class=\"label warning\">ad</span>* minim veniam, quis <strong><span class=\"label danger\">nostrud</span></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n<p>Duis aute irure dolor in reprehenderit in voluptate <del><span class=\"label default\">velit</span></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<h2 id=\"✨图片组加载配置，3副图两行排列\"><a href=\"#✨图片组加载配置，3副图两行排列\" class=\"headerlink\" title=\"✨图片组加载配置，3副图两行排列\"></a>✨图片组加载配置，3副图两行排列</h2><figure class=\"highlight md\"><figcaption><span>grouppicture.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% grouppicture [group]-[layout] %&#125;&#123;% endgrouppicture %&#125;</span><br><span class=\"line\">&#123;% gp [group]-[layout] %&#125;&#123;% endgp %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[group]  : Total number of pictures to add in the group.</span><br><span class=\"line\">[layout] : Default picture under the group to show.</span><br></pre></td></tr></table></figure>\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 100%;\"><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png\" alt></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png\" alt></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/2020/05/01/hexo%E7%BB%93%E5%90%88next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E5%85%B6%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E7%AE%80%E8%A1%A8.png\" alt></div></div></div></div>\n<h2 id=\"🎄mermaid-测试\"><a href=\"#🎄mermaid-测试\" class=\"headerlink\" title=\"🎄mermaid 测试\"></a>🎄mermaid 测试</h2><figure class=\"highlight md\"><figcaption><span>mermaid.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid type %&#125;</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">type : type of the mermaid chart, visit https://github.com/knsv/mermaid for more information.</span><br></pre></td></tr></table></figure>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            sequenceDiagram\n            participant Alice\nparticipant Bob\nparticipant John as John<br>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n          </pre>\n\n\n\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph LR\n            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n          </pre>\n\n<h2 id=\"🎉tabs测试\"><a href=\"#🎉tabs测试\" class=\"headerlink\" title=\"🎉tabs测试\"></a>🎉tabs测试</h2><p>使用方法</p>\n<figure class=\"highlight md\"><figcaption><span>tabs.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% tabs Unique name, [index] %&#125;</span><br><span class=\"line\">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class=\"line\">Any content (support inline tags too).</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Unique name   : Unique name of tabs block tag without comma.</span><br><span class=\"line\"><span class=\"code\">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class=\"line\"><span class=\"code\">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class=\"line\"><span class=\"code\">                Only for current url of post/page must be unique!</span></span><br><span class=\"line\"><span class=\"code\">[index]       : Index number of active tab.</span></span><br><span class=\"line\"><span class=\"code\">                If not specified, first tab (1) will be selected.</span></span><br><span class=\"line\"><span class=\"code\">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class=\"line\"><span class=\"code\">                Optional parameter.</span></span><br><span class=\"line\"><span class=\"code\">[Tab caption] : Caption of current tab.</span></span><br><span class=\"line\"><span class=\"code\">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class=\"line\"><span class=\"code\">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class=\"line\"><span class=\"code\">                Optional parameter.</span></span><br><span class=\"line\"><span class=\"code\">[@icon]       : FontAwesome icon name (without &#x27;fa-&#x27; at the begining).</span></span><br><span class=\"line\"><span class=\"code\">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class=\"line\"><span class=\"code\">                Optional parameter.</span></span><br></pre></td></tr></table></figure>\n<div class=\"tabs\" id=\"tags\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tags-1\">Tags 1</a></li><li class=\"tab\"><a href=\"#tags-2\">Tags 2</a></li><li class=\"tab\"><a href=\"#tags-3\">Tags 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tags-1\"><p><strong>This is Tab 1.</strong></p>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<p>4-spaces code block:</p>\n<pre><code>nano /etc</code></pre><p>Tagged code block:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">code tag</span><br><span class=\"line\">code tag</span><br><span class=\"line\">code tag</span><br></pre></td></tr></table></figure>\n\n<div class=\"note default\">\n            <p>Note default tag.</p>\n          </div></div><div class=\"tab-pane\" id=\"tags-2\"><p><strong>This is Tab 2.</strong></p>\n<ul>\n<li>Five</li>\n<li>Six</li>\n<li>Seven</li>\n</ul>\n<div class=\"note primary\">\n            <div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Kt7u5kr_P5o\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n          </div></div><div class=\"tab-pane\" id=\"tags-3\"><p><strong>This is Tab 3.</strong></p>\n<div class=\"tabs\" id=\"sub-tabs\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sub-tabs-1\">Sub Tabs 1</a></li><li class=\"tab\"><a href=\"#sub-tabs-2\">Sub Tabs 2</a></li><li class=\"tab\"><a href=\"#sub-tabs-3\">Sub Tabs 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sub-tabs-1\"><p><strong>This is Sub Tab 1.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class=\"note warning\">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>          </div><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n          </div></div><div class=\"tab-pane\" id=\"sub-tabs-2\"><p><strong>This is Sub Tab 2.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class=\"note danger\">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>\n          </div></div><div class=\"tab-pane\" id=\"sub-tabs-3\"><p><strong>This is Sub Tab 3.</strong></p>\n<div class=\"tabs\" id=\"sub-sub-tabs\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sub-sub-tabs-1\">Sub-Sub Tabs 1</a></li><li class=\"tab\"><a href=\"#sub-sub-tabs-2\">Sub-Sub Tabs 2</a></li><li class=\"tab\"><a href=\"#sub-sub-tabs-3\">Sub-Sub Tabs 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sub-sub-tabs-1\"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n          </div></div><div class=\"tab-pane\" id=\"sub-sub-tabs-2\"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class=\"note warning\">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>\n          </div></div><div class=\"tab-pane\" id=\"sub-sub-tabs-3\"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>\n<div class=\"note success\">\n            <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p><div class=\"note warning\">            <p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p><div class=\"note danger\">            <p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>          </div>          </div>\n          </div></div></div></div></div></div></div></div></div></div>\n\n<h2 id=\"🎊Note测试\"><a href=\"#🎊Note测试\" class=\"headerlink\" title=\"🎊Note测试\"></a>🎊Note测试</h2><p>使用方法：</p>\n<figure class=\"highlight md\"><figcaption><span>note.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% note [class] [no-icon] %&#125;</span><br><span class=\"line\">Any content (support inline tags too.io).</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[class]   : default | primary | success | info | warning | danger.</span><br><span class=\"line\">[no-icon] : Disable icon in note.</span><br><span class=\"line\"></span><br><span class=\"line\">All parameters are optional.</span><br></pre></td></tr></table></figure>\n<div class=\"note primary\">\n            <h4 id=\"Primary-Header\"><a href=\"#Primary-Header\" class=\"headerlink\" title=\"Primary Header\"></a>Primary Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n\n<div class=\"note info\">\n            <h3 id=\"Info-Header\"><a href=\"#Info-Header\" class=\"headerlink\" title=\"Info Header\"></a>Info Header</h3><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n\n<div class=\"note success\">\n            <h4 id=\"Success-Header\"><a href=\"#Success-Header\" class=\"headerlink\" title=\"Success Header\"></a>Success Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n<div class=\"note warning\">\n            <h4 id=\"Warning-Header\"><a href=\"#Warning-Header\" class=\"headerlink\" title=\"Warning Header\"></a>Warning Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n<div class=\"note danger\">\n            <h4 id=\"Danger-Header\"><a href=\"#Danger-Header\" class=\"headerlink\" title=\"Danger Header\"></a>Danger Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n          </div>\n<p><code>等等</code></p>\n<h2 id=\"🎋button测试\"><a href=\"#🎋button测试\" class=\"headerlink\" title=\"🎋button测试\"></a>🎋button测试</h2><figure class=\"highlight md\"><figcaption><span>button.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class=\"line\">&lt;!-- Tag Alias --&gt;</span><br><span class=\"line\">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">url     : Absolute or relative path to URL.</span><br><span class=\"line\">text    : Button text. Required if no icon specified.</span><br><span class=\"line\">icon    : FontAwesome icon name (without &#x27;fa-&#x27; at the begining). Required if no text specified.</span><br><span class=\"line\">[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class=\"line\"><span class=\"code\">          Optional parameter.</span></span><br><span class=\"line\"><span class=\"code\">[title] : Tooltip at mouseover.</span></span><br><span class=\"line\"><span class=\"code\">          Optional parameter.</span></span><br></pre></td></tr></table></figure>\n<a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-\"></i>Text\n          </a>\n<a class=\"btn\" href=\"#\" title=\"Title\">\n            <i class=\"fa fa-\"></i>Text & Title\n          </a>\n<p><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Text & Large Icon\n          </a>\n<a class=\"btn\" href=\"#\" title=\"Title\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Text & Large Icon & Title\n          </a></p>\nLorem <a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Lorem\n          </a> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident <a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-home fa-fw fa-lg\"></i>Ipsum\n          </a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<div class=\"note info\">\n            <a class=\"btn\" href=\"#\">            <i class=\"fa fa-home fa-fw\"></i>Text & Icon          </a><a class=\"btn\" href=\"#\" title=\"Title\">            <i class=\"fa fa-home\"></i>          </a><a class=\"btn\" href=\"#\">            <i class=\"fa fa-\"></i>Text          </a><p><a href=\"#\">Link</a></p>\n          </div>\n\n<div class=\"text-center\"><div><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-heading\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-edge\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-times\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"far fa-circle\"></i>\n          </a></div>\n<div><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-italic\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-scribd\"></i>\n          </a></div>\n<div><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-google\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-chrome\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fab fa-opera\"></i>\n          </a><a class=\"btn\" href=\"#\">\n            <i class=\"fa fa-gem fa-rotate-270\"></i>\n          </a></div></div>\n\n<div class=\"text-center\"><a class=\"btn\" href=\"#\" title=\"Previous Chapter (Full Image)\">\n            <i class=\"fa fa-arrow-left fa-fw fa-lg\"></i>Previous Chapter\n          </a> <a class=\"btn\" href=\"#\" title=\"Next Chapter (Label)\">\n            <i class=\"fa fa-arrow-right fa-fw fa-lg\"></i>Next Chapter\n          </a></div>\n\n<div class=\"text-center\"><a class=\"btn\" href=\"https://github.com/theme-next/hexo-theme-next\" title=\"NexT source code\">\n            <i class=\"fab fa-github fa-fw fa-lg\"></i>NexT\n          </a></div>\n\n<h2 id=\"🎏Caniuse测试\"><a href=\"#🎏Caniuse测试\" class=\"headerlink\" title=\"🎏Caniuse测试\"></a>🎏Caniuse测试</h2><figure class=\"highlight md\"><figcaption><span>canius.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% caniuse feature @ periods %&#125;</span><br><span class=\"line\">&lt;!-- Tag Alias --&gt;</span><br><span class=\"line\">&#123;% can feature @ periods %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">feature : Search for the feature you want on https://caniuse.com, then click on the hash sign to the left of the search result heading and you will get the unique name of this feature.</span><br><span class=\"line\">periods : Select the browser versions to display. Supported values: past<span class=\"emphasis\">_1, past_</span>2, past<span class=\"emphasis\">_3, past_</span>4, past<span class=\"emphasis\">_5, current, future_</span>3, future<span class=\"emphasis\">_2, future_</span>1. If this value is empty, the default value &#x27;current&#x27; will be used.</span><br></pre></td></tr></table></figure>\n<iframe data-feature=\"sharedarraybuffer\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=sharedarraybuffer&periods=current&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n<iframe data-feature=\"link-rel-modulepreload\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=link-rel-modulepreload&periods=past_1,past_2,past_3,past_4,past_5&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<h2 id=\"🧧pdf测试\"><a href=\"#🧧pdf测试\" class=\"headerlink\" title=\"🧧pdf测试\"></a>🧧pdf测试</h2><figure class=\"highlight md\"><figcaption><span>pdf.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% pdf url [height] %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[url]    : Relative path to PDF file.</span><br><span class=\"line\">[height] : Optional. Height of the PDF display element, e.g. 800px.</span><br></pre></td></tr></table></figure>\n\n\n<div class=\"pdfobject-container\" data-target=\"https://sci-hub.tw/downloads-ii/2020-03-01/f0/licata2020.pdf\" data-height=\"600px\"></div>\n\n\n\n<h2 id=\"🎞video测试\"><a href=\"#🎞video测试\" class=\"headerlink\" title=\"🎞video测试\"></a>🎞video测试</h2><figure class=\"highlight md\"><figcaption><span>video.js</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% video url %&#125;</span><br></pre></td></tr></table></figure>\n<video src=\"https://assets.mixkit.co/videos/download/mixkit-watering-a-flower-pot-1780.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>","categories":["编程工具学习与应用"],"tags":["hexo","博客搭建","next主题"]},{"title":"💖站点介绍与导航💖","url":"/3000/02/15/%E7%AB%99%E7%82%B9%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AF%BC%E8%88%AA/","content":"<h2 id=\"💢关于此网站\"><a href=\"#💢关于此网站\" class=\"headerlink\" title=\"💢关于此网站\"></a>💢关于此网站</h2><ul>\n<li>这是LiHui的个人博客，该博客主要用于记录工作和学习所遇到的问题和有趣的事情，俗称碎碎念。</li>\n<li>主要内容为编程工具的配置及使用，项目的问题解决及个人见解。</li>\n<li>主要涉及到的知识有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWFudDQud2ViLmNlcm4uY2gvbm9kZS8x\">Geant4<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb290LmNlcm4v\">Root<i class=\"fa fa-external-link-alt\"></i></span>、<a href>机器视觉</a>和<a href>深度学习</a>等领域。</li>\n</ul>\n<h2 id=\"💫关于LiHui\"><a href=\"#💫关于LiHui\" class=\"headerlink\" title=\"💫关于LiHui\"></a>💫关于LiHui</h2><ul>\n<li>LiHui的英文名为Hubery Lee. </li>\n<li>出生年月: 1993年1月   <code>单身</code></li>\n<li>LiHui本硕毕业于哈尔滨工程大学.</li>\n<li>研究领域为核科学与技术，辐射探测与应用.</li>\n<li>爱好音乐、运动和旅游；网易云音乐中毒重度症患者；<code>微博</code>和<code>网易云音乐</code>主页可以通过此博客的侧边栏超链接关注；在此，我也给出我的个人主页链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMjgyMzkyNjU5MC9wcm9maWxlP3JpZ2h0bW9kPTEmd3ZyPTYmbW9kPXBlcnNvbmluZm8maXNfYWxsPTE=\">微博<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTM1NzY5MjU0Mg==\">网易云音乐<i class=\"fa fa-external-link-alt\"></i></span>，欢迎交朋友。</li>\n<li>目前工作单位:  中国辐射防护研究院</li>\n</ul>\n<p>详细简历请查看 <a href=\"https://hubery-lee.github.io/about/\">关于</a></p>\n<h2 id=\"🏡相关项目\"><a href=\"#🏡相关项目\" class=\"headerlink\" title=\"🏡相关项目\"></a>🏡相关项目</h2><ul>\n<li><a href=\"https://hubery-lee.github.io/archives/\">归档资料</a></li>\n<li><a href=\"https://hubery-lee.github.io/tags/\">云图与分类标签</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h1YmVyeS1MZWUvR2VhbnQ0LWppYW9jaGVuZw==\">Geant4 入门哔哩哔哩视频教程代码<i class=\"fa fa-external-link-alt\"></i></span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMTk5MzEzNTI=\">视频连接<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ob3ctdG8tdXNlLXNwaGlueC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">如何使用sphinx编写技术文档<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW5kYm9va2ZvcmdpdC5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3Qv\">Git使用手册<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n"},{"title":"💖个人简历💘","url":"/about/index.html","content":"<div class=\"pdfobject-container\" data-target=\"resume_lihui.pdf\" data-height=\"600px\"></div>\n\n<h2 id=\"💢关于此网站\"><a href=\"#💢关于此网站\" class=\"headerlink\" title=\"💢关于此网站\"></a>💢关于此网站</h2><ul>\n<li>这是LiHui的个人博客，该博客主要用于记录工作和学习所遇到的问题和有趣的事情，俗称碎碎念。</li>\n<li>主要内容为编程工具的配置及使用，项目的问题解决及个人见解。</li>\n<li>本站提供了geant和root学习和工作经常用链接。</li>\n</ul>\n<h2 id=\"💫关于LiHui\"><a href=\"#💫关于LiHui\" class=\"headerlink\" title=\"💫关于LiHui\"></a>💫关于LiHui</h2><ul>\n<li>LiHui的英文名为Hubery Lee. </li>\n<li>出生年月: 1993年1月   <code>单身</code></li>\n<li>LiHui本硕毕业于哈尔滨工程大学.</li>\n<li>研究领域为核科学与技术，辐射探测与应用.</li>\n<li>爱好音乐、运动和旅游；网易云音乐中毒重度症患者；<code>微博</code>和<code>网易云音乐</code>主页可以通过此博客的侧边栏超链接关注；在此，我也给出我的个人主页链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMjgyMzkyNjU5MC9wcm9maWxlP3JpZ2h0bW9kPTEmd3ZyPTYmbW9kPXBlcnNvbmluZm8maXNfYWxsPTE=\">微博<i class=\"fa fa-external-link-alt\"></i></span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTM1NzY5MjU0Mg==\">网易云音乐<i class=\"fa fa-external-link-alt\"></i></span>，欢迎交朋友。</li>\n<li>目前工作单位:  中国辐射防护研究院</li>\n</ul>\n<h2 id=\"💢About-this-website\"><a href=\"#💢About-this-website\" class=\"headerlink\" title=\"💢About this website\"></a>💢About this website</h2><ul>\n<li>This is Hubery-Lee&#39;s personal blog, which records problems and solutions in Hubery&#39;s work and learning.</li>\n<li>The main contents are the configuration and use of programming tools, the problem solving methods and personal opinions to the solution in his simulation projects.</li>\n<li>This site provides links for Hubery&#39;s daily learning and work.</li>\n</ul>\n<h2 id=\"💫About-LiHui\"><a href=\"#💫About-LiHui\" class=\"headerlink\" title=\"💫About LiHui\"></a>💫About LiHui</h2><ul>\n<li><p>LiHui&#39;s English name is Hubery Lee.</p>\n</li>\n<li><p>birthday: January,1993 <code>single</code></p>\n</li>\n<li><p>Achieved bacholar degree and master degree in Harbin Engineering University.</p>\n</li>\n<li><p>Devoted to nuclear science and technology simulation research.</p>\n</li>\n<li><p>Love music, sports and Tourism. Addicted to netease cloud music; You can follow my <code>weibo</code> and <code>netease cloud music</code> from siderbar links of this blog. I also off my weibo and netease cloud music links here. <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMjgyMzkyNjU5MC9wcm9maWxlP3JpZ2h0bW9kPTEmd3ZyPTYmbW9kPXBlcnNvbmluZm8maXNfYWxsPTE=\">weibo<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTM1NzY5MjU0Mg==\">netease cloud music<i class=\"fa fa-external-link-alt\"></i></span>. I am glad to be friends with you.</p>\n</li>\n<li><p>Institute: Institute for Radiation Protection</p>\n</li>\n</ul>\n"},{"title":"archives","url":"/archives/index.html","content":""},{"title":"categories","url":"/categories/index.html","content":""},{"title":"tags","url":"/tags/index.html","content":""}]