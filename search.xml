<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hexo Next theme Setting</title>
      <link href="/2018/09/15/Hexo-Next-theme-Setting/"/>
      <url>/2018/09/15/Hexo-Next-theme-Setting/</url>
      <content type="html"><![CDATA[<p><a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">referrence site1</a><br><a href="https://blog.csdn.net/w_ngzeqi/article/details/73863543" target="_blank" rel="noopener">referrence site2</a>  文章版权声明、文章加密访问、字数、时长、访问量<br><a href="https://blog.csdn.net/qq_32454537/article/details/79482896" target="_blank" rel="noopener">referrence site3</a> 侧边栏社交小图标设置、设置网站图标、评论功能插件配置<br><a href="https://blog.csdn.net/manmandong123/article/details/80739126" target="_blank" rel="noopener">referrence site3</a> 添加评论功能<a href="https://blog.csdn.net/qq_32454537/article/details/79482879" target="_blank" rel="noopener">another site</a><br><a href="https://blog.csdn.net/lanuage/article/details/78991798" target="_blank" rel="noopener">Somebody’s blog Note</a> 站外分享 <a href="https://asdfv1929.github.io/categories/GitBlog/" target="_blank" rel="noopener">another site</a><br><a href="https://blog.csdn.net/qq_30242609/article/details/54799019" target="_blank" rel="noopener">referrence sit4</a> 修改主题配色</p><p>对于文章版权声明功能，可以直接去next主题下的<code>_config.yml</code>中开启，个人认为抱着开源开放特性，这个功能并不是很重要；</p><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>1.配置加密功能，打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码：<br><img src="/2018/09/15/Hexo-Next-theme-Setting/password.png" title="插入位置"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在scaffolds文件夹post.md文件中，加入<code>password:</code>,新建博客将有如下的形式文件头；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">description:</span><br><span class="line">password: </span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>2.设置给文章设置访问密码，经过以上的配置，<code>hexo new &quot;newblog&quot;</code>在<code>password: #密码</code>设置密码；也可以在以往的文章设置加密访问，只需在文章头中加入<code>password: #密码</code>即可；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The use of gnome-screenshot <span class="built_in">command</span></span><br><span class="line">date: 2018-09-11 16:12:50</span><br><span class="line">tags: [linux tool]</span><br><span class="line">categories: linux tool</span><br><span class="line">description: gnome-screenshot <span class="built_in">command</span></span><br><span class="line">password: pass</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>如，要访问这篇The use of gnome-screenshot command文章就需要输入密码pass;</p><h2 id="访问量设置"><a href="#访问量设置" class="headerlink" title="访问量设置"></a>访问量设置</h2><p>采用busuanzi 和leancloud设置，在themes的文件夹下<code>_config.yml</code>中打开busuanzi配置，如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="literal">true</span></span><br><span class="line">  site_uv_header: &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="literal">true</span></span><br><span class="line">  site_pv_header: &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="literal">false</span></span><br><span class="line">  page_pv_header: &lt;i class=<span class="string">"fa fa-file-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure></p><p>其中，<code>site_uv</code>指的是user visitors,<code>site_pv</code>指的是passager visitors; <code>&lt;i class=&quot;fa fa-file-eye&quot;&gt;&lt;/i&gt;</code>设置的是显示图标</p><p>对于文章的阅读量也可采用leancloud的应用来设置，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line">leancloud_visitors:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  app_id:  <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  app_key:   <span class="comment">#&lt;app_key&gt;</span></span><br><span class="line">``` </span><br><span class="line">相对于busuanzi统计计数方法，leancloud方法能通过leancloud账户管理，并且leancloud统计的阅读量能够在首页显示；busuanzi统计数据无法在首页显示；leancloud应用的配置可以参考这篇文章 [参考文章链接](https://www.meiwen.com.cn/subject/yssswftx.html)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 评论功能设置</span></span><br><span class="line"></span><br><span class="line">评论功能采用leancloud valine应用，国内其他的友言、畅言和以及来必力都不能匿名评论，国外的gitalk,gitment以github用户授权评论，Hypercomments，Disqus等都被国内墙的厉害；只有国内leancloud应用具有匿名评论功能；在next主题下的`_config.yml`配置如下:</span><br><span class="line">``` bash</span><br><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid:  ooozwlclX00aJabPvk1WTj7J-gzGzoHsz <span class="comment"># your leancloud application appid</span></span><br><span class="line">  appkey:  CnXrRUVdUdMXgEvGbdolWGYX <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  notify: <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  verify: <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: Just go go <span class="comment"># comment box placeholder</span></span><br><span class="line">  avatar: mm <span class="comment"># gravatar style</span></span><br><span class="line">  guest_info: nick,mail,link <span class="comment"># custom comment header</span></span><br><span class="line">  pageSize: 10 <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure></p><h2 id="站外分享功能"><a href="#站外分享功能" class="headerlink" title="站外分享功能"></a>站外分享功能</h2><p>具体的配置，可以参考文章开头列出的参考链接；在此，我只是用next主题模版，不作具体深入配置，工作中心放在作笔记上；在<code>_config.yml</code>中，打开百度分享选项即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Share</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    button | slide</span></span><br><span class="line"><span class="comment"># Warning: Baidu Share does not support https.</span></span><br><span class="line">baidushare:</span><br><span class="line">  <span class="built_in">type</span>: slide</span><br></pre></td></tr></table></figure></p><h2 id="主题配色修改"><a href="#主题配色修改" class="headerlink" title="主题配色修改"></a>主题配色修改</h2><p>修改<code>themes\next\source\css\_variables\base.styl</code>文件；具体配色，暂时没有调整</p><h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p>next主题的网站小图标采用FrontAwesome插件<a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">frontawesome icon site</a>;在实际应用中，在frontawesome网站搜索图标，在next主题的配置文件中用名字直接应用就行了，举例如下；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links.</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target permalink.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/Hubery-Lee || github</span><br><span class="line">  Runoob: https://www.runoob.com || cube</span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  icons_only: <span class="literal">false</span></span><br><span class="line">  transition: <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>以上脚本中的<code>github,cube</code>即是在frontawesome上搜索到的图标名称；同样，links的图标也是这么配置的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line">links_icon: globe</span><br><span class="line">links_title: Index</span><br><span class="line"><span class="comment">#links_layout: block</span></span><br><span class="line">links_layout: inline</span><br><span class="line"></span><br><span class="line">links:</span><br><span class="line">  Geant4: http://geant4.web.cern.ch/</span><br><span class="line">  Root: https://root.cern.ch/</span><br></pre></td></tr></table></figure></p><p>其中，<code>globe</code>即是frontawesome搜索到的图标名称；</p><h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>若要对网站图标进行修改，只需将你要改的图标拷贝到<code>themes/next/source/images/</code>文件夹下，并修改<code>themes/next/_config.yml</code>文件中的，favicon后面对应的图片文件名即可；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For example, you put your favicons into `hexo-site/source/images` directory.</span></span><br><span class="line"><span class="comment"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span></span><br><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure></p><h2 id="头部顶栏背景颜色或图片设置"><a href="#头部顶栏背景颜色或图片设置" class="headerlink" title="头部顶栏背景颜色或图片设置"></a>头部顶栏背景颜色或图片设置</h2><p>1.在themes/next/source/css/_schemes/Mist/_header.styl中以下代码中修改颜色<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: <span class="variable">$blue</span>-bright; &#125;</span><br></pre></td></tr></table></figure></p><p>2.也可改为背景图片，背景图片的添加如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: url(<span class="string">'../image/background.jpg'</span>); &#125;</span><br></pre></td></tr></table></figure></p><p>将你要作为背景的图片<code>background.jpg</code>放到<code>Hexo/source/images/</code>文件夹下；当然你也可以采用图片网址链接，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.header &#123; background: url(<span class="string">'http://xx.xx.xx.com/hexo/image/header-backgroud.jpg'</span>); &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>icon download site</title>
      <link href="/2018/09/14/icon-download-site/"/>
      <url>/2018/09/14/icon-download-site/</url>
      <content type="html"><![CDATA[<h2 id="icon-download-site"><a href="#icon-download-site" class="headerlink" title="icon download site"></a>icon download site</h2><p><a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">icon download site</a></p>]]></content>
      
      <categories>
          
          <category> 素材 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Geant4 and Root Class Index</title>
      <link href="/2018/09/14/Geant4-and-Root-Class-Index/"/>
      <url>/2018/09/14/Geant4-and-Root-Class-Index/</url>
      <content type="html"><![CDATA[<h2 id="Geant4-Class-Index"><a href="#Geant4-Class-Index" class="headerlink" title="Geant4 Class Index"></a>Geant4 Class Index</h2><p><a href="http://www.apc.univ-paris7.fr/~franco/g4doxy4.10/html/annotated.html" target="_blank" rel="noopener">Geant4 Class Index</a></p><h2 id="Root-Class-Index"><a href="#Root-Class-Index" class="headerlink" title="Root Class Index"></a>Root Class Index</h2><p><a href="https://root.cern/doc/master/modules.html" target="_blank" rel="noopener">Root Class Index</a></p>]]></content>
      
      <categories>
          
          <category> Geant4及Root应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> geant4 </tag>
            
            <tag> root </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git Remote Repository UserGuide </title>
      <link href="/2018/09/13/Git-Remote-Repository-UserGuide/"/>
      <url>/2018/09/13/Git-Remote-Repository-UserGuide/</url>
      <content type="html"><![CDATA[<h2 id="git-remote-repository-Using"><a href="#git-remote-repository-Using" class="headerlink" title="git remote repository Using"></a>git remote repository Using</h2><p><a href="https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8" target="_blank" rel="noopener">reference site</a></p><h3 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote  <span class="comment">#显示仓库信息</span></span><br><span class="line">$ git remote --version <span class="comment">#显示对应的克隆地址</span></span><br><span class="line">$ git remote -v   <span class="comment">#显示对应的克隆地址</span></span><br></pre></td></tr></table></figure><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add pb git://github.com/paulboone/ticgit.git  <span class="comment">#git remote add [shortname] [url]</span></span><br></pre></td></tr></table></figure><h3 id="远程仓库抓取数据"><a href="#远程仓库抓取数据" class="headerlink" title="远程仓库抓取数据"></a>远程仓库抓取数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch pb <span class="comment"># git fetch [remote-name]</span></span><br></pre></td></tr></table></figure><h3 id="推送数据到远程仓库"><a href="#推送数据到远程仓库" class="headerlink" title="推送数据到远程仓库"></a>推送数据到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master <span class="comment">#git push [remote-name] [branch-name]</span></span><br></pre></td></tr></table></figure><h3 id="查看远程仓库信息"><a href="#查看远程仓库信息" class="headerlink" title="查看远程仓库信息"></a>查看远程仓库信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show origin  <span class="comment">#git remote show [remote-name]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>The use of gnome-screenshot command</title>
      <link href="/2018/09/11/The-use-of-gnomescreenshot-command/"/>
      <url>/2018/09/11/The-use-of-gnomescreenshot-command/</url>
      <content type="html"><![CDATA[<h2 id="gnome-screenshot-command"><a href="#gnome-screenshot-command" class="headerlink" title="gnome-screenshot command"></a>gnome-screenshot command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ gnome-screenshot  <span class="comment">#截取整个屏幕</span></span><br><span class="line">$ gnome-screenshot -w <span class="comment">#截取当前活动窗口</span></span><br><span class="line">$ gnome-screenshot -a <span class="comment">#选择截图区域</span></span><br><span class="line">$ gnome-screenshot -d=5 <span class="comment">#延迟5妙截图</span></span><br><span class="line">$ gnome-screenshot -i <span class="comment">#交互模式使用截屏工具</span></span><br></pre></td></tr></table></figure><p>当然，遇到不会用gnome-screenshot命令时，最好的方法是问linux系统自带的manual<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man gnome-screenshot</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux tool </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>geant4DetectorConstruction</title>
      <link href="/2018/09/11/geant4DetectorConstruction/"/>
      <url>/2018/09/11/geant4DetectorConstruction/</url>
      <content type="html"><![CDATA[<h2 id="geant-detector-construction"><a href="#geant-detector-construction" class="headerlink" title="geant detector construction"></a>geant detector construction</h2><ol><li>几何旋转符合<code>左手法则</code>及RotationMatrix的使用<br>经过验证geant4中的rotate符合<code>左手法则</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">G4RotationMatrix *rot=new G4RotationMatrix;</span><br><span class="line">rot-&gt;rotateX(90*degree);</span><br><span class="line">rot-&gt;rotateY(90*degree);</span><br><span class="line">rot-&gt;rotateZ(90*degree);</span><br></pre></td></tr></table></figure><p>注意，再次对rot重复赋值无效，如对上述代码再作如下操作<code>rot-&gt;rotateX(180*degree)</code>,该操作将无效，不会改变之前的rot；<br>那么，要对rot再次赋值该怎么办呢？如下：只需在再次赋值前加<code>rot =new G4RotationMatrix</code>即可；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">  G4RotationMatrix* rotationMatrix_X = new G4RotationMatrix;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(G4int x_col_num = 0; x_col_num &lt;=NBD_colNb; x_col_num++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x_col_num==0)&#123;  // the center colume</span><br><span class="line">      NBDx = NBDx0;</span><br><span class="line">      <span class="keyword">for</span>(G4int y_row_num = 0; y_row_num &lt;=NBD_rowNb; y_row_num++ )&#123;</span><br><span class="line">// NBDx = NBDx0;</span><br><span class="line">NBDy = NBDy0+R*sin(y_row_num*theta);</span><br><span class="line">NBDz = NBDz0+R*(1-cos(y_row_num*theta));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(y_row_num==0)&#123;</span><br><span class="line">  // center position</span><br><span class="line">  rotationMatrix_X = new G4RotationMatrix;</span><br><span class="line">  rotationMatrix_X-&gt;rotateX(y_row_num*theta);</span><br><span class="line"></span><br><span class="line">  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class="line">    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)</span><br><span class="line">    logicAssembleNBD,                    //its logical volume</span><br><span class="line">    <span class="string">"AssembleNBD"</span>,         //its name</span><br><span class="line">    expHall_logV,          //its mother  volume</span><br><span class="line">    <span class="literal">false</span>,                 //no boolean operation</span><br><span class="line">    0,                     //copy number</span><br><span class="line">    <span class="literal">true</span>);                    //overlaps checking    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  //+y++</span><br><span class="line">  rotationMatrix_X = new G4RotationMatrix;</span><br><span class="line">  rotationMatrix_X-&gt;rotateX(-y_row_num*theta);</span><br><span class="line"></span><br><span class="line">  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class="line">    G4ThreeVector(NBDx,NBDy,NBDz),       //at (0,0,0)</span><br><span class="line">    logicAssembleNBD,                    //its logical volume</span><br><span class="line">    <span class="string">"AssembleNBD"</span>,         //its name</span><br><span class="line">    expHall_logV,          //its mother  volume</span><br><span class="line">    <span class="literal">false</span>,                 //no boolean operation</span><br><span class="line">    0,                     //copy number</span><br><span class="line">    <span class="literal">true</span>);               // overlaps checking </span><br><span class="line">  //-y++</span><br><span class="line">  rotationMatrix_X = new G4RotationMatrix;</span><br><span class="line">  rotationMatrix_X-&gt;rotateX(y_row_num*theta);</span><br><span class="line">  new G4PVPlacement(rotationMatrix_X,                      //no rotation</span><br><span class="line">    G4ThreeVector(NBDx,-NBDy,NBDz),       //at (0,0,0)</span><br><span class="line">    logicAssembleNBD,                    //its logical volume</span><br><span class="line">    <span class="string">"AssembleNBD"</span>,         //its name</span><br><span class="line">    expHall_logV,          //its mother  volume</span><br><span class="line">    <span class="literal">false</span>,                 //no boolean operation</span><br><span class="line">    0,                     //copy number</span><br><span class="line">    <span class="literal">true</span>);               // overlaps checking    </span><br><span class="line">&#125;</span><br><span class="line">      &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><ol start="2"><li>G4VParameterisation()的使用</li></ol><ul><li><code>ComputeTransformation</code> defines where one of the copies is placed</li><li><code>ComputeDimensions</code> defines the size of one copy, and a constructor that initializes any member variables that are required.</li></ul><p>G4VParameterisation的具体应用可参看Basics/B2/B2b</p>]]></content>
      
      <categories>
          
          <category> Geant4及Root应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> geant4 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>G4Color选项</title>
      <link href="/2018/09/09/G4Color%E9%80%89%E9%A1%B9/"/>
      <url>/2018/09/09/G4Color%E9%80%89%E9%A1%B9/</url>
      <content type="html"><![CDATA[<h2 id="颜色的配置"><a href="#颜色的配置" class="headerlink" title="颜色的配置"></a>颜色的配置</h2><p>Geant4中的颜色配置由红、绿、蓝、是否透明四个构成；red、green、blue、alpha(opacity/opaque)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">G4Colour::G4Colour ( G4double  r = 1.0,</span><br><span class="line">     G4double  g = 1.0,</span><br><span class="line">     G4double  b = 1.0,</span><br><span class="line">                     G4double  a = 1.0);</span><br><span class="line">                 //0&lt;=red, green, blue &lt;= 1.0</span><br></pre></td></tr></table></figure></p><h2 id="颜色的实例化应用"><a href="#颜色的实例化应用" class="headerlink" title="颜色的实例化应用"></a>颜色的实例化应用</h2><p>1.颜色配置实例化<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">G4Colour  white  ();  //white</span><br><span class="line">G4Colour  white  (1.0,1.0,1.0);  //white</span><br><span class="line">G4Colour  gray   (0.5,0.5,0.5);  //gray</span><br><span class="line">G4Colour  black  (0.0,0.0,0.0); //black</span><br><span class="line">G4Colour  red    (1.0,0.0,0.0);  //red</span><br><span class="line">G4Colour  green  (0.0,1.0,0.0);  //green</span><br><span class="line">G4Colour  blue   (0.0,0.0,1.0);  //blue</span><br><span class="line">G4Colour  cyan   (0.0,1.0,1.0); //cyan</span><br><span class="line">G4Colour  magenta(1.0,0.0,1.0);  //magenta</span><br><span class="line">G4Colour  yellow (1.0,1.0,0.0);  //yellow</span><br></pre></td></tr></table></figure></p><p>example<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G4VisAttributes* Assemble_VisAtt= new G4VisAttributes(G4Colour(0.0,0.0,1.0));//blue</span><br></pre></td></tr></table></figure></p><p>2.静态公用数据函数实例化<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">static const G4Colour&amp; White   ();</span><br><span class="line">static const G4Colour&amp; Gray    ();</span><br><span class="line">static const G4Colour&amp; Grey    ();</span><br><span class="line">static const G4Colour&amp; Black   ();</span><br><span class="line">static const G4Colour&amp; Red     ();</span><br><span class="line">static const G4Colour&amp; Green   ();</span><br><span class="line">static const G4Colour&amp; Blue    ();</span><br><span class="line">static const G4Colour&amp; Cyan    ();</span><br><span class="line">static const G4Colour&amp; Magenta ();</span><br><span class="line">static const G4Colour&amp; Yellow  ();</span><br></pre></td></tr></table></figure></p><p>example<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G4Colour myRed(G4Colour::Red());</span><br></pre></td></tr></table></figure></p><p>实例化Colour对象后，可以采用如下方式获得函数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">G4double G4Colour::GetRed   () const;</span><br><span class="line">G4double G4Colour::GetGreen () const;</span><br><span class="line">G4double G4Colour::GetBlue  () const;</span><br></pre></td></tr></table></figure></p><h2 id="Colour-Map的应用"><a href="#Colour-Map的应用" class="headerlink" title="Colour Map的应用"></a>Colour Map的应用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">G4StringG4Colour</span><br><span class="line">---------------------------------------</span><br><span class="line">whiteG4Colour::White()</span><br><span class="line">grayG4Colour::Gray()</span><br><span class="line">greyG4Colour::Grey()</span><br><span class="line">blackG4Colour::Black()</span><br><span class="line">redG4Colour::Red()</span><br><span class="line">greenG4Colour::Green()</span><br><span class="line">blueG4Colour::Blue()</span><br><span class="line">cyanG4Colour::Cyan()</span><br><span class="line">magentaG4Colour::Magenta ()</span><br><span class="line">yellowG4Colour::Yellow ()</span><br></pre></td></tr></table></figure><p>Colours的检索可以采用如下方式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool G4Colour::GetColour(const G4String&amp; key, G4Colour&amp; result)</span><br></pre></td></tr></table></figure></p><p>example<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">G4Colour myColour(G4Colour::Black());</span><br><span class="line"><span class="keyword">if</span> (G4Colour::GetColour(<span class="string">"red"</span>, myColour)) &#123;</span><br><span class="line">// Successfully retrieved colour <span class="string">"red"</span>. myColour is now red</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">// Colour did not exist <span class="keyword">in</span> map. myColour is still black</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Geant4及Root应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Geant4 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Add menubar and search function to hexo blog</title>
      <link href="/2018/09/09/How-to-add-menubar-and-search-function-to-blog-with-hexo/"/>
      <url>/2018/09/09/How-to-add-menubar-and-search-function-to-blog-with-hexo/</url>
      <content type="html"><![CDATA[<h2 id="Add-Menubar"><a href="#Add-Menubar" class="headerlink" title="Add Menubar"></a>Add Menubar</h2><p>In the theme folder, we can find the following scripts in the _config.yml file.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line">menu_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>The default menubars are home and archives. I want to add tags, categories and about to menubar. The problems appear when I only note off the options in the above scripts.</p><p>After investigation about this problem, I find the ansower in this site  <a href="http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml</a> <code>method one to cite website</code></p><p><a href="http://www.360doc.com/content/18/0521/13/14715637_755685918.shtml" target="_blank" rel="noopener">this site</a>  <code>method two to cite website</code></p><p>Actually, we should add folder with commond <code>hexo new page  menubar_name</code>, then corresponding folders will appear in the source folder which is the site configure source folder. Then add configure information in the correspongding index.md.<br>Take tags for example.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>We will see follow information in index.md.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-09-09 13:34:49</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>Then we add <code>type: &quot;tags&quot;</code> to the index.md<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-09-09 13:34:49</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>Similar methods are used to add categories and about to menubar.</p><h2 id="Add-local-search-function-to-menubar"><a href="#Add-local-search-function-to-menubar" class="headerlink" title="Add local search function to menubar"></a>Add local search function to menubar</h2><ol><li>install <code>hexo-generator-search</code>, hexo-theme-next search function depend on this package.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><ol start="2"><li>active the local search configure in theme configure file <code>_config.yml</code>.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">#false modified by hubery lee @2018/9/9</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo中插入图片测试</title>
      <link href="/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/"/>
      <url>/2018/09/01/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/</url>
      <content type="html"><![CDATA[<h2 id="hexo-站点配置"><a href="#hexo-站点配置" class="headerlink" title="hexo 站点配置"></a>hexo 站点配置</h2><p>设置_config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-asset-image --save</span><br><span class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image -- save  <span class="comment">#该方法安装测试成功</span></span><br></pre></td></tr></table></figure><h2 id="图片引用"><a href="#图片引用" class="headerlink" title="图片引用"></a>图片引用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"newblog"</span></span><br><span class="line"> </span><br><span class="line">会有newblog.md和newblog文件夹，将需要引用的图片放到文件夹内</span><br></pre></td></tr></table></figure><p>在newblog.md中图片的引用</p><p>1.标签引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ &#123;% asset_path slug %&#125;</span><br><span class="line">$ &#123;% asset_img slug [title] %&#125;</span><br><span class="line">$ &#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>/2018/09/01/图片测试/gitProcess.png<img src="/2018/09/01/图片测试/gitProcess.png" title="第二种方法"><a href="/2018/09/01/图片测试/gitProcess.png" title="第三种方法">第三种方法</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path gitProcess.png %&#125;</span><br><span class="line">&#123;% asset_img gitProcess.png 第二种方法 %&#125;</span><br><span class="line">&#123;% asset_link  https://image.baidu.com/search/detail?ct=503316480&amp;z=&amp;tn=baiduimagedetail&amp;ipn=d&amp;word=%E7%8C%AB%E5%A4%B4%E9%B9%B0&amp;step_word=&amp;ie=utf-8&amp;<span class="keyword">in</span>=&amp;cl=2&amp;lm=-1&amp;st=-1&amp;cs=2028628767,61876418&amp;os=4058183028,3413382511&amp;pn=0&amp;rn=1&amp;di=196345561830&amp;ln=1940&amp;fr=&amp;fmq=1535807535286_R&amp;fm=&amp;ic=0&amp;s=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=&amp;height=&amp;face=undefined&amp;is=0,0&amp;istype=2&amp;ist=&amp;jit=&amp;bdtype=0&amp;pi=0&amp;gsm=0&amp;objurl=http%3A%2F%2Fimg5q.duitang.com%2Fuploads%2Fblog%2F201502%2F08%2F20150208122643_s2BMS.jpeg&amp;rpstart=0&amp;rpnum=0&amp;adpicid=0&amp;ctd=1535807540714^3_1354X569%1 owl %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% asset_link  gitProcess.png 第三种方法 %&#125;</span><br></pre></td></tr></table></figure><p>2.利用markdown</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片说明](XXX/图片.jpg)  <span class="comment">#XXX为文件夹名</span></span><br></pre></td></tr></table></figure><p><img src="/2018/09/01/图片测试/gitProcess.png" alt="图片测试1"><br><img src="/2018/09/01/图片测试/gitProcess.png" alt="图片测试2"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![图片测试1](图片测试/gitProcess.png)</span><br><span class="line">![图片测试2](gitProcess.png)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git简易使用笔记</title>
      <link href="/2018/09/01/GitUseGuide/"/>
      <url>/2018/09/01/GitUseGuide/</url>
      <content type="html"><![CDATA[<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>采用git init 在目录创建新的仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir newrepository  <span class="comment">#</span></span><br><span class="line">$ <span class="built_in">cd</span> newrepository</span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure><p>或者直接采用 git init 仓库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init newrepository</span><br></pre></td></tr></table></figure><h2 id="软件仓库下载"><a href="#软件仓库下载" class="headerlink" title="软件仓库下载"></a>软件仓库下载</h2><p>下载仓库 git clone 拷贝到本地<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ get <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure></p><p>例如，从我的github上下载代码到本地<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ get <span class="built_in">clone</span> https://github.com/Hubery-Lee/LeeEmacs-setting</span><br></pre></td></tr></table></figure></p><h2 id="软件仓库的快照"><a href="#软件仓库的快照" class="headerlink" title="软件仓库的快照"></a>软件仓库的快照</h2><h3 id="git的日常使用"><a href="#git的日常使用" class="headerlink" title="git的日常使用"></a>git的日常使用</h3><p>git 的日常使用过程</p><img src="/2018/09/01/GitUseGuide/1.jpg" title="日常使用原理"><p>git add 命令可将文件添加到缓存()<br>git status 查看添加到缓存的文件状态 -s 简短结果输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ touch README</span><br><span class="line">$ touch hello.php</span><br><span class="line">$ ls</span><br><span class="line">README        hello.php</span><br><span class="line">$ git status -s</span><br><span class="line">?? README</span><br><span class="line">?? hello.php</span><br><span class="line"></span><br><span class="line">$ git add README hello.php </span><br><span class="line"></span><br><span class="line">$ git status -s</span><br><span class="line">A  README</span><br><span class="line">A  hello.php</span><br><span class="line">$ </span><br><span class="line"></span><br><span class="line">在 README 添加以下内容：<span class="comment"># Runoob Git 测试，然后保存退出。</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"# Runoob Git"</span>&gt;&gt;README </span><br><span class="line">$ git status -s</span><br><span class="line">AM README</span><br><span class="line">A  hello.php</span><br><span class="line"></span><br><span class="line">$ git add .</span><br><span class="line">$ git status -s</span><br><span class="line">A  README</span><br><span class="line">A  hello.php</span><br></pre></td></tr></table></figure><p>执行 git diff 来查看执行 git status 的结果的详细信息。</p><p>git diff 命令显示已写入缓存与已修改但尚未写入缓存的改动的区别。git diff 有两个主要的应用场景。</p><pre><code>尚未缓存的改动：git diff查看已缓存的改动： git diff --cached查看已缓存的与未缓存的所有改动：git diff HEAD显示摘要而非整个 diff：git diff --stat</code></pre><p>git status 显示你上次提交更新后的更改或者写入缓存的改动， 而 git diff 一行一行地显示这些改动具体是啥。</p><p>接下来我们来查看下 git diff –cached 的执行效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">在 hello.php 文件中输入以下内容：</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'菜鸟教程：www.runoob.com'</span>;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">$ git status -s</span><br><span class="line">A  README</span><br><span class="line">AM hello.php</span><br><span class="line">$ git diff</span><br><span class="line">diff --git a/hello.php b/hello.php</span><br><span class="line">index e69de29..69b5711 100644</span><br><span class="line">--- a/hello.php</span><br><span class="line">+++ b/hello.php</span><br><span class="line">@@ -0,0 +1,3 @@</span><br><span class="line">+&lt;?php</span><br><span class="line">+<span class="built_in">echo</span> <span class="string">'菜鸟教程：www.runoob.com'</span>;</span><br><span class="line">+?&gt;</span><br><span class="line"></span><br><span class="line">$ git add hello.php </span><br><span class="line">$ git status -s</span><br><span class="line">A  README</span><br><span class="line">A  hello.php</span><br><span class="line">$ git diff --cached</span><br><span class="line">diff --git a/README b/README</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..8f87495</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/README</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+<span class="comment"># Runoob Git 测试</span></span><br><span class="line">diff --git a/hello.php b/hello.php</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..69b5711</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/hello.php</span><br><span class="line">@@ -0,0 +1,3 @@</span><br><span class="line">+&lt;?php</span><br><span class="line">+<span class="built_in">echo</span> <span class="string">'菜鸟教程：www.runoob.com'</span>;</span><br><span class="line">+?&gt;</span><br></pre></td></tr></table></figure><p>git commit 将缓存区内容添加到仓库中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> 配置用户名和邮箱地址</span><br><span class="line">$ git config --global user.name <span class="string">'runoob'</span></span><br><span class="line">$ git config --global user.email <span class="built_in">test</span>@runoob.com</span><br></pre></td></tr></table></figure></p><p>提交缓存到仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m <span class="string">'第一次版本提交'</span></span><br><span class="line">[master (root-commit) d32cf1f] 第一次版本提交</span><br><span class="line"> 2 files changed, 4 insertions(+)</span><br><span class="line"> create mode 100644 README</span><br><span class="line"> create mode 100644 hello.php</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line"><span class="comment"># On branch master</span></span><br><span class="line">nothing to commit (working directory clean)</span><br></pre></td></tr></table></figure></p><p>git reset HEAD 命令用于取消已缓存的内容。<br>同时修改README和hello.php,然后撤销hello.php的缓存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ git status -s</span><br><span class="line"> M README</span><br><span class="line"> M hello.php</span><br><span class="line">$ git add .</span><br><span class="line">$ git status -s</span><br><span class="line">M  README</span><br><span class="line">M  hello.pp</span><br><span class="line">$ git reset HEAD hello.php </span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M    hello.php</span><br><span class="line">$ git status -s</span><br><span class="line">M  README</span><br><span class="line"> M hello.php</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">'修改'</span></span><br><span class="line">[master f50cfda] 修改</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git status -s</span><br><span class="line"> M hello.php</span><br></pre></td></tr></table></figure></p><p>仍然可以再次提交hello.php修改的内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -am <span class="string">'修改 hello.php 文件'</span></span><br><span class="line">[master 760f74d] 修改 hello.php 文件</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure></p><p>简而言之，执行 git reset HEAD 以取消之前 git add 添加，但不希望包含在下一提交快照中的缓存。</p><p>git rm<br>如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git rm &lt;file&gt;</span><br><span class="line">$ git rm -f  &lt;file&gt;</span><br><span class="line">$ git rm -r &lt;file&gt;</span><br><span class="line">$ git rm --cached &lt;file&gt;</span><br><span class="line">类似有git mv 移动和重命名</span><br><span class="line">$ git mv README  README.md</span><br></pre></td></tr></table></figure><p>要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以用以下命令完成此项工作</p><h3 id="git中tag和branch的使用"><a href="#git中tag和branch的使用" class="headerlink" title="git中tag和branch的使用"></a>git中tag和branch的使用</h3><img src="/2018/09/01/GitUseGuide/2.png" title="tag和branch"><p>创建分支、列出分支、切换分支、删除分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ git branch testing <span class="comment">#创建testing分支</span></span><br><span class="line">$ git branch   <span class="comment">#列出分支</span></span><br><span class="line">* master</span><br><span class="line">  testing</span><br><span class="line"></span><br><span class="line">$ git checkout testing</span><br><span class="line">Switched to branch <span class="string">'testing'</span></span><br><span class="line"></span><br><span class="line">$ git checkout master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">$ git checkout -b newtest  <span class="comment">#创建newtest分支并切换到该分支</span></span><br><span class="line">Switched to a new branch <span class="string">'newtest'</span></span><br><span class="line"></span><br><span class="line">$ git branch -d testing  <span class="comment">#删除testing分支</span></span><br><span class="line">Deleted branch testing (was 85fc7e7).</span><br><span class="line"></span><br><span class="line">$ git branch  </span><br><span class="line">* master</span><br><span class="line">  newtest</span><br><span class="line"></span><br><span class="line">$ git merge newtest     <span class="comment">#将newtest分支合并到master分支</span></span><br><span class="line">Updating 2e082b7..556f0a0</span><br><span class="line">Fast-forward</span><br><span class="line"> test2.txt | 1 -</span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line"> delete mode 100644 test2.txt</span><br></pre></td></tr></table></figure></p><p>当同时记录到master的修改和branch分支的修改时，会出现合并分支冲突<br>手动修改冲突部分<br>采用git add 告诉git文件冲突已经解决；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ git merge change_site</span><br><span class="line">Auto-merging test.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> test.txt</span><br><span class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</span><br><span class="line">$ cat test.txt </span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">runoob.com</span><br><span class="line">新增加一行</span><br><span class="line">=======</span><br><span class="line">www.runoob.com</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; change_site</span><br><span class="line"></span><br><span class="line">$ vim test.txt </span><br><span class="line">$ cat test.txt </span><br><span class="line">www.runoob.com</span><br><span class="line">新增加一行</span><br><span class="line">$ git diff</span><br><span class="line">diff --cc test.txt</span><br><span class="line">index f84c2a4,bccb7c2..0000000</span><br><span class="line">--- a/test.txt</span><br><span class="line">+++ b/test.txt</span><br><span class="line">@@@ -1,2 -1,1 +1,2 @@@</span><br><span class="line">- runoob.com</span><br><span class="line">+ www.runoob.com</span><br><span class="line"> +新增加一行</span><br><span class="line"></span><br><span class="line">$ git status -s</span><br><span class="line">UU test.txt</span><br><span class="line">$ git add test.txt </span><br><span class="line">$ git status -s</span><br><span class="line">M  test.txt</span><br><span class="line">$ git commit</span><br><span class="line">[master 88afe0e] Merge branch <span class="string">'change_site'</span></span><br></pre></td></tr></table></figure></p><p>查看提交历史<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span>  <span class="comment">#详细提交历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline  <span class="comment">#简洁提交历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --graph  <span class="comment">#--graph开启了拓扑图选项</span></span><br><span class="line">$ git <span class="built_in">log</span> --reverse --oneline <span class="comment">#用 '--reverse'参数来逆向显示所有日志。</span></span><br><span class="line">$ git <span class="built_in">log</span> --author=Linus --oneline -5 <span class="comment">#--author查找指定用户提交的记录</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges<span class="comment">#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交</span></span><br></pre></td></tr></table></figure></p><p>标签<br>写一句标签注解，就像你给提交写注解一样。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v1.0 </span><br><span class="line">$ git <span class="built_in">log</span> --oneline --decorate --graph  <span class="comment">#执行 git log --decorate 时，可以看到标签</span></span><br><span class="line">$ git tag -a v0.9 85fc7e7       <span class="comment">#给提交代码85fc7e7追加标签</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --decorate --graph</span><br><span class="line">*   88afe0e (HEAD, tag: v1.0, master) Merge branch <span class="string">'change_site'</span></span><br><span class="line">|\  </span><br><span class="line">| * d7e7346 (change_site) changed the site</span><br><span class="line">* | 14b4dca 新增加一行</span><br><span class="line">|/  </span><br><span class="line">* 556f0a0 removed test2.txt</span><br><span class="line">* 2e082b7 add test2.txt</span><br><span class="line">* 048598f add test.txt</span><br><span class="line">* 85fc7e7 (tag: v0.9) <span class="built_in">test</span> comment from runoob.com</span><br><span class="line"></span><br><span class="line">$ git tag  <span class="comment">#查看所有标签</span></span><br><span class="line">v0.9</span><br><span class="line">v1.0</span><br><span class="line"></span><br><span class="line">$ git tag -a &lt;tagname&gt; -m <span class="string">"runoob.com标签"</span>  <span class="comment">#指定标签信息命令</span></span><br><span class="line">$ git tag -s &lt;tagname&gt; -m <span class="string">"runoob.com标签"</span>  <span class="comment">#PGP签名标签命令</span></span><br></pre></td></tr></table></figure></p><h2 id="远程软件仓库的提取"><a href="#远程软件仓库的提取" class="headerlink" title="远程软件仓库的提取"></a>远程软件仓库的提取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git remote   <span class="comment">#查看远程仓库</span></span><br><span class="line">origin</span><br><span class="line">$ git remote -v  <span class="comment">#-v 参数，可以看到每个别名的实际链接地址。</span></span><br><span class="line">origin    git@github.com:tianqixin/runoob-git-test.git (fetch)</span><br><span class="line">origin    git@github.com:tianqixin/runoob-git-test.git (push)</span><br><span class="line"></span><br><span class="line">$ git fetch [<span class="built_in">alias</span>] <span class="comment">#从远程仓库下载分支和数据</span></span><br><span class="line">$ git fetch origin  <span class="comment">#从远程仓库下载origin分支和数据</span></span><br><span class="line">remote: Counting objects: 3, <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (2/2), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">From github.com:tianqixin/runoob-git-test</span><br><span class="line">   0205aab..febd8ed  master     -&gt; origin/master</span><br></pre></td></tr></table></figure><h2 id="远程软件仓库的上传"><a href="#远程软件仓库的上传" class="headerlink" title="远程软件仓库的上传"></a>远程软件仓库的上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git merge [<span class="built_in">alias</span>]/[branch] <span class="comment">#以将服务器上的任何更新合并到你的当前分支</span></span><br><span class="line">$ git merge origin/master  <span class="comment">#从远端仓库提取数据并尝试合并到当前分支</span></span><br><span class="line">Updating 0205aab..febd8ed</span><br><span class="line">Fast-forward</span><br><span class="line"> README.md | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"></span><br><span class="line">$ git push [<span class="built_in">alias</span>] [branch] <span class="comment">#推送你的新分支与数据到某个远端仓库</span></span><br><span class="line">$ git push origin master    <span class="comment"># 推送到 Github</span></span><br><span class="line"></span><br><span class="line">git remote rm  [<span class="built_in">alias</span>]</span><br><span class="line">git remote mv [aliasA] [aliasB]</span><br></pre></td></tr></table></figure><h2 id="获取软件仓库更改历史"><a href="#获取软件仓库更改历史" class="headerlink" title="获取软件仓库更改历史"></a>获取软件仓库更改历史</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">$ git status -s</span><br><span class="line">$ git diff </span><br><span class="line">$ git diff --cached</span><br><span class="line">$ git <span class="built_in">log</span>  <span class="comment">#详细提交历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline  <span class="comment">#简洁提交历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --graph  <span class="comment">#--graph开启了拓扑图选项</span></span><br><span class="line">$ git <span class="built_in">log</span> --reverse --oneline <span class="comment">#用 '--reverse'参数来逆向显示所有日志。</span></span><br><span class="line">$ git <span class="built_in">log</span> --author=Linus --oneline -5 <span class="comment">#--author查找指定用户提交的记录</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges<span class="comment">#指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after --no-merges 选项以隐藏合并提交</span></span><br><span class="line"></span><br><span class="line">$ git branch</span><br><span class="line">$ git tag</span><br><span class="line">$ git remote</span><br></pre></td></tr></table></figure><h2 id="回滚到软件仓库的历史版本"><a href="#回滚到软件仓库的历史版本" class="headerlink" title="回滚到软件仓库的历史版本"></a>回滚到软件仓库的历史版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git reset </span><br><span class="line">$ git reset HEAD [file]</span><br><span class="line">$ git reset --hard &lt;target_commit_id&gt;</span><br><span class="line">$ git reset --soft origin/<span class="built_in">source</span> 命令（<span class="built_in">source</span> 分支）</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo简易使用笔记</title>
      <link href="/2018/09/01/hexo%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/09/01/hexo%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h2 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h2 id="hexo发布博客预览"><a href="#hexo发布博客预览" class="headerlink" title="hexo发布博客预览"></a>hexo发布博客预览</h2><p>本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br></pre></td></tr></table></figure><p>然后，在浏览器中打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><p>发布到github绑定的个人博客网页上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><p>比如，我发布博客后，就直接可以采用个人网络域名访问 <a href="http://lihui-snippets.cn/">http://lihui-snippets.cn/</a> </p><p>具体github+hexo如何搭建个人博客教程可以百度以下；我觉得这篇博客写的比较好 <a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2</a></p>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LeeEmacs-setting</title>
      <link href="/2018/09/01/LeeEmacs-setting/"/>
      <url>/2018/09/01/LeeEmacs-setting/</url>
      <content type="html"><![CDATA[<h2 id="模块功能yasnippet"><a href="#模块功能yasnippet" class="headerlink" title="模块功能yasnippet"></a>模块功能yasnippet</h2><ol><li>下载yasnippet安葬包，加压到~/.emacs.d/plugins目录下</li><li>在～/.emacs文件中配置yasnippet</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">;; add yasnippet plugin </span><br><span class="line">(add-to-list <span class="string">'load-path</span></span><br><span class="line"><span class="string">              "~/.emacs.d/plugins/yasnippet")</span></span><br><span class="line"><span class="string">(require '</span>yasnippet)</span><br><span class="line">(yas-global-mode 1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;;代码折叠</span><br><span class="line">(load-library <span class="string">"hideshow"</span>)</span><br><span class="line">(add-hook <span class="string">'java-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'perl-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'php-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'emacs-lisp-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'c++-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'c-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'matlab-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'fortran-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'f90-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'markdown-mode-hook '</span>hs-minor-mode)</span><br><span class="line">(add-hook <span class="string">'org-mode-hook '</span>hs-minor-mode)</span><br></pre></td></tr></table></figure><h2 id="文件头个人信息设置——header2-el"><a href="#文件头个人信息设置——header2-el" class="headerlink" title="文件头个人信息设置——header2.el"></a>文件头个人信息设置——header2.el</h2><ol><li>wiki 下载header2.el</li><li>将header2.el 放到~/.emacs.d/plugins文件夹下；</li><li>在～/.emacs文件中配置个人信息</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">;;====================info of user====================</span><br><span class="line">;;********************header**************************</span><br><span class="line">;;(load-file <span class="string">"~/.emacs.d/header2.el"</span>)</span><br><span class="line">(add-to-list <span class="string">'load-path "~/.emacs.d/plugins" )</span></span><br><span class="line"><span class="string">;; 设置文件头中的姓名</span></span><br><span class="line"><span class="string">(require '</span>header2)</span><br><span class="line">(setq user-full-name <span class="string">"Li Hui"</span>)</span><br><span class="line"></span><br><span class="line">;; 设置邮箱</span><br><span class="line">(setq user-email-address <span class="string">"h*****@126.com"</span>)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">;; 设置每次保存时要更新的项目</span><br><span class="line">(<span class="built_in">autoload</span> <span class="string">'auto-update-file-header "header2")</span></span><br><span class="line"><span class="string">(add-hook '</span>write-file-hooks <span class="string">'auto-update-file-header)</span></span><br><span class="line"><span class="string">(autoload '</span>auto-make-header <span class="string">"header2"</span>)</span><br><span class="line">(add-hook <span class="string">'emacs-lisp-mode-hook '</span>auto-make-header)</span><br><span class="line">(add-hook <span class="string">'c-mode-common-hook   '</span>auto-make-header) </span><br><span class="line">(add-hook <span class="string">'c++-mode-common-hook   '</span>auto-make-header)</span><br><span class="line">(add-hook <span class="string">'text-mode-hook   '</span>auto-make-header)</span><br><span class="line"></span><br><span class="line">;;(add-hook <span class="string">'make-header-hook '</span>header-shell nil t)</span><br></pre></td></tr></table></figure><h2 id="自动补全-auto-complete"><a href="#自动补全-auto-complete" class="headerlink" title="自动补全 auto-complete"></a>自动补全 auto-complete</h2><p>经过尝试，直接解压到~/.emacs.d/plugins文件夹然后make 和make install 然后在.emacs文件配置导入auto-complete插件，但并不能实现自动补全功能。但也没有报错；我认为可能是由于可能式auto-complete没有开启的缘故；</p><ol><li>检测auto-complete有没有安装成功的方法</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装完后，重启emacs然后输入ac，若出现可选的自动补全选项，那么说明已经安装成功了；</span><br></pre></td></tr></table></figure><ol start="2"><li>auto-complete的安装方法——第二种安装成功<br>（1）传统方法是采用解压到~/.emacs.d/plugins,然后make和make install，再在.emacs中进行配置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(add-to-list <span class="string">'load-path "/home/hubery_lee/.emacs.d/plugins/auto-complete")</span></span><br><span class="line"><span class="string">(require '</span>auto-complete-config)</span><br><span class="line">(add-to-list <span class="string">'ac-dictionary-directories "/home/hubery_lee/.emacs.d/plugins/auto-complete/ac-dict")</span></span><br><span class="line"><span class="string">(ac-config-default)</span></span><br></pre></td></tr></table></figure><p>（2）通过MELPA或MELPA Stable的package.el安装auto-complete.el；<br>参考github这个开放者介绍的方法进行安装 <a href="https://github.com/auto-complete/auto-complete/blob/master/doc/manual.md" target="_blank" rel="noopener">https://github.com/auto-complete/auto-complete/blob/master/doc/manual.md</a></p><p>首先，添加melpa或melpa-stable的package库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(require <span class="string">'package)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; If you want to use latest version</span></span><br><span class="line"><span class="string">(add-to-list '</span>package-archives <span class="string">'("melpa" . "https://melpa.org/packages/"))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; If you want to use last tagged version</span></span><br><span class="line"><span class="string">(add-to-list '</span>package-archives <span class="string">'("melpa-stable" . "https://stable.melpa.org/packages/"))</span></span><br><span class="line"><span class="string">(package-initialize)</span></span><br></pre></td></tr></table></figure><p>然后,利用package功能安装auto-complete</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在emacs的minibuffer里选取以下一种命令安装auto-complete</span><br><span class="line">    M-x package-list-packages and select auto-complete</span><br><span class="line">    M-x package-refresh-contents and M-x package-install auto-complete</span><br></pre></td></tr></table></figure><p>最后，根据显示的安装路径，在.emacs中进行配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">;; add auto-complete plugin</span><br><span class="line"></span><br><span class="line">(add-to-list <span class="string">'load-path </span></span><br><span class="line"><span class="string">"/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245")</span></span><br><span class="line"><span class="string">(require '</span>auto-complete-config)</span><br><span class="line">(add-to-list <span class="string">'ac-dictionary-directories "/home/hubery_lee/.emacs.d/elpa/auto-complete-20170125.245/ac-dict")</span></span><br><span class="line"><span class="string">(ac-config-default)</span></span><br></pre></td></tr></table></figure><h2 id="自定义小功能"><a href="#自定义小功能" class="headerlink" title="自定义小功能"></a>自定义小功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">;;显示匹配的括号</span><br><span class="line">(show-paren-mode t) </span><br><span class="line"></span><br><span class="line">;;光标显示为一竖线</span><br><span class="line">(setq-default cursor-type <span class="string">'bar)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;;setting frame title </span></span><br><span class="line"><span class="string">(setq frame-title-format "%b - LiHui@CIRP")</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;;鼠标指针避光标</span></span><br><span class="line"><span class="string">(mouse-avoidance-mode '</span>animate)</span><br><span class="line"></span><br><span class="line">;;不生成临时文件</span><br><span class="line">(setq-default make-backup-files nil)</span><br><span class="line">;;允许emacs和外部其他程序的粘贴</span><br><span class="line">(setq x-select-enable-clipboard t)</span><br><span class="line">;;使用鼠标中键可以粘贴</span><br><span class="line">(setq mouse-yank-at-point t)</span><br><span class="line">;; 自动的在文件末增加一新行</span><br><span class="line">;;(setq require-final-newline t)</span><br><span class="line">;; 当光标在行尾上下移动的时候，始终保持在行尾。</span><br><span class="line"></span><br><span class="line">;;color</span><br><span class="line">;;(add-to-list <span class="string">'load-path "~/.emacs.d/plugins")</span></span><br><span class="line"><span class="string">;;(require '</span>color-theme)</span><br><span class="line">;;(color-theme-subtle-hacker)</span><br><span class="line">;;(color-theme-xemacs)</span><br><span class="line">;;(color-theme-wheat)</span><br><span class="line">;;(color-theme-calm-forest)</span><br><span class="line">;;(color-theme-matrix)</span><br><span class="line">;;(color-theme-robin-hood)</span><br><span class="line">;;(color-theme-euphoria)</span><br><span class="line">;;(color-theme-arjen)</span><br><span class="line">;;(color-theme-jsc-dark)</span><br><span class="line"></span><br><span class="line">;;hide tool bar</span><br><span class="line">(tool-bar-mode 0)</span><br><span class="line"></span><br><span class="line">;; show line number</span><br><span class="line">(global-linum-mode <span class="string">'linum-mode)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Emacs24.3 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git-VS-SVN</title>
      <link href="/2018/08/20/Git-VS-SVN/"/>
      <url>/2018/08/20/Git-VS-SVN/</url>
      <content type="html"><![CDATA[<h2 id="Git和SVN主要差别"><a href="#Git和SVN主要差别" class="headerlink" title="Git和SVN主要差别"></a>Git和SVN主要差别</h2><p>SVN只有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br>Git每一个终端都是一个仓库，客户端并不只提取最新版本的文件快照，而是把原始的代码仓库完整地镜像下来。每一次的提取操作，实际上都是一次对代码仓库的完整备份。Git不仅仅是个版本控制系统，它也是个内容管理系统（CMS），工作管理系统等。</p><h3 id="1-分布式VS集中式版本控制"><a href="#1-分布式VS集中式版本控制" class="headerlink" title="1.分布式VS集中式版本控制"></a>1.分布式VS集中式版本控制</h3><p>svn采用集中式版本控制</p><img src="/2018/08/20/Git-VS-SVN/20161214020406505.jpg" title="svn集中式版本控制"><p>git采用分布式版本控制</p><img src="/2018/08/20/Git-VS-SVN/20161214020603227.jpg" title="git分布式版本控制"><p>两种版本控制的区别：<br>（1）svn 过渡依赖中央服务器，出现故障影响其他工作;git中央服务器只用于方便交流，有没有中央服务器都行；<br>（2）svn 版本库只保存在中央服务器，本地检测时不会检出版本库；git每个本地电脑均会保存完整的版本库；<br>（3）svn 的commit依赖连接中央服务器的网络；git由于有本地版本库，可以commit不依赖网络，commit可以频繁使用；git 通过push来实现其他电脑的版本库的同步（synchronize）操作；</p><h3 id="2-分支功能"><a href="#2-分支功能" class="headerlink" title="2.分支功能"></a>2.分支功能</h3><p>（1）svn 创建分支就是创建了一个新文件夹并拥有实际的文件，类似于拷贝了一份源文件，相当于在服务器上创建了分支，会影响到连接服务器的所有本地工作副本；git创建分支并没有创建文件夹，创建分支只是多了一个索引文件，并记录这个分支的变化，占用空间小，分支之间可以自由切换互不影响。<br>（2）git具有代码审核功能，各个成员请求将自己的分子合并到主分支均需要管理人员进行审核。<br>git的工作流程如下：</p><img src="/2018/08/20/Git-VS-SVN/gitProcess.png" title="gitprocess"><h3 id="3-git的使用"><a href="#3-git的使用" class="headerlink" title="3.git的使用"></a>3.git的使用</h3><p>（1）安装配置<br>（2）pc上任意获取，运行git clone url，将远程版本库克隆到本地<br>（3）日常场景</p><img src="/2018/08/20/Git-VS-SVN/20180227165834705.png" title="日常使用"><p>a.创建一个新文件，并添加到版本库中使用命令：<br>创建了一个新文件，需要添加到版本库里（追踪此文件）使用git add filename命令，我想保存一下，使用git commit -m ….. 我想把我改变的推送给其他人（服务器）git push -u origin master(提交代码)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir newDoc</span><br><span class="line">$ git add newDoc</span><br></pre></td></tr></table></figure></p><p>b.保存一下修改记录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m <span class="string">"提交添加一个新文件到版本库"</span>  <span class="comment">#“”内为chang messages</span></span><br></pre></td></tr></table></figure></p><p>c.将我的修改推送给其他人或服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure></p><p>我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + merge。</p><p>d.将别人的代码拉取过来<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure></p><p>我想把别人改变的代码拉去过来其实有两种方法git fetch与git pull。它们都是将从服务器上拉取最新的代码。那么它们什么区别呢？Git fetch 是仅仅将代码拉取下来，而git pull 不仅将服务器上的代码拉去下来，而且进行了合并merge。总结一下就是git pull 包含了 git fetch + git merge。</p><p>e.删除原来的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm file <span class="comment">#将会将file文件从暂存区与磁盘删除</span></span><br></pre></td></tr></table></figure></p><p>原来的有个文件，想删除了，使用git rm file(停止追踪文件并从磁盘上删除),如果我们只想将 停止追踪文件，但是不删除只需要 git rm –cached <file>。然后想把这个改变推送给别人，就应该是用git commit 然后git push 将自己的改变推送到git服务器。</file></p><p>f.git分支功能的使用<br>那么平时我们收到一个新功能的任务，应该是怎样的操作呢？比较正确的操作流程应该是这样，我们先使用git branch 查看一下我们本地到底有多少分支，然后我们先使用git branch <new branch="">从develop分支新建一个分支featureN,然后使用git checkout &lt;branch/tag&gt; 切换到新建的featureN分支里。在新的分支里进行新功能开发。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="comment">#查看分支</span></span><br><span class="line">$ git branch <span class="comment">#新建分支featureN 即 &lt;new branch&gt;</span></span><br><span class="line">$ git checkout &lt;branch/tag&gt; <span class="comment">#切换到新建的featureN分支里，在新的分支里进行新功能的开发。</span></span><br></pre></td></tr></table></figure></new></p><p>g.恢复到某一时刻<br>我们在进行新功能开发的时候，每实现一个小功能的时候，我们就git commit 进行提交一下，刚提交完，突然发现，这次提交的东西会严重影响其他功能，想撤销这次提交，我们需要使用git reset –hart HEAD 来撤销工作目录中所有未提交文件的修改内容。那么如果我们想撤销指定的一次提交呢？我们需要使用git revert <commit> 进行指定的提交。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset HEAD <span class="comment">#撤回暂存中未提交的内容</span></span><br><span class="line">$ git revert &lt;commit&gt; <span class="comment">#撤回一次指到定的提交</span></span><br></pre></td></tr></table></figure></commit></p><p>h.分支的合并<br>假设开发完毕后，应该怎么做？对，就是将新功能的分支合并到develop分支里。就是先切换到develop分支里，然后使用git merge 命令进行合并。这时，新功能开发完毕，新建的featureN分支就没用了，我们使用git branch -d <branch>将无用的分支删除。至此，我们新功能开发完毕。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git merge </span><br><span class="line">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure></branch></p><p>i.查看工作日志<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure></p><p>Git log 作用很大，功能也很多</p>]]></content>
      
      <categories>
          
          <category> 编程工具学习与应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> SVN </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
